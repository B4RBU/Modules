

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 05 16:10:37 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.45
    53                           ; Generated 16/11/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1509 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0391                     	;# 
   181  0392                     	;# 
   182  0393                     	;# 
   183  0394                     	;# 
   184  0395                     	;# 
   185  0396                     	;# 
   186  0498                     	;# 
   187  0498                     	;# 
   188  0499                     	;# 
   189  049A                     	;# 
   190  049B                     	;# 
   191  049B                     	;# 
   192  049C                     	;# 
   193  049D                     	;# 
   194  049E                     	;# 
   195  049F                     	;# 
   196  0611                     	;# 
   197  0612                     	;# 
   198  0613                     	;# 
   199  0613                     	;# 
   200  0614                     	;# 
   201  0615                     	;# 
   202  0616                     	;# 
   203  0616                     	;# 
   204  0617                     	;# 
   205  0618                     	;# 
   206  0619                     	;# 
   207  0619                     	;# 
   208  061A                     	;# 
   209  061B                     	;# 
   210  061C                     	;# 
   211  061C                     	;# 
   212  0691                     	;# 
   213  0692                     	;# 
   214  0693                     	;# 
   215  0694                     	;# 
   216  0695                     	;# 
   217  0F0F                     	;# 
   218  0F10                     	;# 
   219  0F11                     	;# 
   220  0F12                     	;# 
   221  0F13                     	;# 
   222  0F14                     	;# 
   223  0F15                     	;# 
   224  0F16                     	;# 
   225  0F17                     	;# 
   226  0F18                     	;# 
   227  0F19                     	;# 
   228  0F1A                     	;# 
   229  0F1B                     	;# 
   230  0F1C                     	;# 
   231  0F1D                     	;# 
   232  0F1E                     	;# 
   233  0F1F                     	;# 
   234  0F20                     	;# 
   235  0F21                     	;# 
   236  0F22                     	;# 
   237  0F23                     	;# 
   238  0F24                     	;# 
   239  0F25                     	;# 
   240  0F26                     	;# 
   241  0F27                     	;# 
   242  0F28                     	;# 
   243  0F29                     	;# 
   244  0F2A                     	;# 
   245  0F2B                     	;# 
   246  0F2C                     	;# 
   247  0F2D                     	;# 
   248  0F2E                     	;# 
   249  0F2F                     	;# 
   250  0F8C                     	;# 
   251  0F8D                     	;# 
   252  0F91                     	;# 
   253  0F95                     	;# 
   254  0F96                     	;# 
   255  0F97                     	;# 
   256  0F9C                     	;# 
   257  0F9D                     	;# 
   258  0F9E                     	;# 
   259  0FE3                     	;# 
   260  0FE4                     	;# 
   261  0FE5                     	;# 
   262  0FE6                     	;# 
   263  0FE7                     	;# 
   264  0FE8                     	;# 
   265  0FE9                     	;# 
   266  0FEA                     	;# 
   267  0FEB                     	;# 
   268  0FED                     	;# 
   269  0FEE                     	;# 
   270  0FEF                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0008                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0016                     	;# 
   292  0017                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  008E                     	;# 
   301  0091                     	;# 
   302  0092                     	;# 
   303  0093                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011D                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  018E                     	;# 
   331  0191                     	;# 
   332  0191                     	;# 
   333  0192                     	;# 
   334  0193                     	;# 
   335  0193                     	;# 
   336  0194                     	;# 
   337  0195                     	;# 
   338  0196                     	;# 
   339  0197                     	;# 
   340  0199                     	;# 
   341  019A                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019D                     	;# 
   346  019E                     	;# 
   347  019F                     	;# 
   348  020C                     	;# 
   349  020D                     	;# 
   350  0211                     	;# 
   351  0211                     	;# 
   352  0212                     	;# 
   353  0212                     	;# 
   354  0213                     	;# 
   355  0213                     	;# 
   356  0214                     	;# 
   357  0214                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0216                     	;# 
   362  0216                     	;# 
   363  0217                     	;# 
   364  0217                     	;# 
   365  0391                     	;# 
   366  0392                     	;# 
   367  0393                     	;# 
   368  0394                     	;# 
   369  0395                     	;# 
   370  0396                     	;# 
   371  0498                     	;# 
   372  0498                     	;# 
   373  0499                     	;# 
   374  049A                     	;# 
   375  049B                     	;# 
   376  049B                     	;# 
   377  049C                     	;# 
   378  049D                     	;# 
   379  049E                     	;# 
   380  049F                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0615                     	;# 
   387  0616                     	;# 
   388  0616                     	;# 
   389  0617                     	;# 
   390  0618                     	;# 
   391  0619                     	;# 
   392  0619                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  061C                     	;# 
   397  0691                     	;# 
   398  0692                     	;# 
   399  0693                     	;# 
   400  0694                     	;# 
   401  0695                     	;# 
   402  0F0F                     	;# 
   403  0F10                     	;# 
   404  0F11                     	;# 
   405  0F12                     	;# 
   406  0F13                     	;# 
   407  0F14                     	;# 
   408  0F15                     	;# 
   409  0F16                     	;# 
   410  0F17                     	;# 
   411  0F18                     	;# 
   412  0F19                     	;# 
   413  0F1A                     	;# 
   414  0F1B                     	;# 
   415  0F1C                     	;# 
   416  0F1D                     	;# 
   417  0F1E                     	;# 
   418  0F1F                     	;# 
   419  0F20                     	;# 
   420  0F21                     	;# 
   421  0F22                     	;# 
   422  0F23                     	;# 
   423  0F24                     	;# 
   424  0F25                     	;# 
   425  0F26                     	;# 
   426  0F27                     	;# 
   427  0F28                     	;# 
   428  0F29                     	;# 
   429  0F2A                     	;# 
   430  0F2B                     	;# 
   431  0F2C                     	;# 
   432  0F2D                     	;# 
   433  0F2E                     	;# 
   434  0F2F                     	;# 
   435  0F8C                     	;# 
   436  0F8D                     	;# 
   437  0F91                     	;# 
   438  0F95                     	;# 
   439  0F96                     	;# 
   440  0F97                     	;# 
   441  0F9C                     	;# 
   442  0F9D                     	;# 
   443  0F9E                     	;# 
   444  0FE3                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  0111                     	;# 
   504  0112                     	;# 
   505  0113                     	;# 
   506  0114                     	;# 
   507  0115                     	;# 
   508  0116                     	;# 
   509  0117                     	;# 
   510  0118                     	;# 
   511  0119                     	;# 
   512  011D                     	;# 
   513  018C                     	;# 
   514  018D                     	;# 
   515  018E                     	;# 
   516  0191                     	;# 
   517  0191                     	;# 
   518  0192                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0197                     	;# 
   525  0199                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019C                     	;# 
   530  019D                     	;# 
   531  019E                     	;# 
   532  019F                     	;# 
   533  020C                     	;# 
   534  020D                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0216                     	;# 
   547  0216                     	;# 
   548  0217                     	;# 
   549  0217                     	;# 
   550  0391                     	;# 
   551  0392                     	;# 
   552  0393                     	;# 
   553  0394                     	;# 
   554  0395                     	;# 
   555  0396                     	;# 
   556  0498                     	;# 
   557  0498                     	;# 
   558  0499                     	;# 
   559  049A                     	;# 
   560  049B                     	;# 
   561  049B                     	;# 
   562  049C                     	;# 
   563  049D                     	;# 
   564  049E                     	;# 
   565  049F                     	;# 
   566  0611                     	;# 
   567  0612                     	;# 
   568  0613                     	;# 
   569  0613                     	;# 
   570  0614                     	;# 
   571  0615                     	;# 
   572  0616                     	;# 
   573  0616                     	;# 
   574  0617                     	;# 
   575  0618                     	;# 
   576  0619                     	;# 
   577  0619                     	;# 
   578  061A                     	;# 
   579  061B                     	;# 
   580  061C                     	;# 
   581  061C                     	;# 
   582  0691                     	;# 
   583  0692                     	;# 
   584  0693                     	;# 
   585  0694                     	;# 
   586  0695                     	;# 
   587  0F0F                     	;# 
   588  0F10                     	;# 
   589  0F11                     	;# 
   590  0F12                     	;# 
   591  0F13                     	;# 
   592  0F14                     	;# 
   593  0F15                     	;# 
   594  0F16                     	;# 
   595  0F17                     	;# 
   596  0F18                     	;# 
   597  0F19                     	;# 
   598  0F1A                     	;# 
   599  0F1B                     	;# 
   600  0F1C                     	;# 
   601  0F1D                     	;# 
   602  0F1E                     	;# 
   603  0F1F                     	;# 
   604  0F20                     	;# 
   605  0F21                     	;# 
   606  0F22                     	;# 
   607  0F23                     	;# 
   608  0F24                     	;# 
   609  0F25                     	;# 
   610  0F26                     	;# 
   611  0F27                     	;# 
   612  0F28                     	;# 
   613  0F29                     	;# 
   614  0F2A                     	;# 
   615  0F2B                     	;# 
   616  0F2C                     	;# 
   617  0F2D                     	;# 
   618  0F2E                     	;# 
   619  0F2F                     	;# 
   620  0F8C                     	;# 
   621  0F8D                     	;# 
   622  0F91                     	;# 
   623  0F95                     	;# 
   624  0F96                     	;# 
   625  0F97                     	;# 
   626  0F9C                     	;# 
   627  0F9D                     	;# 
   628  0F9E                     	;# 
   629  0FE3                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0008                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0093                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0099                     	;# 
   678  009A                     	;# 
   679  009B                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  009F                     	;# 
   685  010C                     	;# 
   686  010D                     	;# 
   687  010E                     	;# 
   688  0111                     	;# 
   689  0112                     	;# 
   690  0113                     	;# 
   691  0114                     	;# 
   692  0115                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0118                     	;# 
   696  0119                     	;# 
   697  011D                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700  018E                     	;# 
   701  0191                     	;# 
   702  0191                     	;# 
   703  0192                     	;# 
   704  0193                     	;# 
   705  0193                     	;# 
   706  0194                     	;# 
   707  0195                     	;# 
   708  0196                     	;# 
   709  0197                     	;# 
   710  0199                     	;# 
   711  019A                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  020C                     	;# 
   719  020D                     	;# 
   720  0211                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0212                     	;# 
   724  0213                     	;# 
   725  0213                     	;# 
   726  0214                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0216                     	;# 
   733  0217                     	;# 
   734  0217                     	;# 
   735  0391                     	;# 
   736  0392                     	;# 
   737  0393                     	;# 
   738  0394                     	;# 
   739  0395                     	;# 
   740  0396                     	;# 
   741  0498                     	;# 
   742  0498                     	;# 
   743  0499                     	;# 
   744  049A                     	;# 
   745  049B                     	;# 
   746  049B                     	;# 
   747  049C                     	;# 
   748  049D                     	;# 
   749  049E                     	;# 
   750  049F                     	;# 
   751  0611                     	;# 
   752  0612                     	;# 
   753  0613                     	;# 
   754  0613                     	;# 
   755  0614                     	;# 
   756  0615                     	;# 
   757  0616                     	;# 
   758  0616                     	;# 
   759  0617                     	;# 
   760  0618                     	;# 
   761  0619                     	;# 
   762  0619                     	;# 
   763  061A                     	;# 
   764  061B                     	;# 
   765  061C                     	;# 
   766  061C                     	;# 
   767  0691                     	;# 
   768  0692                     	;# 
   769  0693                     	;# 
   770  0694                     	;# 
   771  0695                     	;# 
   772  0F0F                     	;# 
   773  0F10                     	;# 
   774  0F11                     	;# 
   775  0F12                     	;# 
   776  0F13                     	;# 
   777  0F14                     	;# 
   778  0F15                     	;# 
   779  0F16                     	;# 
   780  0F17                     	;# 
   781  0F18                     	;# 
   782  0F19                     	;# 
   783  0F1A                     	;# 
   784  0F1B                     	;# 
   785  0F1C                     	;# 
   786  0F1D                     	;# 
   787  0F1E                     	;# 
   788  0F1F                     	;# 
   789  0F20                     	;# 
   790  0F21                     	;# 
   791  0F22                     	;# 
   792  0F23                     	;# 
   793  0F24                     	;# 
   794  0F25                     	;# 
   795  0F26                     	;# 
   796  0F27                     	;# 
   797  0F28                     	;# 
   798  0F29                     	;# 
   799  0F2A                     	;# 
   800  0F2B                     	;# 
   801  0F2C                     	;# 
   802  0F2D                     	;# 
   803  0F2E                     	;# 
   804  0F2F                     	;# 
   805  0F8C                     	;# 
   806  0F8D                     	;# 
   807  0F91                     	;# 
   808  0F95                     	;# 
   809  0F96                     	;# 
   810  0F97                     	;# 
   811  0F9C                     	;# 
   812  0F9D                     	;# 
   813  0F9E                     	;# 
   814  0FE3                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  000E                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0015                     	;# 
   845  0016                     	;# 
   846  0016                     	;# 
   847  0017                     	;# 
   848  0018                     	;# 
   849  0019                     	;# 
   850  001A                     	;# 
   851  001B                     	;# 
   852  001C                     	;# 
   853  008C                     	;# 
   854  008D                     	;# 
   855  008E                     	;# 
   856  0091                     	;# 
   857  0092                     	;# 
   858  0093                     	;# 
   859  0095                     	;# 
   860  0096                     	;# 
   861  0097                     	;# 
   862  0099                     	;# 
   863  009A                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  009F                     	;# 
   870  010C                     	;# 
   871  010D                     	;# 
   872  010E                     	;# 
   873  0111                     	;# 
   874  0112                     	;# 
   875  0113                     	;# 
   876  0114                     	;# 
   877  0115                     	;# 
   878  0116                     	;# 
   879  0117                     	;# 
   880  0118                     	;# 
   881  0119                     	;# 
   882  011D                     	;# 
   883  018C                     	;# 
   884  018D                     	;# 
   885  018E                     	;# 
   886  0191                     	;# 
   887  0191                     	;# 
   888  0192                     	;# 
   889  0193                     	;# 
   890  0193                     	;# 
   891  0194                     	;# 
   892  0195                     	;# 
   893  0196                     	;# 
   894  0197                     	;# 
   895  0199                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019D                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  020C                     	;# 
   904  020D                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0216                     	;# 
   917  0216                     	;# 
   918  0217                     	;# 
   919  0217                     	;# 
   920  0391                     	;# 
   921  0392                     	;# 
   922  0393                     	;# 
   923  0394                     	;# 
   924  0395                     	;# 
   925  0396                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0611                     	;# 
   937  0612                     	;# 
   938  0613                     	;# 
   939  0613                     	;# 
   940  0614                     	;# 
   941  0615                     	;# 
   942  0616                     	;# 
   943  0616                     	;# 
   944  0617                     	;# 
   945  0618                     	;# 
   946  0619                     	;# 
   947  0619                     	;# 
   948  061A                     	;# 
   949  061B                     	;# 
   950  061C                     	;# 
   951  061C                     	;# 
   952  0691                     	;# 
   953  0692                     	;# 
   954  0693                     	;# 
   955  0694                     	;# 
   956  0695                     	;# 
   957  0F0F                     	;# 
   958  0F10                     	;# 
   959  0F11                     	;# 
   960  0F12                     	;# 
   961  0F13                     	;# 
   962  0F14                     	;# 
   963  0F15                     	;# 
   964  0F16                     	;# 
   965  0F17                     	;# 
   966  0F18                     	;# 
   967  0F19                     	;# 
   968  0F1A                     	;# 
   969  0F1B                     	;# 
   970  0F1C                     	;# 
   971  0F1D                     	;# 
   972  0F1E                     	;# 
   973  0F1F                     	;# 
   974  0F20                     	;# 
   975  0F21                     	;# 
   976  0F22                     	;# 
   977  0F23                     	;# 
   978  0F24                     	;# 
   979  0F25                     	;# 
   980  0F26                     	;# 
   981  0F27                     	;# 
   982  0F28                     	;# 
   983  0F29                     	;# 
   984  0F2A                     	;# 
   985  0F2B                     	;# 
   986  0F2C                     	;# 
   987  0F2D                     	;# 
   988  0F2E                     	;# 
   989  0F2F                     	;# 
   990  0F8C                     	;# 
   991  0F8D                     	;# 
   992  0F91                     	;# 
   993  0F95                     	;# 
   994  0F96                     	;# 
   995  0F97                     	;# 
   996  0F9C                     	;# 
   997  0F9D                     	;# 
   998  0F9E                     	;# 
   999  0FE3                     	;# 
  1000  0FE4                     	;# 
  1001  0FE5                     	;# 
  1002  0FE6                     	;# 
  1003  0FE7                     	;# 
  1004  0FE8                     	;# 
  1005  0FE9                     	;# 
  1006  0FEA                     	;# 
  1007  0FEB                     	;# 
  1008  0FED                     	;# 
  1009  0FEE                     	;# 
  1010  0FEF                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0008                     	;# 
  1020  0009                     	;# 
  1021  000A                     	;# 
  1022  000B                     	;# 
  1023  000C                     	;# 
  1024  000D                     	;# 
  1025  000E                     	;# 
  1026  0011                     	;# 
  1027  0012                     	;# 
  1028  0013                     	;# 
  1029  0015                     	;# 
  1030  0016                     	;# 
  1031  0016                     	;# 
  1032  0017                     	;# 
  1033  0018                     	;# 
  1034  0019                     	;# 
  1035  001A                     	;# 
  1036  001B                     	;# 
  1037  001C                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  0091                     	;# 
  1042  0092                     	;# 
  1043  0093                     	;# 
  1044  0095                     	;# 
  1045  0096                     	;# 
  1046  0097                     	;# 
  1047  0099                     	;# 
  1048  009A                     	;# 
  1049  009B                     	;# 
  1050  009B                     	;# 
  1051  009C                     	;# 
  1052  009D                     	;# 
  1053  009E                     	;# 
  1054  009F                     	;# 
  1055  010C                     	;# 
  1056  010D                     	;# 
  1057  010E                     	;# 
  1058  0111                     	;# 
  1059  0112                     	;# 
  1060  0113                     	;# 
  1061  0114                     	;# 
  1062  0115                     	;# 
  1063  0116                     	;# 
  1064  0117                     	;# 
  1065  0118                     	;# 
  1066  0119                     	;# 
  1067  011D                     	;# 
  1068  018C                     	;# 
  1069  018D                     	;# 
  1070  018E                     	;# 
  1071  0191                     	;# 
  1072  0191                     	;# 
  1073  0192                     	;# 
  1074  0193                     	;# 
  1075  0193                     	;# 
  1076  0194                     	;# 
  1077  0195                     	;# 
  1078  0196                     	;# 
  1079  0197                     	;# 
  1080  0199                     	;# 
  1081  019A                     	;# 
  1082  019B                     	;# 
  1083  019B                     	;# 
  1084  019C                     	;# 
  1085  019D                     	;# 
  1086  019E                     	;# 
  1087  019F                     	;# 
  1088  020C                     	;# 
  1089  020D                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0216                     	;# 
  1102  0216                     	;# 
  1103  0217                     	;# 
  1104  0217                     	;# 
  1105  0391                     	;# 
  1106  0392                     	;# 
  1107  0393                     	;# 
  1108  0394                     	;# 
  1109  0395                     	;# 
  1110  0396                     	;# 
  1111  0498                     	;# 
  1112  0498                     	;# 
  1113  0499                     	;# 
  1114  049A                     	;# 
  1115  049B                     	;# 
  1116  049B                     	;# 
  1117  049C                     	;# 
  1118  049D                     	;# 
  1119  049E                     	;# 
  1120  049F                     	;# 
  1121  0611                     	;# 
  1122  0612                     	;# 
  1123  0613                     	;# 
  1124  0613                     	;# 
  1125  0614                     	;# 
  1126  0615                     	;# 
  1127  0616                     	;# 
  1128  0616                     	;# 
  1129  0617                     	;# 
  1130  0618                     	;# 
  1131  0619                     	;# 
  1132  0619                     	;# 
  1133  061A                     	;# 
  1134  061B                     	;# 
  1135  061C                     	;# 
  1136  061C                     	;# 
  1137  0691                     	;# 
  1138  0692                     	;# 
  1139  0693                     	;# 
  1140  0694                     	;# 
  1141  0695                     	;# 
  1142  0F0F                     	;# 
  1143  0F10                     	;# 
  1144  0F11                     	;# 
  1145  0F12                     	;# 
  1146  0F13                     	;# 
  1147  0F14                     	;# 
  1148  0F15                     	;# 
  1149  0F16                     	;# 
  1150  0F17                     	;# 
  1151  0F18                     	;# 
  1152  0F19                     	;# 
  1153  0F1A                     	;# 
  1154  0F1B                     	;# 
  1155  0F1C                     	;# 
  1156  0F1D                     	;# 
  1157  0F1E                     	;# 
  1158  0F1F                     	;# 
  1159  0F20                     	;# 
  1160  0F21                     	;# 
  1161  0F22                     	;# 
  1162  0F23                     	;# 
  1163  0F24                     	;# 
  1164  0F25                     	;# 
  1165  0F26                     	;# 
  1166  0F27                     	;# 
  1167  0F28                     	;# 
  1168  0F29                     	;# 
  1169  0F2A                     	;# 
  1170  0F2B                     	;# 
  1171  0F2C                     	;# 
  1172  0F2D                     	;# 
  1173  0F2E                     	;# 
  1174  0F2F                     	;# 
  1175  0F8C                     	;# 
  1176  0F8D                     	;# 
  1177  0F91                     	;# 
  1178  0F95                     	;# 
  1179  0F96                     	;# 
  1180  0F97                     	;# 
  1181  0F9C                     	;# 
  1182  0F9D                     	;# 
  1183  0F9E                     	;# 
  1184  0FE3                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  000E                     	;# 
  1211  0011                     	;# 
  1212  0012                     	;# 
  1213  0013                     	;# 
  1214  0015                     	;# 
  1215  0016                     	;# 
  1216  0016                     	;# 
  1217  0017                     	;# 
  1218  0018                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001B                     	;# 
  1222  001C                     	;# 
  1223  008C                     	;# 
  1224  008D                     	;# 
  1225  008E                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0095                     	;# 
  1230  0096                     	;# 
  1231  0097                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  009F                     	;# 
  1240  010C                     	;# 
  1241  010D                     	;# 
  1242  010E                     	;# 
  1243  0111                     	;# 
  1244  0112                     	;# 
  1245  0113                     	;# 
  1246  0114                     	;# 
  1247  0115                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0118                     	;# 
  1251  0119                     	;# 
  1252  011D                     	;# 
  1253  018C                     	;# 
  1254  018D                     	;# 
  1255  018E                     	;# 
  1256  0191                     	;# 
  1257  0191                     	;# 
  1258  0192                     	;# 
  1259  0193                     	;# 
  1260  0193                     	;# 
  1261  0194                     	;# 
  1262  0195                     	;# 
  1263  0196                     	;# 
  1264  0197                     	;# 
  1265  0199                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019D                     	;# 
  1271  019E                     	;# 
  1272  019F                     	;# 
  1273  020C                     	;# 
  1274  020D                     	;# 
  1275  0211                     	;# 
  1276  0211                     	;# 
  1277  0212                     	;# 
  1278  0212                     	;# 
  1279  0213                     	;# 
  1280  0213                     	;# 
  1281  0214                     	;# 
  1282  0214                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0216                     	;# 
  1287  0216                     	;# 
  1288  0217                     	;# 
  1289  0217                     	;# 
  1290  0391                     	;# 
  1291  0392                     	;# 
  1292  0393                     	;# 
  1293  0394                     	;# 
  1294  0395                     	;# 
  1295  0396                     	;# 
  1296  0498                     	;# 
  1297  0498                     	;# 
  1298  0499                     	;# 
  1299  049A                     	;# 
  1300  049B                     	;# 
  1301  049B                     	;# 
  1302  049C                     	;# 
  1303  049D                     	;# 
  1304  049E                     	;# 
  1305  049F                     	;# 
  1306  0611                     	;# 
  1307  0612                     	;# 
  1308  0613                     	;# 
  1309  0613                     	;# 
  1310  0614                     	;# 
  1311  0615                     	;# 
  1312  0616                     	;# 
  1313  0616                     	;# 
  1314  0617                     	;# 
  1315  0618                     	;# 
  1316  0619                     	;# 
  1317  0619                     	;# 
  1318  061A                     	;# 
  1319  061B                     	;# 
  1320  061C                     	;# 
  1321  061C                     	;# 
  1322  0691                     	;# 
  1323  0692                     	;# 
  1324  0693                     	;# 
  1325  0694                     	;# 
  1326  0695                     	;# 
  1327  0F0F                     	;# 
  1328  0F10                     	;# 
  1329  0F11                     	;# 
  1330  0F12                     	;# 
  1331  0F13                     	;# 
  1332  0F14                     	;# 
  1333  0F15                     	;# 
  1334  0F16                     	;# 
  1335  0F17                     	;# 
  1336  0F18                     	;# 
  1337  0F19                     	;# 
  1338  0F1A                     	;# 
  1339  0F1B                     	;# 
  1340  0F1C                     	;# 
  1341  0F1D                     	;# 
  1342  0F1E                     	;# 
  1343  0F1F                     	;# 
  1344  0F20                     	;# 
  1345  0F21                     	;# 
  1346  0F22                     	;# 
  1347  0F23                     	;# 
  1348  0F24                     	;# 
  1349  0F25                     	;# 
  1350  0F26                     	;# 
  1351  0F27                     	;# 
  1352  0F28                     	;# 
  1353  0F29                     	;# 
  1354  0F2A                     	;# 
  1355  0F2B                     	;# 
  1356  0F2C                     	;# 
  1357  0F2D                     	;# 
  1358  0F2E                     	;# 
  1359  0F2F                     	;# 
  1360  0F8C                     	;# 
  1361  0F8D                     	;# 
  1362  0F91                     	;# 
  1363  0F95                     	;# 
  1364  0F96                     	;# 
  1365  0F97                     	;# 
  1366  0F9C                     	;# 
  1367  0F9D                     	;# 
  1368  0F9E                     	;# 
  1369  0FE3                     	;# 
  1370  0FE4                     	;# 
  1371  0FE5                     	;# 
  1372  0FE6                     	;# 
  1373  0FE7                     	;# 
  1374  0FE8                     	;# 
  1375  0FE9                     	;# 
  1376  0FEA                     	;# 
  1377  0FEB                     	;# 
  1378  0FED                     	;# 
  1379  0FEE                     	;# 
  1380  0FEF                     	;# 
  1381  0000                     	;# 
  1382  0001                     	;# 
  1383  0002                     	;# 
  1384  0003                     	;# 
  1385  0004                     	;# 
  1386  0005                     	;# 
  1387  0006                     	;# 
  1388  0007                     	;# 
  1389  0008                     	;# 
  1390  0009                     	;# 
  1391  000A                     	;# 
  1392  000B                     	;# 
  1393  000C                     	;# 
  1394  000D                     	;# 
  1395  000E                     	;# 
  1396  0011                     	;# 
  1397  0012                     	;# 
  1398  0013                     	;# 
  1399  0015                     	;# 
  1400  0016                     	;# 
  1401  0016                     	;# 
  1402  0017                     	;# 
  1403  0018                     	;# 
  1404  0019                     	;# 
  1405  001A                     	;# 
  1406  001B                     	;# 
  1407  001C                     	;# 
  1408  008C                     	;# 
  1409  008D                     	;# 
  1410  008E                     	;# 
  1411  0091                     	;# 
  1412  0092                     	;# 
  1413  0093                     	;# 
  1414  0095                     	;# 
  1415  0096                     	;# 
  1416  0097                     	;# 
  1417  0099                     	;# 
  1418  009A                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  009F                     	;# 
  1425  010C                     	;# 
  1426  010D                     	;# 
  1427  010E                     	;# 
  1428  0111                     	;# 
  1429  0112                     	;# 
  1430  0113                     	;# 
  1431  0114                     	;# 
  1432  0115                     	;# 
  1433  0116                     	;# 
  1434  0117                     	;# 
  1435  0118                     	;# 
  1436  0119                     	;# 
  1437  011D                     	;# 
  1438  018C                     	;# 
  1439  018D                     	;# 
  1440  018E                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0194                     	;# 
  1447  0195                     	;# 
  1448  0196                     	;# 
  1449  0197                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019C                     	;# 
  1455  019D                     	;# 
  1456  019E                     	;# 
  1457  019F                     	;# 
  1458  020C                     	;# 
  1459  020D                     	;# 
  1460  0211                     	;# 
  1461  0211                     	;# 
  1462  0212                     	;# 
  1463  0212                     	;# 
  1464  0213                     	;# 
  1465  0213                     	;# 
  1466  0214                     	;# 
  1467  0214                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  0391                     	;# 
  1476  0392                     	;# 
  1477  0393                     	;# 
  1478  0394                     	;# 
  1479  0395                     	;# 
  1480  0396                     	;# 
  1481  0498                     	;# 
  1482  0498                     	;# 
  1483  0499                     	;# 
  1484  049A                     	;# 
  1485  049B                     	;# 
  1486  049B                     	;# 
  1487  049C                     	;# 
  1488  049D                     	;# 
  1489  049E                     	;# 
  1490  049F                     	;# 
  1491  0611                     	;# 
  1492  0612                     	;# 
  1493  0613                     	;# 
  1494  0613                     	;# 
  1495  0614                     	;# 
  1496  0615                     	;# 
  1497  0616                     	;# 
  1498  0616                     	;# 
  1499  0617                     	;# 
  1500  0618                     	;# 
  1501  0619                     	;# 
  1502  0619                     	;# 
  1503  061A                     	;# 
  1504  061B                     	;# 
  1505  061C                     	;# 
  1506  061C                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  0695                     	;# 
  1512  0F0F                     	;# 
  1513  0F10                     	;# 
  1514  0F11                     	;# 
  1515  0F12                     	;# 
  1516  0F13                     	;# 
  1517  0F14                     	;# 
  1518  0F15                     	;# 
  1519  0F16                     	;# 
  1520  0F17                     	;# 
  1521  0F18                     	;# 
  1522  0F19                     	;# 
  1523  0F1A                     	;# 
  1524  0F1B                     	;# 
  1525  0F1C                     	;# 
  1526  0F1D                     	;# 
  1527  0F1E                     	;# 
  1528  0F1F                     	;# 
  1529  0F20                     	;# 
  1530  0F21                     	;# 
  1531  0F22                     	;# 
  1532  0F23                     	;# 
  1533  0F24                     	;# 
  1534  0F25                     	;# 
  1535  0F26                     	;# 
  1536  0F27                     	;# 
  1537  0F28                     	;# 
  1538  0F29                     	;# 
  1539  0F2A                     	;# 
  1540  0F2B                     	;# 
  1541  0F2C                     	;# 
  1542  0F2D                     	;# 
  1543  0F2E                     	;# 
  1544  0F2F                     	;# 
  1545  0F8C                     	;# 
  1546  0F8D                     	;# 
  1547  0F91                     	;# 
  1548  0F95                     	;# 
  1549  0F96                     	;# 
  1550  0F97                     	;# 
  1551  0F9C                     	;# 
  1552  0F9D                     	;# 
  1553  0F9E                     	;# 
  1554  0FE3                     	;# 
  1555  0FE4                     	;# 
  1556  0FE5                     	;# 
  1557  0FE6                     	;# 
  1558  0FE7                     	;# 
  1559  0FE8                     	;# 
  1560  0FE9                     	;# 
  1561  0FEA                     	;# 
  1562  0FEB                     	;# 
  1563  0FED                     	;# 
  1564  0FEE                     	;# 
  1565  0FEF                     	;# 
  1566  0000                     	;# 
  1567  0001                     	;# 
  1568  0002                     	;# 
  1569  0003                     	;# 
  1570  0004                     	;# 
  1571  0005                     	;# 
  1572  0006                     	;# 
  1573  0007                     	;# 
  1574  0008                     	;# 
  1575  0009                     	;# 
  1576  000A                     	;# 
  1577  000B                     	;# 
  1578  000C                     	;# 
  1579  000D                     	;# 
  1580  000E                     	;# 
  1581  0011                     	;# 
  1582  0012                     	;# 
  1583  0013                     	;# 
  1584  0015                     	;# 
  1585  0016                     	;# 
  1586  0016                     	;# 
  1587  0017                     	;# 
  1588  0018                     	;# 
  1589  0019                     	;# 
  1590  001A                     	;# 
  1591  001B                     	;# 
  1592  001C                     	;# 
  1593  008C                     	;# 
  1594  008D                     	;# 
  1595  008E                     	;# 
  1596  0091                     	;# 
  1597  0092                     	;# 
  1598  0093                     	;# 
  1599  0095                     	;# 
  1600  0096                     	;# 
  1601  0097                     	;# 
  1602  0099                     	;# 
  1603  009A                     	;# 
  1604  009B                     	;# 
  1605  009B                     	;# 
  1606  009C                     	;# 
  1607  009D                     	;# 
  1608  009E                     	;# 
  1609  009F                     	;# 
  1610  010C                     	;# 
  1611  010D                     	;# 
  1612  010E                     	;# 
  1613  0111                     	;# 
  1614  0112                     	;# 
  1615  0113                     	;# 
  1616  0114                     	;# 
  1617  0115                     	;# 
  1618  0116                     	;# 
  1619  0117                     	;# 
  1620  0118                     	;# 
  1621  0119                     	;# 
  1622  011D                     	;# 
  1623  018C                     	;# 
  1624  018D                     	;# 
  1625  018E                     	;# 
  1626  0191                     	;# 
  1627  0191                     	;# 
  1628  0192                     	;# 
  1629  0193                     	;# 
  1630  0193                     	;# 
  1631  0194                     	;# 
  1632  0195                     	;# 
  1633  0196                     	;# 
  1634  0197                     	;# 
  1635  0199                     	;# 
  1636  019A                     	;# 
  1637  019B                     	;# 
  1638  019B                     	;# 
  1639  019C                     	;# 
  1640  019D                     	;# 
  1641  019E                     	;# 
  1642  019F                     	;# 
  1643  020C                     	;# 
  1644  020D                     	;# 
  1645  0211                     	;# 
  1646  0211                     	;# 
  1647  0212                     	;# 
  1648  0212                     	;# 
  1649  0213                     	;# 
  1650  0213                     	;# 
  1651  0214                     	;# 
  1652  0214                     	;# 
  1653  0215                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0216                     	;# 
  1657  0216                     	;# 
  1658  0217                     	;# 
  1659  0217                     	;# 
  1660  0391                     	;# 
  1661  0392                     	;# 
  1662  0393                     	;# 
  1663  0394                     	;# 
  1664  0395                     	;# 
  1665  0396                     	;# 
  1666  0498                     	;# 
  1667  0498                     	;# 
  1668  0499                     	;# 
  1669  049A                     	;# 
  1670  049B                     	;# 
  1671  049B                     	;# 
  1672  049C                     	;# 
  1673  049D                     	;# 
  1674  049E                     	;# 
  1675  049F                     	;# 
  1676  0611                     	;# 
  1677  0612                     	;# 
  1678  0613                     	;# 
  1679  0613                     	;# 
  1680  0614                     	;# 
  1681  0615                     	;# 
  1682  0616                     	;# 
  1683  0616                     	;# 
  1684  0617                     	;# 
  1685  0618                     	;# 
  1686  0619                     	;# 
  1687  0619                     	;# 
  1688  061A                     	;# 
  1689  061B                     	;# 
  1690  061C                     	;# 
  1691  061C                     	;# 
  1692  0691                     	;# 
  1693  0692                     	;# 
  1694  0693                     	;# 
  1695  0694                     	;# 
  1696  0695                     	;# 
  1697  0F0F                     	;# 
  1698  0F10                     	;# 
  1699  0F11                     	;# 
  1700  0F12                     	;# 
  1701  0F13                     	;# 
  1702  0F14                     	;# 
  1703  0F15                     	;# 
  1704  0F16                     	;# 
  1705  0F17                     	;# 
  1706  0F18                     	;# 
  1707  0F19                     	;# 
  1708  0F1A                     	;# 
  1709  0F1B                     	;# 
  1710  0F1C                     	;# 
  1711  0F1D                     	;# 
  1712  0F1E                     	;# 
  1713  0F1F                     	;# 
  1714  0F20                     	;# 
  1715  0F21                     	;# 
  1716  0F22                     	;# 
  1717  0F23                     	;# 
  1718  0F24                     	;# 
  1719  0F25                     	;# 
  1720  0F26                     	;# 
  1721  0F27                     	;# 
  1722  0F28                     	;# 
  1723  0F29                     	;# 
  1724  0F2A                     	;# 
  1725  0F2B                     	;# 
  1726  0F2C                     	;# 
  1727  0F2D                     	;# 
  1728  0F2E                     	;# 
  1729  0F2F                     	;# 
  1730  0F8C                     	;# 
  1731  0F8D                     	;# 
  1732  0F91                     	;# 
  1733  0F95                     	;# 
  1734  0F96                     	;# 
  1735  0F97                     	;# 
  1736  0F9C                     	;# 
  1737  0F9D                     	;# 
  1738  0F9E                     	;# 
  1739  0FE3                     	;# 
  1740  0FE4                     	;# 
  1741  0FE5                     	;# 
  1742  0FE6                     	;# 
  1743  0FE7                     	;# 
  1744  0FE8                     	;# 
  1745  0FE9                     	;# 
  1746  0FEA                     	;# 
  1747  0FEB                     	;# 
  1748  0FED                     	;# 
  1749  0FEE                     	;# 
  1750  0FEF                     	;# 
  1751  0000                     	;# 
  1752  0001                     	;# 
  1753  0002                     	;# 
  1754  0003                     	;# 
  1755  0004                     	;# 
  1756  0005                     	;# 
  1757  0006                     	;# 
  1758  0007                     	;# 
  1759  0008                     	;# 
  1760  0009                     	;# 
  1761  000A                     	;# 
  1762  000B                     	;# 
  1763  000C                     	;# 
  1764  000D                     	;# 
  1765  000E                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0013                     	;# 
  1769  0015                     	;# 
  1770  0016                     	;# 
  1771  0016                     	;# 
  1772  0017                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001B                     	;# 
  1777  001C                     	;# 
  1778  008C                     	;# 
  1779  008D                     	;# 
  1780  008E                     	;# 
  1781  0091                     	;# 
  1782  0092                     	;# 
  1783  0093                     	;# 
  1784  0095                     	;# 
  1785  0096                     	;# 
  1786  0097                     	;# 
  1787  0099                     	;# 
  1788  009A                     	;# 
  1789  009B                     	;# 
  1790  009B                     	;# 
  1791  009C                     	;# 
  1792  009D                     	;# 
  1793  009E                     	;# 
  1794  009F                     	;# 
  1795  010C                     	;# 
  1796  010D                     	;# 
  1797  010E                     	;# 
  1798  0111                     	;# 
  1799  0112                     	;# 
  1800  0113                     	;# 
  1801  0114                     	;# 
  1802  0115                     	;# 
  1803  0116                     	;# 
  1804  0117                     	;# 
  1805  0118                     	;# 
  1806  0119                     	;# 
  1807  011D                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  018E                     	;# 
  1811  0191                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  019A                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019C                     	;# 
  1825  019D                     	;# 
  1826  019E                     	;# 
  1827  019F                     	;# 
  1828  020C                     	;# 
  1829  020D                     	;# 
  1830  0211                     	;# 
  1831  0211                     	;# 
  1832  0212                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0213                     	;# 
  1836  0214                     	;# 
  1837  0214                     	;# 
  1838  0215                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0216                     	;# 
  1842  0216                     	;# 
  1843  0217                     	;# 
  1844  0217                     	;# 
  1845  0391                     	;# 
  1846  0392                     	;# 
  1847  0393                     	;# 
  1848  0394                     	;# 
  1849  0395                     	;# 
  1850  0396                     	;# 
  1851  0498                     	;# 
  1852  0498                     	;# 
  1853  0499                     	;# 
  1854  049A                     	;# 
  1855  049B                     	;# 
  1856  049B                     	;# 
  1857  049C                     	;# 
  1858  049D                     	;# 
  1859  049E                     	;# 
  1860  049F                     	;# 
  1861  0611                     	;# 
  1862  0612                     	;# 
  1863  0613                     	;# 
  1864  0613                     	;# 
  1865  0614                     	;# 
  1866  0615                     	;# 
  1867  0616                     	;# 
  1868  0616                     	;# 
  1869  0617                     	;# 
  1870  0618                     	;# 
  1871  0619                     	;# 
  1872  0619                     	;# 
  1873  061A                     	;# 
  1874  061B                     	;# 
  1875  061C                     	;# 
  1876  061C                     	;# 
  1877  0691                     	;# 
  1878  0692                     	;# 
  1879  0693                     	;# 
  1880  0694                     	;# 
  1881  0695                     	;# 
  1882  0F0F                     	;# 
  1883  0F10                     	;# 
  1884  0F11                     	;# 
  1885  0F12                     	;# 
  1886  0F13                     	;# 
  1887  0F14                     	;# 
  1888  0F15                     	;# 
  1889  0F16                     	;# 
  1890  0F17                     	;# 
  1891  0F18                     	;# 
  1892  0F19                     	;# 
  1893  0F1A                     	;# 
  1894  0F1B                     	;# 
  1895  0F1C                     	;# 
  1896  0F1D                     	;# 
  1897  0F1E                     	;# 
  1898  0F1F                     	;# 
  1899  0F20                     	;# 
  1900  0F21                     	;# 
  1901  0F22                     	;# 
  1902  0F23                     	;# 
  1903  0F24                     	;# 
  1904  0F25                     	;# 
  1905  0F26                     	;# 
  1906  0F27                     	;# 
  1907  0F28                     	;# 
  1908  0F29                     	;# 
  1909  0F2A                     	;# 
  1910  0F2B                     	;# 
  1911  0F2C                     	;# 
  1912  0F2D                     	;# 
  1913  0F2E                     	;# 
  1914  0F2F                     	;# 
  1915  0F8C                     	;# 
  1916  0F8D                     	;# 
  1917  0F91                     	;# 
  1918  0F95                     	;# 
  1919  0F96                     	;# 
  1920  0F97                     	;# 
  1921  0F9C                     	;# 
  1922  0F9D                     	;# 
  1923  0F9E                     	;# 
  1924  0FE3                     	;# 
  1925  0FE4                     	;# 
  1926  0FE5                     	;# 
  1927  0FE6                     	;# 
  1928  0FE7                     	;# 
  1929  0FE8                     	;# 
  1930  0FE9                     	;# 
  1931  0FEA                     	;# 
  1932  0FEB                     	;# 
  1933  0FED                     	;# 
  1934  0FEE                     	;# 
  1935  0FEF                     	;# 
  1936  0000                     	;# 
  1937  0001                     	;# 
  1938  0002                     	;# 
  1939  0003                     	;# 
  1940  0004                     	;# 
  1941  0005                     	;# 
  1942  0006                     	;# 
  1943  0007                     	;# 
  1944  0008                     	;# 
  1945  0009                     	;# 
  1946  000A                     	;# 
  1947  000B                     	;# 
  1948  000C                     	;# 
  1949  000D                     	;# 
  1950  000E                     	;# 
  1951  0011                     	;# 
  1952  0012                     	;# 
  1953  0013                     	;# 
  1954  0015                     	;# 
  1955  0016                     	;# 
  1956  0016                     	;# 
  1957  0017                     	;# 
  1958  0018                     	;# 
  1959  0019                     	;# 
  1960  001A                     	;# 
  1961  001B                     	;# 
  1962  001C                     	;# 
  1963  008C                     	;# 
  1964  008D                     	;# 
  1965  008E                     	;# 
  1966  0091                     	;# 
  1967  0092                     	;# 
  1968  0093                     	;# 
  1969  0095                     	;# 
  1970  0096                     	;# 
  1971  0097                     	;# 
  1972  0099                     	;# 
  1973  009A                     	;# 
  1974  009B                     	;# 
  1975  009B                     	;# 
  1976  009C                     	;# 
  1977  009D                     	;# 
  1978  009E                     	;# 
  1979  009F                     	;# 
  1980  010C                     	;# 
  1981  010D                     	;# 
  1982  010E                     	;# 
  1983  0111                     	;# 
  1984  0112                     	;# 
  1985  0113                     	;# 
  1986  0114                     	;# 
  1987  0115                     	;# 
  1988  0116                     	;# 
  1989  0117                     	;# 
  1990  0118                     	;# 
  1991  0119                     	;# 
  1992  011D                     	;# 
  1993  018C                     	;# 
  1994  018D                     	;# 
  1995  018E                     	;# 
  1996  0191                     	;# 
  1997  0191                     	;# 
  1998  0192                     	;# 
  1999  0193                     	;# 
  2000  0193                     	;# 
  2001  0194                     	;# 
  2002  0195                     	;# 
  2003  0196                     	;# 
  2004  0197                     	;# 
  2005  0199                     	;# 
  2006  019A                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019C                     	;# 
  2010  019D                     	;# 
  2011  019E                     	;# 
  2012  019F                     	;# 
  2013  020C                     	;# 
  2014  020D                     	;# 
  2015  0211                     	;# 
  2016  0211                     	;# 
  2017  0212                     	;# 
  2018  0212                     	;# 
  2019  0213                     	;# 
  2020  0213                     	;# 
  2021  0214                     	;# 
  2022  0214                     	;# 
  2023  0215                     	;# 
  2024  0215                     	;# 
  2025  0215                     	;# 
  2026  0216                     	;# 
  2027  0216                     	;# 
  2028  0217                     	;# 
  2029  0217                     	;# 
  2030  0391                     	;# 
  2031  0392                     	;# 
  2032  0393                     	;# 
  2033  0394                     	;# 
  2034  0395                     	;# 
  2035  0396                     	;# 
  2036  0498                     	;# 
  2037  0498                     	;# 
  2038  0499                     	;# 
  2039  049A                     	;# 
  2040  049B                     	;# 
  2041  049B                     	;# 
  2042  049C                     	;# 
  2043  049D                     	;# 
  2044  049E                     	;# 
  2045  049F                     	;# 
  2046  0611                     	;# 
  2047  0612                     	;# 
  2048  0613                     	;# 
  2049  0613                     	;# 
  2050  0614                     	;# 
  2051  0615                     	;# 
  2052  0616                     	;# 
  2053  0616                     	;# 
  2054  0617                     	;# 
  2055  0618                     	;# 
  2056  0619                     	;# 
  2057  0619                     	;# 
  2058  061A                     	;# 
  2059  061B                     	;# 
  2060  061C                     	;# 
  2061  061C                     	;# 
  2062  0691                     	;# 
  2063  0692                     	;# 
  2064  0693                     	;# 
  2065  0694                     	;# 
  2066  0695                     	;# 
  2067  0F0F                     	;# 
  2068  0F10                     	;# 
  2069  0F11                     	;# 
  2070  0F12                     	;# 
  2071  0F13                     	;# 
  2072  0F14                     	;# 
  2073  0F15                     	;# 
  2074  0F16                     	;# 
  2075  0F17                     	;# 
  2076  0F18                     	;# 
  2077  0F19                     	;# 
  2078  0F1A                     	;# 
  2079  0F1B                     	;# 
  2080  0F1C                     	;# 
  2081  0F1D                     	;# 
  2082  0F1E                     	;# 
  2083  0F1F                     	;# 
  2084  0F20                     	;# 
  2085  0F21                     	;# 
  2086  0F22                     	;# 
  2087  0F23                     	;# 
  2088  0F24                     	;# 
  2089  0F25                     	;# 
  2090  0F26                     	;# 
  2091  0F27                     	;# 
  2092  0F28                     	;# 
  2093  0F29                     	;# 
  2094  0F2A                     	;# 
  2095  0F2B                     	;# 
  2096  0F2C                     	;# 
  2097  0F2D                     	;# 
  2098  0F2E                     	;# 
  2099  0F2F                     	;# 
  2100  0F8C                     	;# 
  2101  0F8D                     	;# 
  2102  0F91                     	;# 
  2103  0F95                     	;# 
  2104  0F96                     	;# 
  2105  0F97                     	;# 
  2106  0F9C                     	;# 
  2107  0F9D                     	;# 
  2108  0F9E                     	;# 
  2109  0FE3                     	;# 
  2110  0FE4                     	;# 
  2111  0FE5                     	;# 
  2112  0FE6                     	;# 
  2113  0FE7                     	;# 
  2114  0FE8                     	;# 
  2115  0FE9                     	;# 
  2116  0FEA                     	;# 
  2117  0FEB                     	;# 
  2118  0FED                     	;# 
  2119  0FEE                     	;# 
  2120  0FEF                     	;# 
  2121  0000                     	;# 
  2122  0001                     	;# 
  2123  0002                     	;# 
  2124  0003                     	;# 
  2125  0004                     	;# 
  2126  0005                     	;# 
  2127  0006                     	;# 
  2128  0007                     	;# 
  2129  0008                     	;# 
  2130  0009                     	;# 
  2131  000A                     	;# 
  2132  000B                     	;# 
  2133  000C                     	;# 
  2134  000D                     	;# 
  2135  000E                     	;# 
  2136  0011                     	;# 
  2137  0012                     	;# 
  2138  0013                     	;# 
  2139  0015                     	;# 
  2140  0016                     	;# 
  2141  0016                     	;# 
  2142  0017                     	;# 
  2143  0018                     	;# 
  2144  0019                     	;# 
  2145  001A                     	;# 
  2146  001B                     	;# 
  2147  001C                     	;# 
  2148  008C                     	;# 
  2149  008D                     	;# 
  2150  008E                     	;# 
  2151  0091                     	;# 
  2152  0092                     	;# 
  2153  0093                     	;# 
  2154  0095                     	;# 
  2155  0096                     	;# 
  2156  0097                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009B                     	;# 
  2161  009C                     	;# 
  2162  009D                     	;# 
  2163  009E                     	;# 
  2164  009F                     	;# 
  2165  010C                     	;# 
  2166  010D                     	;# 
  2167  010E                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0113                     	;# 
  2171  0114                     	;# 
  2172  0115                     	;# 
  2173  0116                     	;# 
  2174  0117                     	;# 
  2175  0118                     	;# 
  2176  0119                     	;# 
  2177  011D                     	;# 
  2178  018C                     	;# 
  2179  018D                     	;# 
  2180  018E                     	;# 
  2181  0191                     	;# 
  2182  0191                     	;# 
  2183  0192                     	;# 
  2184  0193                     	;# 
  2185  0193                     	;# 
  2186  0194                     	;# 
  2187  0195                     	;# 
  2188  0196                     	;# 
  2189  0197                     	;# 
  2190  0199                     	;# 
  2191  019A                     	;# 
  2192  019B                     	;# 
  2193  019B                     	;# 
  2194  019C                     	;# 
  2195  019D                     	;# 
  2196  019E                     	;# 
  2197  019F                     	;# 
  2198  020C                     	;# 
  2199  020D                     	;# 
  2200  0211                     	;# 
  2201  0211                     	;# 
  2202  0212                     	;# 
  2203  0212                     	;# 
  2204  0213                     	;# 
  2205  0213                     	;# 
  2206  0214                     	;# 
  2207  0214                     	;# 
  2208  0215                     	;# 
  2209  0215                     	;# 
  2210  0215                     	;# 
  2211  0216                     	;# 
  2212  0216                     	;# 
  2213  0217                     	;# 
  2214  0217                     	;# 
  2215  0391                     	;# 
  2216  0392                     	;# 
  2217  0393                     	;# 
  2218  0394                     	;# 
  2219  0395                     	;# 
  2220  0396                     	;# 
  2221  0498                     	;# 
  2222  0498                     	;# 
  2223  0499                     	;# 
  2224  049A                     	;# 
  2225  049B                     	;# 
  2226  049B                     	;# 
  2227  049C                     	;# 
  2228  049D                     	;# 
  2229  049E                     	;# 
  2230  049F                     	;# 
  2231  0611                     	;# 
  2232  0612                     	;# 
  2233  0613                     	;# 
  2234  0613                     	;# 
  2235  0614                     	;# 
  2236  0615                     	;# 
  2237  0616                     	;# 
  2238  0616                     	;# 
  2239  0617                     	;# 
  2240  0618                     	;# 
  2241  0619                     	;# 
  2242  0619                     	;# 
  2243  061A                     	;# 
  2244  061B                     	;# 
  2245  061C                     	;# 
  2246  061C                     	;# 
  2247  0691                     	;# 
  2248  0692                     	;# 
  2249  0693                     	;# 
  2250  0694                     	;# 
  2251  0695                     	;# 
  2252  0F0F                     	;# 
  2253  0F10                     	;# 
  2254  0F11                     	;# 
  2255  0F12                     	;# 
  2256  0F13                     	;# 
  2257  0F14                     	;# 
  2258  0F15                     	;# 
  2259  0F16                     	;# 
  2260  0F17                     	;# 
  2261  0F18                     	;# 
  2262  0F19                     	;# 
  2263  0F1A                     	;# 
  2264  0F1B                     	;# 
  2265  0F1C                     	;# 
  2266  0F1D                     	;# 
  2267  0F1E                     	;# 
  2268  0F1F                     	;# 
  2269  0F20                     	;# 
  2270  0F21                     	;# 
  2271  0F22                     	;# 
  2272  0F23                     	;# 
  2273  0F24                     	;# 
  2274  0F25                     	;# 
  2275  0F26                     	;# 
  2276  0F27                     	;# 
  2277  0F28                     	;# 
  2278  0F29                     	;# 
  2279  0F2A                     	;# 
  2280  0F2B                     	;# 
  2281  0F2C                     	;# 
  2282  0F2D                     	;# 
  2283  0F2E                     	;# 
  2284  0F2F                     	;# 
  2285  0F8C                     	;# 
  2286  0F8D                     	;# 
  2287  0F91                     	;# 
  2288  0F95                     	;# 
  2289  0F96                     	;# 
  2290  0F97                     	;# 
  2291  0F9C                     	;# 
  2292  0F9D                     	;# 
  2293  0F9E                     	;# 
  2294  0FE3                     	;# 
  2295  0FE4                     	;# 
  2296  0FE5                     	;# 
  2297  0FE6                     	;# 
  2298  0FE7                     	;# 
  2299  0FE8                     	;# 
  2300  0FE9                     	;# 
  2301  0FEA                     	;# 
  2302  0FEB                     	;# 
  2303  0FED                     	;# 
  2304  0FEE                     	;# 
  2305  0FEF                     	;# 
  2306  0000                     	;# 
  2307  0001                     	;# 
  2308  0002                     	;# 
  2309  0003                     	;# 
  2310  0004                     	;# 
  2311  0005                     	;# 
  2312  0006                     	;# 
  2313  0007                     	;# 
  2314  0008                     	;# 
  2315  0009                     	;# 
  2316  000A                     	;# 
  2317  000B                     	;# 
  2318  000C                     	;# 
  2319  000D                     	;# 
  2320  000E                     	;# 
  2321  0011                     	;# 
  2322  0012                     	;# 
  2323  0013                     	;# 
  2324  0015                     	;# 
  2325  0016                     	;# 
  2326  0016                     	;# 
  2327  0017                     	;# 
  2328  0018                     	;# 
  2329  0019                     	;# 
  2330  001A                     	;# 
  2331  001B                     	;# 
  2332  001C                     	;# 
  2333  008C                     	;# 
  2334  008D                     	;# 
  2335  008E                     	;# 
  2336  0091                     	;# 
  2337  0092                     	;# 
  2338  0093                     	;# 
  2339  0095                     	;# 
  2340  0096                     	;# 
  2341  0097                     	;# 
  2342  0099                     	;# 
  2343  009A                     	;# 
  2344  009B                     	;# 
  2345  009B                     	;# 
  2346  009C                     	;# 
  2347  009D                     	;# 
  2348  009E                     	;# 
  2349  009F                     	;# 
  2350  010C                     	;# 
  2351  010D                     	;# 
  2352  010E                     	;# 
  2353  0111                     	;# 
  2354  0112                     	;# 
  2355  0113                     	;# 
  2356  0114                     	;# 
  2357  0115                     	;# 
  2358  0116                     	;# 
  2359  0117                     	;# 
  2360  0118                     	;# 
  2361  0119                     	;# 
  2362  011D                     	;# 
  2363  018C                     	;# 
  2364  018D                     	;# 
  2365  018E                     	;# 
  2366  0191                     	;# 
  2367  0191                     	;# 
  2368  0192                     	;# 
  2369  0193                     	;# 
  2370  0193                     	;# 
  2371  0194                     	;# 
  2372  0195                     	;# 
  2373  0196                     	;# 
  2374  0197                     	;# 
  2375  0199                     	;# 
  2376  019A                     	;# 
  2377  019B                     	;# 
  2378  019B                     	;# 
  2379  019C                     	;# 
  2380  019D                     	;# 
  2381  019E                     	;# 
  2382  019F                     	;# 
  2383  020C                     	;# 
  2384  020D                     	;# 
  2385  0211                     	;# 
  2386  0211                     	;# 
  2387  0212                     	;# 
  2388  0212                     	;# 
  2389  0213                     	;# 
  2390  0213                     	;# 
  2391  0214                     	;# 
  2392  0214                     	;# 
  2393  0215                     	;# 
  2394  0215                     	;# 
  2395  0215                     	;# 
  2396  0216                     	;# 
  2397  0216                     	;# 
  2398  0217                     	;# 
  2399  0217                     	;# 
  2400  0391                     	;# 
  2401  0392                     	;# 
  2402  0393                     	;# 
  2403  0394                     	;# 
  2404  0395                     	;# 
  2405  0396                     	;# 
  2406  0498                     	;# 
  2407  0498                     	;# 
  2408  0499                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049B                     	;# 
  2412  049C                     	;# 
  2413  049D                     	;# 
  2414  049E                     	;# 
  2415  049F                     	;# 
  2416  0611                     	;# 
  2417  0612                     	;# 
  2418  0613                     	;# 
  2419  0613                     	;# 
  2420  0614                     	;# 
  2421  0615                     	;# 
  2422  0616                     	;# 
  2423  0616                     	;# 
  2424  0617                     	;# 
  2425  0618                     	;# 
  2426  0619                     	;# 
  2427  0619                     	;# 
  2428  061A                     	;# 
  2429  061B                     	;# 
  2430  061C                     	;# 
  2431  061C                     	;# 
  2432  0691                     	;# 
  2433  0692                     	;# 
  2434  0693                     	;# 
  2435  0694                     	;# 
  2436  0695                     	;# 
  2437  0F0F                     	;# 
  2438  0F10                     	;# 
  2439  0F11                     	;# 
  2440  0F12                     	;# 
  2441  0F13                     	;# 
  2442  0F14                     	;# 
  2443  0F15                     	;# 
  2444  0F16                     	;# 
  2445  0F17                     	;# 
  2446  0F18                     	;# 
  2447  0F19                     	;# 
  2448  0F1A                     	;# 
  2449  0F1B                     	;# 
  2450  0F1C                     	;# 
  2451  0F1D                     	;# 
  2452  0F1E                     	;# 
  2453  0F1F                     	;# 
  2454  0F20                     	;# 
  2455  0F21                     	;# 
  2456  0F22                     	;# 
  2457  0F23                     	;# 
  2458  0F24                     	;# 
  2459  0F25                     	;# 
  2460  0F26                     	;# 
  2461  0F27                     	;# 
  2462  0F28                     	;# 
  2463  0F29                     	;# 
  2464  0F2A                     	;# 
  2465  0F2B                     	;# 
  2466  0F2C                     	;# 
  2467  0F2D                     	;# 
  2468  0F2E                     	;# 
  2469  0F2F                     	;# 
  2470  0F8C                     	;# 
  2471  0F8D                     	;# 
  2472  0F91                     	;# 
  2473  0F95                     	;# 
  2474  0F96                     	;# 
  2475  0F97                     	;# 
  2476  0F9C                     	;# 
  2477  0F9D                     	;# 
  2478  0F9E                     	;# 
  2479  0FE3                     	;# 
  2480  0FE4                     	;# 
  2481  0FE5                     	;# 
  2482  0FE6                     	;# 
  2483  0FE7                     	;# 
  2484  0FE8                     	;# 
  2485  0FE9                     	;# 
  2486  0FEA                     	;# 
  2487  0FEB                     	;# 
  2488  0FED                     	;# 
  2489  0FEE                     	;# 
  2490  0FEF                     	;# 
  2491  0000                     	;# 
  2492  0001                     	;# 
  2493  0002                     	;# 
  2494  0003                     	;# 
  2495  0004                     	;# 
  2496  0005                     	;# 
  2497  0006                     	;# 
  2498  0007                     	;# 
  2499  0008                     	;# 
  2500  0009                     	;# 
  2501  000A                     	;# 
  2502  000B                     	;# 
  2503  000C                     	;# 
  2504  000D                     	;# 
  2505  000E                     	;# 
  2506  0011                     	;# 
  2507  0012                     	;# 
  2508  0013                     	;# 
  2509  0015                     	;# 
  2510  0016                     	;# 
  2511  0016                     	;# 
  2512  0017                     	;# 
  2513  0018                     	;# 
  2514  0019                     	;# 
  2515  001A                     	;# 
  2516  001B                     	;# 
  2517  001C                     	;# 
  2518  008C                     	;# 
  2519  008D                     	;# 
  2520  008E                     	;# 
  2521  0091                     	;# 
  2522  0092                     	;# 
  2523  0093                     	;# 
  2524  0095                     	;# 
  2525  0096                     	;# 
  2526  0097                     	;# 
  2527  0099                     	;# 
  2528  009A                     	;# 
  2529  009B                     	;# 
  2530  009B                     	;# 
  2531  009C                     	;# 
  2532  009D                     	;# 
  2533  009E                     	;# 
  2534  009F                     	;# 
  2535  010C                     	;# 
  2536  010D                     	;# 
  2537  010E                     	;# 
  2538  0111                     	;# 
  2539  0112                     	;# 
  2540  0113                     	;# 
  2541  0114                     	;# 
  2542  0115                     	;# 
  2543  0116                     	;# 
  2544  0117                     	;# 
  2545  0118                     	;# 
  2546  0119                     	;# 
  2547  011D                     	;# 
  2548  018C                     	;# 
  2549  018D                     	;# 
  2550  018E                     	;# 
  2551  0191                     	;# 
  2552  0191                     	;# 
  2553  0192                     	;# 
  2554  0193                     	;# 
  2555  0193                     	;# 
  2556  0194                     	;# 
  2557  0195                     	;# 
  2558  0196                     	;# 
  2559  0197                     	;# 
  2560  0199                     	;# 
  2561  019A                     	;# 
  2562  019B                     	;# 
  2563  019B                     	;# 
  2564  019C                     	;# 
  2565  019D                     	;# 
  2566  019E                     	;# 
  2567  019F                     	;# 
  2568  020C                     	;# 
  2569  020D                     	;# 
  2570  0211                     	;# 
  2571  0211                     	;# 
  2572  0212                     	;# 
  2573  0212                     	;# 
  2574  0213                     	;# 
  2575  0213                     	;# 
  2576  0214                     	;# 
  2577  0214                     	;# 
  2578  0215                     	;# 
  2579  0215                     	;# 
  2580  0215                     	;# 
  2581  0216                     	;# 
  2582  0216                     	;# 
  2583  0217                     	;# 
  2584  0217                     	;# 
  2585  0391                     	;# 
  2586  0392                     	;# 
  2587  0393                     	;# 
  2588  0394                     	;# 
  2589  0395                     	;# 
  2590  0396                     	;# 
  2591  0498                     	;# 
  2592  0498                     	;# 
  2593  0499                     	;# 
  2594  049A                     	;# 
  2595  049B                     	;# 
  2596  049B                     	;# 
  2597  049C                     	;# 
  2598  049D                     	;# 
  2599  049E                     	;# 
  2600  049F                     	;# 
  2601  0611                     	;# 
  2602  0612                     	;# 
  2603  0613                     	;# 
  2604  0613                     	;# 
  2605  0614                     	;# 
  2606  0615                     	;# 
  2607  0616                     	;# 
  2608  0616                     	;# 
  2609  0617                     	;# 
  2610  0618                     	;# 
  2611  0619                     	;# 
  2612  0619                     	;# 
  2613  061A                     	;# 
  2614  061B                     	;# 
  2615  061C                     	;# 
  2616  061C                     	;# 
  2617  0691                     	;# 
  2618  0692                     	;# 
  2619  0693                     	;# 
  2620  0694                     	;# 
  2621  0695                     	;# 
  2622  0F0F                     	;# 
  2623  0F10                     	;# 
  2624  0F11                     	;# 
  2625  0F12                     	;# 
  2626  0F13                     	;# 
  2627  0F14                     	;# 
  2628  0F15                     	;# 
  2629  0F16                     	;# 
  2630  0F17                     	;# 
  2631  0F18                     	;# 
  2632  0F19                     	;# 
  2633  0F1A                     	;# 
  2634  0F1B                     	;# 
  2635  0F1C                     	;# 
  2636  0F1D                     	;# 
  2637  0F1E                     	;# 
  2638  0F1F                     	;# 
  2639  0F20                     	;# 
  2640  0F21                     	;# 
  2641  0F22                     	;# 
  2642  0F23                     	;# 
  2643  0F24                     	;# 
  2644  0F25                     	;# 
  2645  0F26                     	;# 
  2646  0F27                     	;# 
  2647  0F28                     	;# 
  2648  0F29                     	;# 
  2649  0F2A                     	;# 
  2650  0F2B                     	;# 
  2651  0F2C                     	;# 
  2652  0F2D                     	;# 
  2653  0F2E                     	;# 
  2654  0F2F                     	;# 
  2655  0F8C                     	;# 
  2656  0F8D                     	;# 
  2657  0F91                     	;# 
  2658  0F95                     	;# 
  2659  0F96                     	;# 
  2660  0F97                     	;# 
  2661  0F9C                     	;# 
  2662  0F9D                     	;# 
  2663  0F9E                     	;# 
  2664  0FE3                     	;# 
  2665  0FE4                     	;# 
  2666  0FE5                     	;# 
  2667  0FE6                     	;# 
  2668  0FE7                     	;# 
  2669  0FE8                     	;# 
  2670  0FE9                     	;# 
  2671  0FEA                     	;# 
  2672  0FEB                     	;# 
  2673  0FED                     	;# 
  2674  0FEE                     	;# 
  2675  0FEF                     	;# 
  2676                           
  2677                           	psect	nvBANK1
  2678  00B0                     __pnvBANK1:	
  2679  00B0                     _timer1ReloadVal:	
  2680  00B0                     	ds	2
  2681  00B2                     _eusartTxBufferRemaining:	
  2682  00B2                     	ds	1
  2683  0019                     _T1GCONbits	set	25
  2684  0018                     _T1CONbits	set	24
  2685  0018                     _T1CON	set	24
  2686  0016                     _TMR1L	set	22
  2687  0017                     _TMR1H	set	23
  2688  0019                     _T1GCON	set	25
  2689  001C                     _T2CONbits	set	28
  2690  001C                     _T2CON	set	28
  2691  0011                     _PIR1bits	set	17
  2692  001A                     _TMR2	set	26
  2693  001B                     _PR2	set	27
  2694  000B                     _INTCONbits	set	11
  2695  0088                     _TMR1IF	set	136
  2696  0065                     _RA5	set	101
  2697  0061                     _RA1	set	97
  2698  0062                     _RA2	set	98
  2699  0075                     _RC5	set	117
  2700  0095                     _OPTION_REG	set	149
  2701  0095                     _OPTION_REGbits	set	149
  2702  008E                     _TRISC	set	142
  2703  008D                     _TRISB	set	141
  2704  008C                     _TRISA	set	140
  2705  0091                     _PIE1bits	set	145
  2706  0099                     _OSCCON	set	153
  2707  046C                     _TRISB4	set	1132
  2708  046E                     _TRISB6	set	1134
  2709  011D                     _APFCON	set	285
  2710  010E                     _LATC	set	270
  2711  010D                     _LATB	set	269
  2712  010C                     _LATA	set	268
  2713  0116                     _BORCON	set	278
  2714  010E                     _LATCbits	set	270
  2715  086C                     _LATB4	set	2156
  2716  086E                     _LATB6	set	2158
  2717  018C                     _ANSELA	set	396
  2718  018D                     _ANSELB	set	397
  2719  018E                     _ANSELC	set	398
  2720  019D                     _RCSTAbits	set	413
  2721  019A                     _TXREG	set	410
  2722  019C                     _SPBRGH	set	412
  2723  019B                     _SPBRGL	set	411
  2724  019E                     _TXSTA	set	414
  2725  019D                     _RCSTA	set	413
  2726  019F                     _BAUDCON	set	415
  2727  0199                     _RCREG	set	409
  2728  0211                     _SSP1BUF	set	529
  2729  0216                     _SSP1CON2bits	set	534
  2730  0212                     _SSP1ADD	set	530
  2731  0216                     _SSP1CON2	set	534
  2732  0215                     _SSP1CON1	set	533
  2733  0214                     _SSP1STAT	set	532
  2734  020C                     _WPUA	set	524
  2735  020D                     _WPUB	set	525
  2736  061A                     _PWM4DCL	set	1562
  2737  061B                     _PWM4DCH	set	1563
  2738  061C                     _PWM4CON	set	1564
  2739  0617                     _PWM3DCL	set	1559
  2740  0618                     _PWM3DCH	set	1560
  2741  0619                     _PWM3CON	set	1561
  2742  0614                     _PWM2DCL	set	1556
  2743  0615                     _PWM2DCH	set	1557
  2744  0616                     _PWM2CON	set	1558
  2745  0611                     _PWM1DCL	set	1553
  2746  0612                     _PWM1DCH	set	1554
  2747  0613                     _PWM1CON	set	1555
  2748                           
  2749                           ; #config settings
  2750  0000                     
  2751                           	psect	cinit
  2752  0024                     start_initialization:	
  2753  0024                     __initialization:	
  2754                           
  2755                           ; Clear objects allocated to COMMON
  2756  0024  01FA               	clrf	__pbssCOMMON& (0+127)
  2757  0025  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2758                           
  2759                           ; Clear objects allocated to BANK0
  2760  0026  0020               	movlb	0	; select bank0
  2761  0027  01EC               	clrf	__pbssBANK0& (0+127)
  2762  0028  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2763  0029  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2764                           
  2765                           ; Clear objects allocated to BANK1
  2766  002A  30A0               	movlw	low __pbssBANK1
  2767  002B  0084               	movwf	4
  2768  002C  3000               	movlw	high __pbssBANK1
  2769  002D  0085               	movwf	5
  2770  002E  3010               	movlw	16
  2771  002F  3183  23E7  3180   	fcall	clear_ram0
  2772                           
  2773                           ; Clear objects allocated to BANK2
  2774  0032  3020               	movlw	low __pbssBANK2
  2775  0033  0084               	movwf	4
  2776  0034  3001               	movlw	high __pbssBANK2
  2777  0035  0085               	movwf	5
  2778  0036  3040               	movlw	64
  2779  0037  3183  23E7         	fcall	clear_ram0
  2780  0039                     end_of_initialization:	
  2781                           ;End of C runtime variable initialization code
  2782                           
  2783  0039                     __end_of__initialization:	
  2784  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2785  003A  0020               	movlb	0
  2786  003B  3181  296D         	ljmp	_main	;jump to C main() function
  2787                           
  2788                           	psect	bssCOMMON
  2789  007A                     __pbssCOMMON:	
  2790  007A                     _eusartTxHead:	
  2791  007A                     	ds	1
  2792  007B                     _eusartRxCount:	
  2793  007B                     	ds	1
  2794                           
  2795                           	psect	bssBANK0
  2796  006C                     __pbssBANK0:	
  2797  006C                     _eusartRxTail:	
  2798  006C                     	ds	1
  2799  006D                     _eusartRxHead:	
  2800  006D                     	ds	1
  2801  006E                     _eusartTxTail:	
  2802  006E                     	ds	1
  2803                           
  2804                           	psect	bssBANK1
  2805  00A0                     __pbssBANK1:	
  2806  00A0                     _eusartRxBuffer:	
  2807  00A0                     	ds	8
  2808  00A8                     _eusartTxBuffer:	
  2809  00A8                     	ds	8
  2810                           
  2811                           	psect	bssBANK2
  2812  0120                     __pbssBANK2:	
  2813  0120                     init_B@F4550:	
  2814  0120                     	ds	64
  2815                           
  2816                           	psect	clrtext
  2817  03E7                     clear_ram0:	
  2818                           ;	Called with FSR0 containing the base address, and
  2819                           ;	WREG with the size to clear
  2820                           
  2821  03E7  0064               	clrwdt	;clear the watchdog before getting into this loop
  2822  03E8                     clrloop0:	
  2823  03E8  0180               	clrf	0	;clear RAM location pointed to by FSR
  2824  03E9  3101               	addfsr 0,1
  2825  03EA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2826  03EB  2BE8               	goto	clrloop0	;have we reached the end yet?
  2827  03EC  3400               	retlw	0	;all done for this memory range, return
  2828                           
  2829                           	psect	cstackBANK1
  2830  00B3                     __pcstackBANK1:	
  2831  00B3                     main@Bt:	
  2832                           
  2833                           ; 1 bytes @ 0x0
  2834  00B3                     	ds	1
  2835  00B4                     main@k:	
  2836                           
  2837                           ; 2 bytes @ 0x1
  2838  00B4                     	ds	2
  2839                           
  2840                           	psect	cstackCOMMON
  2841  0070                     __pcstackCOMMON:	
  2842  0070                     ?_SYSTEM_Initialize:	
  2843  0070                     ?_initI2C:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  0070                     ?_initRTC:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  0070                     ?_init_B:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  0070                     ?_ReturnReg:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  0070                     ?_EUSART_Write:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  0070                     ?_EUSART_Read:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  0070                     ?_TMR1_StartTimer:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  0070                     ?_TMR1_Reload:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  0070                     ?_TMR1_StopTimer:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_PIN_MANAGER_Initialize:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ?_OSCILLATOR_Initialize:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     ?_WDT_Initialize:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879  0070                     ?_PWM1_Initialize:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882  0070                     ?_PWM2_Initialize:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885  0070                     ?_PWM4_Initialize:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  0070                     ?_PWM3_Initialize:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0070                     ?_EUSART_Initialize:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0070                     ?_EUSART_Transmit_ISR:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0070                     ??_EUSART_Transmit_ISR:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0070                     ?_EUSART_Receive_ISR:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0070                     ??_EUSART_Receive_ISR:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0070                     ?_waitI2C:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0070                     ?_main:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0070                     ?_Partiel_Reset:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0070                     ?_Set_Features:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0070                     ?_Set_Mode:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0070                     ?_Reboot:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0070                     ?_Turn_On:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0070                     ?_TMR2_Initialize:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0070                     ?_TMR1_Initialize:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0070                     ?_INTERRUPT_InterruptManager:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0070                     ?_startI2C:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0070                     ?_stopI2C:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0070                     ?_sendI2C:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945                           
  2946                           ; 1 bytes @ 0x0
  2947  0070                     	ds	1
  2948  0071                     ??_INTERRUPT_InterruptManager:	
  2949                           
  2950                           ; 1 bytes @ 0x1
  2951  0071                     	ds	1
  2952  0072                     ??_initI2C:	
  2953  0072                     ??_ReturnReg:	
  2954                           ; 1 bytes @ 0x2
  2955                           
  2956  0072                     ??_EUSART_Write:	
  2957                           ; 1 bytes @ 0x2
  2958                           
  2959  0072                     ??_EUSART_Read:	
  2960                           ; 1 bytes @ 0x2
  2961                           
  2962  0072                     ??_TMR1_StartTimer:	
  2963                           ; 1 bytes @ 0x2
  2964                           
  2965  0072                     ??_TMR1_StopTimer:	
  2966                           ; 1 bytes @ 0x2
  2967                           
  2968  0072                     ??_PIN_MANAGER_Initialize:	
  2969                           ; 1 bytes @ 0x2
  2970                           
  2971  0072                     ??_OSCILLATOR_Initialize:	
  2972                           ; 1 bytes @ 0x2
  2973                           
  2974  0072                     ??_WDT_Initialize:	
  2975                           ; 1 bytes @ 0x2
  2976                           
  2977  0072                     ??_PWM1_Initialize:	
  2978                           ; 1 bytes @ 0x2
  2979                           
  2980  0072                     ??_PWM2_Initialize:	
  2981                           ; 1 bytes @ 0x2
  2982                           
  2983  0072                     ??_PWM4_Initialize:	
  2984                           ; 1 bytes @ 0x2
  2985                           
  2986  0072                     ??_PWM3_Initialize:	
  2987                           ; 1 bytes @ 0x2
  2988                           
  2989  0072                     ??_EUSART_Initialize:	
  2990                           ; 1 bytes @ 0x2
  2991                           
  2992  0072                     ??_waitI2C:	
  2993                           ; 1 bytes @ 0x2
  2994                           
  2995  0072                     ??_TMR2_Initialize:	
  2996                           ; 1 bytes @ 0x2
  2997                           
  2998  0072                     ??_TMR1_Initialize:	
  2999                           ; 1 bytes @ 0x2
  3000                           
  3001  0072                     ?_TMR1_WriteTimer:	
  3002                           ; 1 bytes @ 0x2
  3003                           
  3004  0072                     ??_startI2C:	
  3005                           ; 1 bytes @ 0x2
  3006                           
  3007  0072                     ??_stopI2C:	
  3008                           ; 1 bytes @ 0x2
  3009                           
  3010  0072                     ??_sendI2C:	
  3011                           ; 1 bytes @ 0x2
  3012                           
  3013  0072                     sendI2C@data:	
  3014                           ; 1 bytes @ 0x2
  3015                           
  3016  0072                     TMR1_WriteTimer@timerVal:	
  3017                           ; 1 bytes @ 0x2
  3018                           
  3019                           
  3020                           ; 2 bytes @ 0x2
  3021  0072                     	ds	1
  3022  0073                     ??_SYSTEM_Initialize:	
  3023  0073                     ??_initRTC:	
  3024                           ; 1 bytes @ 0x3
  3025                           
  3026  0073                     EUSART_Read@readValue:	
  3027                           ; 1 bytes @ 0x3
  3028                           
  3029  0073                     EUSART_Write@txData:	
  3030                           ; 1 bytes @ 0x3
  3031                           
  3032  0073                     initI2C@i:	
  3033                           ; 1 bytes @ 0x3
  3034                           
  3035                           
  3036                           ; 2 bytes @ 0x3
  3037  0073                     	ds	1
  3038  0074                     ?_delay_ms:	
  3039  0074                     ??_TMR1_Reload:	
  3040                           ; 1 bytes @ 0x4
  3041                           
  3042  0074                     ??_Partiel_Reset:	
  3043                           ; 1 bytes @ 0x4
  3044                           
  3045  0074                     ??_Set_Features:	
  3046                           ; 1 bytes @ 0x4
  3047                           
  3048  0074                     ??_Set_Mode:	
  3049                           ; 1 bytes @ 0x4
  3050                           
  3051  0074                     ??_Reboot:	
  3052                           ; 1 bytes @ 0x4
  3053                           
  3054  0074                     ??_Turn_On:	
  3055                           ; 1 bytes @ 0x4
  3056                           
  3057  0074                     ??_TMR1_WriteTimer:	
  3058                           ; 1 bytes @ 0x4
  3059                           
  3060  0074                     delay_ms@msec:	
  3061                           ; 1 bytes @ 0x4
  3062                           
  3063                           
  3064                           ; 2 bytes @ 0x4
  3065  0074                     	ds	2
  3066  0076                     ??_delay_ms:	
  3067                           
  3068                           ; 1 bytes @ 0x6
  3069  0076                     	ds	1
  3070  0077                     delay_ms@x:	
  3071                           
  3072                           ; 2 bytes @ 0x7
  3073  0077                     	ds	2
  3074  0079                     ??_init_B:	
  3075                           
  3076                           ; 1 bytes @ 0x9
  3077  0079                     	ds	1
  3078                           
  3079                           	psect	cstackBANK0
  3080  0020                     __pcstackBANK0:	
  3081  0020                     ?_Verif_Erreur:	
  3082  0020                     Verif_Erreur@size:	
  3083                           ; 2 bytes @ 0x0
  3084                           
  3085                           
  3086                           ; 2 bytes @ 0x0
  3087  0020                     	ds	2
  3088  0022                     ??_Verif_Erreur:	
  3089                           
  3090                           ; 1 bytes @ 0x2
  3091  0022                     	ds	2
  3092  0024                     Verif_Erreur@i:	
  3093                           
  3094                           ; 2 bytes @ 0x4
  3095  0024                     	ds	2
  3096  0026                     Verif_Erreur@j:	
  3097                           
  3098                           ; 2 bytes @ 0x6
  3099  0026                     	ds	2
  3100  0028                     Verif_Erreur@buf:	
  3101                           
  3102                           ; 1 bytes @ 0x8
  3103  0028                     	ds	1
  3104  0029                     init_B@buf:	
  3105                           
  3106                           ; 64 bytes @ 0x9
  3107  0029                     	ds	64
  3108  0069                     init_B@error:	
  3109                           
  3110                           ; 1 bytes @ 0x49
  3111  0069                     	ds	1
  3112  006A                     ??_main:	
  3113                           
  3114                           ; 1 bytes @ 0x4A
  3115  006A                     	ds	2
  3116                           
  3117                           	psect	maintext
  3118  016D                     __pmaintext:	
  3119 ;;
  3120 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3121 ;;
  3122 ;; *************** function _main *****************
  3123 ;; Defined at:
  3124 ;;		line 15 in file "main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  k               2    1[BANK1 ] int 
  3129 ;;  Bt              1    0[BANK1 ] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : B1F/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3139 ;;      Params:         0       0       0       0       0       0       0       0
  3140 ;;      Locals:         0       0       3       0       0       0       0       0
  3141 ;;      Temps:          0       2       0       0       0       0       0       0
  3142 ;;      Totals:         0       2       3       0       0       0       0       0
  3143 ;;Total ram usage:        5 bytes
  3144 ;; Hardware stack levels required when called:    7
  3145 ;; This function calls:
  3146 ;;		_ReturnReg
  3147 ;;		_SYSTEM_Initialize
  3148 ;;		_delay_ms
  3149 ;;		_initI2C
  3150 ;;		_initRTC
  3151 ;;		_init_B
  3152 ;; This function is called by:
  3153 ;;		Startup code after reset
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _main
  3159  016D                     _main:	
  3160                           
  3161                           ;main.c: 17: SYSTEM_Initialize();
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3165  016D  3182  2290  3181   	fcall	_SYSTEM_Initialize
  3166                           
  3167                           ;main.c: 18: (INTCONbits.GIE = 1);
  3168  0170  178B               	bsf	11,7	;volatile
  3169                           
  3170                           ;main.c: 19: (INTCONbits.PEIE = 1);
  3171  0171  170B               	bsf	11,6	;volatile
  3172                           
  3173                           ;main.c: 21: uint8_t Bt = 0;
  3174  0172  0021               	movlb	1	; select bank1
  3175  0173  01B3               	clrf	main@Bt^(0+128)
  3176                           
  3177                           ;main.c: 23: RC5 = 0;
  3178  0174  0020               	movlb	0	; select bank0
  3179  0175  128E               	bcf	14,5	;volatile
  3180                           
  3181                           ;main.c: 24: RA2 = 0;
  3182  0176  110C               	bcf	12,2	;volatile
  3183                           
  3184                           ;main.c: 25: RA1 = 0;
  3185  0177  108C               	bcf	12,1	;volatile
  3186                           
  3187                           ;main.c: 26: RA5 = 0;
  3188  0178  128C               	bcf	12,5	;volatile
  3189                           
  3190                           ;main.c: 27: int k =0 ;
  3191  0179  0021               	movlb	1	; select bank1
  3192  017A  01B4               	clrf	main@k^(0+128)
  3193  017B  01B5               	clrf	(main@k+1)^(0+128)
  3194                           
  3195                           ;main.c: 33: initI2C();
  3196  017C  3181  21A8  3181   	fcall	_initI2C
  3197                           
  3198                           ;main.c: 34: initRTC();
  3199  017F  3181  211C  3181   	fcall	_initRTC
  3200                           
  3201                           ;main.c: 35: init_B();
  3202  0182  3180  203D  3181   	fcall	_init_B
  3203  0185                     l2484:	
  3204                           ;main.c: 36: while (1){
  3205                           
  3206                           
  3207                           ;main.c: 38: k = ReturnReg();
  3208  0185  3183  23F9  3181   	fcall	_ReturnReg
  3209  0188  0020               	movlb	0	; select bank0
  3210  0189  00EA               	movwf	??_main
  3211  018A  01EB               	clrf	??_main+1
  3212  018B  086A               	movf	??_main,w
  3213  018C  0021               	movlb	1	; select bank1
  3214  018D  00B4               	movwf	main@k^(0+128)
  3215  018E  0020               	movlb	0	; select bank0
  3216  018F  086B               	movf	??_main+1,w
  3217  0190  0021               	movlb	1	; select bank1
  3218  0191  00B5               	movwf	(main@k+1)^(0+128)
  3219                           
  3220                           ;main.c: 40: if (k == '$'){
  3221  0192  3024               	movlw	36
  3222  0193  0634               	xorwf	main@k^(0+128),w
  3223  0194  0435               	iorwf	(main@k+1)^(0+128),w
  3224  0195  1D03               	btfss	3,2
  3225  0196  2985               	goto	l2484
  3226                           
  3227                           ;main.c: 41: RC5 = !RC5;
  3228  0197  3020               	movlw	32
  3229  0198  0020               	movlb	0	; select bank0
  3230  0199  068E               	xorwf	14,f
  3231                           
  3232                           ;main.c: 42: RA2 = !RA2;
  3233  019A  3004               	movlw	4
  3234  019B  068C               	xorwf	12,f
  3235                           
  3236                           ;main.c: 43: RA1 = !RA1;
  3237  019C  3002               	movlw	2
  3238  019D  068C               	xorwf	12,f
  3239                           
  3240                           ;main.c: 44: RA5 = !RA5;
  3241  019E  3020               	movlw	32
  3242  019F  068C               	xorwf	12,f
  3243                           
  3244                           ;main.c: 45: delay_ms(1000);
  3245  01A0  30E8               	movlw	232
  3246  01A1  00F4               	movwf	delay_ms@msec
  3247  01A2  3003               	movlw	3
  3248  01A3  00F5               	movwf	delay_ms@msec+1
  3249  01A4  3182  2249  3181   	fcall	_delay_ms
  3250  01A7  2985               	goto	l2484
  3251  01A8                     __end_of_main:	
  3252                           
  3253                           	psect	text1
  3254  003D                     __ptext1:	
  3255 ;; *************** function _init_B *****************
  3256 ;; Defined at:
  3257 ;;		line 106 in file "BLE_Receive.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  buf            64    9[BANK0 ] unsigned char [64]
  3262 ;;  error           1   73[BANK0 ] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3272 ;;      Params:         0       0       0       0       0       0       0       0
  3273 ;;      Locals:         0      65       0       0       0       0       0       0
  3274 ;;      Temps:          1       0       0       0       0       0       0       0
  3275 ;;      Totals:         1      65       0       0       0       0       0       0
  3276 ;;Total ram usage:       66 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    6
  3279 ;; This function calls:
  3280 ;;		_Partiel_Reset
  3281 ;;		_Reboot
  3282 ;;		_Set_Features
  3283 ;;		_Set_Mode
  3284 ;;		_Turn_On
  3285 ;;		_Verif_Erreur
  3286 ;;		_delay_ms
  3287 ;; This function is called by:
  3288 ;;		_main
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           
  3293                           ;psect for function _init_B
  3294  003D                     _init_B:	
  3295                           
  3296                           ;BLE_Receive.c: 108: unsigned char error = 0;
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _init_B: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3300  003D  0020               	movlb	0	; select bank0
  3301  003E  01E9               	clrf	init_B@error
  3302                           
  3303                           ;BLE_Receive.c: 109: char buf [64] = {0};
  3304  003F  3020               	movlw	low init_B@F4550
  3305  0040  0086               	movwf	6
  3306  0041  3001               	movlw	high init_B@F4550
  3307  0042  0087               	movwf	7
  3308  0043  3029               	movlw	low init_B@buf
  3309  0044  0084               	movwf	4
  3310  0045  3000               	movlw	high init_B@buf
  3311  0046  0085               	movwf	5
  3312  0047  3040               	movlw	64
  3313  0048  00F9               	movwf	??_init_B
  3314  0049                     u1680:	
  3315  0049  0016               	moviw fsr1++
  3316  004A  001A               	movwi fsr0++
  3317  004B  0BF9               	decfsz	??_init_B,f
  3318  004C  2849               	goto	u1680
  3319                           
  3320                           ;BLE_Receive.c: 111: do { LATCbits.LATC0 = 1; } while(0);
  3321  004D  0022               	movlb	2	; select bank2
  3322  004E  140E               	bsf	14,0	;volatile
  3323                           
  3324                           ;BLE_Receive.c: 113: Turn_On();
  3325  004F  3183  2386  3180   	fcall	_Turn_On
  3326                           
  3327                           ;BLE_Receive.c: 114: error = Verif_Erreur(buf,64);
  3328  0052  3040               	movlw	64
  3329  0053  0020               	movlb	0	; select bank0
  3330  0054  00A0               	movwf	Verif_Erreur@size
  3331  0055  3000               	movlw	0
  3332  0056  00A1               	movwf	Verif_Erreur@size+1
  3333  0057  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3334  0058  3180  20B2  3180   	fcall	_Verif_Erreur
  3335  005B  0020               	movlb	0	; select bank0
  3336  005C  0820               	movf	?_Verif_Erreur,w
  3337  005D  00F9               	movwf	??_init_B
  3338  005E  0879               	movf	??_init_B,w
  3339  005F  00E9               	movwf	init_B@error
  3340                           
  3341                           ;BLE_Receive.c: 116: delay_ms(1000);
  3342  0060  30E8               	movlw	232
  3343  0061  00F4               	movwf	delay_ms@msec
  3344  0062  3003               	movlw	3
  3345  0063  00F5               	movwf	delay_ms@msec+1
  3346  0064  3182  2249  3180   	fcall	_delay_ms
  3347                           
  3348                           ;BLE_Receive.c: 118: Partiel_Reset();
  3349  0067  3183  2339  3180   	fcall	_Partiel_Reset
  3350                           
  3351                           ;BLE_Receive.c: 119: error = Verif_Erreur(buf,64);
  3352  006A  3040               	movlw	64
  3353  006B  0020               	movlb	0	; select bank0
  3354  006C  00A0               	movwf	Verif_Erreur@size
  3355  006D  3000               	movlw	0
  3356  006E  00A1               	movwf	Verif_Erreur@size+1
  3357  006F  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3358  0070  3180  20B2  3180   	fcall	_Verif_Erreur
  3359  0073  0020               	movlb	0	; select bank0
  3360  0074  0820               	movf	?_Verif_Erreur,w
  3361  0075  00F9               	movwf	??_init_B
  3362  0076  0879               	movf	??_init_B,w
  3363  0077  00E9               	movwf	init_B@error
  3364                           
  3365                           ;BLE_Receive.c: 121: Set_Mode();
  3366  0078  3181  21E1  3180   	fcall	_Set_Mode
  3367                           
  3368                           ;BLE_Receive.c: 122: error = Verif_Erreur(buf,64);
  3369  007B  3040               	movlw	64
  3370  007C  0020               	movlb	0	; select bank0
  3371  007D  00A0               	movwf	Verif_Erreur@size
  3372  007E  3000               	movlw	0
  3373  007F  00A1               	movwf	Verif_Erreur@size+1
  3374  0080  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3375  0081  3180  20B2  3180   	fcall	_Verif_Erreur
  3376  0084  0020               	movlb	0	; select bank0
  3377  0085  0820               	movf	?_Verif_Erreur,w
  3378  0086  00F9               	movwf	??_init_B
  3379  0087  0879               	movf	??_init_B,w
  3380  0088  00E9               	movwf	init_B@error
  3381                           
  3382                           ;BLE_Receive.c: 124: Set_Features();
  3383  0089  3182  2215  3180   	fcall	_Set_Features
  3384                           
  3385                           ;BLE_Receive.c: 125: error = Verif_Erreur(buf,64);
  3386  008C  3040               	movlw	64
  3387  008D  0020               	movlb	0	; select bank0
  3388  008E  00A0               	movwf	Verif_Erreur@size
  3389  008F  3000               	movlw	0
  3390  0090  00A1               	movwf	Verif_Erreur@size+1
  3391  0091  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3392  0092  3180  20B2  3180   	fcall	_Verif_Erreur
  3393  0095  0020               	movlb	0	; select bank0
  3394  0096  0820               	movf	?_Verif_Erreur,w
  3395  0097  00F9               	movwf	??_init_B
  3396  0098  0879               	movf	??_init_B,w
  3397  0099  00E9               	movwf	init_B@error
  3398                           
  3399                           ;BLE_Receive.c: 127: Reboot();
  3400  009A  3183  2351  3180   	fcall	_Reboot
  3401                           
  3402                           ;BLE_Receive.c: 128: error = Verif_Erreur(buf,64);
  3403  009D  3040               	movlw	64
  3404  009E  0020               	movlb	0	; select bank0
  3405  009F  00A0               	movwf	Verif_Erreur@size
  3406  00A0  3000               	movlw	0
  3407  00A1  00A1               	movwf	Verif_Erreur@size+1
  3408  00A2  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3409  00A3  3180  20B2  3180   	fcall	_Verif_Erreur
  3410  00A6  0020               	movlb	0	; select bank0
  3411  00A7  0820               	movf	?_Verif_Erreur,w
  3412  00A8  00F9               	movwf	??_init_B
  3413  00A9  0879               	movf	??_init_B,w
  3414  00AA  00E9               	movwf	init_B@error
  3415                           
  3416                           ;BLE_Receive.c: 130: delay_ms(1000);
  3417  00AB  30E8               	movlw	232
  3418  00AC  00F4               	movwf	delay_ms@msec
  3419  00AD  3003               	movlw	3
  3420  00AE  00F5               	movwf	delay_ms@msec+1
  3421  00AF  3182  2249         	fcall	_delay_ms
  3422  00B1  0008               	return
  3423  00B2                     __end_of_init_B:	
  3424                           
  3425                           	psect	text2
  3426  00B2                     __ptext2:	
  3427 ;; *************** function _Verif_Erreur *****************
  3428 ;; Defined at:
  3429 ;;		line 78 in file "BLE_Receive.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  buf             1    wreg     PTR unsigned char 
  3432 ;;		 -> init_B@buf(64), 
  3433 ;;  size            2    0[BANK0 ] unsigned int 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  3436 ;;		 -> init_B@buf(64), 
  3437 ;;  j               2    6[BANK0 ] int 
  3438 ;;  i               2    4[BANK0 ] unsigned int 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2    0[BANK0 ] int 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3448 ;;      Params:         0       2       0       0       0       0       0       0
  3449 ;;      Locals:         0       5       0       0       0       0       0       0
  3450 ;;      Temps:          0       2       0       0       0       0       0       0
  3451 ;;      Totals:         0       9       0       0       0       0       0       0
  3452 ;;Total ram usage:        9 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    5
  3455 ;; This function calls:
  3456 ;;		_EUSART_Read
  3457 ;;		_delay_ms
  3458 ;; This function is called by:
  3459 ;;		_init_B
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _Verif_Erreur
  3465  00B2                     _Verif_Erreur:	
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _Verif_Erreur: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3469                           ;Verif_Erreur@buf stored from wreg
  3470  00B2  0020               	movlb	0	; select bank0
  3471  00B3  00A8               	movwf	Verif_Erreur@buf
  3472                           
  3473                           ;BLE_Receive.c: 81: unsigned int i = 0;
  3474  00B4  01A4               	clrf	Verif_Erreur@i
  3475  00B5  01A5               	clrf	Verif_Erreur@i+1
  3476                           
  3477                           ;BLE_Receive.c: 82: int j = 0;
  3478  00B6  01A6               	clrf	Verif_Erreur@j
  3479  00B7  01A7               	clrf	Verif_Erreur@j+1
  3480  00B8                     l2182:	
  3481                           ;BLE_Receive.c: 83: do{
  3482                           
  3483                           
  3484                           ;BLE_Receive.c: 84: delay_ms(5);
  3485  00B8  3005               	movlw	5
  3486  00B9  00F4               	movwf	delay_ms@msec
  3487  00BA  3000               	movlw	0
  3488  00BB  00F5               	movwf	delay_ms@msec+1
  3489  00BC  3182  2249  3180   	fcall	_delay_ms
  3490                           
  3491                           ;BLE_Receive.c: 85: j++;
  3492  00BF  3001               	movlw	1
  3493  00C0  0020               	movlb	0	; select bank0
  3494  00C1  07A6               	addwf	Verif_Erreur@j,f
  3495  00C2  3000               	movlw	0
  3496  00C3  3DA7               	addwfc	Verif_Erreur@j+1,f
  3497                           
  3498                           ;BLE_Receive.c: 86: if (j == 10) return -1;
  3499  00C4  300A               	movlw	10
  3500  00C5  0626               	xorwf	Verif_Erreur@j,w
  3501  00C6  0427               	iorwf	Verif_Erreur@j+1,w
  3502  00C7  1D03               	btfss	3,2
  3503  00C8  28CE               	goto	l2192
  3504  00C9  30FF               	movlw	255
  3505  00CA  00A0               	movwf	?_Verif_Erreur
  3506  00CB  30FF               	movlw	255
  3507  00CC  00A1               	movwf	?_Verif_Erreur+1
  3508  00CD  0008               	return
  3509  00CE                     l2192:	
  3510                           
  3511                           ;BLE_Receive.c: 87: }while (eusartRxCount <= 0);
  3512  00CE  087B               	movf	_eusartRxCount,w	;volatile
  3513  00CF  1D03               	btfss	3,2
  3514  00D0  2913               	goto	l2220
  3515  00D1  28B8               	goto	l2182
  3516  00D2                     l2194:	
  3517                           ;BLE_Receive.c: 89: while (eusartRxCount > 0){
  3518                           
  3519                           
  3520                           ;BLE_Receive.c: 90: buf[i] = EUSART_Read();
  3521  00D2  3182  22CC  3180   	fcall	_EUSART_Read
  3522  00D5  0020               	movlb	0	; select bank0
  3523  00D6  00A2               	movwf	??_Verif_Erreur
  3524  00D7  0824               	movf	Verif_Erreur@i,w
  3525  00D8  0728               	addwf	Verif_Erreur@buf,w
  3526  00D9  00A3               	movwf	??_Verif_Erreur+1
  3527  00DA  0823               	movf	??_Verif_Erreur+1,w
  3528  00DB  0086               	movwf	6
  3529  00DC  0187               	clrf	7
  3530  00DD  0822               	movf	??_Verif_Erreur,w
  3531  00DE  0081               	movwf	1
  3532                           
  3533                           ;BLE_Receive.c: 91: i++;
  3534  00DF  3001               	movlw	1
  3535  00E0  07A4               	addwf	Verif_Erreur@i,f
  3536  00E1  3000               	movlw	0
  3537  00E2  3DA5               	addwfc	Verif_Erreur@i+1,f
  3538                           
  3539                           ;BLE_Receive.c: 92: if (i == size){
  3540  00E3  0821               	movf	Verif_Erreur@size+1,w
  3541  00E4  0625               	xorwf	Verif_Erreur@i+1,w
  3542  00E5  1D03               	skipz
  3543  00E6  28E9               	goto	u1475
  3544  00E7  0820               	movf	Verif_Erreur@size,w
  3545  00E8  0624               	xorwf	Verif_Erreur@i,w
  3546  00E9                     u1475:	
  3547  00E9  1903               	btfsc	3,2
  3548  00EA  28F9               	goto	l2208
  3549  00EB  2902               	goto	l2214
  3550  00EC                     l2202:	
  3551                           ;BLE_Receive.c: 93: while (eusartRxCount > 0){
  3552                           
  3553                           
  3554                           ;BLE_Receive.c: 94: EUSART_Read();
  3555  00EC  3182  22CC  3180   	fcall	_EUSART_Read
  3556                           
  3557                           ;BLE_Receive.c: 95: if (eusartRxCount == 0) delay_ms(5);
  3558  00EF  087B               	movf	_eusartRxCount,w	;volatile
  3559  00F0  1D03               	btfss	3,2
  3560  00F1  28F9               	goto	l2208
  3561  00F2  3005               	movlw	5
  3562  00F3  00F4               	movwf	delay_ms@msec
  3563  00F4  3000               	movlw	0
  3564  00F5  00F5               	movwf	delay_ms@msec+1
  3565  00F6  3182  2249  3180   	fcall	_delay_ms
  3566  00F9                     l2208:	
  3567  00F9  087B               	movf	_eusartRxCount,w	;volatile
  3568  00FA  1D03               	btfss	3,2
  3569  00FB  28EC               	goto	l2202
  3570                           
  3571                           ;BLE_Receive.c: 96: }
  3572                           ;BLE_Receive.c: 97: return -2;
  3573  00FC  30FE               	movlw	254
  3574  00FD  0020               	movlb	0	; select bank0
  3575  00FE  00A0               	movwf	?_Verif_Erreur
  3576  00FF  30FF               	movlw	255
  3577  0100  00A1               	movwf	?_Verif_Erreur+1
  3578  0101  0008               	return
  3579  0102                     l2214:	
  3580                           
  3581                           ;BLE_Receive.c: 98: }
  3582                           ;BLE_Receive.c: 99: delay_ms(1);
  3583  0102  3001               	movlw	1
  3584  0103  00F4               	movwf	delay_ms@msec
  3585  0104  3000               	movlw	0
  3586  0105  00F5               	movwf	delay_ms@msec+1
  3587  0106  3182  2249  3180   	fcall	_delay_ms
  3588                           
  3589                           ;BLE_Receive.c: 100: if (eusartRxCount == 0) delay_ms(4);
  3590  0109  087B               	movf	_eusartRxCount,w	;volatile
  3591  010A  1D03               	btfss	3,2
  3592  010B  2913               	goto	l2220
  3593  010C  3004               	movlw	4
  3594  010D  00F4               	movwf	delay_ms@msec
  3595  010E  3000               	movlw	0
  3596  010F  00F5               	movwf	delay_ms@msec+1
  3597  0110  3182  2249  3180   	fcall	_delay_ms
  3598  0113                     l2220:	
  3599  0113  087B               	movf	_eusartRxCount,w	;volatile
  3600  0114  1D03               	btfss	3,2
  3601  0115  28D2               	goto	l2194
  3602                           
  3603                           ;BLE_Receive.c: 101: }
  3604                           ;BLE_Receive.c: 102: return j;
  3605  0116  0020               	movlb	0	; select bank0
  3606  0117  0827               	movf	Verif_Erreur@j+1,w
  3607  0118  00A1               	movwf	?_Verif_Erreur+1
  3608  0119  0826               	movf	Verif_Erreur@j,w
  3609  011A  00A0               	movwf	?_Verif_Erreur
  3610  011B  0008               	return
  3611  011C                     __end_of_Verif_Erreur:	
  3612                           
  3613                           	psect	text3
  3614  0249                     __ptext3:	
  3615 ;; *************** function _delay_ms *****************
  3616 ;; Defined at:
  3617 ;;		line 7 in file "delay.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  msec            2    4[COMMON] int 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  x               2    7[COMMON] int 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3631 ;;      Params:         2       0       0       0       0       0       0       0
  3632 ;;      Locals:         2       0       0       0       0       0       0       0
  3633 ;;      Temps:          1       0       0       0       0       0       0       0
  3634 ;;      Totals:         5       0       0       0       0       0       0       0
  3635 ;;Total ram usage:        5 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    4
  3638 ;; This function calls:
  3639 ;;		_TMR1_Reload
  3640 ;;		_TMR1_StartTimer
  3641 ;;		_TMR1_StopTimer
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;;		_Verif_Erreur
  3645 ;;		_init_B
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _delay_ms
  3651  0249                     _delay_ms:	
  3652                           
  3653                           ;delay.c: 8: TMR1_StartTimer();
  3654                           
  3655                           ;incstack = 0
  3656                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3657  0249  3183  23F6  3182   	fcall	_TMR1_StartTimer
  3658                           
  3659                           ;delay.c: 9: TMR1_Reload();
  3660  024C  3183  23A7  3182   	fcall	_TMR1_Reload
  3661                           
  3662                           ;delay.c: 10: TMR1IF = 0;
  3663  024F  0020               	movlb	0	; select bank0
  3664  0250  1011               	bcf	17,0	;volatile
  3665                           
  3666                           ;delay.c: 11: for (int x = 0; x < msec; x++){
  3667  0251  01F7               	clrf	delay_ms@x
  3668  0252  01F8               	clrf	delay_ms@x+1
  3669  0253                     l2122:	
  3670  0253  0878               	movf	delay_ms@x+1,w
  3671  0254  3A80               	xorlw	128
  3672  0255  00F6               	movwf	??_delay_ms
  3673  0256  0875               	movf	delay_ms@msec+1,w
  3674  0257  3A80               	xorlw	128
  3675  0258  0276               	subwf	??_delay_ms,w
  3676  0259  1D03               	skipz
  3677  025A  2A5D               	goto	u1375
  3678  025B  0874               	movf	delay_ms@msec,w
  3679  025C  0277               	subwf	delay_ms@x,w
  3680  025D                     u1375:	
  3681  025D  1803               	btfsc	3,0
  3682  025E  2A6C               	goto	l2124
  3683  025F                     l96:	
  3684                           ;delay.c: 12: while(!TMR1IF);
  3685                           
  3686  025F  0020               	movlb	0	; select bank0
  3687  0260  1C11               	btfss	17,0	;volatile
  3688  0261  2A5F               	goto	l96
  3689                           
  3690                           ;delay.c: 13: TMR1_Reload();
  3691  0262  3183  23A7  3182   	fcall	_TMR1_Reload
  3692                           
  3693                           ;delay.c: 14: TMR1IF = 0;
  3694  0265  0020               	movlb	0	; select bank0
  3695  0266  1011               	bcf	17,0	;volatile
  3696  0267  3001               	movlw	1
  3697  0268  07F7               	addwf	delay_ms@x,f
  3698  0269  3000               	movlw	0
  3699  026A  3DF8               	addwfc	delay_ms@x+1,f
  3700  026B  2A53               	goto	l2122
  3701  026C                     l2124:	
  3702                           
  3703                           ;delay.c: 15: }
  3704                           ;delay.c: 16: TMR1_StopTimer();
  3705  026C  3183  23F3         	fcall	_TMR1_StopTimer
  3706  026E  0008               	return
  3707  026F                     __end_of_delay_ms:	
  3708                           
  3709                           	psect	text4
  3710  03F3                     __ptext4:	
  3711 ;; *************** function _TMR1_StopTimer *****************
  3712 ;; Defined at:
  3713 ;;		line 91 in file "mcc_generated_files/tmr1.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		None
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3727 ;;      Params:         0       0       0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    2
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_delay_ms
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function _TMR1_StopTimer
  3743  03F3                     _TMR1_StopTimer:	
  3744                           
  3745                           ;tmr1.c: 94: T1CONbits.TMR1ON = 0;
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in _TMR1_StopTimer: []
  3749  03F3  0020               	movlb	0	; select bank0
  3750  03F4  1018               	bcf	24,0	;volatile
  3751  03F5  0008               	return
  3752  03F6                     __end_of_TMR1_StopTimer:	
  3753                           
  3754                           	psect	text5
  3755  03F6                     __ptext5:	
  3756 ;; *************** function _TMR1_StartTimer *****************
  3757 ;; Defined at:
  3758 ;;		line 85 in file "mcc_generated_files/tmr1.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		None
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3772 ;;      Params:         0       0       0       0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    2
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_delay_ms
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _TMR1_StartTimer
  3788  03F6                     _TMR1_StartTimer:	
  3789                           
  3790                           ;tmr1.c: 88: T1CONbits.TMR1ON = 1;
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _TMR1_StartTimer: []
  3794  03F6  0020               	movlb	0	; select bank0
  3795  03F7  1418               	bsf	24,0	;volatile
  3796  03F8  0008               	return
  3797  03F9                     __end_of_TMR1_StartTimer:	
  3798                           
  3799                           	psect	text6
  3800  03A7                     __ptext6:	
  3801 ;; *************** function _TMR1_Reload *****************
  3802 ;; Defined at:
  3803 ;;		line 134 in file "mcc_generated_files/tmr1.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3817 ;;      Params:         0       0       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    3
  3824 ;; This function calls:
  3825 ;;		_TMR1_WriteTimer
  3826 ;; This function is called by:
  3827 ;;		_delay_ms
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _TMR1_Reload
  3833  03A7                     _TMR1_Reload:	
  3834                           
  3835                           ;tmr1.c: 136: TMR1_WriteTimer(timer1ReloadVal);
  3836                           
  3837                           ;incstack = 0
  3838                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  3839  03A7  0021               	movlb	1	; select bank1
  3840  03A8  0831               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  3841  03A9  00F3               	movwf	TMR1_WriteTimer@timerVal+1
  3842  03AA  0830               	movf	_timer1ReloadVal^(0+128),w	;volatile
  3843  03AB  00F2               	movwf	TMR1_WriteTimer@timerVal
  3844  03AC  3183  2377         	fcall	_TMR1_WriteTimer
  3845  03AE  0008               	return
  3846  03AF                     __end_of_TMR1_Reload:	
  3847                           
  3848                           	psect	text7
  3849  0377                     __ptext7:	
  3850 ;; *************** function _TMR1_WriteTimer *****************
  3851 ;; Defined at:
  3852 ;;		line 112 in file "mcc_generated_files/tmr1.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  timerVal        2    2[COMMON] unsigned int 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3866 ;;      Params:         2       0       0       0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0
  3869 ;;      Totals:         2       0       0       0       0       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    2
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_TMR1_Reload
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _TMR1_WriteTimer
  3882  0377                     _TMR1_WriteTimer:	
  3883                           
  3884                           ;tmr1.c: 114: if (T1CONbits.nT1SYNC == 1)
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  3888  0377  0020               	movlb	0	; select bank0
  3889  0378  1D18               	btfss	24,2	;volatile
  3890  0379  2B81               	goto	l2098
  3891                           
  3892                           ;tmr1.c: 115: {
  3893                           ;tmr1.c: 117: T1CONbits.TMR1ON = 0;
  3894  037A  1018               	bcf	24,0	;volatile
  3895                           
  3896                           ;tmr1.c: 120: TMR1H = (timerVal >> 8);
  3897  037B  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  3898  037C  0097               	movwf	23	;volatile
  3899                           
  3900                           ;tmr1.c: 121: TMR1L = timerVal;
  3901  037D  0872               	movf	TMR1_WriteTimer@timerVal,w
  3902  037E  0096               	movwf	22	;volatile
  3903                           
  3904                           ;tmr1.c: 124: T1CONbits.TMR1ON =1;
  3905  037F  1418               	bsf	24,0	;volatile
  3906                           
  3907                           ;tmr1.c: 125: }
  3908  0380  0008               	return
  3909  0381                     l2098:	
  3910                           
  3911                           ;tmr1.c: 126: else
  3912                           ;tmr1.c: 127: {
  3913                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  3914  0381  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  3915  0382  0097               	movwf	23	;volatile
  3916                           
  3917                           ;tmr1.c: 130: TMR1L = timerVal;
  3918  0383  0872               	movf	TMR1_WriteTimer@timerVal,w
  3919  0384  0096               	movwf	22	;volatile
  3920  0385  0008               	return
  3921  0386                     __end_of_TMR1_WriteTimer:	
  3922                           
  3923                           	psect	text8
  3924  02CC                     __ptext8:	
  3925 ;; *************** function _EUSART_Read *****************
  3926 ;; Defined at:
  3927 ;;		line 108 in file "mcc_generated_files/eusart.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  readValue       1    3[COMMON] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      unsigned char 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3941 ;;      Params:         0       0       0       0       0       0       0       0
  3942 ;;      Locals:         1       0       0       0       0       0       0       0
  3943 ;;      Temps:          1       0       0       0       0       0       0       0
  3944 ;;      Totals:         2       0       0       0       0       0       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    2
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_Verif_Erreur
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _EUSART_Read
  3957  02CC                     _EUSART_Read:	
  3958                           
  3959                           ;eusart.c: 110: uint8_t readValue = 0;
  3960                           
  3961                           ;incstack = 0
  3962                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3963  02CC  01F3               	clrf	EUSART_Read@readValue
  3964  02CD                     l2146:	
  3965                           ;eusart.c: 113: {
  3966                           
  3967                           ;eusart.c: 112: while(0 == eusartRxCount)
  3968                           
  3969  02CD  087B               	movf	_eusartRxCount,w	;volatile
  3970  02CE  1903               	btfsc	3,2
  3971  02CF  2ACD               	goto	l2146
  3972                           
  3973                           ;eusart.c: 114: }
  3974                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
  3975  02D0  0020               	movlb	0	; select bank0
  3976  02D1  086C               	movf	_eusartRxTail,w
  3977  02D2  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3978  02D3  0086               	movwf	6
  3979  02D4  0187               	clrf	7
  3980  02D5  0801               	movf	1,w
  3981  02D6  00F2               	movwf	??_EUSART_Read
  3982  02D7  0872               	movf	??_EUSART_Read,w
  3983  02D8  00F3               	movwf	EUSART_Read@readValue
  3984  02D9  3001               	movlw	1
  3985  02DA  00F2               	movwf	??_EUSART_Read
  3986  02DB  0872               	movf	??_EUSART_Read,w
  3987  02DC  07EC               	addwf	_eusartRxTail,f	;volatile
  3988                           
  3989                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  3990  02DD  3008               	movlw	8
  3991  02DE  026C               	subwf	_eusartRxTail,w	;volatile
  3992  02DF  1803               	btfsc	3,0
  3993                           
  3994                           ;eusart.c: 118: {
  3995                           ;eusart.c: 119: eusartRxTail = 0;
  3996  02E0  01EC               	clrf	_eusartRxTail	;volatile
  3997                           
  3998                           ;eusart.c: 120: }
  3999                           ;eusart.c: 121: PIE1bits.RCIE = 0;
  4000  02E1  0021               	movlb	1	; select bank1
  4001  02E2  1291               	bcf	17,5	;volatile
  4002                           
  4003                           ;eusart.c: 122: eusartRxCount--;
  4004  02E3  3001               	movlw	1
  4005  02E4  02FB               	subwf	_eusartRxCount,f	;volatile
  4006                           
  4007                           ;eusart.c: 123: PIE1bits.RCIE = 1;
  4008  02E5  1691               	bsf	17,5	;volatile
  4009                           
  4010                           ;eusart.c: 125: return readValue;
  4011  02E6  0873               	movf	EUSART_Read@readValue,w
  4012  02E7  0008               	return
  4013  02E8                     __end_of_EUSART_Read:	
  4014                           
  4015                           	psect	text9
  4016  0386                     __ptext9:	
  4017 ;; *************** function _Turn_On *****************
  4018 ;; Defined at:
  4019 ;;		line 70 in file "BLE_Receive.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4033 ;;      Params:         0       0       0       0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    3
  4040 ;; This function calls:
  4041 ;;		_EUSART_Write
  4042 ;; This function is called by:
  4043 ;;		_init_B
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _Turn_On
  4049  0386                     _Turn_On:	
  4050                           
  4051                           ;BLE_Receive.c: 72: EUSART_Write('+');
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _Turn_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4055  0386  302B               	movlw	43
  4056  0387  3182  226F  3183   	fcall	_EUSART_Write
  4057                           
  4058                           ;BLE_Receive.c: 74: EUSART_Write(13);
  4059  038A  300D               	movlw	13
  4060  038B  3182  226F  3183   	fcall	_EUSART_Write
  4061                           
  4062                           ;BLE_Receive.c: 75: EUSART_Write(10);
  4063  038E  300A               	movlw	10
  4064  038F  3182  226F         	fcall	_EUSART_Write
  4065  0391  0008               	return
  4066  0392                     __end_of_Turn_On:	
  4067                           
  4068                           	psect	text10
  4069  01E1                     __ptext10:	
  4070 ;; *************** function _Set_Mode *****************
  4071 ;; Defined at:
  4072 ;;		line 39 in file "BLE_Receive.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4086 ;;      Params:         0       0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    3
  4093 ;; This function calls:
  4094 ;;		_EUSART_Write
  4095 ;; This function is called by:
  4096 ;;		_init_B
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           
  4101                           ;psect for function _Set_Mode
  4102  01E1                     _Set_Mode:	
  4103                           
  4104                           ;BLE_Receive.c: 42: EUSART_Write('S');
  4105                           
  4106                           ;incstack = 0
  4107                           ; Regs used in _Set_Mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4108  01E1  3053               	movlw	83
  4109  01E2  3182  226F  3181   	fcall	_EUSART_Write
  4110                           
  4111                           ;BLE_Receive.c: 43: EUSART_Write('S');
  4112  01E5  3053               	movlw	83
  4113  01E6  3182  226F  3181   	fcall	_EUSART_Write
  4114                           
  4115                           ;BLE_Receive.c: 44: EUSART_Write(',');
  4116  01E9  302C               	movlw	44
  4117  01EA  3182  226F  3181   	fcall	_EUSART_Write
  4118                           
  4119                           ;BLE_Receive.c: 45: EUSART_Write('3');
  4120  01ED  3033               	movlw	51
  4121  01EE  3182  226F  3181   	fcall	_EUSART_Write
  4122                           
  4123                           ;BLE_Receive.c: 46: EUSART_Write('0');
  4124  01F1  3030               	movlw	48
  4125  01F2  3182  226F  3181   	fcall	_EUSART_Write
  4126                           
  4127                           ;BLE_Receive.c: 47: EUSART_Write('0');
  4128  01F5  3030               	movlw	48
  4129  01F6  3182  226F  3181   	fcall	_EUSART_Write
  4130                           
  4131                           ;BLE_Receive.c: 48: EUSART_Write('0');
  4132  01F9  3030               	movlw	48
  4133  01FA  3182  226F  3181   	fcall	_EUSART_Write
  4134                           
  4135                           ;BLE_Receive.c: 49: EUSART_Write('0');
  4136  01FD  3030               	movlw	48
  4137  01FE  3182  226F  3181   	fcall	_EUSART_Write
  4138                           
  4139                           ;BLE_Receive.c: 50: EUSART_Write('0');
  4140  0201  3030               	movlw	48
  4141  0202  3182  226F  3181   	fcall	_EUSART_Write
  4142                           
  4143                           ;BLE_Receive.c: 51: EUSART_Write('0');
  4144  0205  3030               	movlw	48
  4145  0206  3182  226F  3181   	fcall	_EUSART_Write
  4146                           
  4147                           ;BLE_Receive.c: 52: EUSART_Write('0');
  4148  0209  3030               	movlw	48
  4149  020A  3182  226F  3181   	fcall	_EUSART_Write
  4150                           
  4151                           ;BLE_Receive.c: 55: EUSART_Write(13);
  4152  020D  300D               	movlw	13
  4153  020E  3182  226F  3181   	fcall	_EUSART_Write
  4154                           
  4155                           ;BLE_Receive.c: 56: EUSART_Write(10);
  4156  0211  300A               	movlw	10
  4157  0212  3182  226F         	fcall	_EUSART_Write
  4158  0214  0008               	return
  4159  0215                     __end_of_Set_Mode:	
  4160                           
  4161                           	psect	text11
  4162  0215                     __ptext11:	
  4163 ;; *************** function _Set_Features *****************
  4164 ;; Defined at:
  4165 ;;		line 20 in file "BLE_Receive.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4179 ;;      Params:         0       0       0       0       0       0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0
  4182 ;;      Totals:         0       0       0       0       0       0       0       0
  4183 ;;Total ram usage:        0 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    3
  4186 ;; This function calls:
  4187 ;;		_EUSART_Write
  4188 ;; This function is called by:
  4189 ;;		_init_B
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _Set_Features
  4195  0215                     _Set_Features:	
  4196                           
  4197                           ;BLE_Receive.c: 22: EUSART_Write('S');
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _Set_Features: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4201  0215  3053               	movlw	83
  4202  0216  3182  226F  3182   	fcall	_EUSART_Write
  4203                           
  4204                           ;BLE_Receive.c: 23: EUSART_Write('R');
  4205  0219  3052               	movlw	82
  4206  021A  3182  226F  3182   	fcall	_EUSART_Write
  4207                           
  4208                           ;BLE_Receive.c: 24: EUSART_Write(',');
  4209  021D  302C               	movlw	44
  4210  021E  3182  226F  3182   	fcall	_EUSART_Write
  4211                           
  4212                           ;BLE_Receive.c: 26: EUSART_Write('3');
  4213  0221  3033               	movlw	51
  4214  0222  3182  226F  3182   	fcall	_EUSART_Write
  4215                           
  4216                           ;BLE_Receive.c: 27: EUSART_Write('2');
  4217  0225  3032               	movlw	50
  4218  0226  3182  226F  3182   	fcall	_EUSART_Write
  4219                           
  4220                           ;BLE_Receive.c: 28: EUSART_Write('0');
  4221  0229  3030               	movlw	48
  4222  022A  3182  226F  3182   	fcall	_EUSART_Write
  4223                           
  4224                           ;BLE_Receive.c: 29: EUSART_Write('0');
  4225  022D  3030               	movlw	48
  4226  022E  3182  226F  3182   	fcall	_EUSART_Write
  4227                           
  4228                           ;BLE_Receive.c: 30: EUSART_Write('0');
  4229  0231  3030               	movlw	48
  4230  0232  3182  226F  3182   	fcall	_EUSART_Write
  4231                           
  4232                           ;BLE_Receive.c: 31: EUSART_Write('0');
  4233  0235  3030               	movlw	48
  4234  0236  3182  226F  3182   	fcall	_EUSART_Write
  4235                           
  4236                           ;BLE_Receive.c: 32: EUSART_Write('0');
  4237  0239  3030               	movlw	48
  4238  023A  3182  226F  3182   	fcall	_EUSART_Write
  4239                           
  4240                           ;BLE_Receive.c: 33: EUSART_Write('0');
  4241  023D  3030               	movlw	48
  4242  023E  3182  226F  3182   	fcall	_EUSART_Write
  4243                           
  4244                           ;BLE_Receive.c: 35: EUSART_Write(13);
  4245  0241  300D               	movlw	13
  4246  0242  3182  226F  3182   	fcall	_EUSART_Write
  4247                           
  4248                           ;BLE_Receive.c: 36: EUSART_Write(10);
  4249  0245  300A               	movlw	10
  4250  0246  3182  226F         	fcall	_EUSART_Write
  4251  0248  0008               	return
  4252  0249                     __end_of_Set_Features:	
  4253                           
  4254                           	psect	text12
  4255  0351                     __ptext12:	
  4256 ;; *************** function _Reboot *****************
  4257 ;; Defined at:
  4258 ;;		line 60 in file "BLE_Receive.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4272 ;;      Params:         0       0       0       0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    3
  4279 ;; This function calls:
  4280 ;;		_EUSART_Write
  4281 ;; This function is called by:
  4282 ;;		_init_B
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _Reboot
  4288  0351                     _Reboot:	
  4289                           
  4290                           ;BLE_Receive.c: 62: EUSART_Write('R');
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _Reboot: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4294  0351  3052               	movlw	82
  4295  0352  3182  226F  3183   	fcall	_EUSART_Write
  4296                           
  4297                           ;BLE_Receive.c: 63: EUSART_Write(',');
  4298  0355  302C               	movlw	44
  4299  0356  3182  226F  3183   	fcall	_EUSART_Write
  4300                           
  4301                           ;BLE_Receive.c: 64: EUSART_Write('1');
  4302  0359  3031               	movlw	49
  4303  035A  3182  226F  3183   	fcall	_EUSART_Write
  4304                           
  4305                           ;BLE_Receive.c: 66: EUSART_Write(13);
  4306  035D  300D               	movlw	13
  4307  035E  3182  226F  3183   	fcall	_EUSART_Write
  4308                           
  4309                           ;BLE_Receive.c: 67: EUSART_Write(10);
  4310  0361  300A               	movlw	10
  4311  0362  3182  226F         	fcall	_EUSART_Write
  4312  0364  0008               	return
  4313  0365                     __end_of_Reboot:	
  4314                           
  4315                           	psect	text13
  4316  0339                     __ptext13:	
  4317 ;; *************** function _Partiel_Reset *****************
  4318 ;; Defined at:
  4319 ;;		line 7 in file "BLE_Receive.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4333 ;;      Params:         0       0       0       0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0
  4336 ;;      Totals:         0       0       0       0       0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    3
  4340 ;; This function calls:
  4341 ;;		_EUSART_Write
  4342 ;; This function is called by:
  4343 ;;		_init_B
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _Partiel_Reset
  4349  0339                     _Partiel_Reset:	
  4350                           
  4351                           ;BLE_Receive.c: 10: EUSART_Write('S');
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _Partiel_Reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4355  0339  3053               	movlw	83
  4356  033A  3182  226F  3183   	fcall	_EUSART_Write
  4357                           
  4358                           ;BLE_Receive.c: 11: EUSART_Write('F');
  4359  033D  3046               	movlw	70
  4360  033E  3182  226F  3183   	fcall	_EUSART_Write
  4361                           
  4362                           ;BLE_Receive.c: 12: EUSART_Write(',');
  4363  0341  302C               	movlw	44
  4364  0342  3182  226F  3183   	fcall	_EUSART_Write
  4365                           
  4366                           ;BLE_Receive.c: 13: EUSART_Write('1');
  4367  0345  3031               	movlw	49
  4368  0346  3182  226F  3183   	fcall	_EUSART_Write
  4369                           
  4370                           ;BLE_Receive.c: 15: EUSART_Write(13);
  4371  0349  300D               	movlw	13
  4372  034A  3182  226F  3183   	fcall	_EUSART_Write
  4373                           
  4374                           ;BLE_Receive.c: 16: EUSART_Write(10);
  4375  034D  300A               	movlw	10
  4376  034E  3182  226F         	fcall	_EUSART_Write
  4377  0350  0008               	return
  4378  0351                     __end_of_Partiel_Reset:	
  4379                           
  4380                           	psect	text14
  4381  026F                     __ptext14:	
  4382 ;; *************** function _EUSART_Write *****************
  4383 ;; Defined at:
  4384 ;;		line 128 in file "mcc_generated_files/eusart.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  txData          1    wreg     unsigned char 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  txData          1    3[COMMON] unsigned char 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4398 ;;      Params:         0       0       0       0       0       0       0       0
  4399 ;;      Locals:         1       0       0       0       0       0       0       0
  4400 ;;      Temps:          1       0       0       0       0       0       0       0
  4401 ;;      Totals:         2       0       0       0       0       0       0       0
  4402 ;;Total ram usage:        2 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    2
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_Partiel_Reset
  4409 ;;		_Set_Features
  4410 ;;		_Set_Mode
  4411 ;;		_Reboot
  4412 ;;		_Turn_On
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _EUSART_Write
  4418  026F                     _EUSART_Write:	
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4422                           ;EUSART_Write@txData stored from wreg
  4423  026F  00F3               	movwf	EUSART_Write@txData
  4424  0270                     l2128:	
  4425                           ;eusart.c: 131: {
  4426                           
  4427                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
  4428                           
  4429  0270  0021               	movlb	1	; select bank1
  4430  0271  0832               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  4431  0272  1903               	btfsc	3,2
  4432  0273  2A70               	goto	l2128
  4433                           
  4434                           ;eusart.c: 132: }
  4435                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
  4436  0274  1A11               	btfsc	17,4	;volatile
  4437  0275  2A7A               	goto	l281
  4438                           
  4439                           ;eusart.c: 135: {
  4440                           ;eusart.c: 136: TXREG = txData;
  4441  0276  0873               	movf	EUSART_Write@txData,w
  4442  0277  0023               	movlb	3	; select bank3
  4443  0278  009A               	movwf	26	;volatile
  4444                           
  4445                           ;eusart.c: 137: }
  4446  0279  2A8D               	goto	l2142
  4447  027A                     l281:	
  4448                           
  4449                           ;eusart.c: 138: else
  4450                           ;eusart.c: 139: {
  4451                           ;eusart.c: 140: PIE1bits.TXIE = 0;
  4452  027A  1211               	bcf	17,4	;volatile
  4453                           
  4454                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
  4455  027B  0873               	movf	EUSART_Write@txData,w
  4456  027C  00F2               	movwf	??_EUSART_Write
  4457  027D  087A               	movf	_eusartTxHead,w
  4458  027E  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4459  027F  0086               	movwf	6
  4460  0280  0187               	clrf	7
  4461  0281  0872               	movf	??_EUSART_Write,w
  4462  0282  0081               	movwf	1
  4463  0283  3001               	movlw	1
  4464  0284  00F2               	movwf	??_EUSART_Write
  4465  0285  0872               	movf	??_EUSART_Write,w
  4466  0286  07FA               	addwf	_eusartTxHead,f	;volatile
  4467                           
  4468                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4469  0287  3008               	movlw	8
  4470  0288  027A               	subwf	_eusartTxHead,w	;volatile
  4471  0289  1803               	btfsc	3,0
  4472                           
  4473                           ;eusart.c: 143: {
  4474                           ;eusart.c: 144: eusartTxHead = 0;
  4475  028A  01FA               	clrf	_eusartTxHead	;volatile
  4476                           
  4477                           ;eusart.c: 145: }
  4478                           ;eusart.c: 146: eusartTxBufferRemaining--;
  4479  028B  3001               	movlw	1
  4480  028C  02B2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  4481  028D                     l2142:	
  4482                           
  4483                           ;eusart.c: 147: }
  4484                           ;eusart.c: 148: PIE1bits.TXIE = 1;
  4485  028D  0021               	movlb	1	; select bank1
  4486  028E  1611               	bsf	17,4	;volatile
  4487  028F  0008               	return
  4488  0290                     __end_of_EUSART_Write:	
  4489                           
  4490                           	psect	text15
  4491  011C                     __ptext15:	
  4492 ;; *************** function _initRTC *****************
  4493 ;; Defined at:
  4494 ;;		line 181 in file "ic.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4508 ;;      Params:         0       0       0       0       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0
  4511 ;;      Totals:         0       0       0       0       0       0       0       0
  4512 ;;Total ram usage:        0 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    4
  4515 ;; This function calls:
  4516 ;;		_sendI2C
  4517 ;;		_startI2C
  4518 ;;		_stopI2C
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _initRTC
  4526  011C                     _initRTC:	
  4527                           
  4528                           ;ic.c: 182: startI2C();
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _initRTC: [wreg+status,2+status,0+pclath+cstack]
  4532  011C  3183  239E  3181   	fcall	_startI2C
  4533                           
  4534                           ;ic.c: 183: sendI2C(0b11011110);
  4535  011F  30DE               	movlw	222
  4536  0120  3183  2392  3181   	fcall	_sendI2C
  4537  0123                     l477:	
  4538                           ;ic.c: 184: while (SSP1CON2bits.ACKSTAT == 1);
  4539                           
  4540  0123  0024               	movlb	4	; select bank4
  4541  0124  1B16               	btfsc	22,6	;volatile
  4542  0125  2923               	goto	l477
  4543                           
  4544                           ;ic.c: 185: sendI2C(0x00);
  4545  0126  3000               	movlw	0
  4546  0127  3183  2392  3181   	fcall	_sendI2C
  4547  012A                     l480:	
  4548                           ;ic.c: 186: while (SSP1CON2bits.ACKSTAT == 1);
  4549                           
  4550  012A  0024               	movlb	4	; select bank4
  4551  012B  1B16               	btfsc	22,6	;volatile
  4552  012C  292A               	goto	l480
  4553                           
  4554                           ;ic.c: 187: sendI2C(0b10000000);
  4555  012D  3080               	movlw	128
  4556  012E  3183  2392  3181   	fcall	_sendI2C
  4557  0131                     l483:	
  4558                           ;ic.c: 188: while (SSP1CON2bits.ACKSTAT == 1);
  4559                           
  4560  0131  0024               	movlb	4	; select bank4
  4561  0132  1B16               	btfsc	22,6	;volatile
  4562  0133  2931               	goto	l483
  4563                           
  4564                           ;ic.c: 189: stopI2C();
  4565  0134  3183  23AF  3181   	fcall	_stopI2C
  4566                           
  4567                           ;ic.c: 191: startI2C();
  4568  0137  3183  239E  3181   	fcall	_startI2C
  4569                           
  4570                           ;ic.c: 192: sendI2C(0b11011110);
  4571  013A  30DE               	movlw	222
  4572  013B  3183  2392  3181   	fcall	_sendI2C
  4573  013E                     l486:	
  4574                           ;ic.c: 193: while (SSP1CON2bits.ACKSTAT == 1);
  4575                           
  4576  013E  0024               	movlb	4	; select bank4
  4577  013F  1B16               	btfsc	22,6	;volatile
  4578  0140  293E               	goto	l486
  4579                           
  4580                           ;ic.c: 194: sendI2C(0x01);
  4581  0141  3001               	movlw	1
  4582  0142  3183  2392  3181   	fcall	_sendI2C
  4583  0145                     l489:	
  4584                           ;ic.c: 195: while (SSP1CON2bits.ACKSTAT == 1);
  4585                           
  4586  0145  0024               	movlb	4	; select bank4
  4587  0146  1B16               	btfsc	22,6	;volatile
  4588  0147  2945               	goto	l489
  4589                           
  4590                           ;ic.c: 196: sendI2C(0b01001000);
  4591  0148  3048               	movlw	72
  4592  0149  3183  2392  3181   	fcall	_sendI2C
  4593  014C                     l492:	
  4594                           ;ic.c: 197: while (SSP1CON2bits.ACKSTAT == 1);
  4595                           
  4596  014C  0024               	movlb	4	; select bank4
  4597  014D  1B16               	btfsc	22,6	;volatile
  4598  014E  294C               	goto	l492
  4599                           
  4600                           ;ic.c: 198: stopI2C();
  4601  014F  3183  23AF  3181   	fcall	_stopI2C
  4602                           
  4603                           ;ic.c: 200: startI2C();
  4604  0152  3183  239E  3181   	fcall	_startI2C
  4605                           
  4606                           ;ic.c: 201: sendI2C(0b11011110);
  4607  0155  30DE               	movlw	222
  4608  0156  3183  2392  3181   	fcall	_sendI2C
  4609  0159                     l495:	
  4610                           ;ic.c: 202: while (SSP1CON2bits.ACKSTAT == 1);
  4611                           
  4612  0159  0024               	movlb	4	; select bank4
  4613  015A  1B16               	btfsc	22,6	;volatile
  4614  015B  2959               	goto	l495
  4615                           
  4616                           ;ic.c: 203: sendI2C(0x02);
  4617  015C  3002               	movlw	2
  4618  015D  3183  2392  3181   	fcall	_sendI2C
  4619  0160                     l498:	
  4620                           ;ic.c: 204: while (SSP1CON2bits.ACKSTAT == 1);
  4621                           
  4622  0160  0024               	movlb	4	; select bank4
  4623  0161  1B16               	btfsc	22,6	;volatile
  4624  0162  2960               	goto	l498
  4625                           
  4626                           ;ic.c: 205: sendI2C(0b00010100);
  4627  0163  3014               	movlw	20
  4628  0164  3183  2392  3181   	fcall	_sendI2C
  4629  0167                     l501:	
  4630                           ;ic.c: 206: while (SSP1CON2bits.ACKSTAT == 1);
  4631                           
  4632  0167  0024               	movlb	4	; select bank4
  4633  0168  1B16               	btfsc	22,6	;volatile
  4634  0169  2967               	goto	l501
  4635                           
  4636                           ;ic.c: 207: stopI2C();
  4637  016A  3183  23AF         	fcall	_stopI2C
  4638  016C  0008               	return
  4639  016D                     __end_of_initRTC:	
  4640                           
  4641                           	psect	text16
  4642  03AF                     __ptext16:	
  4643 ;; *************** function _stopI2C *****************
  4644 ;; Defined at:
  4645 ;;		line 78 in file "ic.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4659 ;;      Params:         0       0       0       0       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0
  4662 ;;      Totals:         0       0       0       0       0       0       0       0
  4663 ;;Total ram usage:        0 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    3
  4666 ;; This function calls:
  4667 ;;		_waitI2C
  4668 ;; This function is called by:
  4669 ;;		_initRTC
  4670 ;;		_changeMin
  4671 ;;		_changeHeure
  4672 ;;		_readSec
  4673 ;;		_readMin
  4674 ;;		_readHr
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _stopI2C
  4680  03AF                     _stopI2C:	
  4681                           
  4682                           ;ic.c: 80: waitI2C();
  4683                           
  4684                           ;incstack = 0
  4685                           ; Regs used in _stopI2C: [wreg+status,2+status,0+pclath+cstack]
  4686  03AF  3183  23B7  3183   	fcall	_waitI2C
  4687                           
  4688                           ;ic.c: 81: SSP1CON2bits.PEN = 1;
  4689  03B2  0024               	movlb	4	; select bank4
  4690  03B3  1516               	bsf	22,2	;volatile
  4691  03B4                     l425:	
  4692                           ;ic.c: 82: while(SSP1CON2bits.PEN == 1);
  4693                           
  4694  03B4  1D16               	btfss	22,2	;volatile
  4695  03B5  0008               	return
  4696  03B6  2BB4               	goto	l425
  4697  03B7                     __end_of_stopI2C:	
  4698                           
  4699                           	psect	text17
  4700  039E                     __ptext17:	
  4701 ;; *************** function _startI2C *****************
  4702 ;; Defined at:
  4703 ;;		line 68 in file "ic.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, pclath, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4717 ;;      Params:         0       0       0       0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    3
  4724 ;; This function calls:
  4725 ;;		_waitI2C
  4726 ;; This function is called by:
  4727 ;;		_initRTC
  4728 ;;		_changeMin
  4729 ;;		_changeHeure
  4730 ;;		_readSec
  4731 ;;		_readMin
  4732 ;;		_readHr
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _startI2C
  4738  039E                     _startI2C:	
  4739                           
  4740                           ;ic.c: 70: waitI2C();
  4741                           
  4742                           ;incstack = 0
  4743                           ; Regs used in _startI2C: [wreg+status,2+status,0+pclath+cstack]
  4744  039E  3183  23B7  3183   	fcall	_waitI2C
  4745                           
  4746                           ;ic.c: 71: SSP1CON2=0b00000001;
  4747  03A1  3001               	movlw	1
  4748  03A2  0024               	movlb	4	; select bank4
  4749  03A3  0096               	movwf	22	;volatile
  4750  03A4                     l413:	
  4751                           ;ic.c: 72: while(SSP1CON2bits.SEN == 1);
  4752                           
  4753  03A4  1C16               	btfss	22,0	;volatile
  4754  03A5  0008               	return
  4755  03A6  2BA4               	goto	l413
  4756  03A7                     __end_of_startI2C:	
  4757                           
  4758                           	psect	text18
  4759  0392                     __ptext18:	
  4760 ;; *************** function _sendI2C *****************
  4761 ;; Defined at:
  4762 ;;		line 84 in file "ic.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  data            1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  data            1    2[COMMON] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4776 ;;      Params:         0       0       0       0       0       0       0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0
  4779 ;;      Totals:         1       0       0       0       0       0       0       0
  4780 ;;Total ram usage:        1 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    3
  4783 ;; This function calls:
  4784 ;;		_waitI2C
  4785 ;; This function is called by:
  4786 ;;		_initRTC
  4787 ;;		_changeMin
  4788 ;;		_changeHeure
  4789 ;;		_readSec
  4790 ;;		_readMin
  4791 ;;		_readHr
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function _sendI2C
  4797  0392                     _sendI2C:	
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in _sendI2C: [wreg+status,2+status,0+pclath+cstack]
  4801                           ;sendI2C@data stored from wreg
  4802  0392  00F2               	movwf	sendI2C@data
  4803                           
  4804                           ;ic.c: 86: waitI2C();
  4805  0393  3183  23B7  3183   	fcall	_waitI2C
  4806                           
  4807                           ;ic.c: 87: SSP1BUF = data;
  4808  0396  0872               	movf	sendI2C@data,w
  4809  0397  0024               	movlb	4	; select bank4
  4810  0398  0091               	movwf	17	;volatile
  4811                           
  4812                           ;ic.c: 88: PIR1bits.SSP1IF = 0;
  4813  0399  0020               	movlb	0	; select bank0
  4814  039A  1191               	bcf	17,3	;volatile
  4815  039B                     l431:	
  4816                           ;ic.c: 89: while(PIR1bits.SSP1IF == 0);
  4817                           
  4818  039B  1991               	btfsc	17,3	;volatile
  4819  039C  0008               	return
  4820  039D  2B9B               	goto	l431
  4821  039E                     __end_of_sendI2C:	
  4822                           
  4823                           	psect	text19
  4824  03B7                     __ptext19:	
  4825 ;; *************** function _waitI2C *****************
  4826 ;; Defined at:
  4827 ;;		line 74 in file "ic.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4841 ;;      Params:         0       0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    2
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_startI2C
  4852 ;;		_stopI2C
  4853 ;;		_sendI2C
  4854 ;;		_readI2C
  4855 ;;		_re_startI2C
  4856 ;;		_sendAckI2C
  4857 ;;		_sendNoAckI2C
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _waitI2C
  4863  03B7                     _waitI2C:	
  4864  03B7                     l419:	
  4865                           ;ic.c: 76: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  4866                           
  4867                           ;incstack = 0
  4868                           ; Regs used in _waitI2C: [wreg+status,2]
  4869                           
  4870  03B7  0024               	movlb	4	; select bank4
  4871  03B8  1914               	btfsc	20,2	;volatile
  4872  03B9  2BB7               	goto	l419
  4873  03BA  0816               	movf	22,w	;volatile
  4874  03BB  391F               	andlw	31
  4875  03BC  1903               	btfsc	3,2
  4876  03BD  0008               	return
  4877  03BE  2BB7               	goto	l419
  4878  03BF                     __end_of_waitI2C:	
  4879                           
  4880                           	psect	text20
  4881  01A8                     __ptext20:	
  4882 ;; *************** function _initI2C *****************
  4883 ;; Defined at:
  4884 ;;		line 33 in file "ic.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  i               2    3[COMMON] int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4898 ;;      Params:         0       0       0       0       0       0       0       0
  4899 ;;      Locals:         2       0       0       0       0       0       0       0
  4900 ;;      Temps:          1       0       0       0       0       0       0       0
  4901 ;;      Totals:         3       0       0       0       0       0       0       0
  4902 ;;Total ram usage:        3 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    2
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _initI2C
  4914  01A8                     _initI2C:	
  4915                           
  4916                           ;ic.c: 34: int i = 0;
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _initI2C: [wreg+status,2]
  4920  01A8  01F3               	clrf	initI2C@i
  4921  01A9  01F4               	clrf	initI2C@i+1
  4922                           
  4923                           ;ic.c: 39: TRISB6 = 0;
  4924  01AA  0021               	movlb	1	; select bank1
  4925  01AB  130D               	bcf	13,6	;volatile
  4926                           
  4927                           ;ic.c: 40: for (i = 0; i < 9; i++) {
  4928  01AC  01F3               	clrf	initI2C@i
  4929  01AD  01F4               	clrf	initI2C@i+1
  4930  01AE  0874               	movf	initI2C@i+1,w
  4931  01AF  3A80               	xorlw	128
  4932  01B0  00F2               	movwf	??_initI2C
  4933  01B1  3080               	movlw	128
  4934  01B2  0272               	subwf	??_initI2C,w
  4935  01B3  1D03               	skipz
  4936  01B4  29B7               	goto	u1575
  4937  01B5  3009               	movlw	9
  4938  01B6  0273               	subwf	initI2C@i,w
  4939  01B7                     u1575:	
  4940  01B7  1803               	btfsc	3,0
  4941  01B8  29CB               	goto	l409
  4942  01B9                     l408:	
  4943                           
  4944                           ;ic.c: 41: LATB6 = 1;
  4945  01B9  0022               	movlb	2	; select bank2
  4946  01BA  170D               	bsf	13,6	;volatile
  4947                           
  4948                           ;ic.c: 42: LATB6 = 0;
  4949  01BB  130D               	bcf	13,6	;volatile
  4950  01BC  3001               	movlw	1
  4951  01BD  07F3               	addwf	initI2C@i,f
  4952  01BE  3000               	movlw	0
  4953  01BF  3DF4               	addwfc	initI2C@i+1,f
  4954  01C0  0874               	movf	initI2C@i+1,w
  4955  01C1  3A80               	xorlw	128
  4956  01C2  00F2               	movwf	??_initI2C
  4957  01C3  3080               	movlw	128
  4958  01C4  0272               	subwf	??_initI2C,w
  4959  01C5  1D03               	skipz
  4960  01C6  29C9               	goto	u1585
  4961  01C7  3009               	movlw	9
  4962  01C8  0273               	subwf	initI2C@i,w
  4963  01C9                     u1585:	
  4964  01C9  1C03               	skipc
  4965  01CA  29B9               	goto	l408
  4966  01CB                     l409:	
  4967                           
  4968                           ;ic.c: 43: }
  4969                           ;ic.c: 46: TRISB6 = 1;
  4970  01CB  0021               	movlb	1	; select bank1
  4971  01CC  170D               	bsf	13,6	;volatile
  4972                           
  4973                           ;ic.c: 47: TRISB4 = 1;
  4974  01CD  160D               	bsf	13,4	;volatile
  4975                           
  4976                           ;ic.c: 50: ANSELB = 0x00;
  4977  01CE  0023               	movlb	3	; select bank3
  4978  01CF  018D               	clrf	13	;volatile
  4979                           
  4980                           ;ic.c: 53: LATB4 = 1;
  4981  01D0  0022               	movlb	2	; select bank2
  4982  01D1  160D               	bsf	13,4	;volatile
  4983                           
  4984                           ;ic.c: 54: LATB6 = 1;
  4985  01D2  170D               	bsf	13,6	;volatile
  4986                           
  4987                           ;ic.c: 57: SSP1STAT = 0x80;
  4988  01D3  3080               	movlw	128
  4989  01D4  0024               	movlb	4	; select bank4
  4990  01D5  0094               	movwf	20	;volatile
  4991                           
  4992                           ;ic.c: 58: SSP1CON1 = 0x28;
  4993  01D6  3028               	movlw	40
  4994  01D7  0095               	movwf	21	;volatile
  4995                           
  4996                           ;ic.c: 59: SSP1CON2 = 0x00;
  4997  01D8  0196               	clrf	22	;volatile
  4998                           
  4999                           ;ic.c: 60: SSP1ADD = 0x27;
  5000  01D9  3027               	movlw	39
  5001  01DA  0092               	movwf	18	;volatile
  5002                           
  5003                           ;ic.c: 63: OPTION_REG = 0x0;
  5004  01DB  0021               	movlb	1	; select bank1
  5005  01DC  0195               	clrf	21	;volatile
  5006                           
  5007                           ;ic.c: 64: WPUB = 0b00010000;
  5008  01DD  3010               	movlw	16
  5009  01DE  0024               	movlb	4	; select bank4
  5010  01DF  008D               	movwf	13	;volatile
  5011  01E0  0008               	return
  5012  01E1                     __end_of_initI2C:	
  5013                           
  5014                           	psect	text21
  5015  0290                     __ptext21:	
  5016 ;; *************** function _SYSTEM_Initialize *****************
  5017 ;; Defined at:
  5018 ;;		line 69 in file "mcc_generated_files/mcc.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5032 ;;      Params:         0       0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    3
  5039 ;; This function calls:
  5040 ;;		_EUSART_Initialize
  5041 ;;		_OSCILLATOR_Initialize
  5042 ;;		_PIN_MANAGER_Initialize
  5043 ;;		_PWM1_Initialize
  5044 ;;		_PWM2_Initialize
  5045 ;;		_PWM3_Initialize
  5046 ;;		_PWM4_Initialize
  5047 ;;		_TMR1_Initialize
  5048 ;;		_TMR2_Initialize
  5049 ;;		_WDT_Initialize
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _SYSTEM_Initialize
  5057  0290                     _SYSTEM_Initialize:	
  5058                           
  5059                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  5060                           
  5061                           ;incstack = 0
  5062                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5063  0290  3183  231F  3182   	fcall	_PIN_MANAGER_Initialize
  5064                           
  5065                           ;mcc.c: 73: OSCILLATOR_Initialize();
  5066  0293  3183  23ED  3182   	fcall	_OSCILLATOR_Initialize
  5067                           
  5068                           ;mcc.c: 74: WDT_Initialize();
  5069  0296  3183  23FC  3182   	fcall	_WDT_Initialize
  5070                           
  5071                           ;mcc.c: 75: PWM1_Initialize();
  5072  0299  3183  23DF  3182   	fcall	_PWM1_Initialize
  5073                           
  5074                           ;mcc.c: 76: PWM2_Initialize();
  5075  029C  3183  23D7  3182   	fcall	_PWM2_Initialize
  5076                           
  5077                           ;mcc.c: 77: PWM4_Initialize();
  5078  029F  3183  23C7  3182   	fcall	_PWM4_Initialize
  5079                           
  5080                           ;mcc.c: 78: PWM3_Initialize();
  5081  02A2  3183  23CF  3182   	fcall	_PWM3_Initialize
  5082                           
  5083                           ;mcc.c: 79: TMR2_Initialize();
  5084  02A5  3183  23BF  3182   	fcall	_TMR2_Initialize
  5085                           
  5086                           ;mcc.c: 80: TMR1_Initialize();
  5087  02A8  3183  2365  3182   	fcall	_TMR1_Initialize
  5088                           
  5089                           ;mcc.c: 81: EUSART_Initialize();
  5090  02AB  3182  22E8         	fcall	_EUSART_Initialize
  5091  02AD  0008               	return
  5092  02AE                     __end_of_SYSTEM_Initialize:	
  5093                           
  5094                           	psect	text22
  5095  03FC                     __ptext22:	
  5096 ;; *************** function _WDT_Initialize *****************
  5097 ;; Defined at:
  5098 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;		None
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;		None
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		None
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5112 ;;      Params:         0       0       0       0       0       0       0       0
  5113 ;;      Locals:         0       0       0       0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0
  5115 ;;      Totals:         0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:        0 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    2
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_SYSTEM_Initialize
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _WDT_Initialize
  5128  03FC                     _WDT_Initialize:	
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _WDT_Initialize: []
  5132  03FC  0008               	return
  5133  03FD                     __end_of_WDT_Initialize:	
  5134                           
  5135                           	psect	text23
  5136  03BF                     __ptext23:	
  5137 ;; *************** function _TMR2_Initialize *****************
  5138 ;; Defined at:
  5139 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5153 ;;      Params:         0       0       0       0       0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0
  5156 ;;      Totals:         0       0       0       0       0       0       0       0
  5157 ;;Total ram usage:        0 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    2
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_SYSTEM_Initialize
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function _TMR2_Initialize
  5169  03BF                     _TMR2_Initialize:	
  5170                           
  5171                           ;tmr2.c: 66: PR2 = 0xFF;
  5172                           
  5173                           ;incstack = 0
  5174                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5175  03BF  30FF               	movlw	255
  5176  03C0  0020               	movlb	0	; select bank0
  5177  03C1  009B               	movwf	27	;volatile
  5178                           
  5179                           ;tmr2.c: 69: TMR2 = 0x00;
  5180  03C2  019A               	clrf	26	;volatile
  5181                           
  5182                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  5183  03C3  1091               	bcf	17,1	;volatile
  5184                           
  5185                           ;tmr2.c: 75: T2CON = 0x04;
  5186  03C4  3004               	movlw	4
  5187  03C5  009C               	movwf	28	;volatile
  5188  03C6  0008               	return
  5189  03C7                     __end_of_TMR2_Initialize:	
  5190                           
  5191                           	psect	text24
  5192  0365                     __ptext24:	
  5193 ;; *************** function _TMR1_Initialize *****************
  5194 ;; Defined at:
  5195 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5209 ;;      Params:         0       0       0       0       0       0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0
  5212 ;;      Totals:         0       0       0       0       0       0       0       0
  5213 ;;Total ram usage:        0 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    2
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_SYSTEM_Initialize
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _TMR1_Initialize
  5225  0365                     _TMR1_Initialize:	
  5226                           
  5227                           ;tmr1.c: 67: T1GCON = 0x00;
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5231  0365  0020               	movlb	0	; select bank0
  5232  0366  0199               	clrf	25	;volatile
  5233                           
  5234                           ;tmr1.c: 70: TMR1H = 0xF0;
  5235  0367  30F0               	movlw	240
  5236  0368  0097               	movwf	23	;volatile
  5237                           
  5238                           ;tmr1.c: 73: TMR1L = 0x60;
  5239  0369  3060               	movlw	96
  5240  036A  0096               	movwf	22	;volatile
  5241                           
  5242                           ;tmr1.c: 76: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5243  036B  0817               	movf	23,w	;volatile
  5244  036C  0021               	movlb	1	; select bank1
  5245  036D  00B1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  5246  036E  0020               	movlb	0	; select bank0
  5247  036F  0816               	movf	22,w	;volatile
  5248  0370  0021               	movlb	1	; select bank1
  5249  0371  00B0               	movwf	_timer1ReloadVal^(0+128)	;volatile
  5250                           
  5251                           ;tmr1.c: 79: PIR1bits.TMR1IF = 0;
  5252  0372  0020               	movlb	0	; select bank0
  5253  0373  1011               	bcf	17,0	;volatile
  5254                           
  5255                           ;tmr1.c: 82: T1CON = 0x01;
  5256  0374  3001               	movlw	1
  5257  0375  0098               	movwf	24	;volatile
  5258  0376  0008               	return
  5259  0377                     __end_of_TMR1_Initialize:	
  5260                           
  5261                           	psect	text25
  5262  03C7                     __ptext25:	
  5263 ;; *************** function _PWM4_Initialize *****************
  5264 ;; Defined at:
  5265 ;;		line 57 in file "mcc_generated_files/pwm4.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5279 ;;      Params:         0       0       0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    2
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_SYSTEM_Initialize
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           
  5294                           ;psect for function _PWM4_Initialize
  5295  03C7                     _PWM4_Initialize:	
  5296                           
  5297                           ;pwm4.c: 61: PWM4CON = 0xC0;
  5298                           
  5299                           ;incstack = 0
  5300                           ; Regs used in _PWM4_Initialize: [wreg]
  5301  03C7  30C0               	movlw	192
  5302  03C8  002C               	movlb	12	; select bank12
  5303  03C9  009C               	movwf	28	;volatile
  5304                           
  5305                           ;pwm4.c: 64: PWM4DCH = 0x7F;
  5306  03CA  307F               	movlw	127
  5307  03CB  009B               	movwf	27	;volatile
  5308                           
  5309                           ;pwm4.c: 67: PWM4DCL = 0xC0;
  5310  03CC  30C0               	movlw	192
  5311  03CD  009A               	movwf	26	;volatile
  5312  03CE  0008               	return
  5313  03CF                     __end_of_PWM4_Initialize:	
  5314                           
  5315                           	psect	text26
  5316  03CF                     __ptext26:	
  5317 ;; *************** function _PWM3_Initialize *****************
  5318 ;; Defined at:
  5319 ;;		line 57 in file "mcc_generated_files/pwm3.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5333 ;;      Params:         0       0       0       0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0
  5336 ;;      Totals:         0       0       0       0       0       0       0       0
  5337 ;;Total ram usage:        0 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    2
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_SYSTEM_Initialize
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function _PWM3_Initialize
  5349  03CF                     _PWM3_Initialize:	
  5350                           
  5351                           ;pwm3.c: 61: PWM3CON = 0xC0;
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _PWM3_Initialize: [wreg]
  5355  03CF  30C0               	movlw	192
  5356  03D0  002C               	movlb	12	; select bank12
  5357  03D1  0099               	movwf	25	;volatile
  5358                           
  5359                           ;pwm3.c: 64: PWM3DCH = 0x7F;
  5360  03D2  307F               	movlw	127
  5361  03D3  0098               	movwf	24	;volatile
  5362                           
  5363                           ;pwm3.c: 67: PWM3DCL = 0xC0;
  5364  03D4  30C0               	movlw	192
  5365  03D5  0097               	movwf	23	;volatile
  5366  03D6  0008               	return
  5367  03D7                     __end_of_PWM3_Initialize:	
  5368                           
  5369                           	psect	text27
  5370  03D7                     __ptext27:	
  5371 ;; *************** function _PWM2_Initialize *****************
  5372 ;; Defined at:
  5373 ;;		line 57 in file "mcc_generated_files/pwm2.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5387 ;;      Params:         0       0       0       0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0
  5390 ;;      Totals:         0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    2
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_SYSTEM_Initialize
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _PWM2_Initialize
  5403  03D7                     _PWM2_Initialize:	
  5404                           
  5405                           ;pwm2.c: 61: PWM2CON = 0xC0;
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _PWM2_Initialize: [wreg]
  5409  03D7  30C0               	movlw	192
  5410  03D8  002C               	movlb	12	; select bank12
  5411  03D9  0096               	movwf	22	;volatile
  5412                           
  5413                           ;pwm2.c: 64: PWM2DCH = 0x7F;
  5414  03DA  307F               	movlw	127
  5415  03DB  0095               	movwf	21	;volatile
  5416                           
  5417                           ;pwm2.c: 67: PWM2DCL = 0xC0;
  5418  03DC  30C0               	movlw	192
  5419  03DD  0094               	movwf	20	;volatile
  5420  03DE  0008               	return
  5421  03DF                     __end_of_PWM2_Initialize:	
  5422                           
  5423                           	psect	text28
  5424  03DF                     __ptext28:	
  5425 ;; *************** function _PWM1_Initialize *****************
  5426 ;; Defined at:
  5427 ;;		line 57 in file "mcc_generated_files/pwm1.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5441 ;;      Params:         0       0       0       0       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0
  5444 ;;      Totals:         0       0       0       0       0       0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    2
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_SYSTEM_Initialize
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           
  5456                           ;psect for function _PWM1_Initialize
  5457  03DF                     _PWM1_Initialize:	
  5458                           
  5459                           ;pwm1.c: 61: PWM1CON = 0xC0;
  5460                           
  5461                           ;incstack = 0
  5462                           ; Regs used in _PWM1_Initialize: [wreg]
  5463  03DF  30C0               	movlw	192
  5464  03E0  002C               	movlb	12	; select bank12
  5465  03E1  0093               	movwf	19	;volatile
  5466                           
  5467                           ;pwm1.c: 64: PWM1DCH = 0x7F;
  5468  03E2  307F               	movlw	127
  5469  03E3  0092               	movwf	18	;volatile
  5470                           
  5471                           ;pwm1.c: 67: PWM1DCL = 0xC0;
  5472  03E4  30C0               	movlw	192
  5473  03E5  0091               	movwf	17	;volatile
  5474  03E6  0008               	return
  5475  03E7                     __end_of_PWM1_Initialize:	
  5476                           
  5477                           	psect	text29
  5478  031F                     __ptext29:	
  5479 ;; *************** function _PIN_MANAGER_Initialize *****************
  5480 ;; Defined at:
  5481 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5495 ;;      Params:         0       0       0       0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    2
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_SYSTEM_Initialize
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _PIN_MANAGER_Initialize
  5511  031F                     _PIN_MANAGER_Initialize:	
  5512                           
  5513                           ;pin_manager.c: 57: LATA = 0x00;
  5514                           
  5515                           ;incstack = 0
  5516                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5517  031F  0022               	movlb	2	; select bank2
  5518  0320  018C               	clrf	12	;volatile
  5519                           
  5520                           ;pin_manager.c: 58: LATB = 0x00;
  5521  0321  018D               	clrf	13	;volatile
  5522                           
  5523                           ;pin_manager.c: 59: LATC = 0x00;
  5524  0322  018E               	clrf	14	;volatile
  5525                           
  5526                           ;pin_manager.c: 64: TRISA = 0x19;
  5527  0323  3019               	movlw	25
  5528  0324  0021               	movlb	1	; select bank1
  5529  0325  008C               	movwf	12	;volatile
  5530                           
  5531                           ;pin_manager.c: 65: TRISB = 0x70;
  5532  0326  3070               	movlw	112
  5533  0327  008D               	movwf	13	;volatile
  5534                           
  5535                           ;pin_manager.c: 66: TRISC = 0xD4;
  5536  0328  30D4               	movlw	212
  5537  0329  008E               	movwf	14	;volatile
  5538                           
  5539                           ;pin_manager.c: 71: ANSELC = 0xCF;
  5540  032A  30CF               	movlw	207
  5541  032B  0023               	movlb	3	; select bank3
  5542  032C  008E               	movwf	14	;volatile
  5543                           
  5544                           ;pin_manager.c: 72: ANSELB = 0xD0;
  5545  032D  30D0               	movlw	208
  5546  032E  008D               	movwf	13	;volatile
  5547                           
  5548                           ;pin_manager.c: 73: ANSELA = 0x17;
  5549  032F  3017               	movlw	23
  5550  0330  008C               	movwf	12	;volatile
  5551                           
  5552                           ;pin_manager.c: 78: WPUB = 0x00;
  5553  0331  0024               	movlb	4	; select bank4
  5554  0332  018D               	clrf	13	;volatile
  5555                           
  5556                           ;pin_manager.c: 79: WPUA = 0x00;
  5557  0333  018C               	clrf	12	;volatile
  5558                           
  5559                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  5560  0334  0021               	movlb	1	; select bank1
  5561  0335  1795               	bsf	21,7	;volatile
  5562                           
  5563                           ;pin_manager.c: 86: APFCON = 0x00;
  5564  0336  0022               	movlb	2	; select bank2
  5565  0337  019D               	clrf	29	;volatile
  5566  0338  0008               	return
  5567  0339                     __end_of_PIN_MANAGER_Initialize:	
  5568                           
  5569                           	psect	text30
  5570  03ED                     __ptext30:	
  5571 ;; *************** function _OSCILLATOR_Initialize *****************
  5572 ;; Defined at:
  5573 ;;		line 84 in file "mcc_generated_files/mcc.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5587 ;;      Params:         0       0       0       0       0       0       0       0
  5588 ;;      Locals:         0       0       0       0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0
  5590 ;;      Totals:         0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:        0 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    2
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_SYSTEM_Initialize
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function _OSCILLATOR_Initialize
  5603  03ED                     _OSCILLATOR_Initialize:	
  5604                           
  5605                           ;mcc.c: 87: OSCCON = 0x78;
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5609  03ED  3078               	movlw	120
  5610  03EE  0021               	movlb	1	; select bank1
  5611  03EF  0099               	movwf	25	;volatile
  5612                           
  5613                           ;mcc.c: 89: BORCON = 0x00;
  5614  03F0  0022               	movlb	2	; select bank2
  5615  03F1  0196               	clrf	22	;volatile
  5616  03F2  0008               	return
  5617  03F3                     __end_of_OSCILLATOR_Initialize:	
  5618                           
  5619                           	psect	text31
  5620  02E8                     __ptext31:	
  5621 ;; *************** function _EUSART_Initialize *****************
  5622 ;; Defined at:
  5623 ;;		line 72 in file "mcc_generated_files/eusart.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5637 ;;      Params:         0       0       0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0
  5639 ;;      Temps:          1       0       0       0       0       0       0       0
  5640 ;;      Totals:         1       0       0       0       0       0       0       0
  5641 ;;Total ram usage:        1 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    2
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_SYSTEM_Initialize
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           
  5652                           ;psect for function _EUSART_Initialize
  5653  02E8                     _EUSART_Initialize:	
  5654                           
  5655                           ;eusart.c: 75: PIE1bits.RCIE = 0;
  5656                           
  5657                           ;incstack = 0
  5658                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5659  02E8  0021               	movlb	1	; select bank1
  5660  02E9  1291               	bcf	17,5	;volatile
  5661                           
  5662                           ;eusart.c: 76: PIE1bits.TXIE = 0;
  5663  02EA  1211               	bcf	17,4	;volatile
  5664                           
  5665                           ;eusart.c: 80: BAUDCON = 0x08;
  5666  02EB  3008               	movlw	8
  5667  02EC  0023               	movlb	3	; select bank3
  5668  02ED  009F               	movwf	31	;volatile
  5669                           
  5670                           ;eusart.c: 83: RCSTA = 0x90;
  5671  02EE  3090               	movlw	144
  5672  02EF  009D               	movwf	29	;volatile
  5673                           
  5674                           ;eusart.c: 86: TXSTA = 0x24;
  5675  02F0  3024               	movlw	36
  5676  02F1  009E               	movwf	30	;volatile
  5677                           
  5678                           ;eusart.c: 89: SPBRGL = 0x22;
  5679  02F2  3022               	movlw	34
  5680  02F3  009B               	movwf	27	;volatile
  5681                           
  5682                           ;eusart.c: 92: SPBRGH = 0x00;
  5683  02F4  019C               	clrf	28	;volatile
  5684                           
  5685                           ;eusart.c: 96: eusartTxHead = 0;
  5686  02F5  01FA               	clrf	_eusartTxHead	;volatile
  5687                           
  5688                           ;eusart.c: 97: eusartTxTail = 0;
  5689  02F6  0020               	movlb	0	; select bank0
  5690  02F7  01EE               	clrf	_eusartTxTail	;volatile
  5691                           
  5692                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  5693  02F8  3008               	movlw	8
  5694  02F9  00F2               	movwf	??_EUSART_Initialize
  5695  02FA  0872               	movf	??_EUSART_Initialize,w
  5696  02FB  0021               	movlb	1	; select bank1
  5697  02FC  00B2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  5698                           
  5699                           ;eusart.c: 100: eusartRxHead = 0;
  5700  02FD  0020               	movlb	0	; select bank0
  5701  02FE  01ED               	clrf	_eusartRxHead	;volatile
  5702                           
  5703                           ;eusart.c: 101: eusartRxTail = 0;
  5704  02FF  01EC               	clrf	_eusartRxTail	;volatile
  5705                           
  5706                           ;eusart.c: 102: eusartRxCount = 0;
  5707  0300  01FB               	clrf	_eusartRxCount	;volatile
  5708                           
  5709                           ;eusart.c: 105: PIE1bits.RCIE = 1;
  5710  0301  0021               	movlb	1	; select bank1
  5711  0302  1691               	bsf	17,5	;volatile
  5712  0303  0008               	return
  5713  0304                     __end_of_EUSART_Initialize:	
  5714                           
  5715                           	psect	text32
  5716  03F9                     __ptext32:	
  5717 ;; *************** function _ReturnReg *****************
  5718 ;; Defined at:
  5719 ;;		line 134 in file "BLE_Receive.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      unsigned char 
  5726 ;; Registers used:
  5727 ;;		wreg
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5733 ;;      Params:         0       0       0       0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    2
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_main
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _ReturnReg
  5749  03F9                     _ReturnReg:	
  5750                           
  5751                           ;BLE_Receive.c: 135: return RCREG;
  5752                           
  5753                           ;incstack = 0
  5754                           ; Regs used in _ReturnReg: [wreg]
  5755  03F9  0023               	movlb	3	; select bank3
  5756  03FA  0819               	movf	25,w	;volatile
  5757  03FB  0008               	return
  5758  03FC                     __end_of_ReturnReg:	
  5759                           
  5760                           	psect	intentry
  5761  0004                     __pintentry:	
  5762 ;; *************** function _INTERRUPT_InterruptManager *****************
  5763 ;; Defined at:
  5764 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5778 ;;      Params:         0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0
  5780 ;;      Temps:          1       0       0       0       0       0       0       0
  5781 ;;      Totals:         1       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        1 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    1
  5785 ;; This function calls:
  5786 ;;		_EUSART_Receive_ISR
  5787 ;;		_EUSART_Transmit_ISR
  5788 ;; This function is called by:
  5789 ;;		Interrupt level 1
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793  0004                     _INTERRUPT_InterruptManager:	
  5794                           
  5795                           ;incstack = 0
  5796  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5797                           
  5798                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5799  0005  3180               	pagesel	$
  5800  0006  0020               	movlb	0	; select bank0
  5801  0007  087F               	movf	127,w
  5802  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  5803                           
  5804                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  5805  0009  1F0B               	btfss	11,6	;volatile
  5806  000A  281D               	goto	i1l231
  5807                           
  5808                           ;interrupt_manager.c: 55: {
  5809                           ;interrupt_manager.c: 56: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5810  000B  0021               	movlb	1	; select bank1
  5811  000C  1E11               	btfss	17,4	;volatile
  5812  000D  2815               	goto	i1l226
  5813  000E  0020               	movlb	0	; select bank0
  5814  000F  1E11               	btfss	17,4	;volatile
  5815  0010  2815               	goto	i1l226
  5816                           
  5817                           ;interrupt_manager.c: 57: {
  5818                           ;interrupt_manager.c: 58: EUSART_Transmit_ISR();
  5819  0011  3182  22AE  3180   	fcall	_EUSART_Transmit_ISR
  5820                           
  5821                           ;interrupt_manager.c: 59: }
  5822  0014  281D               	goto	i1l231
  5823  0015                     i1l226:	
  5824                           
  5825                           ;interrupt_manager.c: 60: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  5826  0015  0021               	movlb	1	; select bank1
  5827  0016  1E91               	btfss	17,5	;volatile
  5828  0017  281D               	goto	i1l231
  5829  0018  0020               	movlb	0	; select bank0
  5830  0019  1E91               	btfss	17,5	;volatile
  5831  001A  281D               	goto	i1l231
  5832                           
  5833                           ;interrupt_manager.c: 61: {
  5834                           ;interrupt_manager.c: 62: EUSART_Receive_ISR();
  5835  001B  3183  2304         	fcall	_EUSART_Receive_ISR
  5836  001D                     i1l231:	
  5837                           ;interrupt_manager.c: 69: else
  5838                           ;interrupt_manager.c: 70: {
  5839                           
  5840                           ;interrupt_manager.c: 67: }
  5841                           ;interrupt_manager.c: 68: }
  5842                           
  5843                           ;interrupt_manager.c: 64: else
  5844                           ;interrupt_manager.c: 65: {
  5845                           
  5846                           ;interrupt_manager.c: 63: }
  5847                           
  5848  001D  0871               	movf	??_INTERRUPT_InterruptManager,w
  5849  001E  0020               	movlb	0	; select bank0
  5850  001F  00FF               	movwf	127
  5851  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5852  0021  0009               	retfie
  5853  0022                     __end_of_INTERRUPT_InterruptManager:	
  5854                           
  5855                           	psect	text34
  5856  02AE                     __ptext34:	
  5857 ;; *************** function _EUSART_Transmit_ISR *****************
  5858 ;; Defined at:
  5859 ;;		line 152 in file "mcc_generated_files/eusart.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5873 ;;      Params:         0       0       0       0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0
  5875 ;;      Temps:          1       0       0       0       0       0       0       0
  5876 ;;      Totals:         1       0       0       0       0       0       0       0
  5877 ;;Total ram usage:        1 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_INTERRUPT_InterruptManager
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _EUSART_Transmit_ISR
  5888  02AE                     _EUSART_Transmit_ISR:	
  5889                           
  5890                           ;eusart.c: 156: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5894  02AE  3008               	movlw	8
  5895  02AF  0021               	movlb	1	; select bank1
  5896  02B0  0232               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
  5897  02B1  1803               	skipnc
  5898  02B2  2ACA               	goto	i1l287
  5899                           
  5900                           ;eusart.c: 157: {
  5901                           ;eusart.c: 158: TXREG = eusartTxBuffer[eusartTxTail++];
  5902  02B3  0020               	movlb	0	; select bank0
  5903  02B4  086E               	movf	_eusartTxTail,w
  5904  02B5  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5905  02B6  0086               	movwf	6
  5906  02B7  0187               	clrf	7
  5907  02B8  0801               	movf	1,w
  5908  02B9  0023               	movlb	3	; select bank3
  5909  02BA  009A               	movwf	26	;volatile
  5910  02BB  3001               	movlw	1
  5911  02BC  00F0               	movwf	??_EUSART_Transmit_ISR
  5912  02BD  0870               	movf	??_EUSART_Transmit_ISR,w
  5913  02BE  0020               	movlb	0	; select bank0
  5914  02BF  07EE               	addwf	_eusartTxTail,f	;volatile
  5915                           
  5916                           ;eusart.c: 159: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5917  02C0  3008               	movlw	8
  5918  02C1  026E               	subwf	_eusartTxTail,w	;volatile
  5919  02C2  1803               	btfsc	3,0
  5920                           
  5921                           ;eusart.c: 160: {
  5922                           ;eusart.c: 161: eusartTxTail = 0;
  5923  02C3  01EE               	clrf	_eusartTxTail	;volatile
  5924                           
  5925                           ;eusart.c: 162: }
  5926                           ;eusart.c: 163: eusartTxBufferRemaining++;
  5927  02C4  3001               	movlw	1
  5928  02C5  00F0               	movwf	??_EUSART_Transmit_ISR
  5929  02C6  0870               	movf	??_EUSART_Transmit_ISR,w
  5930  02C7  0021               	movlb	1	; select bank1
  5931  02C8  07B2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  5932                           
  5933                           ;eusart.c: 164: }
  5934  02C9  0008               	return
  5935  02CA                     i1l287:	
  5936                           
  5937                           ;eusart.c: 165: else
  5938                           ;eusart.c: 166: {
  5939                           ;eusart.c: 167: PIE1bits.TXIE = 0;
  5940  02CA  1211               	bcf	17,4	;volatile
  5941  02CB  0008               	return
  5942  02CC                     __end_of_EUSART_Transmit_ISR:	
  5943                           
  5944                           	psect	text35
  5945  0304                     __ptext35:	
  5946 ;; *************** function _EUSART_Receive_ISR *****************
  5947 ;; Defined at:
  5948 ;;		line 171 in file "mcc_generated_files/eusart.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      void 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5962 ;;      Params:         0       0       0       0       0       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0
  5964 ;;      Temps:          1       0       0       0       0       0       0       0
  5965 ;;      Totals:         1       0       0       0       0       0       0       0
  5966 ;;Total ram usage:        1 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_INTERRUPT_InterruptManager
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function _EUSART_Receive_ISR
  5977  0304                     _EUSART_Receive_ISR:	
  5978                           
  5979                           ;eusart.c: 174: if(1 == RCSTAbits.OERR)
  5980                           
  5981                           ;incstack = 0
  5982                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5983  0304  0023               	movlb	3	; select bank3
  5984  0305  1C9D               	btfss	29,1	;volatile
  5985  0306  2B09               	goto	i1l1906
  5986                           
  5987                           ;eusart.c: 175: {
  5988                           ;eusart.c: 178: RCSTAbits.CREN = 0;
  5989  0307  121D               	bcf	29,4	;volatile
  5990                           
  5991                           ;eusart.c: 179: RCSTAbits.CREN = 1;
  5992  0308  161D               	bsf	29,4	;volatile
  5993  0309                     i1l1906:	
  5994                           
  5995                           ;eusart.c: 180: }
  5996                           ;eusart.c: 183: eusartRxBuffer[eusartRxHead++] = RCREG;
  5997  0309  0819               	movf	25,w	;volatile
  5998  030A  00F0               	movwf	??_EUSART_Receive_ISR
  5999  030B  0020               	movlb	0	; select bank0
  6000  030C  086D               	movf	_eusartRxHead,w
  6001  030D  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6002  030E  0086               	movwf	6
  6003  030F  0187               	clrf	7
  6004  0310  0870               	movf	??_EUSART_Receive_ISR,w
  6005  0311  0081               	movwf	1
  6006  0312  3001               	movlw	1
  6007  0313  00F0               	movwf	??_EUSART_Receive_ISR
  6008  0314  0870               	movf	??_EUSART_Receive_ISR,w
  6009  0315  07ED               	addwf	_eusartRxHead,f	;volatile
  6010                           
  6011                           ;eusart.c: 184: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6012  0316  3008               	movlw	8
  6013  0317  026D               	subwf	_eusartRxHead,w	;volatile
  6014  0318  1803               	btfsc	3,0
  6015                           
  6016                           ;eusart.c: 185: {
  6017                           ;eusart.c: 186: eusartRxHead = 0;
  6018  0319  01ED               	clrf	_eusartRxHead	;volatile
  6019                           
  6020                           ;eusart.c: 187: }
  6021                           ;eusart.c: 188: eusartRxCount++;
  6022  031A  3001               	movlw	1
  6023  031B  00F0               	movwf	??_EUSART_Receive_ISR
  6024  031C  0870               	movf	??_EUSART_Receive_ISR,w
  6025  031D  07FB               	addwf	_eusartRxCount,f	;volatile
  6026  031E  0008               	return
  6027  031F                     __end_of_EUSART_Receive_ISR:	
  6028  007E                     btemp	set	126	;btemp
  6029  007E                     int$flags	set	126
  6030  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         85
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     76      79
    BANK1            80      3      22
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Verif_Erreur@buf	PTR unsigned char  size(1) Largest target is 64
		 -> init_B@buf(BANK0[64]), 


Critical Paths under _main in COMMON

    _main->_init_B
    _init_B->_delay_ms
    _Verif_Erreur->_delay_ms
    _TMR1_Reload->_TMR1_WriteTimer
    _Turn_On->_EUSART_Write
    _Set_Mode->_EUSART_Write
    _Set_Features->_EUSART_Write
    _Reboot->_EUSART_Write
    _Partiel_Reset->_EUSART_Write
    _initRTC->_sendI2C
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_init_B
    _init_B->_Verif_Erreur

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3480
                                             74 BANK0      2     2      0
                                              0 BANK1      3     3      0
                          _ReturnReg
                  _SYSTEM_Initialize
                           _delay_ms
                            _initI2C
                            _initRTC
                             _init_B
 ---------------------------------------------------------------------------------
 (1) _init_B                                              66    66      0    2626
                                              9 COMMON     1     1      0
                                              9 BANK0     65    65      0
                      _Partiel_Reset
                             _Reboot
                       _Set_Features
                           _Set_Mode
                            _Turn_On
                       _Verif_Erreur
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Verif_Erreur                                         9     7      2    1422
                                              0 BANK0      9     7      2
                        _EUSART_Read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     712
                                              4 COMMON     5     3      2
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Reload                                          0     0      0     189
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_WriteTimer                                      2     0      2     189
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Turn_On                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Set_Mode                                             0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Set_Features                                         0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Reboot                                               0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Partiel_Reset                                        0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initRTC                                              0     0      0      31
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _stopI2C                                              0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _startI2C                                             0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _sendI2C                                              1     1      0      31
                                              2 COMMON     1     1      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _waitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              3     3      0      71
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReturnReg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReturnReg
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _delay_ms
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _initI2C
   _initRTC
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _init_B
     _Partiel_Reset
       _EUSART_Write
     _Reboot
       _EUSART_Write
     _Set_Features
       _EUSART_Write
     _Set_Mode
       _EUSART_Write
     _Turn_On
       _EUSART_Write
     _Verif_Erreur
       _EUSART_Read
       _delay_ms
         _TMR1_Reload
           _TMR1_WriteTimer
         _TMR1_StartTimer
         _TMR1_StopTimer
     _delay_ms
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StartTimer
       _TMR1_StopTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      16       8       27.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 05 16:10:37 2018

                        __CFG_CP$OFF 0000                                   l96 025F  
                        __CFG_LVP$ON 0000                                  l413 03A4  
                                l501 0167                                  l431 039B  
                                l408 01B9                                  l409 01CB  
                                l425 03B4                                  l281 027A  
                                l419 03B7                                  l480 012A  
                                l483 0131                                  l492 014C  
                                l477 0123                                  l486 013E  
                                l495 0159                                  l489 0145  
                                l498 0160                                  _RA1 0061  
                                _RA2 0062                                  _RA5 0065  
                                _RC5 0075                                  _PR2 001B  
                    _timer1ReloadVal 00B0                      _TMR2_Initialize 03BF  
                    _PWM4_Initialize 03C7                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       ?_EUSART_Read 0070                                 l2122 0253  
                               l2202 00EC                                 l2124 026C  
                               l2220 0113                                 l2142 028D  
                               l2214 0102                                 l2128 0270  
                               l2208 00F9                                 l2146 02CD  
                               l2182 00B8                                 l2192 00CE  
                               l2098 0381                                 l2194 00D2  
                               l2484 0185              __end_of_PWM1_Initialize 03E7  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 u1375 025D  
                               u1475 00E9                                 u1575 01B7  
                               u1680 0049                                 u1585 01C9  
                               _TMR2 001A                                 _WPUA 020C  
                               _WPUB 020D                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 016D  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0022                        __CFG_MCLRE$ON 0000  
                    Verif_Erreur@buf 0028              __end_of_PWM2_Initialize 03DF  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 03F3                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      _TMR1_StartTimer 03F6  
                              _T1CON 0018                      __end_of_Turn_On 0392  
                              _T2CON 001C                                _LATB4 086C  
                              _LATB6 086E                                i1l231 001D  
                              i1l226 0015                                i1l287 02CA  
                              _RCREG 0199                                _RCSTA 019D  
                              _TMR1H 0017                                _TMR1L 0016  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TXREG 019A  
                              _TXSTA 019E                      __end_of_initI2C 01E1  
                    __end_of_initRTC 016D                       _WDT_Initialize 03FC  
                    __end_of_sendI2C 039E                                main@k 00B4  
                    __end_of_waitI2C 03BF              __end_of_PWM3_Initialize 03D7  
            __end_of_TMR1_Initialize 0377                      __end_of_stopI2C 03B7  
                              status 0003                                wtemp0 007E  
                    _TMR1_WriteTimer 0377                      __initialization 0024  
                        init_B@F4550 0120                         __end_of_main 01A8  
                     ??_EUSART_Write 0072              __end_of_PWM4_Initialize 03CF  
            __end_of_TMR2_Initialize 03C7                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 006A  
                   __end_of_Set_Mode 0215                     Verif_Erreur@size 0020  
                        init_B@error 0069               __end_of_WDT_Initialize 03FD  
                             _APFCON 011D                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _BORCON 0116                               _T1GCON 0019  
            TMR1_WriteTimer@timerVal 0072                     ?_PWM1_Initialize 0070  
                             i1l1906 0309                               _OSCCON 0099  
                             _TMR1IF 0088                               _SPBRGH 019C  
                             _SPBRGL 019B                               _TRISB4 046C  
                             _TRISB6 046E                     __end_of_delay_ms 026F  
                     __CFG_PWRTE$OFF 0000                               _Reboot 0351  
            __end_of_TMR1_StartTimer 03F9                         ?_TMR1_Reload 0070  
                     __CFG_STVREN$ON 0000                            ??_Turn_On 0074  
                _EUSART_Transmit_ISR 02AE                               _init_B 003D  
                   ?_PWM2_Initialize 0070                               main@Bt 00B3  
                          ??_initI2C 0072                            ??_initRTC 0073  
                 __size_of_ReturnReg 0003                            ??_sendI2C 0072  
                          ??_waitI2C 0072                      ?_WDT_Initialize 0070  
                      ?_Set_Features 0070                     __end_of_startI2C 03A7  
                          ??_stopI2C 0072              __end_of_TMR1_WriteTimer 0386  
                        sendI2C@data 0072                 ?_EUSART_Transmit_ISR 0070  
                   ?_TMR1_Initialize 0070                     ?_PWM3_Initialize 0070  
               __size_of_EUSART_Read 001C                    _SYSTEM_Initialize 0290  
             __size_of_Partiel_Reset 0018              __end_of__initialization 0039  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                     ?_TMR2_Initialize 0070  
                   ?_PWM4_Initialize 0070                       _OPTION_REGbits 0095  
                     ??_Set_Features 0074            __end_of_SYSTEM_Initialize 02AE  
              ??_EUSART_Transmit_ISR 0070                           __pbssBANK0 006C  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
               __end_of_EUSART_Write 0290          __size_of_EUSART_Receive_ISR 001B  
                  __end_of_ReturnReg 03FC                            ?_Set_Mode 0070  
                            ?_Reboot 0070                           __pmaintext 016D  
                   ?_TMR1_StartTimer 0070                           __pintentry 0004  
                            ?_init_B 0070                              _BAUDCON 019F  
                      _Partiel_Reset 0339              __size_of_TMR1_StopTimer 0003  
                      _eusartRxCount 007B                            ?_delay_ms 0074  
                            _PWM1DCH 0612                              _PWM1DCL 0611  
                            _PWM2DCH 0615                              _PWM2DCL 0614  
                            _PWM3DCH 0618                              _PWM3DCL 0617  
                            _PWM4DCH 061B                              _PWM1CON 0613  
                            _PWM4DCL 061A                              _PWM2CON 0616  
                            _PWM3CON 0619                              _PWM4CON 061C  
                            _SSP1ADD 0212                              _SSP1BUF 0211  
                   ?_TMR1_WriteTimer 0072                           ??_Set_Mode 0074  
                    __size_of_Reboot 0014                        ?_Verif_Erreur 0020  
                          ?_startI2C 0070                              _Turn_On 0386  
                     ?_Partiel_Reset 0070                 __size_of_TMR1_Reload 0008  
                    __size_of_init_B 0075                              __ptext1 003D  
                            __ptext2 00B2                              __ptext3 0249  
                            __ptext4 03F3                              __ptext5 03F6  
                            __ptext6 03A7                              __ptext7 0377  
                            __ptext8 02CC                              __ptext9 0386  
                            _initI2C 01A8                            _T1CONbits 0018  
                            _initRTC 011C                _OSCILLATOR_Initialize 03ED  
                          _T2CONbits 001C                              _sendI2C 0392  
                            _waitI2C 03B7             ??_PIN_MANAGER_Initialize 0072  
                         ??_delay_ms 0076                              _stopI2C 03AF  
         __size_of_SYSTEM_Initialize 001E                              clrloop0 03E8  
               end_of_initialization 0039                    _EUSART_Initialize 02E8  
                 ?_EUSART_Initialize 0070                 __end_of_Set_Features 0249  
                     ??_Verif_Erreur 0022                            _RCSTAbits 019D  
                         ??_startI2C 0072                  ??_EUSART_Initialize 0072  
                   ??_WDT_Initialize 0072                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0021            __end_of_EUSART_Initialize 0304  
           __size_of_PWM1_Initialize 0008                       __end_of_Reboot 0365  
                    ??_Partiel_Reset 0074                         _EUSART_Write 026F  
                     _TMR1_StopTimer 03F3                       __end_of_init_B 00B2  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 0024  
           __size_of_PWM2_Initialize 0008      __size_of_PIN_MANAGER_Initialize 001A  
                      ??_EUSART_Read 0072                             ??_Reboot 0074  
           __size_of_PWM3_Initialize 0008             __size_of_TMR1_Initialize 0012  
                  __size_of_Set_Mode 0034                            _ReturnReg 03F9  
             __end_of_TMR1_StopTimer 03F6                             ??_init_B 0079  
        __end_of_EUSART_Transmit_ISR 02CC                          __pbssCOMMON 007A  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00B3             __size_of_PWM4_Initialize 0008  
           __size_of_TMR2_Initialize 0008                 __end_of_Verif_Erreur 011C  
                  __size_of_delay_ms 0026           __end_of_EUSART_Receive_ISR 031F  
         __size_of_EUSART_Initialize 001C                __size_of_Set_Features 0034  
                __end_of_EUSART_Read 02E8                            __pnvBANK1 00B0  
             _PIN_MANAGER_Initialize 031F                 EUSART_Read@readValue 0073  
                         ?_ReturnReg 0070                             ?_Turn_On 0070  
                       _eusartRxHead 006D                      ?_TMR1_StopTimer 0070  
                       _eusartTxHead 007A                         _eusartRxTail 006C  
                       _eusartTxTail 006E                    ??_PWM1_Initialize 0072  
                  __size_of_startI2C 0009         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 00B2                             ?_initI2C 0070  
                           ?_initRTC 0070             __size_of_TMR1_StartTimer 0003  
                           ?_sendI2C 0070                             ?_waitI2C 0070  
                       _Set_Features 0215                             ?_stopI2C 0070  
                     _eusartRxBuffer 00A0                    ??_PWM2_Initialize 0072  
                     _eusartTxBuffer 00A8                             _LATCbits 010E  
                          delay_ms@x 0077                            clear_ram0 03E7  
                           _PIE1bits 0091             __size_of_TMR1_WriteTimer 000F  
__size_of_INTERRUPT_InterruptManager 001E                             _PIR1bits 0011  
                      ??_TMR1_Reload 0074                             _SSP1CON1 0215  
                           _SSP1CON2 0216                             _SSP1STAT 0214  
                  ??_TMR1_Initialize 0072                    ??_PWM3_Initialize 0072  
                      Verif_Erreur@i 0024                        Verif_Erreur@j 0026  
                        _EUSART_Read 02CC                         delay_ms@msec 0074  
                  ??_TMR2_Initialize 0072                    ??_PWM4_Initialize 0072  
                          init_B@buf 0029                             _Set_Mode 01E1  
                        ??_ReturnReg 0072              ??_OSCILLATOR_Initialize 0072  
                   __size_of_Turn_On 000C                  __end_of_TMR1_Reload 03AF  
              __size_of_Verif_Erreur 006A                     __size_of_initI2C 0039  
                   __size_of_initRTC 0051                     __size_of_sendI2C 000C  
                           _delay_ms 0249                     __size_of_waitI2C 0008  
                           __ptext10 01E1                             __ptext11 0215  
                           __ptext20 01A8                             __ptext12 0351  
                           __ptext21 0290                             __ptext13 0339  
                         _T1GCONbits 0019                             __ptext30 03ED  
                           __ptext22 03FC                             __ptext14 026F  
                           __ptext31 02E8                             __ptext23 03BF  
                           __ptext15 011C                             __ptext32 03F9  
                           __ptext24 0365                             __ptext16 03AF  
                           __ptext25 03C7                             __ptext17 039E  
                           __ptext34 02AE                             __ptext26 03CF  
                           __ptext18 0392                             __ptext35 0304  
                           __ptext27 03D7                             __ptext19 03B7  
                           __ptext28 03DF                             __ptext29 031F  
                       _SSP1CON2bits 0216                     __size_of_stopI2C 0008  
                  ??_TMR1_StartTimer 0072                        __size_of_main 003B  
                           int$flags 007E                             _startI2C 039E  
                       _Verif_Erreur 00B2   __end_of_INTERRUPT_InterruptManager 0022  
         _INTERRUPT_InterruptManager 0004                __end_of_Partiel_Reset 0351  
                  ??_TMR1_WriteTimer 0074                             initI2C@i 0073  
                         _INTCONbits 000B              __size_of_WDT_Initialize 0001  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                      _PWM1_Initialize 03DF  
                   ??_TMR1_StopTimer 0072                          _TMR1_Reload 03A7  
                 _EUSART_Receive_ISR 0304                           _OPTION_REG 0095  
                ?_EUSART_Receive_ISR 0070                      _PWM2_Initialize 03D7  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001E  
     __end_of_PIN_MANAGER_Initialize 0339                 ??_EUSART_Receive_ISR 0070  
                    _TMR1_Initialize 0365                      _PWM3_Initialize 03CF  
