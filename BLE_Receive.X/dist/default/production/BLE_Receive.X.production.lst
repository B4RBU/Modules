

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul  5 15:30:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.45
    54                           ; Generated 16/11/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1509 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0391                     	;# 
   182  0392                     	;# 
   183  0393                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  0498                     	;# 
   188  0498                     	;# 
   189  0499                     	;# 
   190  049A                     	;# 
   191  049B                     	;# 
   192  049B                     	;# 
   193  049C                     	;# 
   194  049D                     	;# 
   195  049E                     	;# 
   196  049F                     	;# 
   197  0611                     	;# 
   198  0612                     	;# 
   199  0613                     	;# 
   200  0613                     	;# 
   201  0614                     	;# 
   202  0615                     	;# 
   203  0616                     	;# 
   204  0616                     	;# 
   205  0617                     	;# 
   206  0618                     	;# 
   207  0619                     	;# 
   208  0619                     	;# 
   209  061A                     	;# 
   210  061B                     	;# 
   211  061C                     	;# 
   212  061C                     	;# 
   213  0691                     	;# 
   214  0692                     	;# 
   215  0693                     	;# 
   216  0694                     	;# 
   217  0695                     	;# 
   218  0F0F                     	;# 
   219  0F10                     	;# 
   220  0F11                     	;# 
   221  0F12                     	;# 
   222  0F13                     	;# 
   223  0F14                     	;# 
   224  0F15                     	;# 
   225  0F16                     	;# 
   226  0F17                     	;# 
   227  0F18                     	;# 
   228  0F19                     	;# 
   229  0F1A                     	;# 
   230  0F1B                     	;# 
   231  0F1C                     	;# 
   232  0F1D                     	;# 
   233  0F1E                     	;# 
   234  0F1F                     	;# 
   235  0F20                     	;# 
   236  0F21                     	;# 
   237  0F22                     	;# 
   238  0F23                     	;# 
   239  0F24                     	;# 
   240  0F25                     	;# 
   241  0F26                     	;# 
   242  0F27                     	;# 
   243  0F28                     	;# 
   244  0F29                     	;# 
   245  0F2A                     	;# 
   246  0F2B                     	;# 
   247  0F2C                     	;# 
   248  0F2D                     	;# 
   249  0F2E                     	;# 
   250  0F2F                     	;# 
   251  0F8C                     	;# 
   252  0F8D                     	;# 
   253  0F91                     	;# 
   254  0F95                     	;# 
   255  0F96                     	;# 
   256  0F97                     	;# 
   257  0F9C                     	;# 
   258  0F9D                     	;# 
   259  0F9E                     	;# 
   260  0FE3                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  000E                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0093                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  0111                     	;# 
   320  0112                     	;# 
   321  0113                     	;# 
   322  0114                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  018E                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0194                     	;# 
   338  0195                     	;# 
   339  0196                     	;# 
   340  0197                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020C                     	;# 
   350  020D                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0391                     	;# 
   367  0392                     	;# 
   368  0393                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  0498                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049B                     	;# 
   378  049C                     	;# 
   379  049D                     	;# 
   380  049E                     	;# 
   381  049F                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0615                     	;# 
   388  0616                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0F0F                     	;# 
   404  0F10                     	;# 
   405  0F11                     	;# 
   406  0F12                     	;# 
   407  0F13                     	;# 
   408  0F14                     	;# 
   409  0F15                     	;# 
   410  0F16                     	;# 
   411  0F17                     	;# 
   412  0F18                     	;# 
   413  0F19                     	;# 
   414  0F1A                     	;# 
   415  0F1B                     	;# 
   416  0F1C                     	;# 
   417  0F1D                     	;# 
   418  0F1E                     	;# 
   419  0F1F                     	;# 
   420  0F20                     	;# 
   421  0F21                     	;# 
   422  0F22                     	;# 
   423  0F23                     	;# 
   424  0F24                     	;# 
   425  0F25                     	;# 
   426  0F26                     	;# 
   427  0F27                     	;# 
   428  0F28                     	;# 
   429  0F29                     	;# 
   430  0F2A                     	;# 
   431  0F2B                     	;# 
   432  0F2C                     	;# 
   433  0F2D                     	;# 
   434  0F2E                     	;# 
   435  0F2F                     	;# 
   436  0F8C                     	;# 
   437  0F8D                     	;# 
   438  0F91                     	;# 
   439  0F95                     	;# 
   440  0F96                     	;# 
   441  0F97                     	;# 
   442  0F9C                     	;# 
   443  0F9D                     	;# 
   444  0F9E                     	;# 
   445  0FE3                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0095                     	;# 
   491  0096                     	;# 
   492  0097                     	;# 
   493  0099                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  009F                     	;# 
   501  010C                     	;# 
   502  010D                     	;# 
   503  010E                     	;# 
   504  0111                     	;# 
   505  0112                     	;# 
   506  0113                     	;# 
   507  0114                     	;# 
   508  0115                     	;# 
   509  0116                     	;# 
   510  0117                     	;# 
   511  0118                     	;# 
   512  0119                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0197                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019E                     	;# 
   533  019F                     	;# 
   534  020C                     	;# 
   535  020D                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  0212                     	;# 
   539  0212                     	;# 
   540  0213                     	;# 
   541  0213                     	;# 
   542  0214                     	;# 
   543  0214                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  0394                     	;# 
   555  0395                     	;# 
   556  0396                     	;# 
   557  0498                     	;# 
   558  0498                     	;# 
   559  0499                     	;# 
   560  049A                     	;# 
   561  049B                     	;# 
   562  049B                     	;# 
   563  049C                     	;# 
   564  049D                     	;# 
   565  049E                     	;# 
   566  049F                     	;# 
   567  0611                     	;# 
   568  0612                     	;# 
   569  0613                     	;# 
   570  0613                     	;# 
   571  0614                     	;# 
   572  0615                     	;# 
   573  0616                     	;# 
   574  0616                     	;# 
   575  0617                     	;# 
   576  0618                     	;# 
   577  0619                     	;# 
   578  0619                     	;# 
   579  061A                     	;# 
   580  061B                     	;# 
   581  061C                     	;# 
   582  061C                     	;# 
   583  0691                     	;# 
   584  0692                     	;# 
   585  0693                     	;# 
   586  0694                     	;# 
   587  0695                     	;# 
   588  0F0F                     	;# 
   589  0F10                     	;# 
   590  0F11                     	;# 
   591  0F12                     	;# 
   592  0F13                     	;# 
   593  0F14                     	;# 
   594  0F15                     	;# 
   595  0F16                     	;# 
   596  0F17                     	;# 
   597  0F18                     	;# 
   598  0F19                     	;# 
   599  0F1A                     	;# 
   600  0F1B                     	;# 
   601  0F1C                     	;# 
   602  0F1D                     	;# 
   603  0F1E                     	;# 
   604  0F1F                     	;# 
   605  0F20                     	;# 
   606  0F21                     	;# 
   607  0F22                     	;# 
   608  0F23                     	;# 
   609  0F24                     	;# 
   610  0F25                     	;# 
   611  0F26                     	;# 
   612  0F27                     	;# 
   613  0F28                     	;# 
   614  0F29                     	;# 
   615  0F2A                     	;# 
   616  0F2B                     	;# 
   617  0F2C                     	;# 
   618  0F2D                     	;# 
   619  0F2E                     	;# 
   620  0F2F                     	;# 
   621  0F8C                     	;# 
   622  0F8D                     	;# 
   623  0F91                     	;# 
   624  0F95                     	;# 
   625  0F96                     	;# 
   626  0F97                     	;# 
   627  0F9C                     	;# 
   628  0F9D                     	;# 
   629  0F9E                     	;# 
   630  0FE3                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  009F                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0194                     	;# 
   708  0195                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0391                     	;# 
   737  0392                     	;# 
   738  0393                     	;# 
   739  0394                     	;# 
   740  0395                     	;# 
   741  0396                     	;# 
   742  0498                     	;# 
   743  0498                     	;# 
   744  0499                     	;# 
   745  049A                     	;# 
   746  049B                     	;# 
   747  049B                     	;# 
   748  049C                     	;# 
   749  049D                     	;# 
   750  049E                     	;# 
   751  049F                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0615                     	;# 
   758  0616                     	;# 
   759  0616                     	;# 
   760  0617                     	;# 
   761  0618                     	;# 
   762  0619                     	;# 
   763  0619                     	;# 
   764  061A                     	;# 
   765  061B                     	;# 
   766  061C                     	;# 
   767  061C                     	;# 
   768  0691                     	;# 
   769  0692                     	;# 
   770  0693                     	;# 
   771  0694                     	;# 
   772  0695                     	;# 
   773  0F0F                     	;# 
   774  0F10                     	;# 
   775  0F11                     	;# 
   776  0F12                     	;# 
   777  0F13                     	;# 
   778  0F14                     	;# 
   779  0F15                     	;# 
   780  0F16                     	;# 
   781  0F17                     	;# 
   782  0F18                     	;# 
   783  0F19                     	;# 
   784  0F1A                     	;# 
   785  0F1B                     	;# 
   786  0F1C                     	;# 
   787  0F1D                     	;# 
   788  0F1E                     	;# 
   789  0F1F                     	;# 
   790  0F20                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F26                     	;# 
   797  0F27                     	;# 
   798  0F28                     	;# 
   799  0F29                     	;# 
   800  0F2A                     	;# 
   801  0F2B                     	;# 
   802  0F2C                     	;# 
   803  0F2D                     	;# 
   804  0F2E                     	;# 
   805  0F2F                     	;# 
   806  0F8C                     	;# 
   807  0F8D                     	;# 
   808  0F91                     	;# 
   809  0F95                     	;# 
   810  0F96                     	;# 
   811  0F97                     	;# 
   812  0F9C                     	;# 
   813  0F9D                     	;# 
   814  0F9E                     	;# 
   815  0FE3                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  008C                     	;# 
   855  008D                     	;# 
   856  008E                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0093                     	;# 
   860  0095                     	;# 
   861  0096                     	;# 
   862  0097                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  0111                     	;# 
   875  0112                     	;# 
   876  0113                     	;# 
   877  0114                     	;# 
   878  0115                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  0118                     	;# 
   882  0119                     	;# 
   883  011D                     	;# 
   884  018C                     	;# 
   885  018D                     	;# 
   886  018E                     	;# 
   887  0191                     	;# 
   888  0191                     	;# 
   889  0192                     	;# 
   890  0193                     	;# 
   891  0193                     	;# 
   892  0194                     	;# 
   893  0195                     	;# 
   894  0196                     	;# 
   895  0197                     	;# 
   896  0199                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020D                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0391                     	;# 
   922  0392                     	;# 
   923  0393                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0498                     	;# 
   928  0498                     	;# 
   929  0499                     	;# 
   930  049A                     	;# 
   931  049B                     	;# 
   932  049B                     	;# 
   933  049C                     	;# 
   934  049D                     	;# 
   935  049E                     	;# 
   936  049F                     	;# 
   937  0611                     	;# 
   938  0612                     	;# 
   939  0613                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0615                     	;# 
   943  0616                     	;# 
   944  0616                     	;# 
   945  0617                     	;# 
   946  0618                     	;# 
   947  0619                     	;# 
   948  0619                     	;# 
   949  061A                     	;# 
   950  061B                     	;# 
   951  061C                     	;# 
   952  061C                     	;# 
   953  0691                     	;# 
   954  0692                     	;# 
   955  0693                     	;# 
   956  0694                     	;# 
   957  0695                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F8C                     	;# 
   992  0F8D                     	;# 
   993  0F91                     	;# 
   994  0F95                     	;# 
   995  0F96                     	;# 
   996  0F97                     	;# 
   997  0F9C                     	;# 
   998  0F9D                     	;# 
   999  0F9E                     	;# 
  1000  0FE3                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  0000                     	;# 
  1013  0001                     	;# 
  1014  0002                     	;# 
  1015  0003                     	;# 
  1016  0004                     	;# 
  1017  0005                     	;# 
  1018  0006                     	;# 
  1019  0007                     	;# 
  1020  0008                     	;# 
  1021  0009                     	;# 
  1022  000A                     	;# 
  1023  000B                     	;# 
  1024  000C                     	;# 
  1025  000D                     	;# 
  1026  000E                     	;# 
  1027  0011                     	;# 
  1028  0012                     	;# 
  1029  0013                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0097                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009E                     	;# 
  1055  009F                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011D                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  0191                     	;# 
  1073  0191                     	;# 
  1074  0192                     	;# 
  1075  0193                     	;# 
  1076  0193                     	;# 
  1077  0194                     	;# 
  1078  0195                     	;# 
  1079  0196                     	;# 
  1080  0197                     	;# 
  1081  0199                     	;# 
  1082  019A                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019E                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  0211                     	;# 
  1092  0211                     	;# 
  1093  0212                     	;# 
  1094  0212                     	;# 
  1095  0213                     	;# 
  1096  0213                     	;# 
  1097  0214                     	;# 
  1098  0214                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0391                     	;# 
  1107  0392                     	;# 
  1108  0393                     	;# 
  1109  0394                     	;# 
  1110  0395                     	;# 
  1111  0396                     	;# 
  1112  0498                     	;# 
  1113  0498                     	;# 
  1114  0499                     	;# 
  1115  049A                     	;# 
  1116  049B                     	;# 
  1117  049B                     	;# 
  1118  049C                     	;# 
  1119  049D                     	;# 
  1120  049E                     	;# 
  1121  049F                     	;# 
  1122  0611                     	;# 
  1123  0612                     	;# 
  1124  0613                     	;# 
  1125  0613                     	;# 
  1126  0614                     	;# 
  1127  0615                     	;# 
  1128  0616                     	;# 
  1129  0616                     	;# 
  1130  0617                     	;# 
  1131  0618                     	;# 
  1132  0619                     	;# 
  1133  0619                     	;# 
  1134  061A                     	;# 
  1135  061B                     	;# 
  1136  061C                     	;# 
  1137  061C                     	;# 
  1138  0691                     	;# 
  1139  0692                     	;# 
  1140  0693                     	;# 
  1141  0694                     	;# 
  1142  0695                     	;# 
  1143  0F0F                     	;# 
  1144  0F10                     	;# 
  1145  0F11                     	;# 
  1146  0F12                     	;# 
  1147  0F13                     	;# 
  1148  0F14                     	;# 
  1149  0F15                     	;# 
  1150  0F16                     	;# 
  1151  0F17                     	;# 
  1152  0F18                     	;# 
  1153  0F19                     	;# 
  1154  0F1A                     	;# 
  1155  0F1B                     	;# 
  1156  0F1C                     	;# 
  1157  0F1D                     	;# 
  1158  0F1E                     	;# 
  1159  0F1F                     	;# 
  1160  0F20                     	;# 
  1161  0F21                     	;# 
  1162  0F22                     	;# 
  1163  0F23                     	;# 
  1164  0F24                     	;# 
  1165  0F25                     	;# 
  1166  0F26                     	;# 
  1167  0F27                     	;# 
  1168  0F28                     	;# 
  1169  0F29                     	;# 
  1170  0F2A                     	;# 
  1171  0F2B                     	;# 
  1172  0F2C                     	;# 
  1173  0F2D                     	;# 
  1174  0F2E                     	;# 
  1175  0F2F                     	;# 
  1176  0F8C                     	;# 
  1177  0F8D                     	;# 
  1178  0F91                     	;# 
  1179  0F95                     	;# 
  1180  0F96                     	;# 
  1181  0F97                     	;# 
  1182  0F9C                     	;# 
  1183  0F9D                     	;# 
  1184  0F9E                     	;# 
  1185  0FE3                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197  0000                     	;# 
  1198  0001                     	;# 
  1199  0002                     	;# 
  1200  0003                     	;# 
  1201  0004                     	;# 
  1202  0005                     	;# 
  1203  0006                     	;# 
  1204  0007                     	;# 
  1205  0008                     	;# 
  1206  0009                     	;# 
  1207  000A                     	;# 
  1208  000B                     	;# 
  1209  000C                     	;# 
  1210  000D                     	;# 
  1211  000E                     	;# 
  1212  0011                     	;# 
  1213  0012                     	;# 
  1214  0013                     	;# 
  1215  0015                     	;# 
  1216  0016                     	;# 
  1217  0016                     	;# 
  1218  0017                     	;# 
  1219  0018                     	;# 
  1220  0019                     	;# 
  1221  001A                     	;# 
  1222  001B                     	;# 
  1223  001C                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  0091                     	;# 
  1228  0092                     	;# 
  1229  0093                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0099                     	;# 
  1234  009A                     	;# 
  1235  009B                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  009F                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010E                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  011D                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  018E                     	;# 
  1257  0191                     	;# 
  1258  0191                     	;# 
  1259  0192                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0197                     	;# 
  1266  0199                     	;# 
  1267  019A                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  020C                     	;# 
  1275  020D                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0213                     	;# 
  1282  0214                     	;# 
  1283  0214                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  0391                     	;# 
  1292  0392                     	;# 
  1293  0393                     	;# 
  1294  0394                     	;# 
  1295  0395                     	;# 
  1296  0396                     	;# 
  1297  0498                     	;# 
  1298  0498                     	;# 
  1299  0499                     	;# 
  1300  049A                     	;# 
  1301  049B                     	;# 
  1302  049B                     	;# 
  1303  049C                     	;# 
  1304  049D                     	;# 
  1305  049E                     	;# 
  1306  049F                     	;# 
  1307  0611                     	;# 
  1308  0612                     	;# 
  1309  0613                     	;# 
  1310  0613                     	;# 
  1311  0614                     	;# 
  1312  0615                     	;# 
  1313  0616                     	;# 
  1314  0616                     	;# 
  1315  0617                     	;# 
  1316  0618                     	;# 
  1317  0619                     	;# 
  1318  0619                     	;# 
  1319  061A                     	;# 
  1320  061B                     	;# 
  1321  061C                     	;# 
  1322  061C                     	;# 
  1323  0691                     	;# 
  1324  0692                     	;# 
  1325  0693                     	;# 
  1326  0694                     	;# 
  1327  0695                     	;# 
  1328  0F0F                     	;# 
  1329  0F10                     	;# 
  1330  0F11                     	;# 
  1331  0F12                     	;# 
  1332  0F13                     	;# 
  1333  0F14                     	;# 
  1334  0F15                     	;# 
  1335  0F16                     	;# 
  1336  0F17                     	;# 
  1337  0F18                     	;# 
  1338  0F19                     	;# 
  1339  0F1A                     	;# 
  1340  0F1B                     	;# 
  1341  0F1C                     	;# 
  1342  0F1D                     	;# 
  1343  0F1E                     	;# 
  1344  0F1F                     	;# 
  1345  0F20                     	;# 
  1346  0F21                     	;# 
  1347  0F22                     	;# 
  1348  0F23                     	;# 
  1349  0F24                     	;# 
  1350  0F25                     	;# 
  1351  0F26                     	;# 
  1352  0F27                     	;# 
  1353  0F28                     	;# 
  1354  0F29                     	;# 
  1355  0F2A                     	;# 
  1356  0F2B                     	;# 
  1357  0F2C                     	;# 
  1358  0F2D                     	;# 
  1359  0F2E                     	;# 
  1360  0F2F                     	;# 
  1361  0F8C                     	;# 
  1362  0F8D                     	;# 
  1363  0F91                     	;# 
  1364  0F95                     	;# 
  1365  0F96                     	;# 
  1366  0F97                     	;# 
  1367  0F9C                     	;# 
  1368  0F9D                     	;# 
  1369  0F9E                     	;# 
  1370  0FE3                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  000E                     	;# 
  1397  0011                     	;# 
  1398  0012                     	;# 
  1399  0013                     	;# 
  1400  0015                     	;# 
  1401  0016                     	;# 
  1402  0016                     	;# 
  1403  0017                     	;# 
  1404  0018                     	;# 
  1405  0019                     	;# 
  1406  001A                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  008C                     	;# 
  1410  008D                     	;# 
  1411  008E                     	;# 
  1412  0091                     	;# 
  1413  0092                     	;# 
  1414  0093                     	;# 
  1415  0095                     	;# 
  1416  0096                     	;# 
  1417  0097                     	;# 
  1418  0099                     	;# 
  1419  009A                     	;# 
  1420  009B                     	;# 
  1421  009B                     	;# 
  1422  009C                     	;# 
  1423  009D                     	;# 
  1424  009E                     	;# 
  1425  009F                     	;# 
  1426  010C                     	;# 
  1427  010D                     	;# 
  1428  010E                     	;# 
  1429  0111                     	;# 
  1430  0112                     	;# 
  1431  0113                     	;# 
  1432  0114                     	;# 
  1433  0115                     	;# 
  1434  0116                     	;# 
  1435  0117                     	;# 
  1436  0118                     	;# 
  1437  0119                     	;# 
  1438  011D                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  018E                     	;# 
  1442  0191                     	;# 
  1443  0191                     	;# 
  1444  0192                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0197                     	;# 
  1451  0199                     	;# 
  1452  019A                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019C                     	;# 
  1456  019D                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  020C                     	;# 
  1460  020D                     	;# 
  1461  0211                     	;# 
  1462  0211                     	;# 
  1463  0212                     	;# 
  1464  0212                     	;# 
  1465  0213                     	;# 
  1466  0213                     	;# 
  1467  0214                     	;# 
  1468  0214                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0216                     	;# 
  1473  0216                     	;# 
  1474  0217                     	;# 
  1475  0217                     	;# 
  1476  0391                     	;# 
  1477  0392                     	;# 
  1478  0393                     	;# 
  1479  0394                     	;# 
  1480  0395                     	;# 
  1481  0396                     	;# 
  1482  0498                     	;# 
  1483  0498                     	;# 
  1484  0499                     	;# 
  1485  049A                     	;# 
  1486  049B                     	;# 
  1487  049B                     	;# 
  1488  049C                     	;# 
  1489  049D                     	;# 
  1490  049E                     	;# 
  1491  049F                     	;# 
  1492  0611                     	;# 
  1493  0612                     	;# 
  1494  0613                     	;# 
  1495  0613                     	;# 
  1496  0614                     	;# 
  1497  0615                     	;# 
  1498  0616                     	;# 
  1499  0616                     	;# 
  1500  0617                     	;# 
  1501  0618                     	;# 
  1502  0619                     	;# 
  1503  0619                     	;# 
  1504  061A                     	;# 
  1505  061B                     	;# 
  1506  061C                     	;# 
  1507  061C                     	;# 
  1508  0691                     	;# 
  1509  0692                     	;# 
  1510  0693                     	;# 
  1511  0694                     	;# 
  1512  0695                     	;# 
  1513  0F0F                     	;# 
  1514  0F10                     	;# 
  1515  0F11                     	;# 
  1516  0F12                     	;# 
  1517  0F13                     	;# 
  1518  0F14                     	;# 
  1519  0F15                     	;# 
  1520  0F16                     	;# 
  1521  0F17                     	;# 
  1522  0F18                     	;# 
  1523  0F19                     	;# 
  1524  0F1A                     	;# 
  1525  0F1B                     	;# 
  1526  0F1C                     	;# 
  1527  0F1D                     	;# 
  1528  0F1E                     	;# 
  1529  0F1F                     	;# 
  1530  0F20                     	;# 
  1531  0F21                     	;# 
  1532  0F22                     	;# 
  1533  0F23                     	;# 
  1534  0F24                     	;# 
  1535  0F25                     	;# 
  1536  0F26                     	;# 
  1537  0F27                     	;# 
  1538  0F28                     	;# 
  1539  0F29                     	;# 
  1540  0F2A                     	;# 
  1541  0F2B                     	;# 
  1542  0F2C                     	;# 
  1543  0F2D                     	;# 
  1544  0F2E                     	;# 
  1545  0F2F                     	;# 
  1546  0F8C                     	;# 
  1547  0F8D                     	;# 
  1548  0F91                     	;# 
  1549  0F95                     	;# 
  1550  0F96                     	;# 
  1551  0F97                     	;# 
  1552  0F9C                     	;# 
  1553  0F9D                     	;# 
  1554  0F9E                     	;# 
  1555  0FE3                     	;# 
  1556  0FE4                     	;# 
  1557  0FE5                     	;# 
  1558  0FE6                     	;# 
  1559  0FE7                     	;# 
  1560  0FE8                     	;# 
  1561  0FE9                     	;# 
  1562  0FEA                     	;# 
  1563  0FEB                     	;# 
  1564  0FED                     	;# 
  1565  0FEE                     	;# 
  1566  0FEF                     	;# 
  1567  0000                     	;# 
  1568  0001                     	;# 
  1569  0002                     	;# 
  1570  0003                     	;# 
  1571  0004                     	;# 
  1572  0005                     	;# 
  1573  0006                     	;# 
  1574  0007                     	;# 
  1575  0008                     	;# 
  1576  0009                     	;# 
  1577  000A                     	;# 
  1578  000B                     	;# 
  1579  000C                     	;# 
  1580  000D                     	;# 
  1581  000E                     	;# 
  1582  0011                     	;# 
  1583  0012                     	;# 
  1584  0013                     	;# 
  1585  0015                     	;# 
  1586  0016                     	;# 
  1587  0016                     	;# 
  1588  0017                     	;# 
  1589  0018                     	;# 
  1590  0019                     	;# 
  1591  001A                     	;# 
  1592  001B                     	;# 
  1593  001C                     	;# 
  1594  008C                     	;# 
  1595  008D                     	;# 
  1596  008E                     	;# 
  1597  0091                     	;# 
  1598  0092                     	;# 
  1599  0093                     	;# 
  1600  0095                     	;# 
  1601  0096                     	;# 
  1602  0097                     	;# 
  1603  0099                     	;# 
  1604  009A                     	;# 
  1605  009B                     	;# 
  1606  009B                     	;# 
  1607  009C                     	;# 
  1608  009D                     	;# 
  1609  009E                     	;# 
  1610  009F                     	;# 
  1611  010C                     	;# 
  1612  010D                     	;# 
  1613  010E                     	;# 
  1614  0111                     	;# 
  1615  0112                     	;# 
  1616  0113                     	;# 
  1617  0114                     	;# 
  1618  0115                     	;# 
  1619  0116                     	;# 
  1620  0117                     	;# 
  1621  0118                     	;# 
  1622  0119                     	;# 
  1623  011D                     	;# 
  1624  018C                     	;# 
  1625  018D                     	;# 
  1626  018E                     	;# 
  1627  0191                     	;# 
  1628  0191                     	;# 
  1629  0192                     	;# 
  1630  0193                     	;# 
  1631  0193                     	;# 
  1632  0194                     	;# 
  1633  0195                     	;# 
  1634  0196                     	;# 
  1635  0197                     	;# 
  1636  0199                     	;# 
  1637  019A                     	;# 
  1638  019B                     	;# 
  1639  019B                     	;# 
  1640  019C                     	;# 
  1641  019D                     	;# 
  1642  019E                     	;# 
  1643  019F                     	;# 
  1644  020C                     	;# 
  1645  020D                     	;# 
  1646  0211                     	;# 
  1647  0211                     	;# 
  1648  0212                     	;# 
  1649  0212                     	;# 
  1650  0213                     	;# 
  1651  0213                     	;# 
  1652  0214                     	;# 
  1653  0214                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0215                     	;# 
  1657  0216                     	;# 
  1658  0216                     	;# 
  1659  0217                     	;# 
  1660  0217                     	;# 
  1661  0391                     	;# 
  1662  0392                     	;# 
  1663  0393                     	;# 
  1664  0394                     	;# 
  1665  0395                     	;# 
  1666  0396                     	;# 
  1667  0498                     	;# 
  1668  0498                     	;# 
  1669  0499                     	;# 
  1670  049A                     	;# 
  1671  049B                     	;# 
  1672  049B                     	;# 
  1673  049C                     	;# 
  1674  049D                     	;# 
  1675  049E                     	;# 
  1676  049F                     	;# 
  1677  0611                     	;# 
  1678  0612                     	;# 
  1679  0613                     	;# 
  1680  0613                     	;# 
  1681  0614                     	;# 
  1682  0615                     	;# 
  1683  0616                     	;# 
  1684  0616                     	;# 
  1685  0617                     	;# 
  1686  0618                     	;# 
  1687  0619                     	;# 
  1688  0619                     	;# 
  1689  061A                     	;# 
  1690  061B                     	;# 
  1691  061C                     	;# 
  1692  061C                     	;# 
  1693  0691                     	;# 
  1694  0692                     	;# 
  1695  0693                     	;# 
  1696  0694                     	;# 
  1697  0695                     	;# 
  1698  0F0F                     	;# 
  1699  0F10                     	;# 
  1700  0F11                     	;# 
  1701  0F12                     	;# 
  1702  0F13                     	;# 
  1703  0F14                     	;# 
  1704  0F15                     	;# 
  1705  0F16                     	;# 
  1706  0F17                     	;# 
  1707  0F18                     	;# 
  1708  0F19                     	;# 
  1709  0F1A                     	;# 
  1710  0F1B                     	;# 
  1711  0F1C                     	;# 
  1712  0F1D                     	;# 
  1713  0F1E                     	;# 
  1714  0F1F                     	;# 
  1715  0F20                     	;# 
  1716  0F21                     	;# 
  1717  0F22                     	;# 
  1718  0F23                     	;# 
  1719  0F24                     	;# 
  1720  0F25                     	;# 
  1721  0F26                     	;# 
  1722  0F27                     	;# 
  1723  0F28                     	;# 
  1724  0F29                     	;# 
  1725  0F2A                     	;# 
  1726  0F2B                     	;# 
  1727  0F2C                     	;# 
  1728  0F2D                     	;# 
  1729  0F2E                     	;# 
  1730  0F2F                     	;# 
  1731  0F8C                     	;# 
  1732  0F8D                     	;# 
  1733  0F91                     	;# 
  1734  0F95                     	;# 
  1735  0F96                     	;# 
  1736  0F97                     	;# 
  1737  0F9C                     	;# 
  1738  0F9D                     	;# 
  1739  0F9E                     	;# 
  1740  0FE3                     	;# 
  1741  0FE4                     	;# 
  1742  0FE5                     	;# 
  1743  0FE6                     	;# 
  1744  0FE7                     	;# 
  1745  0FE8                     	;# 
  1746  0FE9                     	;# 
  1747  0FEA                     	;# 
  1748  0FEB                     	;# 
  1749  0FED                     	;# 
  1750  0FEE                     	;# 
  1751  0FEF                     	;# 
  1752  0000                     	;# 
  1753  0001                     	;# 
  1754  0002                     	;# 
  1755  0003                     	;# 
  1756  0004                     	;# 
  1757  0005                     	;# 
  1758  0006                     	;# 
  1759  0007                     	;# 
  1760  0008                     	;# 
  1761  0009                     	;# 
  1762  000A                     	;# 
  1763  000B                     	;# 
  1764  000C                     	;# 
  1765  000D                     	;# 
  1766  000E                     	;# 
  1767  0011                     	;# 
  1768  0012                     	;# 
  1769  0013                     	;# 
  1770  0015                     	;# 
  1771  0016                     	;# 
  1772  0016                     	;# 
  1773  0017                     	;# 
  1774  0018                     	;# 
  1775  0019                     	;# 
  1776  001A                     	;# 
  1777  001B                     	;# 
  1778  001C                     	;# 
  1779  008C                     	;# 
  1780  008D                     	;# 
  1781  008E                     	;# 
  1782  0091                     	;# 
  1783  0092                     	;# 
  1784  0093                     	;# 
  1785  0095                     	;# 
  1786  0096                     	;# 
  1787  0097                     	;# 
  1788  0099                     	;# 
  1789  009A                     	;# 
  1790  009B                     	;# 
  1791  009B                     	;# 
  1792  009C                     	;# 
  1793  009D                     	;# 
  1794  009E                     	;# 
  1795  009F                     	;# 
  1796  010C                     	;# 
  1797  010D                     	;# 
  1798  010E                     	;# 
  1799  0111                     	;# 
  1800  0112                     	;# 
  1801  0113                     	;# 
  1802  0114                     	;# 
  1803  0115                     	;# 
  1804  0116                     	;# 
  1805  0117                     	;# 
  1806  0118                     	;# 
  1807  0119                     	;# 
  1808  011D                     	;# 
  1809  018C                     	;# 
  1810  018D                     	;# 
  1811  018E                     	;# 
  1812  0191                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0193                     	;# 
  1816  0193                     	;# 
  1817  0194                     	;# 
  1818  0195                     	;# 
  1819  0196                     	;# 
  1820  0197                     	;# 
  1821  0199                     	;# 
  1822  019A                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019E                     	;# 
  1828  019F                     	;# 
  1829  020C                     	;# 
  1830  020D                     	;# 
  1831  0211                     	;# 
  1832  0211                     	;# 
  1833  0212                     	;# 
  1834  0212                     	;# 
  1835  0213                     	;# 
  1836  0213                     	;# 
  1837  0214                     	;# 
  1838  0214                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0215                     	;# 
  1842  0216                     	;# 
  1843  0216                     	;# 
  1844  0217                     	;# 
  1845  0217                     	;# 
  1846  0391                     	;# 
  1847  0392                     	;# 
  1848  0393                     	;# 
  1849  0394                     	;# 
  1850  0395                     	;# 
  1851  0396                     	;# 
  1852  0498                     	;# 
  1853  0498                     	;# 
  1854  0499                     	;# 
  1855  049A                     	;# 
  1856  049B                     	;# 
  1857  049B                     	;# 
  1858  049C                     	;# 
  1859  049D                     	;# 
  1860  049E                     	;# 
  1861  049F                     	;# 
  1862  0611                     	;# 
  1863  0612                     	;# 
  1864  0613                     	;# 
  1865  0613                     	;# 
  1866  0614                     	;# 
  1867  0615                     	;# 
  1868  0616                     	;# 
  1869  0616                     	;# 
  1870  0617                     	;# 
  1871  0618                     	;# 
  1872  0619                     	;# 
  1873  0619                     	;# 
  1874  061A                     	;# 
  1875  061B                     	;# 
  1876  061C                     	;# 
  1877  061C                     	;# 
  1878  0691                     	;# 
  1879  0692                     	;# 
  1880  0693                     	;# 
  1881  0694                     	;# 
  1882  0695                     	;# 
  1883  0F0F                     	;# 
  1884  0F10                     	;# 
  1885  0F11                     	;# 
  1886  0F12                     	;# 
  1887  0F13                     	;# 
  1888  0F14                     	;# 
  1889  0F15                     	;# 
  1890  0F16                     	;# 
  1891  0F17                     	;# 
  1892  0F18                     	;# 
  1893  0F19                     	;# 
  1894  0F1A                     	;# 
  1895  0F1B                     	;# 
  1896  0F1C                     	;# 
  1897  0F1D                     	;# 
  1898  0F1E                     	;# 
  1899  0F1F                     	;# 
  1900  0F20                     	;# 
  1901  0F21                     	;# 
  1902  0F22                     	;# 
  1903  0F23                     	;# 
  1904  0F24                     	;# 
  1905  0F25                     	;# 
  1906  0F26                     	;# 
  1907  0F27                     	;# 
  1908  0F28                     	;# 
  1909  0F29                     	;# 
  1910  0F2A                     	;# 
  1911  0F2B                     	;# 
  1912  0F2C                     	;# 
  1913  0F2D                     	;# 
  1914  0F2E                     	;# 
  1915  0F2F                     	;# 
  1916  0F8C                     	;# 
  1917  0F8D                     	;# 
  1918  0F91                     	;# 
  1919  0F95                     	;# 
  1920  0F96                     	;# 
  1921  0F97                     	;# 
  1922  0F9C                     	;# 
  1923  0F9D                     	;# 
  1924  0F9E                     	;# 
  1925  0FE3                     	;# 
  1926  0FE4                     	;# 
  1927  0FE5                     	;# 
  1928  0FE6                     	;# 
  1929  0FE7                     	;# 
  1930  0FE8                     	;# 
  1931  0FE9                     	;# 
  1932  0FEA                     	;# 
  1933  0FEB                     	;# 
  1934  0FED                     	;# 
  1935  0FEE                     	;# 
  1936  0FEF                     	;# 
  1937  0000                     	;# 
  1938  0001                     	;# 
  1939  0002                     	;# 
  1940  0003                     	;# 
  1941  0004                     	;# 
  1942  0005                     	;# 
  1943  0006                     	;# 
  1944  0007                     	;# 
  1945  0008                     	;# 
  1946  0009                     	;# 
  1947  000A                     	;# 
  1948  000B                     	;# 
  1949  000C                     	;# 
  1950  000D                     	;# 
  1951  000E                     	;# 
  1952  0011                     	;# 
  1953  0012                     	;# 
  1954  0013                     	;# 
  1955  0015                     	;# 
  1956  0016                     	;# 
  1957  0016                     	;# 
  1958  0017                     	;# 
  1959  0018                     	;# 
  1960  0019                     	;# 
  1961  001A                     	;# 
  1962  001B                     	;# 
  1963  001C                     	;# 
  1964  008C                     	;# 
  1965  008D                     	;# 
  1966  008E                     	;# 
  1967  0091                     	;# 
  1968  0092                     	;# 
  1969  0093                     	;# 
  1970  0095                     	;# 
  1971  0096                     	;# 
  1972  0097                     	;# 
  1973  0099                     	;# 
  1974  009A                     	;# 
  1975  009B                     	;# 
  1976  009B                     	;# 
  1977  009C                     	;# 
  1978  009D                     	;# 
  1979  009E                     	;# 
  1980  009F                     	;# 
  1981  010C                     	;# 
  1982  010D                     	;# 
  1983  010E                     	;# 
  1984  0111                     	;# 
  1985  0112                     	;# 
  1986  0113                     	;# 
  1987  0114                     	;# 
  1988  0115                     	;# 
  1989  0116                     	;# 
  1990  0117                     	;# 
  1991  0118                     	;# 
  1992  0119                     	;# 
  1993  011D                     	;# 
  1994  018C                     	;# 
  1995  018D                     	;# 
  1996  018E                     	;# 
  1997  0191                     	;# 
  1998  0191                     	;# 
  1999  0192                     	;# 
  2000  0193                     	;# 
  2001  0193                     	;# 
  2002  0194                     	;# 
  2003  0195                     	;# 
  2004  0196                     	;# 
  2005  0197                     	;# 
  2006  0199                     	;# 
  2007  019A                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019C                     	;# 
  2011  019D                     	;# 
  2012  019E                     	;# 
  2013  019F                     	;# 
  2014  020C                     	;# 
  2015  020D                     	;# 
  2016  0211                     	;# 
  2017  0211                     	;# 
  2018  0212                     	;# 
  2019  0212                     	;# 
  2020  0213                     	;# 
  2021  0213                     	;# 
  2022  0214                     	;# 
  2023  0214                     	;# 
  2024  0215                     	;# 
  2025  0215                     	;# 
  2026  0215                     	;# 
  2027  0216                     	;# 
  2028  0216                     	;# 
  2029  0217                     	;# 
  2030  0217                     	;# 
  2031  0391                     	;# 
  2032  0392                     	;# 
  2033  0393                     	;# 
  2034  0394                     	;# 
  2035  0395                     	;# 
  2036  0396                     	;# 
  2037  0498                     	;# 
  2038  0498                     	;# 
  2039  0499                     	;# 
  2040  049A                     	;# 
  2041  049B                     	;# 
  2042  049B                     	;# 
  2043  049C                     	;# 
  2044  049D                     	;# 
  2045  049E                     	;# 
  2046  049F                     	;# 
  2047  0611                     	;# 
  2048  0612                     	;# 
  2049  0613                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  0615                     	;# 
  2053  0616                     	;# 
  2054  0616                     	;# 
  2055  0617                     	;# 
  2056  0618                     	;# 
  2057  0619                     	;# 
  2058  0619                     	;# 
  2059  061A                     	;# 
  2060  061B                     	;# 
  2061  061C                     	;# 
  2062  061C                     	;# 
  2063  0691                     	;# 
  2064  0692                     	;# 
  2065  0693                     	;# 
  2066  0694                     	;# 
  2067  0695                     	;# 
  2068  0F0F                     	;# 
  2069  0F10                     	;# 
  2070  0F11                     	;# 
  2071  0F12                     	;# 
  2072  0F13                     	;# 
  2073  0F14                     	;# 
  2074  0F15                     	;# 
  2075  0F16                     	;# 
  2076  0F17                     	;# 
  2077  0F18                     	;# 
  2078  0F19                     	;# 
  2079  0F1A                     	;# 
  2080  0F1B                     	;# 
  2081  0F1C                     	;# 
  2082  0F1D                     	;# 
  2083  0F1E                     	;# 
  2084  0F1F                     	;# 
  2085  0F20                     	;# 
  2086  0F21                     	;# 
  2087  0F22                     	;# 
  2088  0F23                     	;# 
  2089  0F24                     	;# 
  2090  0F25                     	;# 
  2091  0F26                     	;# 
  2092  0F27                     	;# 
  2093  0F28                     	;# 
  2094  0F29                     	;# 
  2095  0F2A                     	;# 
  2096  0F2B                     	;# 
  2097  0F2C                     	;# 
  2098  0F2D                     	;# 
  2099  0F2E                     	;# 
  2100  0F2F                     	;# 
  2101  0F8C                     	;# 
  2102  0F8D                     	;# 
  2103  0F91                     	;# 
  2104  0F95                     	;# 
  2105  0F96                     	;# 
  2106  0F97                     	;# 
  2107  0F9C                     	;# 
  2108  0F9D                     	;# 
  2109  0F9E                     	;# 
  2110  0FE3                     	;# 
  2111  0FE4                     	;# 
  2112  0FE5                     	;# 
  2113  0FE6                     	;# 
  2114  0FE7                     	;# 
  2115  0FE8                     	;# 
  2116  0FE9                     	;# 
  2117  0FEA                     	;# 
  2118  0FEB                     	;# 
  2119  0FED                     	;# 
  2120  0FEE                     	;# 
  2121  0FEF                     	;# 
  2122  0000                     	;# 
  2123  0001                     	;# 
  2124  0002                     	;# 
  2125  0003                     	;# 
  2126  0004                     	;# 
  2127  0005                     	;# 
  2128  0006                     	;# 
  2129  0007                     	;# 
  2130  0008                     	;# 
  2131  0009                     	;# 
  2132  000A                     	;# 
  2133  000B                     	;# 
  2134  000C                     	;# 
  2135  000D                     	;# 
  2136  000E                     	;# 
  2137  0011                     	;# 
  2138  0012                     	;# 
  2139  0013                     	;# 
  2140  0015                     	;# 
  2141  0016                     	;# 
  2142  0016                     	;# 
  2143  0017                     	;# 
  2144  0018                     	;# 
  2145  0019                     	;# 
  2146  001A                     	;# 
  2147  001B                     	;# 
  2148  001C                     	;# 
  2149  008C                     	;# 
  2150  008D                     	;# 
  2151  008E                     	;# 
  2152  0091                     	;# 
  2153  0092                     	;# 
  2154  0093                     	;# 
  2155  0095                     	;# 
  2156  0096                     	;# 
  2157  0097                     	;# 
  2158  0099                     	;# 
  2159  009A                     	;# 
  2160  009B                     	;# 
  2161  009B                     	;# 
  2162  009C                     	;# 
  2163  009D                     	;# 
  2164  009E                     	;# 
  2165  009F                     	;# 
  2166  010C                     	;# 
  2167  010D                     	;# 
  2168  010E                     	;# 
  2169  0111                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0115                     	;# 
  2174  0116                     	;# 
  2175  0117                     	;# 
  2176  0118                     	;# 
  2177  0119                     	;# 
  2178  011D                     	;# 
  2179  018C                     	;# 
  2180  018D                     	;# 
  2181  018E                     	;# 
  2182  0191                     	;# 
  2183  0191                     	;# 
  2184  0192                     	;# 
  2185  0193                     	;# 
  2186  0193                     	;# 
  2187  0194                     	;# 
  2188  0195                     	;# 
  2189  0196                     	;# 
  2190  0197                     	;# 
  2191  0199                     	;# 
  2192  019A                     	;# 
  2193  019B                     	;# 
  2194  019B                     	;# 
  2195  019C                     	;# 
  2196  019D                     	;# 
  2197  019E                     	;# 
  2198  019F                     	;# 
  2199  020C                     	;# 
  2200  020D                     	;# 
  2201  0211                     	;# 
  2202  0211                     	;# 
  2203  0212                     	;# 
  2204  0212                     	;# 
  2205  0213                     	;# 
  2206  0213                     	;# 
  2207  0214                     	;# 
  2208  0214                     	;# 
  2209  0215                     	;# 
  2210  0215                     	;# 
  2211  0215                     	;# 
  2212  0216                     	;# 
  2213  0216                     	;# 
  2214  0217                     	;# 
  2215  0217                     	;# 
  2216  0391                     	;# 
  2217  0392                     	;# 
  2218  0393                     	;# 
  2219  0394                     	;# 
  2220  0395                     	;# 
  2221  0396                     	;# 
  2222  0498                     	;# 
  2223  0498                     	;# 
  2224  0499                     	;# 
  2225  049A                     	;# 
  2226  049B                     	;# 
  2227  049B                     	;# 
  2228  049C                     	;# 
  2229  049D                     	;# 
  2230  049E                     	;# 
  2231  049F                     	;# 
  2232  0611                     	;# 
  2233  0612                     	;# 
  2234  0613                     	;# 
  2235  0613                     	;# 
  2236  0614                     	;# 
  2237  0615                     	;# 
  2238  0616                     	;# 
  2239  0616                     	;# 
  2240  0617                     	;# 
  2241  0618                     	;# 
  2242  0619                     	;# 
  2243  0619                     	;# 
  2244  061A                     	;# 
  2245  061B                     	;# 
  2246  061C                     	;# 
  2247  061C                     	;# 
  2248  0691                     	;# 
  2249  0692                     	;# 
  2250  0693                     	;# 
  2251  0694                     	;# 
  2252  0695                     	;# 
  2253  0F0F                     	;# 
  2254  0F10                     	;# 
  2255  0F11                     	;# 
  2256  0F12                     	;# 
  2257  0F13                     	;# 
  2258  0F14                     	;# 
  2259  0F15                     	;# 
  2260  0F16                     	;# 
  2261  0F17                     	;# 
  2262  0F18                     	;# 
  2263  0F19                     	;# 
  2264  0F1A                     	;# 
  2265  0F1B                     	;# 
  2266  0F1C                     	;# 
  2267  0F1D                     	;# 
  2268  0F1E                     	;# 
  2269  0F1F                     	;# 
  2270  0F20                     	;# 
  2271  0F21                     	;# 
  2272  0F22                     	;# 
  2273  0F23                     	;# 
  2274  0F24                     	;# 
  2275  0F25                     	;# 
  2276  0F26                     	;# 
  2277  0F27                     	;# 
  2278  0F28                     	;# 
  2279  0F29                     	;# 
  2280  0F2A                     	;# 
  2281  0F2B                     	;# 
  2282  0F2C                     	;# 
  2283  0F2D                     	;# 
  2284  0F2E                     	;# 
  2285  0F2F                     	;# 
  2286  0F8C                     	;# 
  2287  0F8D                     	;# 
  2288  0F91                     	;# 
  2289  0F95                     	;# 
  2290  0F96                     	;# 
  2291  0F97                     	;# 
  2292  0F9C                     	;# 
  2293  0F9D                     	;# 
  2294  0F9E                     	;# 
  2295  0FE3                     	;# 
  2296  0FE4                     	;# 
  2297  0FE5                     	;# 
  2298  0FE6                     	;# 
  2299  0FE7                     	;# 
  2300  0FE8                     	;# 
  2301  0FE9                     	;# 
  2302  0FEA                     	;# 
  2303  0FEB                     	;# 
  2304  0FED                     	;# 
  2305  0FEE                     	;# 
  2306  0FEF                     	;# 
  2307  0000                     	;# 
  2308  0001                     	;# 
  2309  0002                     	;# 
  2310  0003                     	;# 
  2311  0004                     	;# 
  2312  0005                     	;# 
  2313  0006                     	;# 
  2314  0007                     	;# 
  2315  0008                     	;# 
  2316  0009                     	;# 
  2317  000A                     	;# 
  2318  000B                     	;# 
  2319  000C                     	;# 
  2320  000D                     	;# 
  2321  000E                     	;# 
  2322  0011                     	;# 
  2323  0012                     	;# 
  2324  0013                     	;# 
  2325  0015                     	;# 
  2326  0016                     	;# 
  2327  0016                     	;# 
  2328  0017                     	;# 
  2329  0018                     	;# 
  2330  0019                     	;# 
  2331  001A                     	;# 
  2332  001B                     	;# 
  2333  001C                     	;# 
  2334  008C                     	;# 
  2335  008D                     	;# 
  2336  008E                     	;# 
  2337  0091                     	;# 
  2338  0092                     	;# 
  2339  0093                     	;# 
  2340  0095                     	;# 
  2341  0096                     	;# 
  2342  0097                     	;# 
  2343  0099                     	;# 
  2344  009A                     	;# 
  2345  009B                     	;# 
  2346  009B                     	;# 
  2347  009C                     	;# 
  2348  009D                     	;# 
  2349  009E                     	;# 
  2350  009F                     	;# 
  2351  010C                     	;# 
  2352  010D                     	;# 
  2353  010E                     	;# 
  2354  0111                     	;# 
  2355  0112                     	;# 
  2356  0113                     	;# 
  2357  0114                     	;# 
  2358  0115                     	;# 
  2359  0116                     	;# 
  2360  0117                     	;# 
  2361  0118                     	;# 
  2362  0119                     	;# 
  2363  011D                     	;# 
  2364  018C                     	;# 
  2365  018D                     	;# 
  2366  018E                     	;# 
  2367  0191                     	;# 
  2368  0191                     	;# 
  2369  0192                     	;# 
  2370  0193                     	;# 
  2371  0193                     	;# 
  2372  0194                     	;# 
  2373  0195                     	;# 
  2374  0196                     	;# 
  2375  0197                     	;# 
  2376  0199                     	;# 
  2377  019A                     	;# 
  2378  019B                     	;# 
  2379  019B                     	;# 
  2380  019C                     	;# 
  2381  019D                     	;# 
  2382  019E                     	;# 
  2383  019F                     	;# 
  2384  020C                     	;# 
  2385  020D                     	;# 
  2386  0211                     	;# 
  2387  0211                     	;# 
  2388  0212                     	;# 
  2389  0212                     	;# 
  2390  0213                     	;# 
  2391  0213                     	;# 
  2392  0214                     	;# 
  2393  0214                     	;# 
  2394  0215                     	;# 
  2395  0215                     	;# 
  2396  0215                     	;# 
  2397  0216                     	;# 
  2398  0216                     	;# 
  2399  0217                     	;# 
  2400  0217                     	;# 
  2401  0391                     	;# 
  2402  0392                     	;# 
  2403  0393                     	;# 
  2404  0394                     	;# 
  2405  0395                     	;# 
  2406  0396                     	;# 
  2407  0498                     	;# 
  2408  0498                     	;# 
  2409  0499                     	;# 
  2410  049A                     	;# 
  2411  049B                     	;# 
  2412  049B                     	;# 
  2413  049C                     	;# 
  2414  049D                     	;# 
  2415  049E                     	;# 
  2416  049F                     	;# 
  2417  0611                     	;# 
  2418  0612                     	;# 
  2419  0613                     	;# 
  2420  0613                     	;# 
  2421  0614                     	;# 
  2422  0615                     	;# 
  2423  0616                     	;# 
  2424  0616                     	;# 
  2425  0617                     	;# 
  2426  0618                     	;# 
  2427  0619                     	;# 
  2428  0619                     	;# 
  2429  061A                     	;# 
  2430  061B                     	;# 
  2431  061C                     	;# 
  2432  061C                     	;# 
  2433  0691                     	;# 
  2434  0692                     	;# 
  2435  0693                     	;# 
  2436  0694                     	;# 
  2437  0695                     	;# 
  2438  0F0F                     	;# 
  2439  0F10                     	;# 
  2440  0F11                     	;# 
  2441  0F12                     	;# 
  2442  0F13                     	;# 
  2443  0F14                     	;# 
  2444  0F15                     	;# 
  2445  0F16                     	;# 
  2446  0F17                     	;# 
  2447  0F18                     	;# 
  2448  0F19                     	;# 
  2449  0F1A                     	;# 
  2450  0F1B                     	;# 
  2451  0F1C                     	;# 
  2452  0F1D                     	;# 
  2453  0F1E                     	;# 
  2454  0F1F                     	;# 
  2455  0F20                     	;# 
  2456  0F21                     	;# 
  2457  0F22                     	;# 
  2458  0F23                     	;# 
  2459  0F24                     	;# 
  2460  0F25                     	;# 
  2461  0F26                     	;# 
  2462  0F27                     	;# 
  2463  0F28                     	;# 
  2464  0F29                     	;# 
  2465  0F2A                     	;# 
  2466  0F2B                     	;# 
  2467  0F2C                     	;# 
  2468  0F2D                     	;# 
  2469  0F2E                     	;# 
  2470  0F2F                     	;# 
  2471  0F8C                     	;# 
  2472  0F8D                     	;# 
  2473  0F91                     	;# 
  2474  0F95                     	;# 
  2475  0F96                     	;# 
  2476  0F97                     	;# 
  2477  0F9C                     	;# 
  2478  0F9D                     	;# 
  2479  0F9E                     	;# 
  2480  0FE3                     	;# 
  2481  0FE4                     	;# 
  2482  0FE5                     	;# 
  2483  0FE6                     	;# 
  2484  0FE7                     	;# 
  2485  0FE8                     	;# 
  2486  0FE9                     	;# 
  2487  0FEA                     	;# 
  2488  0FEB                     	;# 
  2489  0FED                     	;# 
  2490  0FEE                     	;# 
  2491  0FEF                     	;# 
  2492  0000                     	;# 
  2493  0001                     	;# 
  2494  0002                     	;# 
  2495  0003                     	;# 
  2496  0004                     	;# 
  2497  0005                     	;# 
  2498  0006                     	;# 
  2499  0007                     	;# 
  2500  0008                     	;# 
  2501  0009                     	;# 
  2502  000A                     	;# 
  2503  000B                     	;# 
  2504  000C                     	;# 
  2505  000D                     	;# 
  2506  000E                     	;# 
  2507  0011                     	;# 
  2508  0012                     	;# 
  2509  0013                     	;# 
  2510  0015                     	;# 
  2511  0016                     	;# 
  2512  0016                     	;# 
  2513  0017                     	;# 
  2514  0018                     	;# 
  2515  0019                     	;# 
  2516  001A                     	;# 
  2517  001B                     	;# 
  2518  001C                     	;# 
  2519  008C                     	;# 
  2520  008D                     	;# 
  2521  008E                     	;# 
  2522  0091                     	;# 
  2523  0092                     	;# 
  2524  0093                     	;# 
  2525  0095                     	;# 
  2526  0096                     	;# 
  2527  0097                     	;# 
  2528  0099                     	;# 
  2529  009A                     	;# 
  2530  009B                     	;# 
  2531  009B                     	;# 
  2532  009C                     	;# 
  2533  009D                     	;# 
  2534  009E                     	;# 
  2535  009F                     	;# 
  2536  010C                     	;# 
  2537  010D                     	;# 
  2538  010E                     	;# 
  2539  0111                     	;# 
  2540  0112                     	;# 
  2541  0113                     	;# 
  2542  0114                     	;# 
  2543  0115                     	;# 
  2544  0116                     	;# 
  2545  0117                     	;# 
  2546  0118                     	;# 
  2547  0119                     	;# 
  2548  011D                     	;# 
  2549  018C                     	;# 
  2550  018D                     	;# 
  2551  018E                     	;# 
  2552  0191                     	;# 
  2553  0191                     	;# 
  2554  0192                     	;# 
  2555  0193                     	;# 
  2556  0193                     	;# 
  2557  0194                     	;# 
  2558  0195                     	;# 
  2559  0196                     	;# 
  2560  0197                     	;# 
  2561  0199                     	;# 
  2562  019A                     	;# 
  2563  019B                     	;# 
  2564  019B                     	;# 
  2565  019C                     	;# 
  2566  019D                     	;# 
  2567  019E                     	;# 
  2568  019F                     	;# 
  2569  020C                     	;# 
  2570  020D                     	;# 
  2571  0211                     	;# 
  2572  0211                     	;# 
  2573  0212                     	;# 
  2574  0212                     	;# 
  2575  0213                     	;# 
  2576  0213                     	;# 
  2577  0214                     	;# 
  2578  0214                     	;# 
  2579  0215                     	;# 
  2580  0215                     	;# 
  2581  0215                     	;# 
  2582  0216                     	;# 
  2583  0216                     	;# 
  2584  0217                     	;# 
  2585  0217                     	;# 
  2586  0391                     	;# 
  2587  0392                     	;# 
  2588  0393                     	;# 
  2589  0394                     	;# 
  2590  0395                     	;# 
  2591  0396                     	;# 
  2592  0498                     	;# 
  2593  0498                     	;# 
  2594  0499                     	;# 
  2595  049A                     	;# 
  2596  049B                     	;# 
  2597  049B                     	;# 
  2598  049C                     	;# 
  2599  049D                     	;# 
  2600  049E                     	;# 
  2601  049F                     	;# 
  2602  0611                     	;# 
  2603  0612                     	;# 
  2604  0613                     	;# 
  2605  0613                     	;# 
  2606  0614                     	;# 
  2607  0615                     	;# 
  2608  0616                     	;# 
  2609  0616                     	;# 
  2610  0617                     	;# 
  2611  0618                     	;# 
  2612  0619                     	;# 
  2613  0619                     	;# 
  2614  061A                     	;# 
  2615  061B                     	;# 
  2616  061C                     	;# 
  2617  061C                     	;# 
  2618  0691                     	;# 
  2619  0692                     	;# 
  2620  0693                     	;# 
  2621  0694                     	;# 
  2622  0695                     	;# 
  2623  0F0F                     	;# 
  2624  0F10                     	;# 
  2625  0F11                     	;# 
  2626  0F12                     	;# 
  2627  0F13                     	;# 
  2628  0F14                     	;# 
  2629  0F15                     	;# 
  2630  0F16                     	;# 
  2631  0F17                     	;# 
  2632  0F18                     	;# 
  2633  0F19                     	;# 
  2634  0F1A                     	;# 
  2635  0F1B                     	;# 
  2636  0F1C                     	;# 
  2637  0F1D                     	;# 
  2638  0F1E                     	;# 
  2639  0F1F                     	;# 
  2640  0F20                     	;# 
  2641  0F21                     	;# 
  2642  0F22                     	;# 
  2643  0F23                     	;# 
  2644  0F24                     	;# 
  2645  0F25                     	;# 
  2646  0F26                     	;# 
  2647  0F27                     	;# 
  2648  0F28                     	;# 
  2649  0F29                     	;# 
  2650  0F2A                     	;# 
  2651  0F2B                     	;# 
  2652  0F2C                     	;# 
  2653  0F2D                     	;# 
  2654  0F2E                     	;# 
  2655  0F2F                     	;# 
  2656  0F8C                     	;# 
  2657  0F8D                     	;# 
  2658  0F91                     	;# 
  2659  0F95                     	;# 
  2660  0F96                     	;# 
  2661  0F97                     	;# 
  2662  0F9C                     	;# 
  2663  0F9D                     	;# 
  2664  0F9E                     	;# 
  2665  0FE3                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0011                     	;# 
  2693  0012                     	;# 
  2694  0013                     	;# 
  2695  0015                     	;# 
  2696  0016                     	;# 
  2697  0016                     	;# 
  2698  0017                     	;# 
  2699  0018                     	;# 
  2700  0019                     	;# 
  2701  001A                     	;# 
  2702  001B                     	;# 
  2703  001C                     	;# 
  2704  008C                     	;# 
  2705  008D                     	;# 
  2706  008E                     	;# 
  2707  0091                     	;# 
  2708  0092                     	;# 
  2709  0093                     	;# 
  2710  0095                     	;# 
  2711  0096                     	;# 
  2712  0097                     	;# 
  2713  0099                     	;# 
  2714  009A                     	;# 
  2715  009B                     	;# 
  2716  009B                     	;# 
  2717  009C                     	;# 
  2718  009D                     	;# 
  2719  009E                     	;# 
  2720  009F                     	;# 
  2721  010C                     	;# 
  2722  010D                     	;# 
  2723  010E                     	;# 
  2724  0111                     	;# 
  2725  0112                     	;# 
  2726  0113                     	;# 
  2727  0114                     	;# 
  2728  0115                     	;# 
  2729  0116                     	;# 
  2730  0117                     	;# 
  2731  0118                     	;# 
  2732  0119                     	;# 
  2733  011D                     	;# 
  2734  018C                     	;# 
  2735  018D                     	;# 
  2736  018E                     	;# 
  2737  0191                     	;# 
  2738  0191                     	;# 
  2739  0192                     	;# 
  2740  0193                     	;# 
  2741  0193                     	;# 
  2742  0194                     	;# 
  2743  0195                     	;# 
  2744  0196                     	;# 
  2745  0197                     	;# 
  2746  0199                     	;# 
  2747  019A                     	;# 
  2748  019B                     	;# 
  2749  019B                     	;# 
  2750  019C                     	;# 
  2751  019D                     	;# 
  2752  019E                     	;# 
  2753  019F                     	;# 
  2754  020C                     	;# 
  2755  020D                     	;# 
  2756  0211                     	;# 
  2757  0211                     	;# 
  2758  0212                     	;# 
  2759  0212                     	;# 
  2760  0213                     	;# 
  2761  0213                     	;# 
  2762  0214                     	;# 
  2763  0214                     	;# 
  2764  0215                     	;# 
  2765  0215                     	;# 
  2766  0215                     	;# 
  2767  0216                     	;# 
  2768  0216                     	;# 
  2769  0217                     	;# 
  2770  0217                     	;# 
  2771  0391                     	;# 
  2772  0392                     	;# 
  2773  0393                     	;# 
  2774  0394                     	;# 
  2775  0395                     	;# 
  2776  0396                     	;# 
  2777  0498                     	;# 
  2778  0498                     	;# 
  2779  0499                     	;# 
  2780  049A                     	;# 
  2781  049B                     	;# 
  2782  049B                     	;# 
  2783  049C                     	;# 
  2784  049D                     	;# 
  2785  049E                     	;# 
  2786  049F                     	;# 
  2787  0611                     	;# 
  2788  0612                     	;# 
  2789  0613                     	;# 
  2790  0613                     	;# 
  2791  0614                     	;# 
  2792  0615                     	;# 
  2793  0616                     	;# 
  2794  0616                     	;# 
  2795  0617                     	;# 
  2796  0618                     	;# 
  2797  0619                     	;# 
  2798  0619                     	;# 
  2799  061A                     	;# 
  2800  061B                     	;# 
  2801  061C                     	;# 
  2802  061C                     	;# 
  2803  0691                     	;# 
  2804  0692                     	;# 
  2805  0693                     	;# 
  2806  0694                     	;# 
  2807  0695                     	;# 
  2808  0F0F                     	;# 
  2809  0F10                     	;# 
  2810  0F11                     	;# 
  2811  0F12                     	;# 
  2812  0F13                     	;# 
  2813  0F14                     	;# 
  2814  0F15                     	;# 
  2815  0F16                     	;# 
  2816  0F17                     	;# 
  2817  0F18                     	;# 
  2818  0F19                     	;# 
  2819  0F1A                     	;# 
  2820  0F1B                     	;# 
  2821  0F1C                     	;# 
  2822  0F1D                     	;# 
  2823  0F1E                     	;# 
  2824  0F1F                     	;# 
  2825  0F20                     	;# 
  2826  0F21                     	;# 
  2827  0F22                     	;# 
  2828  0F23                     	;# 
  2829  0F24                     	;# 
  2830  0F25                     	;# 
  2831  0F26                     	;# 
  2832  0F27                     	;# 
  2833  0F28                     	;# 
  2834  0F29                     	;# 
  2835  0F2A                     	;# 
  2836  0F2B                     	;# 
  2837  0F2C                     	;# 
  2838  0F2D                     	;# 
  2839  0F2E                     	;# 
  2840  0F2F                     	;# 
  2841  0F8C                     	;# 
  2842  0F8D                     	;# 
  2843  0F91                     	;# 
  2844  0F95                     	;# 
  2845  0F96                     	;# 
  2846  0F97                     	;# 
  2847  0F9C                     	;# 
  2848  0F9D                     	;# 
  2849  0F9E                     	;# 
  2850  0FE3                     	;# 
  2851  0FE4                     	;# 
  2852  0FE5                     	;# 
  2853  0FE6                     	;# 
  2854  0FE7                     	;# 
  2855  0FE8                     	;# 
  2856  0FE9                     	;# 
  2857  0FEA                     	;# 
  2858  0FEB                     	;# 
  2859  0FED                     	;# 
  2860  0FEE                     	;# 
  2861  0FEF                     	;# 
  2862                           
  2863                           	psect	nvBANK1
  2864  00B0                     __pnvBANK1:	
  2865  00B0                     _timer1ReloadVal:	
  2866  00B0                     	ds	2
  2867  00B2                     _eusartTxBufferRemaining:	
  2868  00B2                     	ds	1
  2869  000E                     _PORTCbits	set	14
  2870  000B                     _INTCONbits	set	11
  2871  0019                     _T1GCONbits	set	25
  2872  0018                     _T1CONbits	set	24
  2873  0018                     _T1CON	set	24
  2874  0016                     _TMR1L	set	22
  2875  0017                     _TMR1H	set	23
  2876  0019                     _T1GCON	set	25
  2877  001C                     _T2CONbits	set	28
  2878  001C                     _T2CON	set	28
  2879  0011                     _PIR1bits	set	17
  2880  001A                     _TMR2	set	26
  2881  001B                     _PR2	set	27
  2882  0088                     _TMR1IF	set	136
  2883  0065                     _RA5	set	101
  2884  0061                     _RA1	set	97
  2885  0062                     _RA2	set	98
  2886  0075                     _RC5	set	117
  2887  0095                     _OPTION_REG	set	149
  2888  0095                     _OPTION_REGbits	set	149
  2889  008E                     _TRISC	set	142
  2890  008D                     _TRISB	set	141
  2891  008C                     _TRISA	set	140
  2892  0091                     _PIE1bits	set	145
  2893  0099                     _OSCCON	set	153
  2894  046C                     _TRISB4	set	1132
  2895  046E                     _TRISB6	set	1134
  2896  010E                     _LATCbits	set	270
  2897  011D                     _APFCON	set	285
  2898  010E                     _LATC	set	270
  2899  010D                     _LATB	set	269
  2900  010C                     _LATA	set	268
  2901  0116                     _BORCON	set	278
  2902  086C                     _LATB4	set	2156
  2903  086E                     _LATB6	set	2158
  2904  018C                     _ANSELA	set	396
  2905  018D                     _ANSELB	set	397
  2906  018E                     _ANSELC	set	398
  2907  0199                     _RCREG	set	409
  2908  019D                     _RCSTAbits	set	413
  2909  019A                     _TXREG	set	410
  2910  019C                     _SPBRGH	set	412
  2911  019B                     _SPBRGL	set	411
  2912  019E                     _TXSTA	set	414
  2913  019D                     _RCSTA	set	413
  2914  019F                     _BAUDCON	set	415
  2915  0211                     _SSP1BUF	set	529
  2916  0216                     _SSP1CON2bits	set	534
  2917  0212                     _SSP1ADD	set	530
  2918  0216                     _SSP1CON2	set	534
  2919  0215                     _SSP1CON1	set	533
  2920  0214                     _SSP1STAT	set	532
  2921  020C                     _WPUA	set	524
  2922  020D                     _WPUB	set	525
  2923  061A                     _PWM4DCL	set	1562
  2924  061B                     _PWM4DCH	set	1563
  2925  061C                     _PWM4CON	set	1564
  2926  0617                     _PWM3DCL	set	1559
  2927  0618                     _PWM3DCH	set	1560
  2928  0619                     _PWM3CON	set	1561
  2929  0614                     _PWM2DCL	set	1556
  2930  0615                     _PWM2DCH	set	1557
  2931  0616                     _PWM2CON	set	1558
  2932  0611                     _PWM1DCL	set	1553
  2933  0612                     _PWM1DCH	set	1554
  2934  0613                     _PWM1CON	set	1555
  2935                           
  2936                           ; #config settings
  2937  0000                     
  2938                           	psect	cinit
  2939  0024                     start_initialization:	
  2940  0024                     __initialization:	
  2941                           
  2942                           ; Clear objects allocated to COMMON
  2943  0024  01FA               	clrf	__pbssCOMMON& (0+127)
  2944  0025  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2945                           
  2946                           ; Clear objects allocated to BANK0
  2947  0026  0020               	movlb	0	; select bank0
  2948  0027  01EC               	clrf	__pbssBANK0& (0+127)
  2949  0028  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2950  0029  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2951                           
  2952                           ; Clear objects allocated to BANK1
  2953  002A  30A0               	movlw	low __pbssBANK1
  2954  002B  0084               	movwf	4
  2955  002C  3000               	movlw	high __pbssBANK1
  2956  002D  0085               	movwf	5
  2957  002E  3010               	movlw	16
  2958  002F  3184  242D  3180   	fcall	clear_ram0
  2959                           
  2960                           ; Clear objects allocated to BANK2
  2961  0032  3020               	movlw	low __pbssBANK2
  2962  0033  0084               	movwf	4
  2963  0034  3001               	movlw	high __pbssBANK2
  2964  0035  0085               	movwf	5
  2965  0036  3040               	movlw	64
  2966  0037  3184  242D         	fcall	clear_ram0
  2967  0039                     end_of_initialization:	
  2968                           ;End of C runtime variable initialization code
  2969                           
  2970  0039                     __end_of__initialization:	
  2971  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2972  003A  0020               	movlb	0
  2973  003B  3180  28B2         	ljmp	_main	;jump to C main() function
  2974                           
  2975                           	psect	bssCOMMON
  2976  007A                     __pbssCOMMON:	
  2977  007A                     _eusartRxCount:	
  2978  007A                     	ds	1
  2979  007B                     _eusartTxHead:	
  2980  007B                     	ds	1
  2981                           
  2982                           	psect	bssBANK0
  2983  006C                     __pbssBANK0:	
  2984  006C                     _eusartRxTail:	
  2985  006C                     	ds	1
  2986  006D                     _eusartRxHead:	
  2987  006D                     	ds	1
  2988  006E                     _eusartTxTail:	
  2989  006E                     	ds	1
  2990                           
  2991                           	psect	bssBANK1
  2992  00A0                     __pbssBANK1:	
  2993  00A0                     _eusartRxBuffer:	
  2994  00A0                     	ds	8
  2995  00A8                     _eusartTxBuffer:	
  2996  00A8                     	ds	8
  2997                           
  2998                           	psect	bssBANK2
  2999  0120                     __pbssBANK2:	
  3000  0120                     init_B@F4556:	
  3001  0120                     	ds	64
  3002                           
  3003                           	psect	clrtext
  3004  042D                     clear_ram0:	
  3005                           ;	Called with FSR0 containing the base address, and
  3006                           ;	WREG with the size to clear
  3007                           
  3008  042D  0064               	clrwdt	;clear the watchdog before getting into this loop
  3009  042E                     clrloop0:	
  3010  042E  0180               	clrf	0	;clear RAM location pointed to by FSR
  3011  042F  3101               	addfsr 0,1
  3012  0430  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3013  0431  2C2E               	goto	clrloop0	;have we reached the end yet?
  3014  0432  3400               	retlw	0	;all done for this memory range, return
  3015                           
  3016                           	psect	cstackBANK1
  3017  00B3                     __pcstackBANK1:	
  3018  00B3                     main@Bt:	
  3019                           
  3020                           ; 1 bytes @ 0x0
  3021  00B3                     	ds	1
  3022  00B4                     main@k:	
  3023                           
  3024                           ; 2 bytes @ 0x1
  3025  00B4                     	ds	2
  3026                           
  3027                           	psect	cstackCOMMON
  3028  0070                     __pcstackCOMMON:	
  3029  0070                     ?_PIN_MANAGER_Initialize:	
  3030  0070                     ?_OSCILLATOR_Initialize:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0070                     ?_WDT_Initialize:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0070                     ?_PWM1_Initialize:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0070                     ?_PWM2_Initialize:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0070                     ?_PWM4_Initialize:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0070                     ?_PWM3_Initialize:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0070                     ?_EUSART_Initialize:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0070                     ?_EUSART_Transmit_ISR:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054  0070                     ??_EUSART_Transmit_ISR:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057  0070                     ?_EUSART_Receive_ISR:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060  0070                     ??_EUSART_Receive_ISR:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063  0070                     ?_initI2C:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066  0070                     ?_initRTC:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069  0070                     ?_init_B:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072  0070                     ?_remote:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075  0070                     ?_ReturnReg:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0070                     ?_waitI2C:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0070                     ?_TMR2_Initialize:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0070                     ?_TMR1_Initialize:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0070                     ?_TMR1_StartTimer:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0070                     ?_TMR1_StopTimer:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0070                     ?_TMR1_Reload:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0070                     ?_SYSTEM_Initialize:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0070                     ?_INTERRUPT_InterruptManager:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0070                     ?_EUSART_Read:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0070                     ?_EUSART_Write:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0070                     ?_main:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0070                     ?_Partiel_Reset:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114  0070                     ?_Set_Features:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117  0070                     ?_Set_Mode:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120  0070                     ?_Reboot:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123  0070                     ?_Turn_On:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126  0070                     ?_startI2C:	
  3127                           ; 1 bytes @ 0x0
  3128                           
  3129  0070                     ?_stopI2C:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132  0070                     ?_sendI2C:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135                           
  3136                           ; 1 bytes @ 0x0
  3137  0070                     	ds	1
  3138  0071                     ??_INTERRUPT_InterruptManager:	
  3139                           
  3140                           ; 1 bytes @ 0x1
  3141  0071                     	ds	1
  3142  0072                     ??_PIN_MANAGER_Initialize:	
  3143  0072                     ??_OSCILLATOR_Initialize:	
  3144                           ; 1 bytes @ 0x2
  3145                           
  3146  0072                     ??_WDT_Initialize:	
  3147                           ; 1 bytes @ 0x2
  3148                           
  3149  0072                     ??_PWM1_Initialize:	
  3150                           ; 1 bytes @ 0x2
  3151                           
  3152  0072                     ??_PWM2_Initialize:	
  3153                           ; 1 bytes @ 0x2
  3154                           
  3155  0072                     ??_PWM4_Initialize:	
  3156                           ; 1 bytes @ 0x2
  3157                           
  3158  0072                     ??_PWM3_Initialize:	
  3159                           ; 1 bytes @ 0x2
  3160                           
  3161  0072                     ??_EUSART_Initialize:	
  3162                           ; 1 bytes @ 0x2
  3163                           
  3164  0072                     ??_initI2C:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167  0072                     ??_ReturnReg:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170  0072                     ??_waitI2C:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173  0072                     ??_TMR2_Initialize:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176  0072                     ??_TMR1_Initialize:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179  0072                     ??_TMR1_StartTimer:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182  0072                     ??_TMR1_StopTimer:	
  3183                           ; 1 bytes @ 0x2
  3184                           
  3185  0072                     ?_TMR1_WriteTimer:	
  3186                           ; 1 bytes @ 0x2
  3187                           
  3188  0072                     ??_EUSART_Read:	
  3189                           ; 1 bytes @ 0x2
  3190                           
  3191  0072                     ??_EUSART_Write:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194  0072                     ??_startI2C:	
  3195                           ; 1 bytes @ 0x2
  3196                           
  3197  0072                     ??_stopI2C:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200  0072                     ??_sendI2C:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203  0072                     sendI2C@data:	
  3204                           ; 1 bytes @ 0x2
  3205                           
  3206  0072                     TMR1_WriteTimer@timerVal:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209                           
  3210                           ; 2 bytes @ 0x2
  3211  0072                     	ds	1
  3212  0073                     ??_initRTC:	
  3213  0073                     ??_SYSTEM_Initialize:	
  3214                           ; 1 bytes @ 0x3
  3215                           
  3216  0073                     EUSART_Read@readValue:	
  3217                           ; 1 bytes @ 0x3
  3218                           
  3219  0073                     EUSART_Write@txData:	
  3220                           ; 1 bytes @ 0x3
  3221                           
  3222  0073                     initI2C@i:	
  3223                           ; 1 bytes @ 0x3
  3224                           
  3225                           
  3226                           ; 2 bytes @ 0x3
  3227  0073                     	ds	1
  3228  0074                     ??_remote:	
  3229  0074                     ?_delay_ms:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232  0074                     ??_TMR1_WriteTimer:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0074                     ??_TMR1_Reload:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238  0074                     ??_Partiel_Reset:	
  3239                           ; 1 bytes @ 0x4
  3240                           
  3241  0074                     ??_Set_Features:	
  3242                           ; 1 bytes @ 0x4
  3243                           
  3244  0074                     ??_Set_Mode:	
  3245                           ; 1 bytes @ 0x4
  3246                           
  3247  0074                     ??_Reboot:	
  3248                           ; 1 bytes @ 0x4
  3249                           
  3250  0074                     ??_Turn_On:	
  3251                           ; 1 bytes @ 0x4
  3252                           
  3253  0074                     delay_ms@msec:	
  3254                           ; 1 bytes @ 0x4
  3255                           
  3256                           
  3257                           ; 2 bytes @ 0x4
  3258  0074                     	ds	2
  3259  0076                     ??_delay_ms:	
  3260                           
  3261                           ; 1 bytes @ 0x6
  3262  0076                     	ds	1
  3263  0077                     delay_ms@x:	
  3264                           
  3265                           ; 2 bytes @ 0x7
  3266  0077                     	ds	2
  3267  0079                     ??_init_B:	
  3268                           
  3269                           ; 1 bytes @ 0x9
  3270  0079                     	ds	1
  3271                           
  3272                           	psect	cstackBANK0
  3273  0020                     __pcstackBANK0:	
  3274  0020                     ?_Verif_Erreur:	
  3275  0020                     Verif_Erreur@size:	
  3276                           ; 2 bytes @ 0x0
  3277                           
  3278                           
  3279                           ; 2 bytes @ 0x0
  3280  0020                     	ds	2
  3281  0022                     ??_Verif_Erreur:	
  3282                           
  3283                           ; 1 bytes @ 0x2
  3284  0022                     	ds	2
  3285  0024                     Verif_Erreur@i:	
  3286                           
  3287                           ; 2 bytes @ 0x4
  3288  0024                     	ds	2
  3289  0026                     Verif_Erreur@j:	
  3290                           
  3291                           ; 2 bytes @ 0x6
  3292  0026                     	ds	2
  3293  0028                     Verif_Erreur@buf:	
  3294                           
  3295                           ; 1 bytes @ 0x8
  3296  0028                     	ds	1
  3297  0029                     init_B@buf:	
  3298                           
  3299                           ; 64 bytes @ 0x9
  3300  0029                     	ds	64
  3301  0069                     init_B@error:	
  3302                           
  3303                           ; 1 bytes @ 0x49
  3304  0069                     	ds	1
  3305  006A                     ??_main:	
  3306                           
  3307                           ; 1 bytes @ 0x4A
  3308  006A                     	ds	2
  3309                           
  3310                           	psect	maintext
  3311  00B2                     __pmaintext:	
  3312 ;;
  3313 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3314 ;;
  3315 ;; *************** function _main *****************
  3316 ;; Defined at:
  3317 ;;		line 15 in file "main.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  k               2    1[BANK1 ] int 
  3322 ;;  Bt              1    0[BANK1 ] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : B1F/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3332 ;;      Params:         0       0       0       0       0       0       0       0
  3333 ;;      Locals:         0       0       3       0       0       0       0       0
  3334 ;;      Temps:          0       2       0       0       0       0       0       0
  3335 ;;      Totals:         0       2       3       0       0       0       0       0
  3336 ;;Total ram usage:        5 bytes
  3337 ;; Hardware stack levels required when called:    7
  3338 ;; This function calls:
  3339 ;;		_EUSART_Write
  3340 ;;		_ReturnReg
  3341 ;;		_SYSTEM_Initialize
  3342 ;;		_delay_ms
  3343 ;;		_initI2C
  3344 ;;		_initRTC
  3345 ;;		_init_B
  3346 ;;		_remote
  3347 ;; This function is called by:
  3348 ;;		Startup code after reset
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _main
  3354  00B2                     _main:	
  3355                           
  3356                           ;main.c: 17: SYSTEM_Initialize();
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3360  00B2  3182  22C2  3180   	fcall	_SYSTEM_Initialize
  3361                           
  3362                           ;main.c: 18: (INTCONbits.GIE = 1);
  3363  00B5  178B               	bsf	11,7	;volatile
  3364                           
  3365                           ;main.c: 19: (INTCONbits.PEIE = 1);
  3366  00B6  170B               	bsf	11,6	;volatile
  3367                           
  3368                           ;main.c: 21: uint8_t Bt = 0;
  3369  00B7  0021               	movlb	1	; select bank1
  3370  00B8  01B3               	clrf	main@Bt^(0+128)
  3371                           
  3372                           ;main.c: 23: RC5 = 0;
  3373  00B9  0020               	movlb	0	; select bank0
  3374  00BA  128E               	bcf	14,5	;volatile
  3375                           
  3376                           ;main.c: 24: RA2 = 0;
  3377  00BB  110C               	bcf	12,2	;volatile
  3378                           
  3379                           ;main.c: 25: RA1 = 0;
  3380  00BC  108C               	bcf	12,1	;volatile
  3381                           
  3382                           ;main.c: 26: RA5 = 0;
  3383  00BD  128C               	bcf	12,5	;volatile
  3384                           
  3385                           ;main.c: 27: int k =0 ;
  3386  00BE  0021               	movlb	1	; select bank1
  3387  00BF  01B4               	clrf	main@k^(0+128)
  3388  00C0  01B5               	clrf	(main@k+1)^(0+128)
  3389                           
  3390                           ;main.c: 33: initI2C();
  3391  00C1  3181  21DA  3180   	fcall	_initI2C
  3392                           
  3393                           ;main.c: 34: initRTC();
  3394  00C4  3181  2189  3180   	fcall	_initRTC
  3395                           
  3396                           ;main.c: 35: init_B();
  3397  00C7  3180  203D  3180   	fcall	_init_B
  3398                           
  3399                           ;main.c: 38: remote();
  3400  00CA  3183  2383  3180   	fcall	_remote
  3401                           
  3402                           ;main.c: 39: delay_ms(1000);
  3403  00CD  30E8               	movlw	232
  3404  00CE  00F4               	movwf	delay_ms@msec
  3405  00CF  3003               	movlw	3
  3406  00D0  00F5               	movwf	delay_ms@msec+1
  3407  00D1  3182  227B  3180   	fcall	_delay_ms
  3408                           
  3409                           ;main.c: 40: remote();
  3410  00D4  3183  2383  3180   	fcall	_remote
  3411                           
  3412                           ;main.c: 41: delay_ms(1000);
  3413  00D7  30E8               	movlw	232
  3414  00D8  00F4               	movwf	delay_ms@msec
  3415  00D9  3003               	movlw	3
  3416  00DA  00F5               	movwf	delay_ms@msec+1
  3417  00DB  3182  227B  3180   	fcall	_delay_ms
  3418                           
  3419                           ;main.c: 42: remote();
  3420  00DE  3183  2383  3180   	fcall	_remote
  3421                           
  3422                           ;main.c: 43: delay_ms(1000);
  3423  00E1  30E8               	movlw	232
  3424  00E2  00F4               	movwf	delay_ms@msec
  3425  00E3  3003               	movlw	3
  3426  00E4  00F5               	movwf	delay_ms@msec+1
  3427  00E5  3182  227B  3180   	fcall	_delay_ms
  3428  00E8                     l2592:	
  3429                           ;main.c: 44: while (1){
  3430                           
  3431                           
  3432                           ;main.c: 46: k = ReturnReg();
  3433  00E8  3184  243F  3180   	fcall	_ReturnReg
  3434  00EB  0020               	movlb	0	; select bank0
  3435  00EC  00EA               	movwf	??_main
  3436  00ED  01EB               	clrf	??_main+1
  3437  00EE  086A               	movf	??_main,w
  3438  00EF  0021               	movlb	1	; select bank1
  3439  00F0  00B4               	movwf	main@k^(0+128)
  3440  00F1  0020               	movlb	0	; select bank0
  3441  00F2  086B               	movf	??_main+1,w
  3442  00F3  0021               	movlb	1	; select bank1
  3443  00F4  00B5               	movwf	(main@k+1)^(0+128)
  3444                           
  3445                           ;main.c: 48: if (k == '$'){
  3446  00F5  3024               	movlw	36
  3447  00F6  0634               	xorwf	main@k^(0+128),w
  3448  00F7  0435               	iorwf	(main@k+1)^(0+128),w
  3449  00F8  1D03               	btfss	3,2
  3450  00F9  290A               	goto	l2600
  3451                           
  3452                           ;main.c: 49: RC5 = !RC5;
  3453  00FA  3020               	movlw	32
  3454  00FB  0020               	movlb	0	; select bank0
  3455  00FC  068E               	xorwf	14,f
  3456                           
  3457                           ;main.c: 50: RA2 = !RA2;
  3458  00FD  3004               	movlw	4
  3459  00FE  068C               	xorwf	12,f
  3460                           
  3461                           ;main.c: 51: RA1 = !RA1;
  3462  00FF  3002               	movlw	2
  3463  0100  068C               	xorwf	12,f
  3464                           
  3465                           ;main.c: 52: RA5 = !RA5;
  3466  0101  3020               	movlw	32
  3467  0102  068C               	xorwf	12,f
  3468                           
  3469                           ;main.c: 53: delay_ms(1000);
  3470  0103  30E8               	movlw	232
  3471  0104  00F4               	movwf	delay_ms@msec
  3472  0105  3003               	movlw	3
  3473  0106  00F5               	movwf	delay_ms@msec+1
  3474  0107  3182  227B  3180   	fcall	_delay_ms
  3475  010A                     l2600:	
  3476                           
  3477                           ;main.c: 54: }
  3478                           ;main.c: 57: if ( PORTCbits.RC4 == 0)
  3479  010A  0020               	movlb	0	; select bank0
  3480  010B  1A0E               	btfsc	14,4	;volatile
  3481  010C  291B               	goto	l310
  3482                           
  3483                           ;main.c: 58: {
  3484                           ;main.c: 61: RC5 = 1 ;
  3485  010D  168E               	bsf	14,5	;volatile
  3486                           
  3487                           ;main.c: 62: EUSART_Write('$');
  3488  010E  3024               	movlw	36
  3489  010F  3182  22A1  3180   	fcall	_EUSART_Write
  3490                           
  3491                           ;main.c: 66: EUSART_Write(10);
  3492  0112  300A               	movlw	10
  3493  0113  3182  22A1  3180   	fcall	_EUSART_Write
  3494                           
  3495                           ;main.c: 67: EUSART_Write(13);
  3496  0116  300D               	movlw	13
  3497  0117  3182  22A1  3180   	fcall	_EUSART_Write
  3498                           
  3499                           ;main.c: 73: }
  3500  011A  28E8               	goto	l2592
  3501  011B                     l310:	
  3502                           
  3503                           ;main.c: 74: else if (PORTCbits.RC4 == 1)
  3504  011B  1E0E               	btfss	14,4	;volatile
  3505  011C  28E8               	goto	l2592
  3506                           
  3507                           ;main.c: 75: {
  3508                           ;main.c: 77: RC5=0;
  3509  011D  128E               	bcf	14,5	;volatile
  3510  011E  28E8               	goto	l2592
  3511  011F                     __end_of_main:	
  3512                           
  3513                           	psect	text1
  3514  0383                     __ptext1:	
  3515 ;; *************** function _remote *****************
  3516 ;; Defined at:
  3517 ;;		line 71 in file "BLE_send.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3531 ;;      Params:         0       0       0       0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    3
  3538 ;; This function calls:
  3539 ;;		_EUSART_Write
  3540 ;; This function is called by:
  3541 ;;		_main
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function _remote
  3547  0383                     _remote:	
  3548                           
  3549                           ;BLE_send.c: 73: EUSART_Write ('!');
  3550                           
  3551                           ;incstack = 0
  3552                           ; Regs used in _remote: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3553  0383  3021               	movlw	33
  3554  0384  3182  22A1  3183   	fcall	_EUSART_Write
  3555                           
  3556                           ;BLE_send.c: 74: EUSART_Write (',');
  3557  0387  302C               	movlw	44
  3558  0388  3182  22A1  3183   	fcall	_EUSART_Write
  3559                           
  3560                           ;BLE_send.c: 75: EUSART_Write ('1');
  3561  038B  3031               	movlw	49
  3562  038C  3182  22A1  3183   	fcall	_EUSART_Write
  3563                           
  3564                           ;BLE_send.c: 79: EUSART_Write(13);
  3565  038F  300D               	movlw	13
  3566  0390  3182  22A1  3183   	fcall	_EUSART_Write
  3567                           
  3568                           ;BLE_send.c: 80: EUSART_Write(10);
  3569  0393  300A               	movlw	10
  3570  0394  3182  22A1         	fcall	_EUSART_Write
  3571  0396  0008               	return
  3572  0397                     __end_of_remote:	
  3573                           
  3574                           	psect	text2
  3575  003D                     __ptext2:	
  3576 ;; *************** function _init_B *****************
  3577 ;; Defined at:
  3578 ;;		line 106 in file "BLE_Receive.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  buf            64    9[BANK0 ] unsigned char [64]
  3583 ;;  error           1   73[BANK0 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3593 ;;      Params:         0       0       0       0       0       0       0       0
  3594 ;;      Locals:         0      65       0       0       0       0       0       0
  3595 ;;      Temps:          1       0       0       0       0       0       0       0
  3596 ;;      Totals:         1      65       0       0       0       0       0       0
  3597 ;;Total ram usage:       66 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    6
  3600 ;; This function calls:
  3601 ;;		_Partiel_Reset
  3602 ;;		_Reboot
  3603 ;;		_Set_Features
  3604 ;;		_Set_Mode
  3605 ;;		_Turn_On
  3606 ;;		_Verif_Erreur
  3607 ;;		_delay_ms
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _init_B
  3615  003D                     _init_B:	
  3616                           
  3617                           ;BLE_Receive.c: 108: unsigned char error = 0;
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _init_B: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3621  003D  0020               	movlb	0	; select bank0
  3622  003E  01E9               	clrf	init_B@error
  3623                           
  3624                           ;BLE_Receive.c: 109: char buf [64] = {0};
  3625  003F  3020               	movlw	low init_B@F4556
  3626  0040  0086               	movwf	6
  3627  0041  3001               	movlw	high init_B@F4556
  3628  0042  0087               	movwf	7
  3629  0043  3029               	movlw	low init_B@buf
  3630  0044  0084               	movwf	4
  3631  0045  3000               	movlw	high init_B@buf
  3632  0046  0085               	movwf	5
  3633  0047  3040               	movlw	64
  3634  0048  00F9               	movwf	??_init_B
  3635  0049                     u1780:	
  3636  0049  0016               	moviw fsr1++
  3637  004A  001A               	movwi fsr0++
  3638  004B  0BF9               	decfsz	??_init_B,f
  3639  004C  2849               	goto	u1780
  3640                           
  3641                           ;BLE_Receive.c: 111: do { LATCbits.LATC0 = 1; } while(0);
  3642  004D  0022               	movlb	2	; select bank2
  3643  004E  140E               	bsf	14,0	;volatile
  3644                           
  3645                           ;BLE_Receive.c: 113: Turn_On();
  3646  004F  3183  23CC  3180   	fcall	_Turn_On
  3647                           
  3648                           ;BLE_Receive.c: 114: error = Verif_Erreur(buf,64);
  3649  0052  3040               	movlw	64
  3650  0053  0020               	movlb	0	; select bank0
  3651  0054  00A0               	movwf	Verif_Erreur@size
  3652  0055  3000               	movlw	0
  3653  0056  00A1               	movwf	Verif_Erreur@size+1
  3654  0057  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3655  0058  3181  211F  3180   	fcall	_Verif_Erreur
  3656  005B  0020               	movlb	0	; select bank0
  3657  005C  0820               	movf	?_Verif_Erreur,w
  3658  005D  00F9               	movwf	??_init_B
  3659  005E  0879               	movf	??_init_B,w
  3660  005F  00E9               	movwf	init_B@error
  3661                           
  3662                           ;BLE_Receive.c: 116: delay_ms(1000);
  3663  0060  30E8               	movlw	232
  3664  0061  00F4               	movwf	delay_ms@msec
  3665  0062  3003               	movlw	3
  3666  0063  00F5               	movwf	delay_ms@msec+1
  3667  0064  3182  227B  3180   	fcall	_delay_ms
  3668                           
  3669                           ;BLE_Receive.c: 118: Partiel_Reset();
  3670  0067  3183  236B  3180   	fcall	_Partiel_Reset
  3671                           
  3672                           ;BLE_Receive.c: 119: error = Verif_Erreur(buf,64);
  3673  006A  3040               	movlw	64
  3674  006B  0020               	movlb	0	; select bank0
  3675  006C  00A0               	movwf	Verif_Erreur@size
  3676  006D  3000               	movlw	0
  3677  006E  00A1               	movwf	Verif_Erreur@size+1
  3678  006F  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3679  0070  3181  211F  3180   	fcall	_Verif_Erreur
  3680  0073  0020               	movlb	0	; select bank0
  3681  0074  0820               	movf	?_Verif_Erreur,w
  3682  0075  00F9               	movwf	??_init_B
  3683  0076  0879               	movf	??_init_B,w
  3684  0077  00E9               	movwf	init_B@error
  3685                           
  3686                           ;BLE_Receive.c: 121: Set_Mode();
  3687  0078  3182  2213  3180   	fcall	_Set_Mode
  3688                           
  3689                           ;BLE_Receive.c: 122: error = Verif_Erreur(buf,64);
  3690  007B  3040               	movlw	64
  3691  007C  0020               	movlb	0	; select bank0
  3692  007D  00A0               	movwf	Verif_Erreur@size
  3693  007E  3000               	movlw	0
  3694  007F  00A1               	movwf	Verif_Erreur@size+1
  3695  0080  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3696  0081  3181  211F  3180   	fcall	_Verif_Erreur
  3697  0084  0020               	movlb	0	; select bank0
  3698  0085  0820               	movf	?_Verif_Erreur,w
  3699  0086  00F9               	movwf	??_init_B
  3700  0087  0879               	movf	??_init_B,w
  3701  0088  00E9               	movwf	init_B@error
  3702                           
  3703                           ;BLE_Receive.c: 124: Set_Features();
  3704  0089  3182  2247  3180   	fcall	_Set_Features
  3705                           
  3706                           ;BLE_Receive.c: 125: error = Verif_Erreur(buf,64);
  3707  008C  3040               	movlw	64
  3708  008D  0020               	movlb	0	; select bank0
  3709  008E  00A0               	movwf	Verif_Erreur@size
  3710  008F  3000               	movlw	0
  3711  0090  00A1               	movwf	Verif_Erreur@size+1
  3712  0091  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3713  0092  3181  211F  3180   	fcall	_Verif_Erreur
  3714  0095  0020               	movlb	0	; select bank0
  3715  0096  0820               	movf	?_Verif_Erreur,w
  3716  0097  00F9               	movwf	??_init_B
  3717  0098  0879               	movf	??_init_B,w
  3718  0099  00E9               	movwf	init_B@error
  3719                           
  3720                           ;BLE_Receive.c: 127: Reboot();
  3721  009A  3183  2397  3180   	fcall	_Reboot
  3722                           
  3723                           ;BLE_Receive.c: 128: error = Verif_Erreur(buf,64);
  3724  009D  3040               	movlw	64
  3725  009E  0020               	movlb	0	; select bank0
  3726  009F  00A0               	movwf	Verif_Erreur@size
  3727  00A0  3000               	movlw	0
  3728  00A1  00A1               	movwf	Verif_Erreur@size+1
  3729  00A2  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  3730  00A3  3181  211F  3180   	fcall	_Verif_Erreur
  3731  00A6  0020               	movlb	0	; select bank0
  3732  00A7  0820               	movf	?_Verif_Erreur,w
  3733  00A8  00F9               	movwf	??_init_B
  3734  00A9  0879               	movf	??_init_B,w
  3735  00AA  00E9               	movwf	init_B@error
  3736                           
  3737                           ;BLE_Receive.c: 130: delay_ms(1000);
  3738  00AB  30E8               	movlw	232
  3739  00AC  00F4               	movwf	delay_ms@msec
  3740  00AD  3003               	movlw	3
  3741  00AE  00F5               	movwf	delay_ms@msec+1
  3742  00AF  3182  227B         	fcall	_delay_ms
  3743  00B1  0008               	return
  3744  00B2                     __end_of_init_B:	
  3745                           
  3746                           	psect	text3
  3747  011F                     __ptext3:	
  3748 ;; *************** function _Verif_Erreur *****************
  3749 ;; Defined at:
  3750 ;;		line 78 in file "BLE_Receive.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  buf             1    wreg     PTR unsigned char 
  3753 ;;		 -> init_B@buf(64), 
  3754 ;;  size            2    0[BANK0 ] unsigned int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  3757 ;;		 -> init_B@buf(64), 
  3758 ;;  j               2    6[BANK0 ] int 
  3759 ;;  i               2    4[BANK0 ] unsigned int 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2    0[BANK0 ] int 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3769 ;;      Params:         0       2       0       0       0       0       0       0
  3770 ;;      Locals:         0       5       0       0       0       0       0       0
  3771 ;;      Temps:          0       2       0       0       0       0       0       0
  3772 ;;      Totals:         0       9       0       0       0       0       0       0
  3773 ;;Total ram usage:        9 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    5
  3776 ;; This function calls:
  3777 ;;		_EUSART_Read
  3778 ;;		_delay_ms
  3779 ;; This function is called by:
  3780 ;;		_init_B
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _Verif_Erreur
  3786  011F                     _Verif_Erreur:	
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _Verif_Erreur: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3790                           ;Verif_Erreur@buf stored from wreg
  3791  011F  0020               	movlb	0	; select bank0
  3792  0120  00A8               	movwf	Verif_Erreur@buf
  3793                           
  3794                           ;BLE_Receive.c: 81: unsigned int i = 0;
  3795  0121  01A4               	clrf	Verif_Erreur@i
  3796  0122  01A5               	clrf	Verif_Erreur@i+1
  3797                           
  3798                           ;BLE_Receive.c: 82: int j = 0;
  3799  0123  01A6               	clrf	Verif_Erreur@j
  3800  0124  01A7               	clrf	Verif_Erreur@j+1
  3801  0125                     l2338:	
  3802                           ;BLE_Receive.c: 83: do{
  3803                           
  3804                           
  3805                           ;BLE_Receive.c: 84: delay_ms(5);
  3806  0125  3005               	movlw	5
  3807  0126  00F4               	movwf	delay_ms@msec
  3808  0127  3000               	movlw	0
  3809  0128  00F5               	movwf	delay_ms@msec+1
  3810  0129  3182  227B  3181   	fcall	_delay_ms
  3811                           
  3812                           ;BLE_Receive.c: 85: j++;
  3813  012C  3001               	movlw	1
  3814  012D  0020               	movlb	0	; select bank0
  3815  012E  07A6               	addwf	Verif_Erreur@j,f
  3816  012F  3000               	movlw	0
  3817  0130  3DA7               	addwfc	Verif_Erreur@j+1,f
  3818                           
  3819                           ;BLE_Receive.c: 86: if (j == 10) return -1;
  3820  0131  300A               	movlw	10
  3821  0132  0626               	xorwf	Verif_Erreur@j,w
  3822  0133  0427               	iorwf	Verif_Erreur@j+1,w
  3823  0134  1D03               	btfss	3,2
  3824  0135  293B               	goto	l2348
  3825  0136  30FF               	movlw	255
  3826  0137  00A0               	movwf	?_Verif_Erreur
  3827  0138  30FF               	movlw	255
  3828  0139  00A1               	movwf	?_Verif_Erreur+1
  3829  013A  0008               	return
  3830  013B                     l2348:	
  3831                           
  3832                           ;BLE_Receive.c: 87: }while (eusartRxCount <= 0);
  3833  013B  087A               	movf	_eusartRxCount,w	;volatile
  3834  013C  1D03               	btfss	3,2
  3835  013D  2980               	goto	l2376
  3836  013E  2925               	goto	l2338
  3837  013F                     l2350:	
  3838                           ;BLE_Receive.c: 89: while (eusartRxCount > 0){
  3839                           
  3840                           
  3841                           ;BLE_Receive.c: 90: buf[i] = EUSART_Read();
  3842  013F  3182  22FE  3181   	fcall	_EUSART_Read
  3843  0142  0020               	movlb	0	; select bank0
  3844  0143  00A2               	movwf	??_Verif_Erreur
  3845  0144  0824               	movf	Verif_Erreur@i,w
  3846  0145  0728               	addwf	Verif_Erreur@buf,w
  3847  0146  00A3               	movwf	??_Verif_Erreur+1
  3848  0147  0823               	movf	??_Verif_Erreur+1,w
  3849  0148  0086               	movwf	6
  3850  0149  0187               	clrf	7
  3851  014A  0822               	movf	??_Verif_Erreur,w
  3852  014B  0081               	movwf	1
  3853                           
  3854                           ;BLE_Receive.c: 91: i++;
  3855  014C  3001               	movlw	1
  3856  014D  07A4               	addwf	Verif_Erreur@i,f
  3857  014E  3000               	movlw	0
  3858  014F  3DA5               	addwfc	Verif_Erreur@i+1,f
  3859                           
  3860                           ;BLE_Receive.c: 92: if (i == size){
  3861  0150  0821               	movf	Verif_Erreur@size+1,w
  3862  0151  0625               	xorwf	Verif_Erreur@i+1,w
  3863  0152  1D03               	skipz
  3864  0153  2956               	goto	u1575
  3865  0154  0820               	movf	Verif_Erreur@size,w
  3866  0155  0624               	xorwf	Verif_Erreur@i,w
  3867  0156                     u1575:	
  3868  0156  1903               	btfsc	3,2
  3869  0157  2966               	goto	l2364
  3870  0158  296F               	goto	l2370
  3871  0159                     l2358:	
  3872                           ;BLE_Receive.c: 93: while (eusartRxCount > 0){
  3873                           
  3874                           
  3875                           ;BLE_Receive.c: 94: EUSART_Read();
  3876  0159  3182  22FE  3181   	fcall	_EUSART_Read
  3877                           
  3878                           ;BLE_Receive.c: 95: if (eusartRxCount == 0) delay_ms(5);
  3879  015C  087A               	movf	_eusartRxCount,w	;volatile
  3880  015D  1D03               	btfss	3,2
  3881  015E  2966               	goto	l2364
  3882  015F  3005               	movlw	5
  3883  0160  00F4               	movwf	delay_ms@msec
  3884  0161  3000               	movlw	0
  3885  0162  00F5               	movwf	delay_ms@msec+1
  3886  0163  3182  227B  3181   	fcall	_delay_ms
  3887  0166                     l2364:	
  3888  0166  087A               	movf	_eusartRxCount,w	;volatile
  3889  0167  1D03               	btfss	3,2
  3890  0168  2959               	goto	l2358
  3891                           
  3892                           ;BLE_Receive.c: 96: }
  3893                           ;BLE_Receive.c: 97: return -2;
  3894  0169  30FE               	movlw	254
  3895  016A  0020               	movlb	0	; select bank0
  3896  016B  00A0               	movwf	?_Verif_Erreur
  3897  016C  30FF               	movlw	255
  3898  016D  00A1               	movwf	?_Verif_Erreur+1
  3899  016E  0008               	return
  3900  016F                     l2370:	
  3901                           
  3902                           ;BLE_Receive.c: 98: }
  3903                           ;BLE_Receive.c: 99: delay_ms(1);
  3904  016F  3001               	movlw	1
  3905  0170  00F4               	movwf	delay_ms@msec
  3906  0171  3000               	movlw	0
  3907  0172  00F5               	movwf	delay_ms@msec+1
  3908  0173  3182  227B  3181   	fcall	_delay_ms
  3909                           
  3910                           ;BLE_Receive.c: 100: if (eusartRxCount == 0) delay_ms(4);
  3911  0176  087A               	movf	_eusartRxCount,w	;volatile
  3912  0177  1D03               	btfss	3,2
  3913  0178  2980               	goto	l2376
  3914  0179  3004               	movlw	4
  3915  017A  00F4               	movwf	delay_ms@msec
  3916  017B  3000               	movlw	0
  3917  017C  00F5               	movwf	delay_ms@msec+1
  3918  017D  3182  227B  3181   	fcall	_delay_ms
  3919  0180                     l2376:	
  3920  0180  087A               	movf	_eusartRxCount,w	;volatile
  3921  0181  1D03               	btfss	3,2
  3922  0182  293F               	goto	l2350
  3923                           
  3924                           ;BLE_Receive.c: 101: }
  3925                           ;BLE_Receive.c: 102: return j;
  3926  0183  0020               	movlb	0	; select bank0
  3927  0184  0827               	movf	Verif_Erreur@j+1,w
  3928  0185  00A1               	movwf	?_Verif_Erreur+1
  3929  0186  0826               	movf	Verif_Erreur@j,w
  3930  0187  00A0               	movwf	?_Verif_Erreur
  3931  0188  0008               	return
  3932  0189                     __end_of_Verif_Erreur:	
  3933                           
  3934                           	psect	text4
  3935  027B                     __ptext4:	
  3936 ;; *************** function _delay_ms *****************
  3937 ;; Defined at:
  3938 ;;		line 7 in file "delay.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  msec            2    4[COMMON] int 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  x               2    7[COMMON] int 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, pclath, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3952 ;;      Params:         2       0       0       0       0       0       0       0
  3953 ;;      Locals:         2       0       0       0       0       0       0       0
  3954 ;;      Temps:          1       0       0       0       0       0       0       0
  3955 ;;      Totals:         5       0       0       0       0       0       0       0
  3956 ;;Total ram usage:        5 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    4
  3959 ;; This function calls:
  3960 ;;		_TMR1_Reload
  3961 ;;		_TMR1_StartTimer
  3962 ;;		_TMR1_StopTimer
  3963 ;; This function is called by:
  3964 ;;		_main
  3965 ;;		_Verif_Erreur
  3966 ;;		_init_B
  3967 ;;		_connexion
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           
  3972                           ;psect for function _delay_ms
  3973  027B                     _delay_ms:	
  3974                           
  3975                           ;delay.c: 8: TMR1_StartTimer();
  3976                           
  3977                           ;incstack = 0
  3978                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3979  027B  3184  243C  3182   	fcall	_TMR1_StartTimer
  3980                           
  3981                           ;delay.c: 9: TMR1_Reload();
  3982  027E  3183  23ED  3182   	fcall	_TMR1_Reload
  3983                           
  3984                           ;delay.c: 10: TMR1IF = 0;
  3985  0281  0020               	movlb	0	; select bank0
  3986  0282  1011               	bcf	17,0	;volatile
  3987                           
  3988                           ;delay.c: 11: for (int x = 0; x < msec; x++){
  3989  0283  01F7               	clrf	delay_ms@x
  3990  0284  01F8               	clrf	delay_ms@x+1
  3991  0285                     l2256:	
  3992  0285  0878               	movf	delay_ms@x+1,w
  3993  0286  3A80               	xorlw	128
  3994  0287  00F6               	movwf	??_delay_ms
  3995  0288  0875               	movf	delay_ms@msec+1,w
  3996  0289  3A80               	xorlw	128
  3997  028A  0276               	subwf	??_delay_ms,w
  3998  028B  1D03               	skipz
  3999  028C  2A8F               	goto	u1525
  4000  028D  0874               	movf	delay_ms@msec,w
  4001  028E  0277               	subwf	delay_ms@x,w
  4002  028F                     u1525:	
  4003  028F  1803               	btfsc	3,0
  4004  0290  2A9E               	goto	l2258
  4005  0291                     l380:	
  4006                           ;delay.c: 12: while(!TMR1IF);
  4007                           
  4008  0291  0020               	movlb	0	; select bank0
  4009  0292  1C11               	btfss	17,0	;volatile
  4010  0293  2A91               	goto	l380
  4011                           
  4012                           ;delay.c: 13: TMR1_Reload();
  4013  0294  3183  23ED  3182   	fcall	_TMR1_Reload
  4014                           
  4015                           ;delay.c: 14: TMR1IF = 0;
  4016  0297  0020               	movlb	0	; select bank0
  4017  0298  1011               	bcf	17,0	;volatile
  4018  0299  3001               	movlw	1
  4019  029A  07F7               	addwf	delay_ms@x,f
  4020  029B  3000               	movlw	0
  4021  029C  3DF8               	addwfc	delay_ms@x+1,f
  4022  029D  2A85               	goto	l2256
  4023  029E                     l2258:	
  4024                           
  4025                           ;delay.c: 15: }
  4026                           ;delay.c: 16: TMR1_StopTimer();
  4027  029E  3184  2439         	fcall	_TMR1_StopTimer
  4028  02A0  0008               	return
  4029  02A1                     __end_of_delay_ms:	
  4030                           
  4031                           	psect	text5
  4032  0439                     __ptext5:	
  4033 ;; *************** function _TMR1_StopTimer *****************
  4034 ;; Defined at:
  4035 ;;		line 91 in file "mcc_generated_files/tmr1.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		None
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4049 ;;      Params:         0       0       0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0
  4052 ;;      Totals:         0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    2
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_delay_ms
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _TMR1_StopTimer
  4065  0439                     _TMR1_StopTimer:	
  4066                           
  4067                           ;tmr1.c: 94: T1CONbits.TMR1ON = 0;
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _TMR1_StopTimer: []
  4071  0439  0020               	movlb	0	; select bank0
  4072  043A  1018               	bcf	24,0	;volatile
  4073  043B  0008               	return
  4074  043C                     __end_of_TMR1_StopTimer:	
  4075                           
  4076                           	psect	text6
  4077  043C                     __ptext6:	
  4078 ;; *************** function _TMR1_StartTimer *****************
  4079 ;; Defined at:
  4080 ;;		line 85 in file "mcc_generated_files/tmr1.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		None
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4094 ;;      Params:         0       0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    2
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_delay_ms
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _TMR1_StartTimer
  4110  043C                     _TMR1_StartTimer:	
  4111                           
  4112                           ;tmr1.c: 88: T1CONbits.TMR1ON = 1;
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _TMR1_StartTimer: []
  4116  043C  0020               	movlb	0	; select bank0
  4117  043D  1418               	bsf	24,0	;volatile
  4118  043E  0008               	return
  4119  043F                     __end_of_TMR1_StartTimer:	
  4120                           
  4121                           	psect	text7
  4122  03ED                     __ptext7:	
  4123 ;; *************** function _TMR1_Reload *****************
  4124 ;; Defined at:
  4125 ;;		line 134 in file "mcc_generated_files/tmr1.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, pclath, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4139 ;;      Params:         0       0       0       0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    3
  4146 ;; This function calls:
  4147 ;;		_TMR1_WriteTimer
  4148 ;; This function is called by:
  4149 ;;		_delay_ms
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _TMR1_Reload
  4155  03ED                     _TMR1_Reload:	
  4156                           
  4157                           ;tmr1.c: 136: TMR1_WriteTimer(timer1ReloadVal);
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  4161  03ED  0021               	movlb	1	; select bank1
  4162  03EE  0831               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  4163  03EF  00F3               	movwf	TMR1_WriteTimer@timerVal+1
  4164  03F0  0830               	movf	_timer1ReloadVal^(0+128),w	;volatile
  4165  03F1  00F2               	movwf	TMR1_WriteTimer@timerVal
  4166  03F2  3183  23BD         	fcall	_TMR1_WriteTimer
  4167  03F4  0008               	return
  4168  03F5                     __end_of_TMR1_Reload:	
  4169                           
  4170                           	psect	text8
  4171  03BD                     __ptext8:	
  4172 ;; *************** function _TMR1_WriteTimer *****************
  4173 ;; Defined at:
  4174 ;;		line 112 in file "mcc_generated_files/tmr1.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  timerVal        2    2[COMMON] unsigned int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4188 ;;      Params:         2       0       0       0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0
  4191 ;;      Totals:         2       0       0       0       0       0       0       0
  4192 ;;Total ram usage:        2 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    2
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_TMR1_Reload
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _TMR1_WriteTimer
  4204  03BD                     _TMR1_WriteTimer:	
  4205                           
  4206                           ;tmr1.c: 114: if (T1CONbits.nT1SYNC == 1)
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4210  03BD  0020               	movlb	0	; select bank0
  4211  03BE  1D18               	btfss	24,2	;volatile
  4212  03BF  2BC7               	goto	l2192
  4213                           
  4214                           ;tmr1.c: 115: {
  4215                           ;tmr1.c: 117: T1CONbits.TMR1ON = 0;
  4216  03C0  1018               	bcf	24,0	;volatile
  4217                           
  4218                           ;tmr1.c: 120: TMR1H = (timerVal >> 8);
  4219  03C1  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  4220  03C2  0097               	movwf	23	;volatile
  4221                           
  4222                           ;tmr1.c: 121: TMR1L = timerVal;
  4223  03C3  0872               	movf	TMR1_WriteTimer@timerVal,w
  4224  03C4  0096               	movwf	22	;volatile
  4225                           
  4226                           ;tmr1.c: 124: T1CONbits.TMR1ON =1;
  4227  03C5  1418               	bsf	24,0	;volatile
  4228                           
  4229                           ;tmr1.c: 125: }
  4230  03C6  0008               	return
  4231  03C7                     l2192:	
  4232                           
  4233                           ;tmr1.c: 126: else
  4234                           ;tmr1.c: 127: {
  4235                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  4236  03C7  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  4237  03C8  0097               	movwf	23	;volatile
  4238                           
  4239                           ;tmr1.c: 130: TMR1L = timerVal;
  4240  03C9  0872               	movf	TMR1_WriteTimer@timerVal,w
  4241  03CA  0096               	movwf	22	;volatile
  4242  03CB  0008               	return
  4243  03CC                     __end_of_TMR1_WriteTimer:	
  4244                           
  4245                           	psect	text9
  4246  02FE                     __ptext9:	
  4247 ;; *************** function _EUSART_Read *****************
  4248 ;; Defined at:
  4249 ;;		line 108 in file "mcc_generated_files/eusart.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  readValue       1    3[COMMON] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      unsigned char 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4263 ;;      Params:         0       0       0       0       0       0       0       0
  4264 ;;      Locals:         1       0       0       0       0       0       0       0
  4265 ;;      Temps:          1       0       0       0       0       0       0       0
  4266 ;;      Totals:         2       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        2 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_Verif_Erreur
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _EUSART_Read
  4279  02FE                     _EUSART_Read:	
  4280                           
  4281                           ;eusart.c: 110: uint8_t readValue = 0;
  4282                           
  4283                           ;incstack = 0
  4284                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4285  02FE  01F3               	clrf	EUSART_Read@readValue
  4286  02FF                     l2204:	
  4287                           ;eusart.c: 113: {
  4288                           
  4289                           ;eusart.c: 112: while(0 == eusartRxCount)
  4290                           
  4291  02FF  087A               	movf	_eusartRxCount,w	;volatile
  4292  0300  1903               	btfsc	3,2
  4293  0301  2AFF               	goto	l2204
  4294                           
  4295                           ;eusart.c: 114: }
  4296                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
  4297  0302  0020               	movlb	0	; select bank0
  4298  0303  086C               	movf	_eusartRxTail,w
  4299  0304  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4300  0305  0086               	movwf	6
  4301  0306  0187               	clrf	7
  4302  0307  0801               	movf	1,w
  4303  0308  00F2               	movwf	??_EUSART_Read
  4304  0309  0872               	movf	??_EUSART_Read,w
  4305  030A  00F3               	movwf	EUSART_Read@readValue
  4306  030B  3001               	movlw	1
  4307  030C  00F2               	movwf	??_EUSART_Read
  4308  030D  0872               	movf	??_EUSART_Read,w
  4309  030E  07EC               	addwf	_eusartRxTail,f	;volatile
  4310                           
  4311                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4312  030F  3008               	movlw	8
  4313  0310  026C               	subwf	_eusartRxTail,w	;volatile
  4314  0311  1803               	btfsc	3,0
  4315                           
  4316                           ;eusart.c: 118: {
  4317                           ;eusart.c: 119: eusartRxTail = 0;
  4318  0312  01EC               	clrf	_eusartRxTail	;volatile
  4319                           
  4320                           ;eusart.c: 120: }
  4321                           ;eusart.c: 121: PIE1bits.RCIE = 0;
  4322  0313  0021               	movlb	1	; select bank1
  4323  0314  1291               	bcf	17,5	;volatile
  4324                           
  4325                           ;eusart.c: 122: eusartRxCount--;
  4326  0315  3001               	movlw	1
  4327  0316  02FA               	subwf	_eusartRxCount,f	;volatile
  4328                           
  4329                           ;eusart.c: 123: PIE1bits.RCIE = 1;
  4330  0317  1691               	bsf	17,5	;volatile
  4331                           
  4332                           ;eusart.c: 125: return readValue;
  4333  0318  0873               	movf	EUSART_Read@readValue,w
  4334  0319  0008               	return
  4335  031A                     __end_of_EUSART_Read:	
  4336                           
  4337                           	psect	text10
  4338  03CC                     __ptext10:	
  4339 ;; *************** function _Turn_On *****************
  4340 ;; Defined at:
  4341 ;;		line 70 in file "BLE_Receive.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4355 ;;      Params:         0       0       0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		_EUSART_Write
  4364 ;; This function is called by:
  4365 ;;		_init_B
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _Turn_On
  4371  03CC                     _Turn_On:	
  4372                           
  4373                           ;BLE_Receive.c: 72: EUSART_Write('+');
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in _Turn_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4377  03CC  302B               	movlw	43
  4378  03CD  3182  22A1  3183   	fcall	_EUSART_Write
  4379                           
  4380                           ;BLE_Receive.c: 74: EUSART_Write(13);
  4381  03D0  300D               	movlw	13
  4382  03D1  3182  22A1  3183   	fcall	_EUSART_Write
  4383                           
  4384                           ;BLE_Receive.c: 75: EUSART_Write(10);
  4385  03D4  300A               	movlw	10
  4386  03D5  3182  22A1         	fcall	_EUSART_Write
  4387  03D7  0008               	return
  4388  03D8                     __end_of_Turn_On:	
  4389                           
  4390                           	psect	text11
  4391  0213                     __ptext11:	
  4392 ;; *************** function _Set_Mode *****************
  4393 ;; Defined at:
  4394 ;;		line 39 in file "BLE_Receive.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4408 ;;      Params:         0       0       0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0
  4411 ;;      Totals:         0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    3
  4415 ;; This function calls:
  4416 ;;		_EUSART_Write
  4417 ;; This function is called by:
  4418 ;;		_init_B
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _Set_Mode
  4424  0213                     _Set_Mode:	
  4425                           
  4426                           ;BLE_Receive.c: 42: EUSART_Write('S');
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _Set_Mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4430  0213  3053               	movlw	83
  4431  0214  3182  22A1  3182   	fcall	_EUSART_Write
  4432                           
  4433                           ;BLE_Receive.c: 43: EUSART_Write('S');
  4434  0217  3053               	movlw	83
  4435  0218  3182  22A1  3182   	fcall	_EUSART_Write
  4436                           
  4437                           ;BLE_Receive.c: 44: EUSART_Write(',');
  4438  021B  302C               	movlw	44
  4439  021C  3182  22A1  3182   	fcall	_EUSART_Write
  4440                           
  4441                           ;BLE_Receive.c: 45: EUSART_Write('3');
  4442  021F  3033               	movlw	51
  4443  0220  3182  22A1  3182   	fcall	_EUSART_Write
  4444                           
  4445                           ;BLE_Receive.c: 46: EUSART_Write('0');
  4446  0223  3030               	movlw	48
  4447  0224  3182  22A1  3182   	fcall	_EUSART_Write
  4448                           
  4449                           ;BLE_Receive.c: 47: EUSART_Write('0');
  4450  0227  3030               	movlw	48
  4451  0228  3182  22A1  3182   	fcall	_EUSART_Write
  4452                           
  4453                           ;BLE_Receive.c: 48: EUSART_Write('0');
  4454  022B  3030               	movlw	48
  4455  022C  3182  22A1  3182   	fcall	_EUSART_Write
  4456                           
  4457                           ;BLE_Receive.c: 49: EUSART_Write('0');
  4458  022F  3030               	movlw	48
  4459  0230  3182  22A1  3182   	fcall	_EUSART_Write
  4460                           
  4461                           ;BLE_Receive.c: 50: EUSART_Write('0');
  4462  0233  3030               	movlw	48
  4463  0234  3182  22A1  3182   	fcall	_EUSART_Write
  4464                           
  4465                           ;BLE_Receive.c: 51: EUSART_Write('0');
  4466  0237  3030               	movlw	48
  4467  0238  3182  22A1  3182   	fcall	_EUSART_Write
  4468                           
  4469                           ;BLE_Receive.c: 52: EUSART_Write('0');
  4470  023B  3030               	movlw	48
  4471  023C  3182  22A1  3182   	fcall	_EUSART_Write
  4472                           
  4473                           ;BLE_Receive.c: 55: EUSART_Write(13);
  4474  023F  300D               	movlw	13
  4475  0240  3182  22A1  3182   	fcall	_EUSART_Write
  4476                           
  4477                           ;BLE_Receive.c: 56: EUSART_Write(10);
  4478  0243  300A               	movlw	10
  4479  0244  3182  22A1         	fcall	_EUSART_Write
  4480  0246  0008               	return
  4481  0247                     __end_of_Set_Mode:	
  4482                           
  4483                           	psect	text12
  4484  0247                     __ptext12:	
  4485 ;; *************** function _Set_Features *****************
  4486 ;; Defined at:
  4487 ;;		line 20 in file "BLE_Receive.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4501 ;;      Params:         0       0       0       0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    3
  4508 ;; This function calls:
  4509 ;;		_EUSART_Write
  4510 ;; This function is called by:
  4511 ;;		_init_B
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _Set_Features
  4517  0247                     _Set_Features:	
  4518                           
  4519                           ;BLE_Receive.c: 22: EUSART_Write('S');
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _Set_Features: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4523  0247  3053               	movlw	83
  4524  0248  3182  22A1  3182   	fcall	_EUSART_Write
  4525                           
  4526                           ;BLE_Receive.c: 23: EUSART_Write('R');
  4527  024B  3052               	movlw	82
  4528  024C  3182  22A1  3182   	fcall	_EUSART_Write
  4529                           
  4530                           ;BLE_Receive.c: 24: EUSART_Write(',');
  4531  024F  302C               	movlw	44
  4532  0250  3182  22A1  3182   	fcall	_EUSART_Write
  4533                           
  4534                           ;BLE_Receive.c: 26: EUSART_Write('3');
  4535  0253  3033               	movlw	51
  4536  0254  3182  22A1  3182   	fcall	_EUSART_Write
  4537                           
  4538                           ;BLE_Receive.c: 27: EUSART_Write('2');
  4539  0257  3032               	movlw	50
  4540  0258  3182  22A1  3182   	fcall	_EUSART_Write
  4541                           
  4542                           ;BLE_Receive.c: 28: EUSART_Write('0');
  4543  025B  3030               	movlw	48
  4544  025C  3182  22A1  3182   	fcall	_EUSART_Write
  4545                           
  4546                           ;BLE_Receive.c: 29: EUSART_Write('0');
  4547  025F  3030               	movlw	48
  4548  0260  3182  22A1  3182   	fcall	_EUSART_Write
  4549                           
  4550                           ;BLE_Receive.c: 30: EUSART_Write('0');
  4551  0263  3030               	movlw	48
  4552  0264  3182  22A1  3182   	fcall	_EUSART_Write
  4553                           
  4554                           ;BLE_Receive.c: 31: EUSART_Write('0');
  4555  0267  3030               	movlw	48
  4556  0268  3182  22A1  3182   	fcall	_EUSART_Write
  4557                           
  4558                           ;BLE_Receive.c: 32: EUSART_Write('0');
  4559  026B  3030               	movlw	48
  4560  026C  3182  22A1  3182   	fcall	_EUSART_Write
  4561                           
  4562                           ;BLE_Receive.c: 33: EUSART_Write('0');
  4563  026F  3030               	movlw	48
  4564  0270  3182  22A1  3182   	fcall	_EUSART_Write
  4565                           
  4566                           ;BLE_Receive.c: 35: EUSART_Write(13);
  4567  0273  300D               	movlw	13
  4568  0274  3182  22A1  3182   	fcall	_EUSART_Write
  4569                           
  4570                           ;BLE_Receive.c: 36: EUSART_Write(10);
  4571  0277  300A               	movlw	10
  4572  0278  3182  22A1         	fcall	_EUSART_Write
  4573  027A  0008               	return
  4574  027B                     __end_of_Set_Features:	
  4575                           
  4576                           	psect	text13
  4577  0397                     __ptext13:	
  4578 ;; *************** function _Reboot *****************
  4579 ;; Defined at:
  4580 ;;		line 60 in file "BLE_Receive.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4594 ;;      Params:         0       0       0       0       0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    3
  4601 ;; This function calls:
  4602 ;;		_EUSART_Write
  4603 ;; This function is called by:
  4604 ;;		_init_B
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function _Reboot
  4610  0397                     _Reboot:	
  4611                           
  4612                           ;BLE_Receive.c: 62: EUSART_Write('R');
  4613                           
  4614                           ;incstack = 0
  4615                           ; Regs used in _Reboot: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4616  0397  3052               	movlw	82
  4617  0398  3182  22A1  3183   	fcall	_EUSART_Write
  4618                           
  4619                           ;BLE_Receive.c: 63: EUSART_Write(',');
  4620  039B  302C               	movlw	44
  4621  039C  3182  22A1  3183   	fcall	_EUSART_Write
  4622                           
  4623                           ;BLE_Receive.c: 64: EUSART_Write('1');
  4624  039F  3031               	movlw	49
  4625  03A0  3182  22A1  3183   	fcall	_EUSART_Write
  4626                           
  4627                           ;BLE_Receive.c: 66: EUSART_Write(13);
  4628  03A3  300D               	movlw	13
  4629  03A4  3182  22A1  3183   	fcall	_EUSART_Write
  4630                           
  4631                           ;BLE_Receive.c: 67: EUSART_Write(10);
  4632  03A7  300A               	movlw	10
  4633  03A8  3182  22A1         	fcall	_EUSART_Write
  4634  03AA  0008               	return
  4635  03AB                     __end_of_Reboot:	
  4636                           
  4637                           	psect	text14
  4638  036B                     __ptext14:	
  4639 ;; *************** function _Partiel_Reset *****************
  4640 ;; Defined at:
  4641 ;;		line 7 in file "BLE_Receive.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4655 ;;      Params:         0       0       0       0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    3
  4662 ;; This function calls:
  4663 ;;		_EUSART_Write
  4664 ;; This function is called by:
  4665 ;;		_init_B
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _Partiel_Reset
  4671  036B                     _Partiel_Reset:	
  4672                           
  4673                           ;BLE_Receive.c: 10: EUSART_Write('S');
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _Partiel_Reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4677  036B  3053               	movlw	83
  4678  036C  3182  22A1  3183   	fcall	_EUSART_Write
  4679                           
  4680                           ;BLE_Receive.c: 11: EUSART_Write('F');
  4681  036F  3046               	movlw	70
  4682  0370  3182  22A1  3183   	fcall	_EUSART_Write
  4683                           
  4684                           ;BLE_Receive.c: 12: EUSART_Write(',');
  4685  0373  302C               	movlw	44
  4686  0374  3182  22A1  3183   	fcall	_EUSART_Write
  4687                           
  4688                           ;BLE_Receive.c: 13: EUSART_Write('1');
  4689  0377  3031               	movlw	49
  4690  0378  3182  22A1  3183   	fcall	_EUSART_Write
  4691                           
  4692                           ;BLE_Receive.c: 15: EUSART_Write(13);
  4693  037B  300D               	movlw	13
  4694  037C  3182  22A1  3183   	fcall	_EUSART_Write
  4695                           
  4696                           ;BLE_Receive.c: 16: EUSART_Write(10);
  4697  037F  300A               	movlw	10
  4698  0380  3182  22A1         	fcall	_EUSART_Write
  4699  0382  0008               	return
  4700  0383                     __end_of_Partiel_Reset:	
  4701                           
  4702                           	psect	text15
  4703  02A1                     __ptext15:	
  4704 ;; *************** function _EUSART_Write *****************
  4705 ;; Defined at:
  4706 ;;		line 128 in file "mcc_generated_files/eusart.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  txData          1    wreg     unsigned char 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  txData          1    3[COMMON] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4720 ;;      Params:         0       0       0       0       0       0       0       0
  4721 ;;      Locals:         1       0       0       0       0       0       0       0
  4722 ;;      Temps:          1       0       0       0       0       0       0       0
  4723 ;;      Totals:         2       0       0       0       0       0       0       0
  4724 ;;Total ram usage:        2 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    2
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_main
  4731 ;;		_Partiel_Reset
  4732 ;;		_Set_Features
  4733 ;;		_Set_Mode
  4734 ;;		_Reboot
  4735 ;;		_Turn_On
  4736 ;;		_remote
  4737 ;;		_Scan
  4738 ;;		_StopScan
  4739 ;;		_connexion
  4740 ;;		_WriteOnBt
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _EUSART_Write
  4746  02A1                     _EUSART_Write:	
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4750                           ;EUSART_Write@txData stored from wreg
  4751  02A1  00F3               	movwf	EUSART_Write@txData
  4752  02A2                     l2226:	
  4753                           ;eusart.c: 131: {
  4754                           
  4755                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
  4756                           
  4757  02A2  0021               	movlb	1	; select bank1
  4758  02A3  0832               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  4759  02A4  1903               	btfsc	3,2
  4760  02A5  2AA2               	goto	l2226
  4761                           
  4762                           ;eusart.c: 132: }
  4763                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
  4764  02A6  1A11               	btfsc	17,4	;volatile
  4765  02A7  2AAC               	goto	l181
  4766                           
  4767                           ;eusart.c: 135: {
  4768                           ;eusart.c: 136: TXREG = txData;
  4769  02A8  0873               	movf	EUSART_Write@txData,w
  4770  02A9  0023               	movlb	3	; select bank3
  4771  02AA  009A               	movwf	26	;volatile
  4772                           
  4773                           ;eusart.c: 137: }
  4774  02AB  2ABF               	goto	l2240
  4775  02AC                     l181:	
  4776                           
  4777                           ;eusart.c: 138: else
  4778                           ;eusart.c: 139: {
  4779                           ;eusart.c: 140: PIE1bits.TXIE = 0;
  4780  02AC  1211               	bcf	17,4	;volatile
  4781                           
  4782                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
  4783  02AD  0873               	movf	EUSART_Write@txData,w
  4784  02AE  00F2               	movwf	??_EUSART_Write
  4785  02AF  087B               	movf	_eusartTxHead,w
  4786  02B0  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4787  02B1  0086               	movwf	6
  4788  02B2  0187               	clrf	7
  4789  02B3  0872               	movf	??_EUSART_Write,w
  4790  02B4  0081               	movwf	1
  4791  02B5  3001               	movlw	1
  4792  02B6  00F2               	movwf	??_EUSART_Write
  4793  02B7  0872               	movf	??_EUSART_Write,w
  4794  02B8  07FB               	addwf	_eusartTxHead,f	;volatile
  4795                           
  4796                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4797  02B9  3008               	movlw	8
  4798  02BA  027B               	subwf	_eusartTxHead,w	;volatile
  4799  02BB  1803               	btfsc	3,0
  4800                           
  4801                           ;eusart.c: 143: {
  4802                           ;eusart.c: 144: eusartTxHead = 0;
  4803  02BC  01FB               	clrf	_eusartTxHead	;volatile
  4804                           
  4805                           ;eusart.c: 145: }
  4806                           ;eusart.c: 146: eusartTxBufferRemaining--;
  4807  02BD  3001               	movlw	1
  4808  02BE  02B2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  4809  02BF                     l2240:	
  4810                           
  4811                           ;eusart.c: 147: }
  4812                           ;eusart.c: 148: PIE1bits.TXIE = 1;
  4813  02BF  0021               	movlb	1	; select bank1
  4814  02C0  1611               	bsf	17,4	;volatile
  4815  02C1  0008               	return
  4816  02C2                     __end_of_EUSART_Write:	
  4817                           
  4818                           	psect	text16
  4819  0189                     __ptext16:	
  4820 ;; *************** function _initRTC *****************
  4821 ;; Defined at:
  4822 ;;		line 180 in file "ic.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, pclath, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4836 ;;      Params:         0       0       0       0       0       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0
  4839 ;;      Totals:         0       0       0       0       0       0       0       0
  4840 ;;Total ram usage:        0 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    4
  4843 ;; This function calls:
  4844 ;;		_sendI2C
  4845 ;;		_startI2C
  4846 ;;		_stopI2C
  4847 ;; This function is called by:
  4848 ;;		_main
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function _initRTC
  4854  0189                     _initRTC:	
  4855                           
  4856                           ;ic.c: 181: startI2C();
  4857                           
  4858                           ;incstack = 0
  4859                           ; Regs used in _initRTC: [wreg+status,2+status,0+pclath+cstack]
  4860  0189  3183  23E4  3181   	fcall	_startI2C
  4861                           
  4862                           ;ic.c: 182: sendI2C(0b11011110);
  4863  018C  30DE               	movlw	222
  4864  018D  3183  23D8  3181   	fcall	_sendI2C
  4865  0190                     l486:	
  4866                           ;ic.c: 183: while (SSP1CON2bits.ACKSTAT == 1);
  4867                           
  4868  0190  0024               	movlb	4	; select bank4
  4869  0191  1B16               	btfsc	22,6	;volatile
  4870  0192  2990               	goto	l486
  4871                           
  4872                           ;ic.c: 184: sendI2C(0x00);
  4873  0193  3000               	movlw	0
  4874  0194  3183  23D8  3181   	fcall	_sendI2C
  4875  0197                     l489:	
  4876                           ;ic.c: 185: while (SSP1CON2bits.ACKSTAT == 1);
  4877                           
  4878  0197  0024               	movlb	4	; select bank4
  4879  0198  1B16               	btfsc	22,6	;volatile
  4880  0199  2997               	goto	l489
  4881                           
  4882                           ;ic.c: 186: sendI2C(0b10000000);
  4883  019A  3080               	movlw	128
  4884  019B  3183  23D8  3181   	fcall	_sendI2C
  4885  019E                     l492:	
  4886                           ;ic.c: 187: while (SSP1CON2bits.ACKSTAT == 1);
  4887                           
  4888  019E  0024               	movlb	4	; select bank4
  4889  019F  1B16               	btfsc	22,6	;volatile
  4890  01A0  299E               	goto	l492
  4891                           
  4892                           ;ic.c: 188: stopI2C();
  4893  01A1  3183  23F5  3181   	fcall	_stopI2C
  4894                           
  4895                           ;ic.c: 190: startI2C();
  4896  01A4  3183  23E4  3181   	fcall	_startI2C
  4897                           
  4898                           ;ic.c: 191: sendI2C(0b11011110);
  4899  01A7  30DE               	movlw	222
  4900  01A8  3183  23D8  3181   	fcall	_sendI2C
  4901  01AB                     l495:	
  4902                           ;ic.c: 192: while (SSP1CON2bits.ACKSTAT == 1);
  4903                           
  4904  01AB  0024               	movlb	4	; select bank4
  4905  01AC  1B16               	btfsc	22,6	;volatile
  4906  01AD  29AB               	goto	l495
  4907                           
  4908                           ;ic.c: 193: sendI2C(0x01);
  4909  01AE  3001               	movlw	1
  4910  01AF  3183  23D8  3181   	fcall	_sendI2C
  4911  01B2                     l498:	
  4912                           ;ic.c: 194: while (SSP1CON2bits.ACKSTAT == 1);
  4913                           
  4914  01B2  0024               	movlb	4	; select bank4
  4915  01B3  1B16               	btfsc	22,6	;volatile
  4916  01B4  29B2               	goto	l498
  4917                           
  4918                           ;ic.c: 195: sendI2C(0b01001000);
  4919  01B5  3048               	movlw	72
  4920  01B6  3183  23D8  3181   	fcall	_sendI2C
  4921  01B9                     l501:	
  4922                           ;ic.c: 196: while (SSP1CON2bits.ACKSTAT == 1);
  4923                           
  4924  01B9  0024               	movlb	4	; select bank4
  4925  01BA  1B16               	btfsc	22,6	;volatile
  4926  01BB  29B9               	goto	l501
  4927                           
  4928                           ;ic.c: 197: stopI2C();
  4929  01BC  3183  23F5  3181   	fcall	_stopI2C
  4930                           
  4931                           ;ic.c: 199: startI2C();
  4932  01BF  3183  23E4  3181   	fcall	_startI2C
  4933                           
  4934                           ;ic.c: 200: sendI2C(0b11011110);
  4935  01C2  30DE               	movlw	222
  4936  01C3  3183  23D8  3181   	fcall	_sendI2C
  4937  01C6                     l504:	
  4938                           ;ic.c: 201: while (SSP1CON2bits.ACKSTAT == 1);
  4939                           
  4940  01C6  0024               	movlb	4	; select bank4
  4941  01C7  1B16               	btfsc	22,6	;volatile
  4942  01C8  29C6               	goto	l504
  4943                           
  4944                           ;ic.c: 202: sendI2C(0x02);
  4945  01C9  3002               	movlw	2
  4946  01CA  3183  23D8  3181   	fcall	_sendI2C
  4947  01CD                     l507:	
  4948                           ;ic.c: 203: while (SSP1CON2bits.ACKSTAT == 1);
  4949                           
  4950  01CD  0024               	movlb	4	; select bank4
  4951  01CE  1B16               	btfsc	22,6	;volatile
  4952  01CF  29CD               	goto	l507
  4953                           
  4954                           ;ic.c: 204: sendI2C(0b00010100);
  4955  01D0  3014               	movlw	20
  4956  01D1  3183  23D8  3181   	fcall	_sendI2C
  4957  01D4                     l510:	
  4958                           ;ic.c: 205: while (SSP1CON2bits.ACKSTAT == 1);
  4959                           
  4960  01D4  0024               	movlb	4	; select bank4
  4961  01D5  1B16               	btfsc	22,6	;volatile
  4962  01D6  29D4               	goto	l510
  4963                           
  4964                           ;ic.c: 206: stopI2C();
  4965  01D7  3183  23F5         	fcall	_stopI2C
  4966  01D9  0008               	return
  4967  01DA                     __end_of_initRTC:	
  4968                           
  4969                           	psect	text17
  4970  03F5                     __ptext17:	
  4971 ;; *************** function _stopI2C *****************
  4972 ;; Defined at:
  4973 ;;		line 77 in file "ic.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, pclath, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4987 ;;      Params:         0       0       0       0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    3
  4994 ;; This function calls:
  4995 ;;		_waitI2C
  4996 ;; This function is called by:
  4997 ;;		_initRTC
  4998 ;;		_changeMin
  4999 ;;		_changeHeure
  5000 ;;		_readSec
  5001 ;;		_readMin
  5002 ;;		_readHr
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           
  5007                           ;psect for function _stopI2C
  5008  03F5                     _stopI2C:	
  5009                           
  5010                           ;ic.c: 79: waitI2C();
  5011                           
  5012                           ;incstack = 0
  5013                           ; Regs used in _stopI2C: [wreg+status,2+status,0+pclath+cstack]
  5014  03F5  3183  23FD  3183   	fcall	_waitI2C
  5015                           
  5016                           ;ic.c: 80: SSP1CON2bits.PEN = 1;
  5017  03F8  0024               	movlb	4	; select bank4
  5018  03F9  1516               	bsf	22,2	;volatile
  5019  03FA                     l434:	
  5020                           ;ic.c: 81: while(SSP1CON2bits.PEN == 1);
  5021                           
  5022  03FA  1D16               	btfss	22,2	;volatile
  5023  03FB  0008               	return
  5024  03FC  2BFA               	goto	l434
  5025  03FD                     __end_of_stopI2C:	
  5026                           
  5027                           	psect	text18
  5028  03E4                     __ptext18:	
  5029 ;; *************** function _startI2C *****************
  5030 ;; Defined at:
  5031 ;;		line 67 in file "ic.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5045 ;;      Params:         0       0       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    3
  5052 ;; This function calls:
  5053 ;;		_waitI2C
  5054 ;; This function is called by:
  5055 ;;		_initRTC
  5056 ;;		_changeMin
  5057 ;;		_changeHeure
  5058 ;;		_readSec
  5059 ;;		_readMin
  5060 ;;		_readHr
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _startI2C
  5066  03E4                     _startI2C:	
  5067                           
  5068                           ;ic.c: 69: waitI2C();
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in _startI2C: [wreg+status,2+status,0+pclath+cstack]
  5072  03E4  3183  23FD  3183   	fcall	_waitI2C
  5073                           
  5074                           ;ic.c: 70: SSP1CON2=0b00000001;
  5075  03E7  3001               	movlw	1
  5076  03E8  0024               	movlb	4	; select bank4
  5077  03E9  0096               	movwf	22	;volatile
  5078  03EA                     l422:	
  5079                           ;ic.c: 71: while(SSP1CON2bits.SEN == 1);
  5080                           
  5081  03EA  1C16               	btfss	22,0	;volatile
  5082  03EB  0008               	return
  5083  03EC  2BEA               	goto	l422
  5084  03ED                     __end_of_startI2C:	
  5085                           
  5086                           	psect	text19
  5087  03D8                     __ptext19:	
  5088 ;; *************** function _sendI2C *****************
  5089 ;; Defined at:
  5090 ;;		line 83 in file "ic.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  data            1    wreg     unsigned char 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  data            1    2[COMMON] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5104 ;;      Params:         0       0       0       0       0       0       0       0
  5105 ;;      Locals:         1       0       0       0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0
  5107 ;;      Totals:         1       0       0       0       0       0       0       0
  5108 ;;Total ram usage:        1 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    3
  5111 ;; This function calls:
  5112 ;;		_waitI2C
  5113 ;; This function is called by:
  5114 ;;		_initRTC
  5115 ;;		_changeMin
  5116 ;;		_changeHeure
  5117 ;;		_readSec
  5118 ;;		_readMin
  5119 ;;		_readHr
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _sendI2C
  5125  03D8                     _sendI2C:	
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _sendI2C: [wreg+status,2+status,0+pclath+cstack]
  5129                           ;sendI2C@data stored from wreg
  5130  03D8  00F2               	movwf	sendI2C@data
  5131                           
  5132                           ;ic.c: 85: waitI2C();
  5133  03D9  3183  23FD  3183   	fcall	_waitI2C
  5134                           
  5135                           ;ic.c: 86: SSP1BUF = data;
  5136  03DC  0872               	movf	sendI2C@data,w
  5137  03DD  0024               	movlb	4	; select bank4
  5138  03DE  0091               	movwf	17	;volatile
  5139                           
  5140                           ;ic.c: 87: PIR1bits.SSP1IF = 0;
  5141  03DF  0020               	movlb	0	; select bank0
  5142  03E0  1191               	bcf	17,3	;volatile
  5143  03E1                     l440:	
  5144                           ;ic.c: 88: while(PIR1bits.SSP1IF == 0);
  5145                           
  5146  03E1  1991               	btfsc	17,3	;volatile
  5147  03E2  0008               	return
  5148  03E3  2BE1               	goto	l440
  5149  03E4                     __end_of_sendI2C:	
  5150                           
  5151                           	psect	text20
  5152  03FD                     __ptext20:	
  5153 ;; *************** function _waitI2C *****************
  5154 ;; Defined at:
  5155 ;;		line 73 in file "ic.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      void 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5169 ;;      Params:         0       0       0       0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0
  5172 ;;      Totals:         0       0       0       0       0       0       0       0
  5173 ;;Total ram usage:        0 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_startI2C
  5180 ;;		_stopI2C
  5181 ;;		_sendI2C
  5182 ;;		_readI2C
  5183 ;;		_re_startI2C
  5184 ;;		_sendAckI2C
  5185 ;;		_sendNoAckI2C
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           
  5190                           ;psect for function _waitI2C
  5191  03FD                     _waitI2C:	
  5192  03FD                     l428:	
  5193                           ;ic.c: 75: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _waitI2C: [wreg+status,2]
  5197                           
  5198  03FD  0024               	movlb	4	; select bank4
  5199  03FE  1914               	btfsc	20,2	;volatile
  5200  03FF  2BFD               	goto	l428
  5201  0400  0816               	movf	22,w	;volatile
  5202  0401  391F               	andlw	31
  5203  0402  1903               	btfsc	3,2
  5204  0403  0008               	return
  5205  0404  2BFD               	goto	l428
  5206  0405                     __end_of_waitI2C:	
  5207                           
  5208                           	psect	text21
  5209  01DA                     __ptext21:	
  5210 ;; *************** function _initI2C *****************
  5211 ;; Defined at:
  5212 ;;		line 32 in file "ic.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  i               2    3[COMMON] int 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5226 ;;      Params:         0       0       0       0       0       0       0       0
  5227 ;;      Locals:         2       0       0       0       0       0       0       0
  5228 ;;      Temps:          1       0       0       0       0       0       0       0
  5229 ;;      Totals:         3       0       0       0       0       0       0       0
  5230 ;;Total ram usage:        3 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    2
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_main
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _initI2C
  5242  01DA                     _initI2C:	
  5243                           
  5244                           ;ic.c: 33: int i = 0;
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in _initI2C: [wreg+status,2]
  5248  01DA  01F3               	clrf	initI2C@i
  5249  01DB  01F4               	clrf	initI2C@i+1
  5250                           
  5251                           ;ic.c: 38: TRISB6 = 0;
  5252  01DC  0021               	movlb	1	; select bank1
  5253  01DD  130D               	bcf	13,6	;volatile
  5254                           
  5255                           ;ic.c: 39: for (i = 0; i < 9; i++) {
  5256  01DE  01F3               	clrf	initI2C@i
  5257  01DF  01F4               	clrf	initI2C@i+1
  5258  01E0  0874               	movf	initI2C@i+1,w
  5259  01E1  3A80               	xorlw	128
  5260  01E2  00F2               	movwf	??_initI2C
  5261  01E3  3080               	movlw	128
  5262  01E4  0272               	subwf	??_initI2C,w
  5263  01E5  1D03               	skipz
  5264  01E6  29E9               	goto	u1675
  5265  01E7  3009               	movlw	9
  5266  01E8  0273               	subwf	initI2C@i,w
  5267  01E9                     u1675:	
  5268  01E9  1803               	btfsc	3,0
  5269  01EA  29FD               	goto	l418
  5270  01EB                     l417:	
  5271                           
  5272                           ;ic.c: 40: LATB6 = 1;
  5273  01EB  0022               	movlb	2	; select bank2
  5274  01EC  170D               	bsf	13,6	;volatile
  5275                           
  5276                           ;ic.c: 41: LATB6 = 0;
  5277  01ED  130D               	bcf	13,6	;volatile
  5278  01EE  3001               	movlw	1
  5279  01EF  07F3               	addwf	initI2C@i,f
  5280  01F0  3000               	movlw	0
  5281  01F1  3DF4               	addwfc	initI2C@i+1,f
  5282  01F2  0874               	movf	initI2C@i+1,w
  5283  01F3  3A80               	xorlw	128
  5284  01F4  00F2               	movwf	??_initI2C
  5285  01F5  3080               	movlw	128
  5286  01F6  0272               	subwf	??_initI2C,w
  5287  01F7  1D03               	skipz
  5288  01F8  29FB               	goto	u1685
  5289  01F9  3009               	movlw	9
  5290  01FA  0273               	subwf	initI2C@i,w
  5291  01FB                     u1685:	
  5292  01FB  1C03               	skipc
  5293  01FC  29EB               	goto	l417
  5294  01FD                     l418:	
  5295                           
  5296                           ;ic.c: 42: }
  5297                           ;ic.c: 45: TRISB6 = 1;
  5298  01FD  0021               	movlb	1	; select bank1
  5299  01FE  170D               	bsf	13,6	;volatile
  5300                           
  5301                           ;ic.c: 46: TRISB4 = 1;
  5302  01FF  160D               	bsf	13,4	;volatile
  5303                           
  5304                           ;ic.c: 49: ANSELB = 0x00;
  5305  0200  0023               	movlb	3	; select bank3
  5306  0201  018D               	clrf	13	;volatile
  5307                           
  5308                           ;ic.c: 52: LATB4 = 1;
  5309  0202  0022               	movlb	2	; select bank2
  5310  0203  160D               	bsf	13,4	;volatile
  5311                           
  5312                           ;ic.c: 53: LATB6 = 1;
  5313  0204  170D               	bsf	13,6	;volatile
  5314                           
  5315                           ;ic.c: 56: SSP1STAT = 0x80;
  5316  0205  3080               	movlw	128
  5317  0206  0024               	movlb	4	; select bank4
  5318  0207  0094               	movwf	20	;volatile
  5319                           
  5320                           ;ic.c: 57: SSP1CON1 = 0x28;
  5321  0208  3028               	movlw	40
  5322  0209  0095               	movwf	21	;volatile
  5323                           
  5324                           ;ic.c: 58: SSP1CON2 = 0x00;
  5325  020A  0196               	clrf	22	;volatile
  5326                           
  5327                           ;ic.c: 59: SSP1ADD = 0x27;
  5328  020B  3027               	movlw	39
  5329  020C  0092               	movwf	18	;volatile
  5330                           
  5331                           ;ic.c: 62: OPTION_REG = 0x0;
  5332  020D  0021               	movlb	1	; select bank1
  5333  020E  0195               	clrf	21	;volatile
  5334                           
  5335                           ;ic.c: 63: WPUB = 0b00010000;
  5336  020F  3010               	movlw	16
  5337  0210  0024               	movlb	4	; select bank4
  5338  0211  008D               	movwf	13	;volatile
  5339  0212  0008               	return
  5340  0213                     __end_of_initI2C:	
  5341                           
  5342                           	psect	text22
  5343  02C2                     __ptext22:	
  5344 ;; *************** function _SYSTEM_Initialize *****************
  5345 ;; Defined at:
  5346 ;;		line 69 in file "mcc_generated_files/mcc.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5360 ;;      Params:         0       0       0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    3
  5367 ;; This function calls:
  5368 ;;		_EUSART_Initialize
  5369 ;;		_OSCILLATOR_Initialize
  5370 ;;		_PIN_MANAGER_Initialize
  5371 ;;		_PWM1_Initialize
  5372 ;;		_PWM2_Initialize
  5373 ;;		_PWM3_Initialize
  5374 ;;		_PWM4_Initialize
  5375 ;;		_TMR1_Initialize
  5376 ;;		_TMR2_Initialize
  5377 ;;		_WDT_Initialize
  5378 ;; This function is called by:
  5379 ;;		_main
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _SYSTEM_Initialize
  5385  02C2                     _SYSTEM_Initialize:	
  5386                           
  5387                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5391  02C2  3183  2351  3182   	fcall	_PIN_MANAGER_Initialize
  5392                           
  5393                           ;mcc.c: 73: OSCILLATOR_Initialize();
  5394  02C5  3184  2433  3182   	fcall	_OSCILLATOR_Initialize
  5395                           
  5396                           ;mcc.c: 74: WDT_Initialize();
  5397  02C8  3184  2442  3182   	fcall	_WDT_Initialize
  5398                           
  5399                           ;mcc.c: 75: PWM1_Initialize();
  5400  02CB  3184  2425  3182   	fcall	_PWM1_Initialize
  5401                           
  5402                           ;mcc.c: 76: PWM2_Initialize();
  5403  02CE  3184  241D  3182   	fcall	_PWM2_Initialize
  5404                           
  5405                           ;mcc.c: 77: PWM4_Initialize();
  5406  02D1  3184  240D  3182   	fcall	_PWM4_Initialize
  5407                           
  5408                           ;mcc.c: 78: PWM3_Initialize();
  5409  02D4  3184  2415  3182   	fcall	_PWM3_Initialize
  5410                           
  5411                           ;mcc.c: 79: TMR2_Initialize();
  5412  02D7  3184  2405  3182   	fcall	_TMR2_Initialize
  5413                           
  5414                           ;mcc.c: 80: TMR1_Initialize();
  5415  02DA  3183  23AB  3182   	fcall	_TMR1_Initialize
  5416                           
  5417                           ;mcc.c: 81: EUSART_Initialize();
  5418  02DD  3183  231A         	fcall	_EUSART_Initialize
  5419  02DF  0008               	return
  5420  02E0                     __end_of_SYSTEM_Initialize:	
  5421                           
  5422                           	psect	text23
  5423  0442                     __ptext23:	
  5424 ;; *************** function _WDT_Initialize *****************
  5425 ;; Defined at:
  5426 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		None
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5440 ;;      Params:         0       0       0       0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0
  5443 ;;      Totals:         0       0       0       0       0       0       0       0
  5444 ;;Total ram usage:        0 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    2
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_SYSTEM_Initialize
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function _WDT_Initialize
  5456  0442                     _WDT_Initialize:	
  5457                           
  5458                           ;incstack = 0
  5459                           ; Regs used in _WDT_Initialize: []
  5460  0442  0008               	return
  5461  0443                     __end_of_WDT_Initialize:	
  5462                           
  5463                           	psect	text24
  5464  0405                     __ptext24:	
  5465 ;; *************** function _TMR2_Initialize *****************
  5466 ;; Defined at:
  5467 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5481 ;;      Params:         0       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0
  5484 ;;      Totals:         0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:        0 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    2
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_SYSTEM_Initialize
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _TMR2_Initialize
  5497  0405                     _TMR2_Initialize:	
  5498                           
  5499                           ;tmr2.c: 66: PR2 = 0xFF;
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5503  0405  30FF               	movlw	255
  5504  0406  0020               	movlb	0	; select bank0
  5505  0407  009B               	movwf	27	;volatile
  5506                           
  5507                           ;tmr2.c: 69: TMR2 = 0x00;
  5508  0408  019A               	clrf	26	;volatile
  5509                           
  5510                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  5511  0409  1091               	bcf	17,1	;volatile
  5512                           
  5513                           ;tmr2.c: 75: T2CON = 0x04;
  5514  040A  3004               	movlw	4
  5515  040B  009C               	movwf	28	;volatile
  5516  040C  0008               	return
  5517  040D                     __end_of_TMR2_Initialize:	
  5518                           
  5519                           	psect	text25
  5520  03AB                     __ptext25:	
  5521 ;; *************** function _TMR1_Initialize *****************
  5522 ;; Defined at:
  5523 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5537 ;;      Params:         0       0       0       0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    2
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_SYSTEM_Initialize
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           
  5552                           ;psect for function _TMR1_Initialize
  5553  03AB                     _TMR1_Initialize:	
  5554                           
  5555                           ;tmr1.c: 67: T1GCON = 0x00;
  5556                           
  5557                           ;incstack = 0
  5558                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5559  03AB  0020               	movlb	0	; select bank0
  5560  03AC  0199               	clrf	25	;volatile
  5561                           
  5562                           ;tmr1.c: 70: TMR1H = 0xF0;
  5563  03AD  30F0               	movlw	240
  5564  03AE  0097               	movwf	23	;volatile
  5565                           
  5566                           ;tmr1.c: 73: TMR1L = 0x60;
  5567  03AF  3060               	movlw	96
  5568  03B0  0096               	movwf	22	;volatile
  5569                           
  5570                           ;tmr1.c: 76: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5571  03B1  0817               	movf	23,w	;volatile
  5572  03B2  0021               	movlb	1	; select bank1
  5573  03B3  00B1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  5574  03B4  0020               	movlb	0	; select bank0
  5575  03B5  0816               	movf	22,w	;volatile
  5576  03B6  0021               	movlb	1	; select bank1
  5577  03B7  00B0               	movwf	_timer1ReloadVal^(0+128)	;volatile
  5578                           
  5579                           ;tmr1.c: 79: PIR1bits.TMR1IF = 0;
  5580  03B8  0020               	movlb	0	; select bank0
  5581  03B9  1011               	bcf	17,0	;volatile
  5582                           
  5583                           ;tmr1.c: 82: T1CON = 0x01;
  5584  03BA  3001               	movlw	1
  5585  03BB  0098               	movwf	24	;volatile
  5586  03BC  0008               	return
  5587  03BD                     __end_of_TMR1_Initialize:	
  5588                           
  5589                           	psect	text26
  5590  040D                     __ptext26:	
  5591 ;; *************** function _PWM4_Initialize *****************
  5592 ;; Defined at:
  5593 ;;		line 57 in file "mcc_generated_files/pwm4.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5607 ;;      Params:         0       0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    2
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_SYSTEM_Initialize
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _PWM4_Initialize
  5623  040D                     _PWM4_Initialize:	
  5624                           
  5625                           ;pwm4.c: 61: PWM4CON = 0xC0;
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _PWM4_Initialize: [wreg]
  5629  040D  30C0               	movlw	192
  5630  040E  002C               	movlb	12	; select bank12
  5631  040F  009C               	movwf	28	;volatile
  5632                           
  5633                           ;pwm4.c: 64: PWM4DCH = 0x7F;
  5634  0410  307F               	movlw	127
  5635  0411  009B               	movwf	27	;volatile
  5636                           
  5637                           ;pwm4.c: 67: PWM4DCL = 0xC0;
  5638  0412  30C0               	movlw	192
  5639  0413  009A               	movwf	26	;volatile
  5640  0414  0008               	return
  5641  0415                     __end_of_PWM4_Initialize:	
  5642                           
  5643                           	psect	text27
  5644  0415                     __ptext27:	
  5645 ;; *************** function _PWM3_Initialize *****************
  5646 ;; Defined at:
  5647 ;;		line 57 in file "mcc_generated_files/pwm3.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5661 ;;      Params:         0       0       0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    2
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_SYSTEM_Initialize
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _PWM3_Initialize
  5677  0415                     _PWM3_Initialize:	
  5678                           
  5679                           ;pwm3.c: 61: PWM3CON = 0x80;
  5680                           
  5681                           ;incstack = 0
  5682                           ; Regs used in _PWM3_Initialize: [wreg]
  5683  0415  3080               	movlw	128
  5684  0416  002C               	movlb	12	; select bank12
  5685  0417  0099               	movwf	25	;volatile
  5686                           
  5687                           ;pwm3.c: 64: PWM3DCH = 0x7F;
  5688  0418  307F               	movlw	127
  5689  0419  0098               	movwf	24	;volatile
  5690                           
  5691                           ;pwm3.c: 67: PWM3DCL = 0xC0;
  5692  041A  30C0               	movlw	192
  5693  041B  0097               	movwf	23	;volatile
  5694  041C  0008               	return
  5695  041D                     __end_of_PWM3_Initialize:	
  5696                           
  5697                           	psect	text28
  5698  041D                     __ptext28:	
  5699 ;; *************** function _PWM2_Initialize *****************
  5700 ;; Defined at:
  5701 ;;		line 57 in file "mcc_generated_files/pwm2.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5715 ;;      Params:         0       0       0       0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    2
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_SYSTEM_Initialize
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _PWM2_Initialize
  5731  041D                     _PWM2_Initialize:	
  5732                           
  5733                           ;pwm2.c: 61: PWM2CON = 0xC0;
  5734                           
  5735                           ;incstack = 0
  5736                           ; Regs used in _PWM2_Initialize: [wreg]
  5737  041D  30C0               	movlw	192
  5738  041E  002C               	movlb	12	; select bank12
  5739  041F  0096               	movwf	22	;volatile
  5740                           
  5741                           ;pwm2.c: 64: PWM2DCH = 0x7F;
  5742  0420  307F               	movlw	127
  5743  0421  0095               	movwf	21	;volatile
  5744                           
  5745                           ;pwm2.c: 67: PWM2DCL = 0xC0;
  5746  0422  30C0               	movlw	192
  5747  0423  0094               	movwf	20	;volatile
  5748  0424  0008               	return
  5749  0425                     __end_of_PWM2_Initialize:	
  5750                           
  5751                           	psect	text29
  5752  0425                     __ptext29:	
  5753 ;; *************** function _PWM1_Initialize *****************
  5754 ;; Defined at:
  5755 ;;		line 57 in file "mcc_generated_files/pwm1.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5769 ;;      Params:         0       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0
  5772 ;;      Totals:         0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    2
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_SYSTEM_Initialize
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _PWM1_Initialize
  5785  0425                     _PWM1_Initialize:	
  5786                           
  5787                           ;pwm1.c: 61: PWM1CON = 0xC0;
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in _PWM1_Initialize: [wreg]
  5791  0425  30C0               	movlw	192
  5792  0426  002C               	movlb	12	; select bank12
  5793  0427  0093               	movwf	19	;volatile
  5794                           
  5795                           ;pwm1.c: 64: PWM1DCH = 0x7F;
  5796  0428  307F               	movlw	127
  5797  0429  0092               	movwf	18	;volatile
  5798                           
  5799                           ;pwm1.c: 67: PWM1DCL = 0xC0;
  5800  042A  30C0               	movlw	192
  5801  042B  0091               	movwf	17	;volatile
  5802  042C  0008               	return
  5803  042D                     __end_of_PWM1_Initialize:	
  5804                           
  5805                           	psect	text30
  5806  0351                     __ptext30:	
  5807 ;; *************** function _PIN_MANAGER_Initialize *****************
  5808 ;; Defined at:
  5809 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      void 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5823 ;;      Params:         0       0       0       0       0       0       0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    2
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_SYSTEM_Initialize
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function _PIN_MANAGER_Initialize
  5839  0351                     _PIN_MANAGER_Initialize:	
  5840                           
  5841                           ;pin_manager.c: 57: LATA = 0x00;
  5842                           
  5843                           ;incstack = 0
  5844                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5845  0351  0022               	movlb	2	; select bank2
  5846  0352  018C               	clrf	12	;volatile
  5847                           
  5848                           ;pin_manager.c: 58: LATB = 0x00;
  5849  0353  018D               	clrf	13	;volatile
  5850                           
  5851                           ;pin_manager.c: 59: LATC = 0x00;
  5852  0354  018E               	clrf	14	;volatile
  5853                           
  5854                           ;pin_manager.c: 64: TRISA = 0x19;
  5855  0355  3019               	movlw	25
  5856  0356  0021               	movlb	1	; select bank1
  5857  0357  008C               	movwf	12	;volatile
  5858                           
  5859                           ;pin_manager.c: 65: TRISB = 0x70;
  5860  0358  3070               	movlw	112
  5861  0359  008D               	movwf	13	;volatile
  5862                           
  5863                           ;pin_manager.c: 66: TRISC = 0xD4;
  5864  035A  30D4               	movlw	212
  5865  035B  008E               	movwf	14	;volatile
  5866                           
  5867                           ;pin_manager.c: 71: ANSELC = 0xCF;
  5868  035C  30CF               	movlw	207
  5869  035D  0023               	movlb	3	; select bank3
  5870  035E  008E               	movwf	14	;volatile
  5871                           
  5872                           ;pin_manager.c: 72: ANSELB = 0xD0;
  5873  035F  30D0               	movlw	208
  5874  0360  008D               	movwf	13	;volatile
  5875                           
  5876                           ;pin_manager.c: 73: ANSELA = 0x17;
  5877  0361  3017               	movlw	23
  5878  0362  008C               	movwf	12	;volatile
  5879                           
  5880                           ;pin_manager.c: 78: WPUB = 0x00;
  5881  0363  0024               	movlb	4	; select bank4
  5882  0364  018D               	clrf	13	;volatile
  5883                           
  5884                           ;pin_manager.c: 79: WPUA = 0x00;
  5885  0365  018C               	clrf	12	;volatile
  5886                           
  5887                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  5888  0366  0021               	movlb	1	; select bank1
  5889  0367  1795               	bsf	21,7	;volatile
  5890                           
  5891                           ;pin_manager.c: 86: APFCON = 0x00;
  5892  0368  0022               	movlb	2	; select bank2
  5893  0369  019D               	clrf	29	;volatile
  5894  036A  0008               	return
  5895  036B                     __end_of_PIN_MANAGER_Initialize:	
  5896                           
  5897                           	psect	text31
  5898  0433                     __ptext31:	
  5899 ;; *************** function _OSCILLATOR_Initialize *****************
  5900 ;; Defined at:
  5901 ;;		line 84 in file "mcc_generated_files/mcc.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5915 ;;      Params:         0       0       0       0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    2
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_SYSTEM_Initialize
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           
  5930                           ;psect for function _OSCILLATOR_Initialize
  5931  0433                     _OSCILLATOR_Initialize:	
  5932                           
  5933                           ;mcc.c: 87: OSCCON = 0x78;
  5934                           
  5935                           ;incstack = 0
  5936                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5937  0433  3078               	movlw	120
  5938  0434  0021               	movlb	1	; select bank1
  5939  0435  0099               	movwf	25	;volatile
  5940                           
  5941                           ;mcc.c: 89: BORCON = 0x00;
  5942  0436  0022               	movlb	2	; select bank2
  5943  0437  0196               	clrf	22	;volatile
  5944  0438  0008               	return
  5945  0439                     __end_of_OSCILLATOR_Initialize:	
  5946                           
  5947                           	psect	text32
  5948  031A                     __ptext32:	
  5949 ;; *************** function _EUSART_Initialize *****************
  5950 ;; Defined at:
  5951 ;;		line 72 in file "mcc_generated_files/eusart.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5965 ;;      Params:         0       0       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0
  5967 ;;      Temps:          1       0       0       0       0       0       0       0
  5968 ;;      Totals:         1       0       0       0       0       0       0       0
  5969 ;;Total ram usage:        1 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    2
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_SYSTEM_Initialize
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function _EUSART_Initialize
  5981  031A                     _EUSART_Initialize:	
  5982                           
  5983                           ;eusart.c: 75: PIE1bits.RCIE = 0;
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5987  031A  0021               	movlb	1	; select bank1
  5988  031B  1291               	bcf	17,5	;volatile
  5989                           
  5990                           ;eusart.c: 76: PIE1bits.TXIE = 0;
  5991  031C  1211               	bcf	17,4	;volatile
  5992                           
  5993                           ;eusart.c: 80: BAUDCON = 0x08;
  5994  031D  3008               	movlw	8
  5995  031E  0023               	movlb	3	; select bank3
  5996  031F  009F               	movwf	31	;volatile
  5997                           
  5998                           ;eusart.c: 83: RCSTA = 0x90;
  5999  0320  3090               	movlw	144
  6000  0321  009D               	movwf	29	;volatile
  6001                           
  6002                           ;eusart.c: 86: TXSTA = 0x24;
  6003  0322  3024               	movlw	36
  6004  0323  009E               	movwf	30	;volatile
  6005                           
  6006                           ;eusart.c: 89: SPBRGL = 0x22;
  6007  0324  3022               	movlw	34
  6008  0325  009B               	movwf	27	;volatile
  6009                           
  6010                           ;eusart.c: 92: SPBRGH = 0x00;
  6011  0326  019C               	clrf	28	;volatile
  6012                           
  6013                           ;eusart.c: 96: eusartTxHead = 0;
  6014  0327  01FB               	clrf	_eusartTxHead	;volatile
  6015                           
  6016                           ;eusart.c: 97: eusartTxTail = 0;
  6017  0328  0020               	movlb	0	; select bank0
  6018  0329  01EE               	clrf	_eusartTxTail	;volatile
  6019                           
  6020                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6021  032A  3008               	movlw	8
  6022  032B  00F2               	movwf	??_EUSART_Initialize
  6023  032C  0872               	movf	??_EUSART_Initialize,w
  6024  032D  0021               	movlb	1	; select bank1
  6025  032E  00B2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  6026                           
  6027                           ;eusart.c: 100: eusartRxHead = 0;
  6028  032F  0020               	movlb	0	; select bank0
  6029  0330  01ED               	clrf	_eusartRxHead	;volatile
  6030                           
  6031                           ;eusart.c: 101: eusartRxTail = 0;
  6032  0331  01EC               	clrf	_eusartRxTail	;volatile
  6033                           
  6034                           ;eusart.c: 102: eusartRxCount = 0;
  6035  0332  01FA               	clrf	_eusartRxCount	;volatile
  6036                           
  6037                           ;eusart.c: 105: PIE1bits.RCIE = 1;
  6038  0333  0021               	movlb	1	; select bank1
  6039  0334  1691               	bsf	17,5	;volatile
  6040  0335  0008               	return
  6041  0336                     __end_of_EUSART_Initialize:	
  6042                           
  6043                           	psect	text33
  6044  043F                     __ptext33:	
  6045 ;; *************** function _ReturnReg *****************
  6046 ;; Defined at:
  6047 ;;		line 134 in file "BLE_Receive.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      unsigned char 
  6054 ;; Registers used:
  6055 ;;		wreg
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6061 ;;      Params:         0       0       0       0       0       0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0
  6064 ;;      Totals:         0       0       0       0       0       0       0       0
  6065 ;;Total ram usage:        0 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    2
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _ReturnReg
  6077  043F                     _ReturnReg:	
  6078                           
  6079                           ;BLE_Receive.c: 135: return RCREG;
  6080                           
  6081                           ;incstack = 0
  6082                           ; Regs used in _ReturnReg: [wreg]
  6083  043F  0023               	movlb	3	; select bank3
  6084  0440  0819               	movf	25,w	;volatile
  6085  0441  0008               	return
  6086  0442                     __end_of_ReturnReg:	
  6087                           
  6088                           	psect	intentry
  6089  0004                     __pintentry:	
  6090 ;; *************** function _INTERRUPT_InterruptManager *****************
  6091 ;; Defined at:
  6092 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6106 ;;      Params:         0       0       0       0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0
  6108 ;;      Temps:          1       0       0       0       0       0       0       0
  6109 ;;      Totals:         1       0       0       0       0       0       0       0
  6110 ;;Total ram usage:        1 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    1
  6113 ;; This function calls:
  6114 ;;		_EUSART_Receive_ISR
  6115 ;;		_EUSART_Transmit_ISR
  6116 ;; This function is called by:
  6117 ;;		Interrupt level 1
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121  0004                     _INTERRUPT_InterruptManager:	
  6122                           
  6123                           ;incstack = 0
  6124  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6125                           
  6126                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6127  0005  3180               	pagesel	$
  6128  0006  0020               	movlb	0	; select bank0
  6129  0007  087F               	movf	127,w
  6130  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  6131                           
  6132                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  6133  0009  1F0B               	btfss	11,6	;volatile
  6134  000A  281D               	goto	i1l131
  6135                           
  6136                           ;interrupt_manager.c: 55: {
  6137                           ;interrupt_manager.c: 56: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  6138  000B  0021               	movlb	1	; select bank1
  6139  000C  1E11               	btfss	17,4	;volatile
  6140  000D  2815               	goto	i1l126
  6141  000E  0020               	movlb	0	; select bank0
  6142  000F  1E11               	btfss	17,4	;volatile
  6143  0010  2815               	goto	i1l126
  6144                           
  6145                           ;interrupt_manager.c: 57: {
  6146                           ;interrupt_manager.c: 58: EUSART_Transmit_ISR();
  6147  0011  3182  22E0  3180   	fcall	_EUSART_Transmit_ISR
  6148                           
  6149                           ;interrupt_manager.c: 59: }
  6150  0014  281D               	goto	i1l131
  6151  0015                     i1l126:	
  6152                           
  6153                           ;interrupt_manager.c: 60: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  6154  0015  0021               	movlb	1	; select bank1
  6155  0016  1E91               	btfss	17,5	;volatile
  6156  0017  281D               	goto	i1l131
  6157  0018  0020               	movlb	0	; select bank0
  6158  0019  1E91               	btfss	17,5	;volatile
  6159  001A  281D               	goto	i1l131
  6160                           
  6161                           ;interrupt_manager.c: 61: {
  6162                           ;interrupt_manager.c: 62: EUSART_Receive_ISR();
  6163  001B  3183  2336         	fcall	_EUSART_Receive_ISR
  6164  001D                     i1l131:	
  6165                           ;interrupt_manager.c: 69: else
  6166                           ;interrupt_manager.c: 70: {
  6167                           
  6168                           ;interrupt_manager.c: 67: }
  6169                           ;interrupt_manager.c: 68: }
  6170                           
  6171                           ;interrupt_manager.c: 64: else
  6172                           ;interrupt_manager.c: 65: {
  6173                           
  6174                           ;interrupt_manager.c: 63: }
  6175                           
  6176  001D  0871               	movf	??_INTERRUPT_InterruptManager,w
  6177  001E  0020               	movlb	0	; select bank0
  6178  001F  00FF               	movwf	127
  6179  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6180  0021  0009               	retfie
  6181  0022                     __end_of_INTERRUPT_InterruptManager:	
  6182                           
  6183                           	psect	text35
  6184  02E0                     __ptext35:	
  6185 ;; *************** function _EUSART_Transmit_ISR *****************
  6186 ;; Defined at:
  6187 ;;		line 152 in file "mcc_generated_files/eusart.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6201 ;;      Params:         0       0       0       0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0
  6203 ;;      Temps:          1       0       0       0       0       0       0       0
  6204 ;;      Totals:         1       0       0       0       0       0       0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_INTERRUPT_InterruptManager
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _EUSART_Transmit_ISR
  6216  02E0                     _EUSART_Transmit_ISR:	
  6217                           
  6218                           ;eusart.c: 156: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6222  02E0  3008               	movlw	8
  6223  02E1  0021               	movlb	1	; select bank1
  6224  02E2  0232               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
  6225  02E3  1803               	skipnc
  6226  02E4  2AFC               	goto	i1l187
  6227                           
  6228                           ;eusart.c: 157: {
  6229                           ;eusart.c: 158: TXREG = eusartTxBuffer[eusartTxTail++];
  6230  02E5  0020               	movlb	0	; select bank0
  6231  02E6  086E               	movf	_eusartTxTail,w
  6232  02E7  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6233  02E8  0086               	movwf	6
  6234  02E9  0187               	clrf	7
  6235  02EA  0801               	movf	1,w
  6236  02EB  0023               	movlb	3	; select bank3
  6237  02EC  009A               	movwf	26	;volatile
  6238  02ED  3001               	movlw	1
  6239  02EE  00F0               	movwf	??_EUSART_Transmit_ISR
  6240  02EF  0870               	movf	??_EUSART_Transmit_ISR,w
  6241  02F0  0020               	movlb	0	; select bank0
  6242  02F1  07EE               	addwf	_eusartTxTail,f	;volatile
  6243                           
  6244                           ;eusart.c: 159: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6245  02F2  3008               	movlw	8
  6246  02F3  026E               	subwf	_eusartTxTail,w	;volatile
  6247  02F4  1803               	btfsc	3,0
  6248                           
  6249                           ;eusart.c: 160: {
  6250                           ;eusart.c: 161: eusartTxTail = 0;
  6251  02F5  01EE               	clrf	_eusartTxTail	;volatile
  6252                           
  6253                           ;eusart.c: 162: }
  6254                           ;eusart.c: 163: eusartTxBufferRemaining++;
  6255  02F6  3001               	movlw	1
  6256  02F7  00F0               	movwf	??_EUSART_Transmit_ISR
  6257  02F8  0870               	movf	??_EUSART_Transmit_ISR,w
  6258  02F9  0021               	movlb	1	; select bank1
  6259  02FA  07B2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  6260                           
  6261                           ;eusart.c: 164: }
  6262  02FB  0008               	return
  6263  02FC                     i1l187:	
  6264                           
  6265                           ;eusart.c: 165: else
  6266                           ;eusart.c: 166: {
  6267                           ;eusart.c: 167: PIE1bits.TXIE = 0;
  6268  02FC  1211               	bcf	17,4	;volatile
  6269  02FD  0008               	return
  6270  02FE                     __end_of_EUSART_Transmit_ISR:	
  6271                           
  6272                           	psect	text36
  6273  0336                     __ptext36:	
  6274 ;; *************** function _EUSART_Receive_ISR *****************
  6275 ;; Defined at:
  6276 ;;		line 171 in file "mcc_generated_files/eusart.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;		None
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6290 ;;      Params:         0       0       0       0       0       0       0       0
  6291 ;;      Locals:         0       0       0       0       0       0       0       0
  6292 ;;      Temps:          1       0       0       0       0       0       0       0
  6293 ;;      Totals:         1       0       0       0       0       0       0       0
  6294 ;;Total ram usage:        1 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_INTERRUPT_InterruptManager
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function _EUSART_Receive_ISR
  6305  0336                     _EUSART_Receive_ISR:	
  6306                           
  6307                           ;eusart.c: 174: if(1 == RCSTAbits.OERR)
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6311  0336  0023               	movlb	3	; select bank3
  6312  0337  1C9D               	btfss	29,1	;volatile
  6313  0338  2B3B               	goto	i1l1890
  6314                           
  6315                           ;eusart.c: 175: {
  6316                           ;eusart.c: 178: RCSTAbits.CREN = 0;
  6317  0339  121D               	bcf	29,4	;volatile
  6318                           
  6319                           ;eusart.c: 179: RCSTAbits.CREN = 1;
  6320  033A  161D               	bsf	29,4	;volatile
  6321  033B                     i1l1890:	
  6322                           
  6323                           ;eusart.c: 180: }
  6324                           ;eusart.c: 183: eusartRxBuffer[eusartRxHead++] = RCREG;
  6325  033B  0819               	movf	25,w	;volatile
  6326  033C  00F0               	movwf	??_EUSART_Receive_ISR
  6327  033D  0020               	movlb	0	; select bank0
  6328  033E  086D               	movf	_eusartRxHead,w
  6329  033F  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6330  0340  0086               	movwf	6
  6331  0341  0187               	clrf	7
  6332  0342  0870               	movf	??_EUSART_Receive_ISR,w
  6333  0343  0081               	movwf	1
  6334  0344  3001               	movlw	1
  6335  0345  00F0               	movwf	??_EUSART_Receive_ISR
  6336  0346  0870               	movf	??_EUSART_Receive_ISR,w
  6337  0347  07ED               	addwf	_eusartRxHead,f	;volatile
  6338                           
  6339                           ;eusart.c: 184: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6340  0348  3008               	movlw	8
  6341  0349  026D               	subwf	_eusartRxHead,w	;volatile
  6342  034A  1803               	btfsc	3,0
  6343                           
  6344                           ;eusart.c: 185: {
  6345                           ;eusart.c: 186: eusartRxHead = 0;
  6346  034B  01ED               	clrf	_eusartRxHead	;volatile
  6347                           
  6348                           ;eusart.c: 187: }
  6349                           ;eusart.c: 188: eusartRxCount++;
  6350  034C  3001               	movlw	1
  6351  034D  00F0               	movwf	??_EUSART_Receive_ISR
  6352  034E  0870               	movf	??_EUSART_Receive_ISR,w
  6353  034F  07FA               	addwf	_eusartRxCount,f	;volatile
  6354  0350  0008               	return
  6355  0351                     __end_of_EUSART_Receive_ISR:	
  6356  007E                     btemp	set	126	;btemp
  6357  007E                     int$flags	set	126
  6358  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         85
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     76      79
    BANK1            80      3      22
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Verif_Erreur@buf	PTR unsigned char  size(1) Largest target is 64
		 -> init_B@buf(BANK0[64]), 


Critical Paths under _main in COMMON

    _main->_init_B
    _remote->_EUSART_Write
    _init_B->_delay_ms
    _Verif_Erreur->_delay_ms
    _TMR1_Reload->_TMR1_WriteTimer
    _Turn_On->_EUSART_Write
    _Set_Mode->_EUSART_Write
    _Set_Features->_EUSART_Write
    _Reboot->_EUSART_Write
    _Partiel_Reset->_EUSART_Write
    _initRTC->_sendI2C
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_init_B
    _init_B->_Verif_Erreur

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4384
                                             74 BANK0      2     2      0
                                              0 BANK1      3     3      0
                       _EUSART_Write
                          _ReturnReg
                  _SYSTEM_Initialize
                           _delay_ms
                            _initI2C
                            _initRTC
                             _init_B
                             _remote
 ---------------------------------------------------------------------------------
 (1) _remote                                               0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _init_B                                              66    66      0    3146
                                              9 COMMON     1     1      0
                                              9 BANK0     65    65      0
                      _Partiel_Reset
                             _Reboot
                       _Set_Features
                           _Set_Mode
                            _Turn_On
                       _Verif_Erreur
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Verif_Erreur                                         9     7      2    1682
                                              0 BANK0      9     7      2
                        _EUSART_Read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     972
                                              4 COMMON     5     3      2
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Reload                                          0     0      0     189
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_WriteTimer                                      2     0      2     189
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Turn_On                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Set_Mode                                             0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Set_Features                                         0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Reboot                                               0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Partiel_Reset                                        0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initRTC                                              0     0      0      31
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _stopI2C                                              0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _startI2C                                             0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _sendI2C                                              1     1      0      31
                                              2 COMMON     1     1      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _waitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              3     3      0      71
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReturnReg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write
   _ReturnReg
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _delay_ms
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _initI2C
   _initRTC
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _init_B
     _Partiel_Reset
       _EUSART_Write
     _Reboot
       _EUSART_Write
     _Set_Features
       _EUSART_Write
     _Set_Mode
       _EUSART_Write
     _Turn_On
       _EUSART_Write
     _Verif_Erreur
       _EUSART_Read
       _delay_ms
         _TMR1_Reload
           _TMR1_WriteTimer
         _TMR1_StartTimer
         _TMR1_StopTimer
     _delay_ms
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StartTimer
       _TMR1_StopTimer
   _remote
     _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      16       8       27.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul  5 15:30:06 2018

                        __CFG_CP$OFF 0000                          __CFG_LVP$ON 0000  
                                l310 011B                                  l501 01B9  
                                l181 02AC                                  l422 03EA  
                                l510 01D4                                  l440 03E1  
                                l504 01C6                                  l417 01EB  
                                l418 01FD                                  l434 03FA  
                                l507 01CD                                  l428 03FD  
                                l380 0291                                  l492 019E  
                                l486 0190                                  l495 01AB  
                                l489 0197                                  l498 01B2  
                                _RA1 0061                                  _RA2 0062  
                                _RA5 0065                                  _RC5 0075  
                                _PR2 001B                      _timer1ReloadVal 00B0  
                    _TMR2_Initialize 0405                      _PWM4_Initialize 040D  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         ?_EUSART_Read 0070  
                               l2204 02FF                                 l2240 02BF  
                               l2226 02A2                                 l2350 013F  
                               l2192 03C7                                 l2256 0285  
                               l2600 010A                                 l2258 029E  
                               l2370 016F                                 l2338 0125  
                               l2364 0166                                 l2348 013B  
                               l2358 0159                                 l2376 0180  
                               l2592 00E8              __end_of_PWM1_Initialize 042D  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 u1525 028F  
                               u1575 0156                                 u1675 01E9  
                               u1780 0049                                 u1685 01FB  
                               _TMR2 001A                                 _WPUA 020C  
                               _WPUB 020D                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 00B2  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0022                        __CFG_MCLRE$ON 0000  
                    Verif_Erreur@buf 0028              __end_of_PWM2_Initialize 0425  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 0439                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      _TMR1_StartTimer 043C  
                              _T1CON 0018                      __end_of_Turn_On 03D8  
                              _T2CON 001C                                _LATB4 086C  
                              _LATB6 086E                                i1l131 001D  
                              i1l126 0015                                i1l187 02FC  
                              _RCREG 0199                                _RCSTA 019D  
                              _TMR1H 0017                                _TMR1L 0016  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TXREG 019A  
                              _TXSTA 019E                      __end_of_initI2C 0213  
                    __end_of_initRTC 01DA                       _WDT_Initialize 0442  
                    __end_of_sendI2C 03E4                                main@k 00B4  
                    __end_of_waitI2C 0405              __end_of_PWM3_Initialize 041D  
            __end_of_TMR1_Initialize 03BD                      __end_of_stopI2C 03FD  
                              status 0003                                wtemp0 007E  
                    _TMR1_WriteTimer 03BD                      __initialization 0024  
                        init_B@F4556 0120                         __end_of_main 011F  
                     ??_EUSART_Write 0072              __end_of_PWM4_Initialize 0415  
            __end_of_TMR2_Initialize 040D                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 006A  
                   __end_of_Set_Mode 0247                     Verif_Erreur@size 0020  
                        init_B@error 0069               __end_of_WDT_Initialize 0443  
                             _APFCON 011D                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _BORCON 0116                               _T1GCON 0019  
            TMR1_WriteTimer@timerVal 0072                     ?_PWM1_Initialize 0070  
                             i1l1890 033B                               _OSCCON 0099  
                             _TMR1IF 0088                               _SPBRGH 019C  
                             _SPBRGL 019B                               _TRISB4 046C  
                             _TRISB6 046E                     __end_of_delay_ms 02A1  
                     __CFG_PWRTE$OFF 0000                               _Reboot 0397  
            __end_of_TMR1_StartTimer 043F                         ?_TMR1_Reload 0070  
                     __CFG_STVREN$ON 0000                            ??_Turn_On 0074  
                _EUSART_Transmit_ISR 02E0                               _init_B 003D  
                   ?_PWM2_Initialize 0070                               _remote 0383  
                             main@Bt 00B3                            ??_initI2C 0072  
                          ??_initRTC 0073                   __size_of_ReturnReg 0003  
                          ??_sendI2C 0072                            ??_waitI2C 0072  
                    ?_WDT_Initialize 0070                        ?_Set_Features 0070  
                   __end_of_startI2C 03ED                            ??_stopI2C 0072  
            __end_of_TMR1_WriteTimer 03CC                          sendI2C@data 0072  
               ?_EUSART_Transmit_ISR 0070                     ?_TMR1_Initialize 0070  
                   ?_PWM3_Initialize 0070                 __size_of_EUSART_Read 001C  
                  _SYSTEM_Initialize 02C2               __size_of_Partiel_Reset 0018  
            __end_of__initialization 0039                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
                   ?_TMR2_Initialize 0070                     ?_PWM4_Initialize 0070  
                     _OPTION_REGbits 0095                       ??_Set_Features 0074  
          __end_of_SYSTEM_Initialize 02E0                ??_EUSART_Transmit_ISR 0070  
                         __pbssBANK0 006C                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                 __end_of_EUSART_Write 02C2  
        __size_of_EUSART_Receive_ISR 001B                    __end_of_ReturnReg 0442  
                          ?_Set_Mode 0070                              ?_Reboot 0070  
                         __pmaintext 00B2                     ?_TMR1_StartTimer 0070  
                         __pintentry 0004                              ?_init_B 0070  
                            _BAUDCON 019F                        _Partiel_Reset 036B  
                            ?_remote 0070              __size_of_TMR1_StopTimer 0003  
                      _eusartRxCount 007A                            ?_delay_ms 0074  
                            _PWM1DCH 0612                              _PWM1DCL 0611  
                            _PWM2DCH 0615                              _PWM2DCL 0614  
                            _PWM3DCH 0618                              _PWM3DCL 0617  
                            _PWM4DCH 061B                              _PWM1CON 0613  
                            _PWM4DCL 061A                              _PWM2CON 0616  
                            _PWM3CON 0619                              _PWM4CON 061C  
                            _SSP1ADD 0212                              _SSP1BUF 0211  
                   ?_TMR1_WriteTimer 0072                           ??_Set_Mode 0074  
                    __size_of_Reboot 0014                        ?_Verif_Erreur 0020  
                          ?_startI2C 0070                              _Turn_On 03CC  
                     ?_Partiel_Reset 0070                 __size_of_TMR1_Reload 0008  
                    __size_of_init_B 0075                      __size_of_remote 0014  
                            __ptext1 0383                              __ptext2 003D  
                            __ptext3 011F                              __ptext4 027B  
                            __ptext5 0439                              __ptext6 043C  
                            __ptext7 03ED                              __ptext8 03BD  
                            __ptext9 02FE                              _initI2C 01DA  
                          _T1CONbits 0018                              _initRTC 0189  
              _OSCILLATOR_Initialize 0433                            _T2CONbits 001C  
                            _sendI2C 03D8                              _waitI2C 03FD  
           ??_PIN_MANAGER_Initialize 0072                           ??_delay_ms 0076  
                            _stopI2C 03F5           __size_of_SYSTEM_Initialize 001E  
                            clrloop0 042E                 end_of_initialization 0039  
                  _EUSART_Initialize 031A                   ?_EUSART_Initialize 0070  
               __end_of_Set_Features 027B                       ??_Verif_Erreur 0022  
                          _RCSTAbits 019D                           ??_startI2C 0072  
                ??_EUSART_Initialize 0072                     ??_WDT_Initialize 0072  
                          _PORTCbits 000E                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0021            __end_of_EUSART_Initialize 0336  
           __size_of_PWM1_Initialize 0008                       __end_of_Reboot 03AB  
                    ??_Partiel_Reset 0074                         _EUSART_Write 02A1  
                     _TMR1_StopTimer 0439                       __end_of_init_B 00B2  
             ?_OSCILLATOR_Initialize 0070                       __end_of_remote 0397  
                start_initialization 0024             __size_of_PWM2_Initialize 0008  
    __size_of_PIN_MANAGER_Initialize 001A                        ??_EUSART_Read 0072  
                           ??_Reboot 0074             __size_of_PWM3_Initialize 0008  
           __size_of_TMR1_Initialize 0012                    __size_of_Set_Mode 0034  
                          _ReturnReg 043F               __end_of_TMR1_StopTimer 043C  
                           ??_init_B 0079                             ??_remote 0074  
        __end_of_EUSART_Transmit_ISR 02FE                          __pbssCOMMON 007A  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00B3             __size_of_PWM4_Initialize 0008  
           __size_of_TMR2_Initialize 0008                 __end_of_Verif_Erreur 0189  
                  __size_of_delay_ms 0026           __end_of_EUSART_Receive_ISR 0351  
         __size_of_EUSART_Initialize 001C                __size_of_Set_Features 0034  
                __end_of_EUSART_Read 031A                            __pnvBANK1 00B0  
             _PIN_MANAGER_Initialize 0351                 EUSART_Read@readValue 0073  
                         ?_ReturnReg 0070                             ?_Turn_On 0070  
                       _eusartRxHead 006D                      ?_TMR1_StopTimer 0070  
                       _eusartTxHead 007B                         _eusartRxTail 006C  
                       _eusartTxTail 006E                    ??_PWM1_Initialize 0072  
                  __size_of_startI2C 0009         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 00B2                             ?_initI2C 0070  
                           ?_initRTC 0070             __size_of_TMR1_StartTimer 0003  
                           ?_sendI2C 0070                             ?_waitI2C 0070  
                       _Set_Features 0247                             ?_stopI2C 0070  
                     _eusartRxBuffer 00A0                    ??_PWM2_Initialize 0072  
                     _eusartTxBuffer 00A8                             _LATCbits 010E  
                          delay_ms@x 0077                            clear_ram0 042D  
                           _PIE1bits 0091             __size_of_TMR1_WriteTimer 000F  
__size_of_INTERRUPT_InterruptManager 001E                             _PIR1bits 0011  
                      ??_TMR1_Reload 0074                             _SSP1CON1 0215  
                           _SSP1CON2 0216                             _SSP1STAT 0214  
                  ??_TMR1_Initialize 0072                    ??_PWM3_Initialize 0072  
                      Verif_Erreur@i 0024                        Verif_Erreur@j 0026  
                        _EUSART_Read 02FE                         delay_ms@msec 0074  
                  ??_TMR2_Initialize 0072                    ??_PWM4_Initialize 0072  
                          init_B@buf 0029                             _Set_Mode 0213  
                        ??_ReturnReg 0072              ??_OSCILLATOR_Initialize 0072  
                   __size_of_Turn_On 000C                  __end_of_TMR1_Reload 03F5  
              __size_of_Verif_Erreur 006A                     __size_of_initI2C 0039  
                   __size_of_initRTC 0051                     __size_of_sendI2C 000C  
                           _delay_ms 027B                     __size_of_waitI2C 0008  
                           __ptext10 03CC                             __ptext11 0213  
                           __ptext20 03FD                             __ptext12 0247  
                           __ptext21 01DA                             __ptext13 0397  
                         _T1GCONbits 0019                             __ptext30 0351  
                           __ptext22 02C2                             __ptext14 036B  
                           __ptext31 0433                             __ptext23 0442  
                           __ptext15 02A1                             __ptext32 031A  
                           __ptext24 0405                             __ptext16 0189  
                           __ptext33 043F                             __ptext25 03AB  
                           __ptext17 03F5                             __ptext26 040D  
                           __ptext18 03E4                             __ptext35 02E0  
                           __ptext27 0415                             __ptext19 03D8  
                           __ptext36 0336                             __ptext28 041D  
                           __ptext29 0425                         _SSP1CON2bits 0216  
                   __size_of_stopI2C 0008                    ??_TMR1_StartTimer 0072  
                      __size_of_main 006D                             int$flags 007E  
                           _startI2C 03E4                         _Verif_Erreur 011F  
 __end_of_INTERRUPT_InterruptManager 0022           _INTERRUPT_InterruptManager 0004  
              __end_of_Partiel_Reset 0383                    ??_TMR1_WriteTimer 0074  
                           initI2C@i 0073                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0001                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                    _PWM1_Initialize 0425                     ??_TMR1_StopTimer 0072  
                        _TMR1_Reload 03ED                   _EUSART_Receive_ISR 0336  
                         _OPTION_REG 0095                  ?_EUSART_Receive_ISR 0070  
                    _PWM2_Initialize 041D                   EUSART_Write@txData 0073  
       __size_of_EUSART_Transmit_ISR 001E       __end_of_PIN_MANAGER_Initialize 036B  
               ??_EUSART_Receive_ISR 0070                      _TMR1_Initialize 03AB  
                    _PWM3_Initialize 0415  
