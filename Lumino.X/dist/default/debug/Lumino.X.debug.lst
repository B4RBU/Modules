

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 14 12:51:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1509 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011D                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0391                     	;# 
   184  0392                     	;# 
   185  0393                     	;# 
   186  0394                     	;# 
   187  0395                     	;# 
   188  0396                     	;# 
   189  0498                     	;# 
   190  0498                     	;# 
   191  0499                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049B                     	;# 
   195  049C                     	;# 
   196  049D                     	;# 
   197  049E                     	;# 
   198  049F                     	;# 
   199  0611                     	;# 
   200  0612                     	;# 
   201  0613                     	;# 
   202  0613                     	;# 
   203  0614                     	;# 
   204  0615                     	;# 
   205  0616                     	;# 
   206  0616                     	;# 
   207  0617                     	;# 
   208  0618                     	;# 
   209  0619                     	;# 
   210  0619                     	;# 
   211  061A                     	;# 
   212  061B                     	;# 
   213  061C                     	;# 
   214  061C                     	;# 
   215  0691                     	;# 
   216  0692                     	;# 
   217  0693                     	;# 
   218  0694                     	;# 
   219  0695                     	;# 
   220  0F0F                     	;# 
   221  0F10                     	;# 
   222  0F11                     	;# 
   223  0F12                     	;# 
   224  0F13                     	;# 
   225  0F14                     	;# 
   226  0F15                     	;# 
   227  0F16                     	;# 
   228  0F17                     	;# 
   229  0F18                     	;# 
   230  0F19                     	;# 
   231  0F1A                     	;# 
   232  0F1B                     	;# 
   233  0F1C                     	;# 
   234  0F1D                     	;# 
   235  0F1E                     	;# 
   236  0F1F                     	;# 
   237  0F20                     	;# 
   238  0F21                     	;# 
   239  0F22                     	;# 
   240  0F23                     	;# 
   241  0F24                     	;# 
   242  0F25                     	;# 
   243  0F26                     	;# 
   244  0F27                     	;# 
   245  0F28                     	;# 
   246  0F29                     	;# 
   247  0F2A                     	;# 
   248  0F2B                     	;# 
   249  0F2C                     	;# 
   250  0F2D                     	;# 
   251  0F2E                     	;# 
   252  0F2F                     	;# 
   253  0F8C                     	;# 
   254  0F8D                     	;# 
   255  0F91                     	;# 
   256  0F95                     	;# 
   257  0F96                     	;# 
   258  0F97                     	;# 
   259  0F9C                     	;# 
   260  0F9D                     	;# 
   261  0F9E                     	;# 
   262  0FE3                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009B                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0113                     	;# 
   324  0114                     	;# 
   325  0115                     	;# 
   326  0116                     	;# 
   327  0117                     	;# 
   328  0118                     	;# 
   329  0119                     	;# 
   330  011D                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  018E                     	;# 
   334  0191                     	;# 
   335  0191                     	;# 
   336  0192                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0197                     	;# 
   343  0199                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019C                     	;# 
   348  019D                     	;# 
   349  019E                     	;# 
   350  019F                     	;# 
   351  020C                     	;# 
   352  020D                     	;# 
   353  0211                     	;# 
   354  0211                     	;# 
   355  0212                     	;# 
   356  0212                     	;# 
   357  0213                     	;# 
   358  0213                     	;# 
   359  0214                     	;# 
   360  0214                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0216                     	;# 
   365  0216                     	;# 
   366  0217                     	;# 
   367  0217                     	;# 
   368  0391                     	;# 
   369  0392                     	;# 
   370  0393                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  0498                     	;# 
   375  0498                     	;# 
   376  0499                     	;# 
   377  049A                     	;# 
   378  049B                     	;# 
   379  049B                     	;# 
   380  049C                     	;# 
   381  049D                     	;# 
   382  049E                     	;# 
   383  049F                     	;# 
   384  0611                     	;# 
   385  0612                     	;# 
   386  0613                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0615                     	;# 
   390  0616                     	;# 
   391  0616                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  0619                     	;# 
   396  061A                     	;# 
   397  061B                     	;# 
   398  061C                     	;# 
   399  061C                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  0695                     	;# 
   405  0F0F                     	;# 
   406  0F10                     	;# 
   407  0F11                     	;# 
   408  0F12                     	;# 
   409  0F13                     	;# 
   410  0F14                     	;# 
   411  0F15                     	;# 
   412  0F16                     	;# 
   413  0F17                     	;# 
   414  0F18                     	;# 
   415  0F19                     	;# 
   416  0F1A                     	;# 
   417  0F1B                     	;# 
   418  0F1C                     	;# 
   419  0F1D                     	;# 
   420  0F1E                     	;# 
   421  0F1F                     	;# 
   422  0F20                     	;# 
   423  0F21                     	;# 
   424  0F22                     	;# 
   425  0F23                     	;# 
   426  0F24                     	;# 
   427  0F25                     	;# 
   428  0F26                     	;# 
   429  0F27                     	;# 
   430  0F28                     	;# 
   431  0F29                     	;# 
   432  0F2A                     	;# 
   433  0F2B                     	;# 
   434  0F2C                     	;# 
   435  0F2D                     	;# 
   436  0F2E                     	;# 
   437  0F2F                     	;# 
   438  0F8C                     	;# 
   439  0F8D                     	;# 
   440  0F91                     	;# 
   441  0F95                     	;# 
   442  0F96                     	;# 
   443  0F97                     	;# 
   444  0F9C                     	;# 
   445  0F9D                     	;# 
   446  0F9E                     	;# 
   447  0FE3                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0095                     	;# 
   493  0096                     	;# 
   494  0097                     	;# 
   495  0099                     	;# 
   496  009A                     	;# 
   497  009B                     	;# 
   498  009B                     	;# 
   499  009C                     	;# 
   500  009D                     	;# 
   501  009E                     	;# 
   502  009F                     	;# 
   503  010C                     	;# 
   504  010D                     	;# 
   505  010E                     	;# 
   506  0111                     	;# 
   507  0112                     	;# 
   508  0113                     	;# 
   509  0114                     	;# 
   510  0115                     	;# 
   511  0116                     	;# 
   512  0117                     	;# 
   513  0118                     	;# 
   514  0119                     	;# 
   515  011D                     	;# 
   516  018C                     	;# 
   517  018D                     	;# 
   518  018E                     	;# 
   519  0191                     	;# 
   520  0191                     	;# 
   521  0192                     	;# 
   522  0193                     	;# 
   523  0193                     	;# 
   524  0194                     	;# 
   525  0195                     	;# 
   526  0196                     	;# 
   527  0197                     	;# 
   528  0199                     	;# 
   529  019A                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019C                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019F                     	;# 
   536  020C                     	;# 
   537  020D                     	;# 
   538  0211                     	;# 
   539  0211                     	;# 
   540  0212                     	;# 
   541  0212                     	;# 
   542  0213                     	;# 
   543  0213                     	;# 
   544  0214                     	;# 
   545  0214                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0216                     	;# 
   551  0217                     	;# 
   552  0217                     	;# 
   553  0391                     	;# 
   554  0392                     	;# 
   555  0393                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  0498                     	;# 
   560  0498                     	;# 
   561  0499                     	;# 
   562  049A                     	;# 
   563  049B                     	;# 
   564  049B                     	;# 
   565  049C                     	;# 
   566  049D                     	;# 
   567  049E                     	;# 
   568  049F                     	;# 
   569  0611                     	;# 
   570  0612                     	;# 
   571  0613                     	;# 
   572  0613                     	;# 
   573  0614                     	;# 
   574  0615                     	;# 
   575  0616                     	;# 
   576  0616                     	;# 
   577  0617                     	;# 
   578  0618                     	;# 
   579  0619                     	;# 
   580  0619                     	;# 
   581  061A                     	;# 
   582  061B                     	;# 
   583  061C                     	;# 
   584  061C                     	;# 
   585  0691                     	;# 
   586  0692                     	;# 
   587  0693                     	;# 
   588  0694                     	;# 
   589  0695                     	;# 
   590  0F0F                     	;# 
   591  0F10                     	;# 
   592  0F11                     	;# 
   593  0F12                     	;# 
   594  0F13                     	;# 
   595  0F14                     	;# 
   596  0F15                     	;# 
   597  0F16                     	;# 
   598  0F17                     	;# 
   599  0F18                     	;# 
   600  0F19                     	;# 
   601  0F1A                     	;# 
   602  0F1B                     	;# 
   603  0F1C                     	;# 
   604  0F1D                     	;# 
   605  0F1E                     	;# 
   606  0F1F                     	;# 
   607  0F20                     	;# 
   608  0F21                     	;# 
   609  0F22                     	;# 
   610  0F23                     	;# 
   611  0F24                     	;# 
   612  0F25                     	;# 
   613  0F26                     	;# 
   614  0F27                     	;# 
   615  0F28                     	;# 
   616  0F29                     	;# 
   617  0F2A                     	;# 
   618  0F2B                     	;# 
   619  0F2C                     	;# 
   620  0F2D                     	;# 
   621  0F2E                     	;# 
   622  0F2F                     	;# 
   623  0F8C                     	;# 
   624  0F8D                     	;# 
   625  0F91                     	;# 
   626  0F95                     	;# 
   627  0F96                     	;# 
   628  0F97                     	;# 
   629  0F9C                     	;# 
   630  0F9D                     	;# 
   631  0F9E                     	;# 
   632  0FE3                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0093                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  010C                     	;# 
   689  010D                     	;# 
   690  010E                     	;# 
   691  0111                     	;# 
   692  0112                     	;# 
   693  0113                     	;# 
   694  0114                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011D                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  018E                     	;# 
   704  0191                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0199                     	;# 
   714  019A                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  019D                     	;# 
   719  019E                     	;# 
   720  019F                     	;# 
   721  020C                     	;# 
   722  020D                     	;# 
   723  0211                     	;# 
   724  0211                     	;# 
   725  0212                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0213                     	;# 
   729  0214                     	;# 
   730  0214                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0391                     	;# 
   739  0392                     	;# 
   740  0393                     	;# 
   741  0394                     	;# 
   742  0395                     	;# 
   743  0396                     	;# 
   744  0498                     	;# 
   745  0498                     	;# 
   746  0499                     	;# 
   747  049A                     	;# 
   748  049B                     	;# 
   749  049B                     	;# 
   750  049C                     	;# 
   751  049D                     	;# 
   752  049E                     	;# 
   753  049F                     	;# 
   754  0611                     	;# 
   755  0612                     	;# 
   756  0613                     	;# 
   757  0613                     	;# 
   758  0614                     	;# 
   759  0615                     	;# 
   760  0616                     	;# 
   761  0616                     	;# 
   762  0617                     	;# 
   763  0618                     	;# 
   764  0619                     	;# 
   765  0619                     	;# 
   766  061A                     	;# 
   767  061B                     	;# 
   768  061C                     	;# 
   769  061C                     	;# 
   770  0691                     	;# 
   771  0692                     	;# 
   772  0693                     	;# 
   773  0694                     	;# 
   774  0695                     	;# 
   775  0F0F                     	;# 
   776  0F10                     	;# 
   777  0F11                     	;# 
   778  0F12                     	;# 
   779  0F13                     	;# 
   780  0F14                     	;# 
   781  0F15                     	;# 
   782  0F16                     	;# 
   783  0F17                     	;# 
   784  0F18                     	;# 
   785  0F19                     	;# 
   786  0F1A                     	;# 
   787  0F1B                     	;# 
   788  0F1C                     	;# 
   789  0F1D                     	;# 
   790  0F1E                     	;# 
   791  0F1F                     	;# 
   792  0F20                     	;# 
   793  0F21                     	;# 
   794  0F22                     	;# 
   795  0F23                     	;# 
   796  0F24                     	;# 
   797  0F25                     	;# 
   798  0F26                     	;# 
   799  0F27                     	;# 
   800  0F28                     	;# 
   801  0F29                     	;# 
   802  0F2A                     	;# 
   803  0F2B                     	;# 
   804  0F2C                     	;# 
   805  0F2D                     	;# 
   806  0F2E                     	;# 
   807  0F2F                     	;# 
   808  0F8C                     	;# 
   809  0F8D                     	;# 
   810  0F91                     	;# 
   811  0F95                     	;# 
   812  0F96                     	;# 
   813  0F97                     	;# 
   814  0F9C                     	;# 
   815  0F9D                     	;# 
   816  0F9E                     	;# 
   817  0FE3                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829  0000                     	;# 
   830  0001                     	;# 
   831  0002                     	;# 
   832  0003                     	;# 
   833  0004                     	;# 
   834  0005                     	;# 
   835  0006                     	;# 
   836  0007                     	;# 
   837  0008                     	;# 
   838  0009                     	;# 
   839  000A                     	;# 
   840  000B                     	;# 
   841  000C                     	;# 
   842  000D                     	;# 
   843  000E                     	;# 
   844  0011                     	;# 
   845  0012                     	;# 
   846  0013                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001C                     	;# 
   856  008C                     	;# 
   857  008D                     	;# 
   858  008E                     	;# 
   859  0091                     	;# 
   860  0092                     	;# 
   861  0093                     	;# 
   862  0095                     	;# 
   863  0096                     	;# 
   864  0097                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  009F                     	;# 
   873  010C                     	;# 
   874  010D                     	;# 
   875  010E                     	;# 
   876  0111                     	;# 
   877  0112                     	;# 
   878  0113                     	;# 
   879  0114                     	;# 
   880  0115                     	;# 
   881  0116                     	;# 
   882  0117                     	;# 
   883  0118                     	;# 
   884  0119                     	;# 
   885  011D                     	;# 
   886  018C                     	;# 
   887  018D                     	;# 
   888  018E                     	;# 
   889  0191                     	;# 
   890  0191                     	;# 
   891  0192                     	;# 
   892  0193                     	;# 
   893  0193                     	;# 
   894  0194                     	;# 
   895  0195                     	;# 
   896  0196                     	;# 
   897  0197                     	;# 
   898  0199                     	;# 
   899  019A                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  020C                     	;# 
   907  020D                     	;# 
   908  0211                     	;# 
   909  0211                     	;# 
   910  0212                     	;# 
   911  0212                     	;# 
   912  0213                     	;# 
   913  0213                     	;# 
   914  0214                     	;# 
   915  0214                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0216                     	;# 
   920  0216                     	;# 
   921  0217                     	;# 
   922  0217                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  0394                     	;# 
   927  0395                     	;# 
   928  0396                     	;# 
   929  0498                     	;# 
   930  0498                     	;# 
   931  0499                     	;# 
   932  049A                     	;# 
   933  049B                     	;# 
   934  049B                     	;# 
   935  049C                     	;# 
   936  049D                     	;# 
   937  049E                     	;# 
   938  049F                     	;# 
   939  0611                     	;# 
   940  0612                     	;# 
   941  0613                     	;# 
   942  0613                     	;# 
   943  0614                     	;# 
   944  0615                     	;# 
   945  0616                     	;# 
   946  0616                     	;# 
   947  0617                     	;# 
   948  0618                     	;# 
   949  0619                     	;# 
   950  0619                     	;# 
   951  061A                     	;# 
   952  061B                     	;# 
   953  061C                     	;# 
   954  061C                     	;# 
   955  0691                     	;# 
   956  0692                     	;# 
   957  0693                     	;# 
   958  0694                     	;# 
   959  0695                     	;# 
   960  0F0F                     	;# 
   961  0F10                     	;# 
   962  0F11                     	;# 
   963  0F12                     	;# 
   964  0F13                     	;# 
   965  0F14                     	;# 
   966  0F15                     	;# 
   967  0F16                     	;# 
   968  0F17                     	;# 
   969  0F18                     	;# 
   970  0F19                     	;# 
   971  0F1A                     	;# 
   972  0F1B                     	;# 
   973  0F1C                     	;# 
   974  0F1D                     	;# 
   975  0F1E                     	;# 
   976  0F1F                     	;# 
   977  0F20                     	;# 
   978  0F21                     	;# 
   979  0F22                     	;# 
   980  0F23                     	;# 
   981  0F24                     	;# 
   982  0F25                     	;# 
   983  0F26                     	;# 
   984  0F27                     	;# 
   985  0F28                     	;# 
   986  0F29                     	;# 
   987  0F2A                     	;# 
   988  0F2B                     	;# 
   989  0F2C                     	;# 
   990  0F2D                     	;# 
   991  0F2E                     	;# 
   992  0F2F                     	;# 
   993  0F8C                     	;# 
   994  0F8D                     	;# 
   995  0F91                     	;# 
   996  0F95                     	;# 
   997  0F96                     	;# 
   998  0F97                     	;# 
   999  0F9C                     	;# 
  1000  0F9D                     	;# 
  1001  0F9E                     	;# 
  1002  0FE3                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014  0000                     	;# 
  1015  0001                     	;# 
  1016  0002                     	;# 
  1017  0003                     	;# 
  1018  0004                     	;# 
  1019  0005                     	;# 
  1020  0006                     	;# 
  1021  0007                     	;# 
  1022  0008                     	;# 
  1023  0009                     	;# 
  1024  000A                     	;# 
  1025  000B                     	;# 
  1026  000C                     	;# 
  1027  000D                     	;# 
  1028  000E                     	;# 
  1029  0011                     	;# 
  1030  0012                     	;# 
  1031  0013                     	;# 
  1032  0015                     	;# 
  1033  0016                     	;# 
  1034  0016                     	;# 
  1035  0017                     	;# 
  1036  0018                     	;# 
  1037  0019                     	;# 
  1038  001A                     	;# 
  1039  001B                     	;# 
  1040  001C                     	;# 
  1041  008C                     	;# 
  1042  008D                     	;# 
  1043  008E                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0093                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0097                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  009F                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011D                     	;# 
  1071  018C                     	;# 
  1072  018D                     	;# 
  1073  018E                     	;# 
  1074  0191                     	;# 
  1075  0191                     	;# 
  1076  0192                     	;# 
  1077  0193                     	;# 
  1078  0193                     	;# 
  1079  0194                     	;# 
  1080  0195                     	;# 
  1081  0196                     	;# 
  1082  0197                     	;# 
  1083  0199                     	;# 
  1084  019A                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019C                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019F                     	;# 
  1091  020C                     	;# 
  1092  020D                     	;# 
  1093  0211                     	;# 
  1094  0211                     	;# 
  1095  0212                     	;# 
  1096  0212                     	;# 
  1097  0213                     	;# 
  1098  0213                     	;# 
  1099  0214                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0216                     	;# 
  1105  0216                     	;# 
  1106  0217                     	;# 
  1107  0217                     	;# 
  1108  0391                     	;# 
  1109  0392                     	;# 
  1110  0393                     	;# 
  1111  0394                     	;# 
  1112  0395                     	;# 
  1113  0396                     	;# 
  1114  0498                     	;# 
  1115  0498                     	;# 
  1116  0499                     	;# 
  1117  049A                     	;# 
  1118  049B                     	;# 
  1119  049B                     	;# 
  1120  049C                     	;# 
  1121  049D                     	;# 
  1122  049E                     	;# 
  1123  049F                     	;# 
  1124  0611                     	;# 
  1125  0612                     	;# 
  1126  0613                     	;# 
  1127  0613                     	;# 
  1128  0614                     	;# 
  1129  0615                     	;# 
  1130  0616                     	;# 
  1131  0616                     	;# 
  1132  0617                     	;# 
  1133  0618                     	;# 
  1134  0619                     	;# 
  1135  0619                     	;# 
  1136  061A                     	;# 
  1137  061B                     	;# 
  1138  061C                     	;# 
  1139  061C                     	;# 
  1140  0691                     	;# 
  1141  0692                     	;# 
  1142  0693                     	;# 
  1143  0694                     	;# 
  1144  0695                     	;# 
  1145  0F0F                     	;# 
  1146  0F10                     	;# 
  1147  0F11                     	;# 
  1148  0F12                     	;# 
  1149  0F13                     	;# 
  1150  0F14                     	;# 
  1151  0F15                     	;# 
  1152  0F16                     	;# 
  1153  0F17                     	;# 
  1154  0F18                     	;# 
  1155  0F19                     	;# 
  1156  0F1A                     	;# 
  1157  0F1B                     	;# 
  1158  0F1C                     	;# 
  1159  0F1D                     	;# 
  1160  0F1E                     	;# 
  1161  0F1F                     	;# 
  1162  0F20                     	;# 
  1163  0F21                     	;# 
  1164  0F22                     	;# 
  1165  0F23                     	;# 
  1166  0F24                     	;# 
  1167  0F25                     	;# 
  1168  0F26                     	;# 
  1169  0F27                     	;# 
  1170  0F28                     	;# 
  1171  0F29                     	;# 
  1172  0F2A                     	;# 
  1173  0F2B                     	;# 
  1174  0F2C                     	;# 
  1175  0F2D                     	;# 
  1176  0F2E                     	;# 
  1177  0F2F                     	;# 
  1178  0F8C                     	;# 
  1179  0F8D                     	;# 
  1180  0F91                     	;# 
  1181  0F95                     	;# 
  1182  0F96                     	;# 
  1183  0F97                     	;# 
  1184  0F9C                     	;# 
  1185  0F9D                     	;# 
  1186  0F9E                     	;# 
  1187  0FE3                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  000E                     	;# 
  1214  0011                     	;# 
  1215  0012                     	;# 
  1216  0013                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0016                     	;# 
  1220  0017                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  008C                     	;# 
  1227  008D                     	;# 
  1228  008E                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0097                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  009F                     	;# 
  1243  010C                     	;# 
  1244  010D                     	;# 
  1245  010E                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0113                     	;# 
  1249  0114                     	;# 
  1250  0115                     	;# 
  1251  0116                     	;# 
  1252  0117                     	;# 
  1253  0118                     	;# 
  1254  0119                     	;# 
  1255  011D                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  018E                     	;# 
  1259  0191                     	;# 
  1260  0191                     	;# 
  1261  0192                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0194                     	;# 
  1265  0195                     	;# 
  1266  0196                     	;# 
  1267  0197                     	;# 
  1268  0199                     	;# 
  1269  019A                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019C                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  0211                     	;# 
  1279  0211                     	;# 
  1280  0212                     	;# 
  1281  0212                     	;# 
  1282  0213                     	;# 
  1283  0213                     	;# 
  1284  0214                     	;# 
  1285  0214                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0215                     	;# 
  1289  0216                     	;# 
  1290  0216                     	;# 
  1291  0217                     	;# 
  1292  0217                     	;# 
  1293  0391                     	;# 
  1294  0392                     	;# 
  1295  0393                     	;# 
  1296  0394                     	;# 
  1297  0395                     	;# 
  1298  0396                     	;# 
  1299  0498                     	;# 
  1300  0498                     	;# 
  1301  0499                     	;# 
  1302  049A                     	;# 
  1303  049B                     	;# 
  1304  049B                     	;# 
  1305  049C                     	;# 
  1306  049D                     	;# 
  1307  049E                     	;# 
  1308  049F                     	;# 
  1309  0611                     	;# 
  1310  0612                     	;# 
  1311  0613                     	;# 
  1312  0613                     	;# 
  1313  0614                     	;# 
  1314  0615                     	;# 
  1315  0616                     	;# 
  1316  0616                     	;# 
  1317  0617                     	;# 
  1318  0618                     	;# 
  1319  0619                     	;# 
  1320  0619                     	;# 
  1321  061A                     	;# 
  1322  061B                     	;# 
  1323  061C                     	;# 
  1324  061C                     	;# 
  1325  0691                     	;# 
  1326  0692                     	;# 
  1327  0693                     	;# 
  1328  0694                     	;# 
  1329  0695                     	;# 
  1330  0F0F                     	;# 
  1331  0F10                     	;# 
  1332  0F11                     	;# 
  1333  0F12                     	;# 
  1334  0F13                     	;# 
  1335  0F14                     	;# 
  1336  0F15                     	;# 
  1337  0F16                     	;# 
  1338  0F17                     	;# 
  1339  0F18                     	;# 
  1340  0F19                     	;# 
  1341  0F1A                     	;# 
  1342  0F1B                     	;# 
  1343  0F1C                     	;# 
  1344  0F1D                     	;# 
  1345  0F1E                     	;# 
  1346  0F1F                     	;# 
  1347  0F20                     	;# 
  1348  0F21                     	;# 
  1349  0F22                     	;# 
  1350  0F23                     	;# 
  1351  0F24                     	;# 
  1352  0F25                     	;# 
  1353  0F26                     	;# 
  1354  0F27                     	;# 
  1355  0F28                     	;# 
  1356  0F29                     	;# 
  1357  0F2A                     	;# 
  1358  0F2B                     	;# 
  1359  0F2C                     	;# 
  1360  0F2D                     	;# 
  1361  0F2E                     	;# 
  1362  0F2F                     	;# 
  1363  0F8C                     	;# 
  1364  0F8D                     	;# 
  1365  0F91                     	;# 
  1366  0F95                     	;# 
  1367  0F96                     	;# 
  1368  0F97                     	;# 
  1369  0F9C                     	;# 
  1370  0F9D                     	;# 
  1371  0F9E                     	;# 
  1372  0FE3                     	;# 
  1373  0FE4                     	;# 
  1374  0FE5                     	;# 
  1375  0FE6                     	;# 
  1376  0FE7                     	;# 
  1377  0FE8                     	;# 
  1378  0FE9                     	;# 
  1379  0FEA                     	;# 
  1380  0FEB                     	;# 
  1381  0FED                     	;# 
  1382  0FEE                     	;# 
  1383  0FEF                     	;# 
  1384  0000                     	;# 
  1385  0001                     	;# 
  1386  0002                     	;# 
  1387  0003                     	;# 
  1388  0004                     	;# 
  1389  0005                     	;# 
  1390  0006                     	;# 
  1391  0007                     	;# 
  1392  0008                     	;# 
  1393  0009                     	;# 
  1394  000A                     	;# 
  1395  000B                     	;# 
  1396  000C                     	;# 
  1397  000D                     	;# 
  1398  000E                     	;# 
  1399  0011                     	;# 
  1400  0012                     	;# 
  1401  0013                     	;# 
  1402  0015                     	;# 
  1403  0016                     	;# 
  1404  0016                     	;# 
  1405  0017                     	;# 
  1406  0018                     	;# 
  1407  0019                     	;# 
  1408  001A                     	;# 
  1409  001B                     	;# 
  1410  001C                     	;# 
  1411  008C                     	;# 
  1412  008D                     	;# 
  1413  008E                     	;# 
  1414  0091                     	;# 
  1415  0092                     	;# 
  1416  0093                     	;# 
  1417  0095                     	;# 
  1418  0096                     	;# 
  1419  0097                     	;# 
  1420  0099                     	;# 
  1421  009A                     	;# 
  1422  009B                     	;# 
  1423  009B                     	;# 
  1424  009C                     	;# 
  1425  009D                     	;# 
  1426  009E                     	;# 
  1427  009F                     	;# 
  1428  010C                     	;# 
  1429  010D                     	;# 
  1430  010E                     	;# 
  1431  0111                     	;# 
  1432  0112                     	;# 
  1433  0113                     	;# 
  1434  0114                     	;# 
  1435  0115                     	;# 
  1436  0116                     	;# 
  1437  0117                     	;# 
  1438  0118                     	;# 
  1439  0119                     	;# 
  1440  011D                     	;# 
  1441  018C                     	;# 
  1442  018D                     	;# 
  1443  018E                     	;# 
  1444  0191                     	;# 
  1445  0191                     	;# 
  1446  0192                     	;# 
  1447  0193                     	;# 
  1448  0193                     	;# 
  1449  0194                     	;# 
  1450  0195                     	;# 
  1451  0196                     	;# 
  1452  0197                     	;# 
  1453  0199                     	;# 
  1454  019A                     	;# 
  1455  019B                     	;# 
  1456  019B                     	;# 
  1457  019C                     	;# 
  1458  019D                     	;# 
  1459  019E                     	;# 
  1460  019F                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  0391                     	;# 
  1479  0392                     	;# 
  1480  0393                     	;# 
  1481  0394                     	;# 
  1482  0395                     	;# 
  1483  0396                     	;# 
  1484  0498                     	;# 
  1485  0498                     	;# 
  1486  0499                     	;# 
  1487  049A                     	;# 
  1488  049B                     	;# 
  1489  049B                     	;# 
  1490  049C                     	;# 
  1491  049D                     	;# 
  1492  049E                     	;# 
  1493  049F                     	;# 
  1494  0611                     	;# 
  1495  0612                     	;# 
  1496  0613                     	;# 
  1497  0613                     	;# 
  1498  0614                     	;# 
  1499  0615                     	;# 
  1500  0616                     	;# 
  1501  0616                     	;# 
  1502  0617                     	;# 
  1503  0618                     	;# 
  1504  0619                     	;# 
  1505  0619                     	;# 
  1506  061A                     	;# 
  1507  061B                     	;# 
  1508  061C                     	;# 
  1509  061C                     	;# 
  1510  0691                     	;# 
  1511  0692                     	;# 
  1512  0693                     	;# 
  1513  0694                     	;# 
  1514  0695                     	;# 
  1515  0F0F                     	;# 
  1516  0F10                     	;# 
  1517  0F11                     	;# 
  1518  0F12                     	;# 
  1519  0F13                     	;# 
  1520  0F14                     	;# 
  1521  0F15                     	;# 
  1522  0F16                     	;# 
  1523  0F17                     	;# 
  1524  0F18                     	;# 
  1525  0F19                     	;# 
  1526  0F1A                     	;# 
  1527  0F1B                     	;# 
  1528  0F1C                     	;# 
  1529  0F1D                     	;# 
  1530  0F1E                     	;# 
  1531  0F1F                     	;# 
  1532  0F20                     	;# 
  1533  0F21                     	;# 
  1534  0F22                     	;# 
  1535  0F23                     	;# 
  1536  0F24                     	;# 
  1537  0F25                     	;# 
  1538  0F26                     	;# 
  1539  0F27                     	;# 
  1540  0F28                     	;# 
  1541  0F29                     	;# 
  1542  0F2A                     	;# 
  1543  0F2B                     	;# 
  1544  0F2C                     	;# 
  1545  0F2D                     	;# 
  1546  0F2E                     	;# 
  1547  0F2F                     	;# 
  1548  0F8C                     	;# 
  1549  0F8D                     	;# 
  1550  0F91                     	;# 
  1551  0F95                     	;# 
  1552  0F96                     	;# 
  1553  0F97                     	;# 
  1554  0F9C                     	;# 
  1555  0F9D                     	;# 
  1556  0F9E                     	;# 
  1557  0FE3                     	;# 
  1558  0FE4                     	;# 
  1559  0FE5                     	;# 
  1560  0FE6                     	;# 
  1561  0FE7                     	;# 
  1562  0FE8                     	;# 
  1563  0FE9                     	;# 
  1564  0FEA                     	;# 
  1565  0FEB                     	;# 
  1566  0FED                     	;# 
  1567  0FEE                     	;# 
  1568  0FEF                     	;# 
  1569  0000                     	;# 
  1570  0001                     	;# 
  1571  0002                     	;# 
  1572  0003                     	;# 
  1573  0004                     	;# 
  1574  0005                     	;# 
  1575  0006                     	;# 
  1576  0007                     	;# 
  1577  0008                     	;# 
  1578  0009                     	;# 
  1579  000A                     	;# 
  1580  000B                     	;# 
  1581  000C                     	;# 
  1582  000D                     	;# 
  1583  000E                     	;# 
  1584  0011                     	;# 
  1585  0012                     	;# 
  1586  0013                     	;# 
  1587  0015                     	;# 
  1588  0016                     	;# 
  1589  0016                     	;# 
  1590  0017                     	;# 
  1591  0018                     	;# 
  1592  0019                     	;# 
  1593  001A                     	;# 
  1594  001B                     	;# 
  1595  001C                     	;# 
  1596  008C                     	;# 
  1597  008D                     	;# 
  1598  008E                     	;# 
  1599  0091                     	;# 
  1600  0092                     	;# 
  1601  0093                     	;# 
  1602  0095                     	;# 
  1603  0096                     	;# 
  1604  0097                     	;# 
  1605  0099                     	;# 
  1606  009A                     	;# 
  1607  009B                     	;# 
  1608  009B                     	;# 
  1609  009C                     	;# 
  1610  009D                     	;# 
  1611  009E                     	;# 
  1612  009F                     	;# 
  1613  010C                     	;# 
  1614  010D                     	;# 
  1615  010E                     	;# 
  1616  0111                     	;# 
  1617  0112                     	;# 
  1618  0113                     	;# 
  1619  0114                     	;# 
  1620  0115                     	;# 
  1621  0116                     	;# 
  1622  0117                     	;# 
  1623  0118                     	;# 
  1624  0119                     	;# 
  1625  011D                     	;# 
  1626  018C                     	;# 
  1627  018D                     	;# 
  1628  018E                     	;# 
  1629  0191                     	;# 
  1630  0191                     	;# 
  1631  0192                     	;# 
  1632  0193                     	;# 
  1633  0193                     	;# 
  1634  0194                     	;# 
  1635  0195                     	;# 
  1636  0196                     	;# 
  1637  0197                     	;# 
  1638  0199                     	;# 
  1639  019A                     	;# 
  1640  019B                     	;# 
  1641  019B                     	;# 
  1642  019C                     	;# 
  1643  019D                     	;# 
  1644  019E                     	;# 
  1645  019F                     	;# 
  1646  020C                     	;# 
  1647  020D                     	;# 
  1648  0211                     	;# 
  1649  0211                     	;# 
  1650  0212                     	;# 
  1651  0212                     	;# 
  1652  0213                     	;# 
  1653  0213                     	;# 
  1654  0214                     	;# 
  1655  0214                     	;# 
  1656  0215                     	;# 
  1657  0215                     	;# 
  1658  0215                     	;# 
  1659  0216                     	;# 
  1660  0216                     	;# 
  1661  0217                     	;# 
  1662  0217                     	;# 
  1663  0391                     	;# 
  1664  0392                     	;# 
  1665  0393                     	;# 
  1666  0394                     	;# 
  1667  0395                     	;# 
  1668  0396                     	;# 
  1669  0498                     	;# 
  1670  0498                     	;# 
  1671  0499                     	;# 
  1672  049A                     	;# 
  1673  049B                     	;# 
  1674  049B                     	;# 
  1675  049C                     	;# 
  1676  049D                     	;# 
  1677  049E                     	;# 
  1678  049F                     	;# 
  1679  0611                     	;# 
  1680  0612                     	;# 
  1681  0613                     	;# 
  1682  0613                     	;# 
  1683  0614                     	;# 
  1684  0615                     	;# 
  1685  0616                     	;# 
  1686  0616                     	;# 
  1687  0617                     	;# 
  1688  0618                     	;# 
  1689  0619                     	;# 
  1690  0619                     	;# 
  1691  061A                     	;# 
  1692  061B                     	;# 
  1693  061C                     	;# 
  1694  061C                     	;# 
  1695  0691                     	;# 
  1696  0692                     	;# 
  1697  0693                     	;# 
  1698  0694                     	;# 
  1699  0695                     	;# 
  1700  0F0F                     	;# 
  1701  0F10                     	;# 
  1702  0F11                     	;# 
  1703  0F12                     	;# 
  1704  0F13                     	;# 
  1705  0F14                     	;# 
  1706  0F15                     	;# 
  1707  0F16                     	;# 
  1708  0F17                     	;# 
  1709  0F18                     	;# 
  1710  0F19                     	;# 
  1711  0F1A                     	;# 
  1712  0F1B                     	;# 
  1713  0F1C                     	;# 
  1714  0F1D                     	;# 
  1715  0F1E                     	;# 
  1716  0F1F                     	;# 
  1717  0F20                     	;# 
  1718  0F21                     	;# 
  1719  0F22                     	;# 
  1720  0F23                     	;# 
  1721  0F24                     	;# 
  1722  0F25                     	;# 
  1723  0F26                     	;# 
  1724  0F27                     	;# 
  1725  0F28                     	;# 
  1726  0F29                     	;# 
  1727  0F2A                     	;# 
  1728  0F2B                     	;# 
  1729  0F2C                     	;# 
  1730  0F2D                     	;# 
  1731  0F2E                     	;# 
  1732  0F2F                     	;# 
  1733  0F8C                     	;# 
  1734  0F8D                     	;# 
  1735  0F91                     	;# 
  1736  0F95                     	;# 
  1737  0F96                     	;# 
  1738  0F97                     	;# 
  1739  0F9C                     	;# 
  1740  0F9D                     	;# 
  1741  0F9E                     	;# 
  1742  0FE3                     	;# 
  1743  0FE4                     	;# 
  1744  0FE5                     	;# 
  1745  0FE6                     	;# 
  1746  0FE7                     	;# 
  1747  0FE8                     	;# 
  1748  0FE9                     	;# 
  1749  0FEA                     	;# 
  1750  0FEB                     	;# 
  1751  0FED                     	;# 
  1752  0FEE                     	;# 
  1753  0FEF                     	;# 
  1754  0000                     	;# 
  1755  0001                     	;# 
  1756  0002                     	;# 
  1757  0003                     	;# 
  1758  0004                     	;# 
  1759  0005                     	;# 
  1760  0006                     	;# 
  1761  0007                     	;# 
  1762  0008                     	;# 
  1763  0009                     	;# 
  1764  000A                     	;# 
  1765  000B                     	;# 
  1766  000C                     	;# 
  1767  000D                     	;# 
  1768  000E                     	;# 
  1769  0011                     	;# 
  1770  0012                     	;# 
  1771  0013                     	;# 
  1772  0015                     	;# 
  1773  0016                     	;# 
  1774  0016                     	;# 
  1775  0017                     	;# 
  1776  0018                     	;# 
  1777  0019                     	;# 
  1778  001A                     	;# 
  1779  001B                     	;# 
  1780  001C                     	;# 
  1781  008C                     	;# 
  1782  008D                     	;# 
  1783  008E                     	;# 
  1784  0091                     	;# 
  1785  0092                     	;# 
  1786  0093                     	;# 
  1787  0095                     	;# 
  1788  0096                     	;# 
  1789  0097                     	;# 
  1790  0099                     	;# 
  1791  009A                     	;# 
  1792  009B                     	;# 
  1793  009B                     	;# 
  1794  009C                     	;# 
  1795  009D                     	;# 
  1796  009E                     	;# 
  1797  009F                     	;# 
  1798  010C                     	;# 
  1799  010D                     	;# 
  1800  010E                     	;# 
  1801  0111                     	;# 
  1802  0112                     	;# 
  1803  0113                     	;# 
  1804  0114                     	;# 
  1805  0115                     	;# 
  1806  0116                     	;# 
  1807  0117                     	;# 
  1808  0118                     	;# 
  1809  0119                     	;# 
  1810  011D                     	;# 
  1811  018C                     	;# 
  1812  018D                     	;# 
  1813  018E                     	;# 
  1814  0191                     	;# 
  1815  0191                     	;# 
  1816  0192                     	;# 
  1817  0193                     	;# 
  1818  0193                     	;# 
  1819  0194                     	;# 
  1820  0195                     	;# 
  1821  0196                     	;# 
  1822  0197                     	;# 
  1823  0199                     	;# 
  1824  019A                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019C                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019F                     	;# 
  1831  020C                     	;# 
  1832  020D                     	;# 
  1833  0211                     	;# 
  1834  0211                     	;# 
  1835  0212                     	;# 
  1836  0212                     	;# 
  1837  0213                     	;# 
  1838  0213                     	;# 
  1839  0214                     	;# 
  1840  0214                     	;# 
  1841  0215                     	;# 
  1842  0215                     	;# 
  1843  0215                     	;# 
  1844  0216                     	;# 
  1845  0216                     	;# 
  1846  0217                     	;# 
  1847  0217                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  0393                     	;# 
  1851  0394                     	;# 
  1852  0395                     	;# 
  1853  0396                     	;# 
  1854  0498                     	;# 
  1855  0498                     	;# 
  1856  0499                     	;# 
  1857  049A                     	;# 
  1858  049B                     	;# 
  1859  049B                     	;# 
  1860  049C                     	;# 
  1861  049D                     	;# 
  1862  049E                     	;# 
  1863  049F                     	;# 
  1864  0611                     	;# 
  1865  0612                     	;# 
  1866  0613                     	;# 
  1867  0613                     	;# 
  1868  0614                     	;# 
  1869  0615                     	;# 
  1870  0616                     	;# 
  1871  0616                     	;# 
  1872  0617                     	;# 
  1873  0618                     	;# 
  1874  0619                     	;# 
  1875  0619                     	;# 
  1876  061A                     	;# 
  1877  061B                     	;# 
  1878  061C                     	;# 
  1879  061C                     	;# 
  1880  0691                     	;# 
  1881  0692                     	;# 
  1882  0693                     	;# 
  1883  0694                     	;# 
  1884  0695                     	;# 
  1885  0F0F                     	;# 
  1886  0F10                     	;# 
  1887  0F11                     	;# 
  1888  0F12                     	;# 
  1889  0F13                     	;# 
  1890  0F14                     	;# 
  1891  0F15                     	;# 
  1892  0F16                     	;# 
  1893  0F17                     	;# 
  1894  0F18                     	;# 
  1895  0F19                     	;# 
  1896  0F1A                     	;# 
  1897  0F1B                     	;# 
  1898  0F1C                     	;# 
  1899  0F1D                     	;# 
  1900  0F1E                     	;# 
  1901  0F1F                     	;# 
  1902  0F20                     	;# 
  1903  0F21                     	;# 
  1904  0F22                     	;# 
  1905  0F23                     	;# 
  1906  0F24                     	;# 
  1907  0F25                     	;# 
  1908  0F26                     	;# 
  1909  0F27                     	;# 
  1910  0F28                     	;# 
  1911  0F29                     	;# 
  1912  0F2A                     	;# 
  1913  0F2B                     	;# 
  1914  0F2C                     	;# 
  1915  0F2D                     	;# 
  1916  0F2E                     	;# 
  1917  0F2F                     	;# 
  1918  0F8C                     	;# 
  1919  0F8D                     	;# 
  1920  0F91                     	;# 
  1921  0F95                     	;# 
  1922  0F96                     	;# 
  1923  0F97                     	;# 
  1924  0F9C                     	;# 
  1925  0F9D                     	;# 
  1926  0F9E                     	;# 
  1927  0FE3                     	;# 
  1928  0FE4                     	;# 
  1929  0FE5                     	;# 
  1930  0FE6                     	;# 
  1931  0FE7                     	;# 
  1932  0FE8                     	;# 
  1933  0FE9                     	;# 
  1934  0FEA                     	;# 
  1935  0FEB                     	;# 
  1936  0FED                     	;# 
  1937  0FEE                     	;# 
  1938  0FEF                     	;# 
  1939  0000                     	;# 
  1940  0001                     	;# 
  1941  0002                     	;# 
  1942  0003                     	;# 
  1943  0004                     	;# 
  1944  0005                     	;# 
  1945  0006                     	;# 
  1946  0007                     	;# 
  1947  0008                     	;# 
  1948  0009                     	;# 
  1949  000A                     	;# 
  1950  000B                     	;# 
  1951  000C                     	;# 
  1952  000D                     	;# 
  1953  000E                     	;# 
  1954  0011                     	;# 
  1955  0012                     	;# 
  1956  0013                     	;# 
  1957  0015                     	;# 
  1958  0016                     	;# 
  1959  0016                     	;# 
  1960  0017                     	;# 
  1961  0018                     	;# 
  1962  0019                     	;# 
  1963  001A                     	;# 
  1964  001B                     	;# 
  1965  001C                     	;# 
  1966  008C                     	;# 
  1967  008D                     	;# 
  1968  008E                     	;# 
  1969  0091                     	;# 
  1970  0092                     	;# 
  1971  0093                     	;# 
  1972  0095                     	;# 
  1973  0096                     	;# 
  1974  0097                     	;# 
  1975  0099                     	;# 
  1976  009A                     	;# 
  1977  009B                     	;# 
  1978  009B                     	;# 
  1979  009C                     	;# 
  1980  009D                     	;# 
  1981  009E                     	;# 
  1982  009F                     	;# 
  1983  010C                     	;# 
  1984  010D                     	;# 
  1985  010E                     	;# 
  1986  0111                     	;# 
  1987  0112                     	;# 
  1988  0113                     	;# 
  1989  0114                     	;# 
  1990  0115                     	;# 
  1991  0116                     	;# 
  1992  0117                     	;# 
  1993  0118                     	;# 
  1994  0119                     	;# 
  1995  011D                     	;# 
  1996  018C                     	;# 
  1997  018D                     	;# 
  1998  018E                     	;# 
  1999  0191                     	;# 
  2000  0191                     	;# 
  2001  0192                     	;# 
  2002  0193                     	;# 
  2003  0193                     	;# 
  2004  0194                     	;# 
  2005  0195                     	;# 
  2006  0196                     	;# 
  2007  0197                     	;# 
  2008  0199                     	;# 
  2009  019A                     	;# 
  2010  019B                     	;# 
  2011  019B                     	;# 
  2012  019C                     	;# 
  2013  019D                     	;# 
  2014  019E                     	;# 
  2015  019F                     	;# 
  2016  020C                     	;# 
  2017  020D                     	;# 
  2018  0211                     	;# 
  2019  0211                     	;# 
  2020  0212                     	;# 
  2021  0212                     	;# 
  2022  0213                     	;# 
  2023  0213                     	;# 
  2024  0214                     	;# 
  2025  0214                     	;# 
  2026  0215                     	;# 
  2027  0215                     	;# 
  2028  0215                     	;# 
  2029  0216                     	;# 
  2030  0216                     	;# 
  2031  0217                     	;# 
  2032  0217                     	;# 
  2033  0391                     	;# 
  2034  0392                     	;# 
  2035  0393                     	;# 
  2036  0394                     	;# 
  2037  0395                     	;# 
  2038  0396                     	;# 
  2039  0498                     	;# 
  2040  0498                     	;# 
  2041  0499                     	;# 
  2042  049A                     	;# 
  2043  049B                     	;# 
  2044  049B                     	;# 
  2045  049C                     	;# 
  2046  049D                     	;# 
  2047  049E                     	;# 
  2048  049F                     	;# 
  2049  0611                     	;# 
  2050  0612                     	;# 
  2051  0613                     	;# 
  2052  0613                     	;# 
  2053  0614                     	;# 
  2054  0615                     	;# 
  2055  0616                     	;# 
  2056  0616                     	;# 
  2057  0617                     	;# 
  2058  0618                     	;# 
  2059  0619                     	;# 
  2060  0619                     	;# 
  2061  061A                     	;# 
  2062  061B                     	;# 
  2063  061C                     	;# 
  2064  061C                     	;# 
  2065  0691                     	;# 
  2066  0692                     	;# 
  2067  0693                     	;# 
  2068  0694                     	;# 
  2069  0695                     	;# 
  2070  0F0F                     	;# 
  2071  0F10                     	;# 
  2072  0F11                     	;# 
  2073  0F12                     	;# 
  2074  0F13                     	;# 
  2075  0F14                     	;# 
  2076  0F15                     	;# 
  2077  0F16                     	;# 
  2078  0F17                     	;# 
  2079  0F18                     	;# 
  2080  0F19                     	;# 
  2081  0F1A                     	;# 
  2082  0F1B                     	;# 
  2083  0F1C                     	;# 
  2084  0F1D                     	;# 
  2085  0F1E                     	;# 
  2086  0F1F                     	;# 
  2087  0F20                     	;# 
  2088  0F21                     	;# 
  2089  0F22                     	;# 
  2090  0F23                     	;# 
  2091  0F24                     	;# 
  2092  0F25                     	;# 
  2093  0F26                     	;# 
  2094  0F27                     	;# 
  2095  0F28                     	;# 
  2096  0F29                     	;# 
  2097  0F2A                     	;# 
  2098  0F2B                     	;# 
  2099  0F2C                     	;# 
  2100  0F2D                     	;# 
  2101  0F2E                     	;# 
  2102  0F2F                     	;# 
  2103  0F8C                     	;# 
  2104  0F8D                     	;# 
  2105  0F91                     	;# 
  2106  0F95                     	;# 
  2107  0F96                     	;# 
  2108  0F97                     	;# 
  2109  0F9C                     	;# 
  2110  0F9D                     	;# 
  2111  0F9E                     	;# 
  2112  0FE3                     	;# 
  2113  0FE4                     	;# 
  2114  0FE5                     	;# 
  2115  0FE6                     	;# 
  2116  0FE7                     	;# 
  2117  0FE8                     	;# 
  2118  0FE9                     	;# 
  2119  0FEA                     	;# 
  2120  0FEB                     	;# 
  2121  0FED                     	;# 
  2122  0FEE                     	;# 
  2123  0FEF                     	;# 
  2124  0000                     	;# 
  2125  0001                     	;# 
  2126  0002                     	;# 
  2127  0003                     	;# 
  2128  0004                     	;# 
  2129  0005                     	;# 
  2130  0006                     	;# 
  2131  0007                     	;# 
  2132  0008                     	;# 
  2133  0009                     	;# 
  2134  000A                     	;# 
  2135  000B                     	;# 
  2136  000C                     	;# 
  2137  000D                     	;# 
  2138  000E                     	;# 
  2139  0011                     	;# 
  2140  0012                     	;# 
  2141  0013                     	;# 
  2142  0015                     	;# 
  2143  0016                     	;# 
  2144  0016                     	;# 
  2145  0017                     	;# 
  2146  0018                     	;# 
  2147  0019                     	;# 
  2148  001A                     	;# 
  2149  001B                     	;# 
  2150  001C                     	;# 
  2151  008C                     	;# 
  2152  008D                     	;# 
  2153  008E                     	;# 
  2154  0091                     	;# 
  2155  0092                     	;# 
  2156  0093                     	;# 
  2157  0095                     	;# 
  2158  0096                     	;# 
  2159  0097                     	;# 
  2160  0099                     	;# 
  2161  009A                     	;# 
  2162  009B                     	;# 
  2163  009B                     	;# 
  2164  009C                     	;# 
  2165  009D                     	;# 
  2166  009E                     	;# 
  2167  009F                     	;# 
  2168  010C                     	;# 
  2169  010D                     	;# 
  2170  010E                     	;# 
  2171  0111                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0115                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0118                     	;# 
  2179  0119                     	;# 
  2180  011D                     	;# 
  2181  018C                     	;# 
  2182  018D                     	;# 
  2183  018E                     	;# 
  2184  0191                     	;# 
  2185  0191                     	;# 
  2186  0192                     	;# 
  2187  0193                     	;# 
  2188  0193                     	;# 
  2189  0194                     	;# 
  2190  0195                     	;# 
  2191  0196                     	;# 
  2192  0197                     	;# 
  2193  0199                     	;# 
  2194  019A                     	;# 
  2195  019B                     	;# 
  2196  019B                     	;# 
  2197  019C                     	;# 
  2198  019D                     	;# 
  2199  019E                     	;# 
  2200  019F                     	;# 
  2201  020C                     	;# 
  2202  020D                     	;# 
  2203  0211                     	;# 
  2204  0211                     	;# 
  2205  0212                     	;# 
  2206  0212                     	;# 
  2207  0213                     	;# 
  2208  0213                     	;# 
  2209  0214                     	;# 
  2210  0214                     	;# 
  2211  0215                     	;# 
  2212  0215                     	;# 
  2213  0215                     	;# 
  2214  0216                     	;# 
  2215  0216                     	;# 
  2216  0217                     	;# 
  2217  0217                     	;# 
  2218  0391                     	;# 
  2219  0392                     	;# 
  2220  0393                     	;# 
  2221  0394                     	;# 
  2222  0395                     	;# 
  2223  0396                     	;# 
  2224  0498                     	;# 
  2225  0498                     	;# 
  2226  0499                     	;# 
  2227  049A                     	;# 
  2228  049B                     	;# 
  2229  049B                     	;# 
  2230  049C                     	;# 
  2231  049D                     	;# 
  2232  049E                     	;# 
  2233  049F                     	;# 
  2234  0611                     	;# 
  2235  0612                     	;# 
  2236  0613                     	;# 
  2237  0613                     	;# 
  2238  0614                     	;# 
  2239  0615                     	;# 
  2240  0616                     	;# 
  2241  0616                     	;# 
  2242  0617                     	;# 
  2243  0618                     	;# 
  2244  0619                     	;# 
  2245  0619                     	;# 
  2246  061A                     	;# 
  2247  061B                     	;# 
  2248  061C                     	;# 
  2249  061C                     	;# 
  2250  0691                     	;# 
  2251  0692                     	;# 
  2252  0693                     	;# 
  2253  0694                     	;# 
  2254  0695                     	;# 
  2255  0F0F                     	;# 
  2256  0F10                     	;# 
  2257  0F11                     	;# 
  2258  0F12                     	;# 
  2259  0F13                     	;# 
  2260  0F14                     	;# 
  2261  0F15                     	;# 
  2262  0F16                     	;# 
  2263  0F17                     	;# 
  2264  0F18                     	;# 
  2265  0F19                     	;# 
  2266  0F1A                     	;# 
  2267  0F1B                     	;# 
  2268  0F1C                     	;# 
  2269  0F1D                     	;# 
  2270  0F1E                     	;# 
  2271  0F1F                     	;# 
  2272  0F20                     	;# 
  2273  0F21                     	;# 
  2274  0F22                     	;# 
  2275  0F23                     	;# 
  2276  0F24                     	;# 
  2277  0F25                     	;# 
  2278  0F26                     	;# 
  2279  0F27                     	;# 
  2280  0F28                     	;# 
  2281  0F29                     	;# 
  2282  0F2A                     	;# 
  2283  0F2B                     	;# 
  2284  0F2C                     	;# 
  2285  0F2D                     	;# 
  2286  0F2E                     	;# 
  2287  0F2F                     	;# 
  2288  0F8C                     	;# 
  2289  0F8D                     	;# 
  2290  0F91                     	;# 
  2291  0F95                     	;# 
  2292  0F96                     	;# 
  2293  0F97                     	;# 
  2294  0F9C                     	;# 
  2295  0F9D                     	;# 
  2296  0F9E                     	;# 
  2297  0FE3                     	;# 
  2298  0FE4                     	;# 
  2299  0FE5                     	;# 
  2300  0FE6                     	;# 
  2301  0FE7                     	;# 
  2302  0FE8                     	;# 
  2303  0FE9                     	;# 
  2304  0FEA                     	;# 
  2305  0FEB                     	;# 
  2306  0FED                     	;# 
  2307  0FEE                     	;# 
  2308  0FEF                     	;# 
  2309  0000                     	;# 
  2310  0001                     	;# 
  2311  0002                     	;# 
  2312  0003                     	;# 
  2313  0004                     	;# 
  2314  0005                     	;# 
  2315  0006                     	;# 
  2316  0007                     	;# 
  2317  0008                     	;# 
  2318  0009                     	;# 
  2319  000A                     	;# 
  2320  000B                     	;# 
  2321  000C                     	;# 
  2322  000D                     	;# 
  2323  000E                     	;# 
  2324  0011                     	;# 
  2325  0012                     	;# 
  2326  0013                     	;# 
  2327  0015                     	;# 
  2328  0016                     	;# 
  2329  0016                     	;# 
  2330  0017                     	;# 
  2331  0018                     	;# 
  2332  0019                     	;# 
  2333  001A                     	;# 
  2334  001B                     	;# 
  2335  001C                     	;# 
  2336  008C                     	;# 
  2337  008D                     	;# 
  2338  008E                     	;# 
  2339  0091                     	;# 
  2340  0092                     	;# 
  2341  0093                     	;# 
  2342  0095                     	;# 
  2343  0096                     	;# 
  2344  0097                     	;# 
  2345  0099                     	;# 
  2346  009A                     	;# 
  2347  009B                     	;# 
  2348  009B                     	;# 
  2349  009C                     	;# 
  2350  009D                     	;# 
  2351  009E                     	;# 
  2352  009F                     	;# 
  2353  010C                     	;# 
  2354  010D                     	;# 
  2355  010E                     	;# 
  2356  0111                     	;# 
  2357  0112                     	;# 
  2358  0113                     	;# 
  2359  0114                     	;# 
  2360  0115                     	;# 
  2361  0116                     	;# 
  2362  0117                     	;# 
  2363  0118                     	;# 
  2364  0119                     	;# 
  2365  011D                     	;# 
  2366  018C                     	;# 
  2367  018D                     	;# 
  2368  018E                     	;# 
  2369  0191                     	;# 
  2370  0191                     	;# 
  2371  0192                     	;# 
  2372  0193                     	;# 
  2373  0193                     	;# 
  2374  0194                     	;# 
  2375  0195                     	;# 
  2376  0196                     	;# 
  2377  0197                     	;# 
  2378  0199                     	;# 
  2379  019A                     	;# 
  2380  019B                     	;# 
  2381  019B                     	;# 
  2382  019C                     	;# 
  2383  019D                     	;# 
  2384  019E                     	;# 
  2385  019F                     	;# 
  2386  020C                     	;# 
  2387  020D                     	;# 
  2388  0211                     	;# 
  2389  0211                     	;# 
  2390  0212                     	;# 
  2391  0212                     	;# 
  2392  0213                     	;# 
  2393  0213                     	;# 
  2394  0214                     	;# 
  2395  0214                     	;# 
  2396  0215                     	;# 
  2397  0215                     	;# 
  2398  0215                     	;# 
  2399  0216                     	;# 
  2400  0216                     	;# 
  2401  0217                     	;# 
  2402  0217                     	;# 
  2403  0391                     	;# 
  2404  0392                     	;# 
  2405  0393                     	;# 
  2406  0394                     	;# 
  2407  0395                     	;# 
  2408  0396                     	;# 
  2409  0498                     	;# 
  2410  0498                     	;# 
  2411  0499                     	;# 
  2412  049A                     	;# 
  2413  049B                     	;# 
  2414  049B                     	;# 
  2415  049C                     	;# 
  2416  049D                     	;# 
  2417  049E                     	;# 
  2418  049F                     	;# 
  2419  0611                     	;# 
  2420  0612                     	;# 
  2421  0613                     	;# 
  2422  0613                     	;# 
  2423  0614                     	;# 
  2424  0615                     	;# 
  2425  0616                     	;# 
  2426  0616                     	;# 
  2427  0617                     	;# 
  2428  0618                     	;# 
  2429  0619                     	;# 
  2430  0619                     	;# 
  2431  061A                     	;# 
  2432  061B                     	;# 
  2433  061C                     	;# 
  2434  061C                     	;# 
  2435  0691                     	;# 
  2436  0692                     	;# 
  2437  0693                     	;# 
  2438  0694                     	;# 
  2439  0695                     	;# 
  2440  0F0F                     	;# 
  2441  0F10                     	;# 
  2442  0F11                     	;# 
  2443  0F12                     	;# 
  2444  0F13                     	;# 
  2445  0F14                     	;# 
  2446  0F15                     	;# 
  2447  0F16                     	;# 
  2448  0F17                     	;# 
  2449  0F18                     	;# 
  2450  0F19                     	;# 
  2451  0F1A                     	;# 
  2452  0F1B                     	;# 
  2453  0F1C                     	;# 
  2454  0F1D                     	;# 
  2455  0F1E                     	;# 
  2456  0F1F                     	;# 
  2457  0F20                     	;# 
  2458  0F21                     	;# 
  2459  0F22                     	;# 
  2460  0F23                     	;# 
  2461  0F24                     	;# 
  2462  0F25                     	;# 
  2463  0F26                     	;# 
  2464  0F27                     	;# 
  2465  0F28                     	;# 
  2466  0F29                     	;# 
  2467  0F2A                     	;# 
  2468  0F2B                     	;# 
  2469  0F2C                     	;# 
  2470  0F2D                     	;# 
  2471  0F2E                     	;# 
  2472  0F2F                     	;# 
  2473  0F8C                     	;# 
  2474  0F8D                     	;# 
  2475  0F91                     	;# 
  2476  0F95                     	;# 
  2477  0F96                     	;# 
  2478  0F97                     	;# 
  2479  0F9C                     	;# 
  2480  0F9D                     	;# 
  2481  0F9E                     	;# 
  2482  0FE3                     	;# 
  2483  0FE4                     	;# 
  2484  0FE5                     	;# 
  2485  0FE6                     	;# 
  2486  0FE7                     	;# 
  2487  0FE8                     	;# 
  2488  0FE9                     	;# 
  2489  0FEA                     	;# 
  2490  0FEB                     	;# 
  2491  0FED                     	;# 
  2492  0FEE                     	;# 
  2493  0FEF                     	;# 
  2494  0000                     	;# 
  2495  0001                     	;# 
  2496  0002                     	;# 
  2497  0003                     	;# 
  2498  0004                     	;# 
  2499  0005                     	;# 
  2500  0006                     	;# 
  2501  0007                     	;# 
  2502  0008                     	;# 
  2503  0009                     	;# 
  2504  000A                     	;# 
  2505  000B                     	;# 
  2506  000C                     	;# 
  2507  000D                     	;# 
  2508  000E                     	;# 
  2509  0011                     	;# 
  2510  0012                     	;# 
  2511  0013                     	;# 
  2512  0015                     	;# 
  2513  0016                     	;# 
  2514  0016                     	;# 
  2515  0017                     	;# 
  2516  0018                     	;# 
  2517  0019                     	;# 
  2518  001A                     	;# 
  2519  001B                     	;# 
  2520  001C                     	;# 
  2521  008C                     	;# 
  2522  008D                     	;# 
  2523  008E                     	;# 
  2524  0091                     	;# 
  2525  0092                     	;# 
  2526  0093                     	;# 
  2527  0095                     	;# 
  2528  0096                     	;# 
  2529  0097                     	;# 
  2530  0099                     	;# 
  2531  009A                     	;# 
  2532  009B                     	;# 
  2533  009B                     	;# 
  2534  009C                     	;# 
  2535  009D                     	;# 
  2536  009E                     	;# 
  2537  009F                     	;# 
  2538  010C                     	;# 
  2539  010D                     	;# 
  2540  010E                     	;# 
  2541  0111                     	;# 
  2542  0112                     	;# 
  2543  0113                     	;# 
  2544  0114                     	;# 
  2545  0115                     	;# 
  2546  0116                     	;# 
  2547  0117                     	;# 
  2548  0118                     	;# 
  2549  0119                     	;# 
  2550  011D                     	;# 
  2551  018C                     	;# 
  2552  018D                     	;# 
  2553  018E                     	;# 
  2554  0191                     	;# 
  2555  0191                     	;# 
  2556  0192                     	;# 
  2557  0193                     	;# 
  2558  0193                     	;# 
  2559  0194                     	;# 
  2560  0195                     	;# 
  2561  0196                     	;# 
  2562  0197                     	;# 
  2563  0199                     	;# 
  2564  019A                     	;# 
  2565  019B                     	;# 
  2566  019B                     	;# 
  2567  019C                     	;# 
  2568  019D                     	;# 
  2569  019E                     	;# 
  2570  019F                     	;# 
  2571  020C                     	;# 
  2572  020D                     	;# 
  2573  0211                     	;# 
  2574  0211                     	;# 
  2575  0212                     	;# 
  2576  0212                     	;# 
  2577  0213                     	;# 
  2578  0213                     	;# 
  2579  0214                     	;# 
  2580  0214                     	;# 
  2581  0215                     	;# 
  2582  0215                     	;# 
  2583  0215                     	;# 
  2584  0216                     	;# 
  2585  0216                     	;# 
  2586  0217                     	;# 
  2587  0217                     	;# 
  2588  0391                     	;# 
  2589  0392                     	;# 
  2590  0393                     	;# 
  2591  0394                     	;# 
  2592  0395                     	;# 
  2593  0396                     	;# 
  2594  0498                     	;# 
  2595  0498                     	;# 
  2596  0499                     	;# 
  2597  049A                     	;# 
  2598  049B                     	;# 
  2599  049B                     	;# 
  2600  049C                     	;# 
  2601  049D                     	;# 
  2602  049E                     	;# 
  2603  049F                     	;# 
  2604  0611                     	;# 
  2605  0612                     	;# 
  2606  0613                     	;# 
  2607  0613                     	;# 
  2608  0614                     	;# 
  2609  0615                     	;# 
  2610  0616                     	;# 
  2611  0616                     	;# 
  2612  0617                     	;# 
  2613  0618                     	;# 
  2614  0619                     	;# 
  2615  0619                     	;# 
  2616  061A                     	;# 
  2617  061B                     	;# 
  2618  061C                     	;# 
  2619  061C                     	;# 
  2620  0691                     	;# 
  2621  0692                     	;# 
  2622  0693                     	;# 
  2623  0694                     	;# 
  2624  0695                     	;# 
  2625  0F0F                     	;# 
  2626  0F10                     	;# 
  2627  0F11                     	;# 
  2628  0F12                     	;# 
  2629  0F13                     	;# 
  2630  0F14                     	;# 
  2631  0F15                     	;# 
  2632  0F16                     	;# 
  2633  0F17                     	;# 
  2634  0F18                     	;# 
  2635  0F19                     	;# 
  2636  0F1A                     	;# 
  2637  0F1B                     	;# 
  2638  0F1C                     	;# 
  2639  0F1D                     	;# 
  2640  0F1E                     	;# 
  2641  0F1F                     	;# 
  2642  0F20                     	;# 
  2643  0F21                     	;# 
  2644  0F22                     	;# 
  2645  0F23                     	;# 
  2646  0F24                     	;# 
  2647  0F25                     	;# 
  2648  0F26                     	;# 
  2649  0F27                     	;# 
  2650  0F28                     	;# 
  2651  0F29                     	;# 
  2652  0F2A                     	;# 
  2653  0F2B                     	;# 
  2654  0F2C                     	;# 
  2655  0F2D                     	;# 
  2656  0F2E                     	;# 
  2657  0F2F                     	;# 
  2658  0F8C                     	;# 
  2659  0F8D                     	;# 
  2660  0F91                     	;# 
  2661  0F95                     	;# 
  2662  0F96                     	;# 
  2663  0F97                     	;# 
  2664  0F9C                     	;# 
  2665  0F9D                     	;# 
  2666  0F9E                     	;# 
  2667  0FE3                     	;# 
  2668  0FE4                     	;# 
  2669  0FE5                     	;# 
  2670  0FE6                     	;# 
  2671  0FE7                     	;# 
  2672  0FE8                     	;# 
  2673  0FE9                     	;# 
  2674  0FEA                     	;# 
  2675  0FEB                     	;# 
  2676  0FED                     	;# 
  2677  0FEE                     	;# 
  2678  0FEF                     	;# 
  2679  0000                     	;# 
  2680  0001                     	;# 
  2681  0002                     	;# 
  2682  0003                     	;# 
  2683  0004                     	;# 
  2684  0005                     	;# 
  2685  0006                     	;# 
  2686  0007                     	;# 
  2687  0008                     	;# 
  2688  0009                     	;# 
  2689  000A                     	;# 
  2690  000B                     	;# 
  2691  000C                     	;# 
  2692  000D                     	;# 
  2693  000E                     	;# 
  2694  0011                     	;# 
  2695  0012                     	;# 
  2696  0013                     	;# 
  2697  0015                     	;# 
  2698  0016                     	;# 
  2699  0016                     	;# 
  2700  0017                     	;# 
  2701  0018                     	;# 
  2702  0019                     	;# 
  2703  001A                     	;# 
  2704  001B                     	;# 
  2705  001C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  0091                     	;# 
  2710  0092                     	;# 
  2711  0093                     	;# 
  2712  0095                     	;# 
  2713  0096                     	;# 
  2714  0097                     	;# 
  2715  0099                     	;# 
  2716  009A                     	;# 
  2717  009B                     	;# 
  2718  009B                     	;# 
  2719  009C                     	;# 
  2720  009D                     	;# 
  2721  009E                     	;# 
  2722  009F                     	;# 
  2723  010C                     	;# 
  2724  010D                     	;# 
  2725  010E                     	;# 
  2726  0111                     	;# 
  2727  0112                     	;# 
  2728  0113                     	;# 
  2729  0114                     	;# 
  2730  0115                     	;# 
  2731  0116                     	;# 
  2732  0117                     	;# 
  2733  0118                     	;# 
  2734  0119                     	;# 
  2735  011D                     	;# 
  2736  018C                     	;# 
  2737  018D                     	;# 
  2738  018E                     	;# 
  2739  0191                     	;# 
  2740  0191                     	;# 
  2741  0192                     	;# 
  2742  0193                     	;# 
  2743  0193                     	;# 
  2744  0194                     	;# 
  2745  0195                     	;# 
  2746  0196                     	;# 
  2747  0197                     	;# 
  2748  0199                     	;# 
  2749  019A                     	;# 
  2750  019B                     	;# 
  2751  019B                     	;# 
  2752  019C                     	;# 
  2753  019D                     	;# 
  2754  019E                     	;# 
  2755  019F                     	;# 
  2756  020C                     	;# 
  2757  020D                     	;# 
  2758  0211                     	;# 
  2759  0211                     	;# 
  2760  0212                     	;# 
  2761  0212                     	;# 
  2762  0213                     	;# 
  2763  0213                     	;# 
  2764  0214                     	;# 
  2765  0214                     	;# 
  2766  0215                     	;# 
  2767  0215                     	;# 
  2768  0215                     	;# 
  2769  0216                     	;# 
  2770  0216                     	;# 
  2771  0217                     	;# 
  2772  0217                     	;# 
  2773  0391                     	;# 
  2774  0392                     	;# 
  2775  0393                     	;# 
  2776  0394                     	;# 
  2777  0395                     	;# 
  2778  0396                     	;# 
  2779  0498                     	;# 
  2780  0498                     	;# 
  2781  0499                     	;# 
  2782  049A                     	;# 
  2783  049B                     	;# 
  2784  049B                     	;# 
  2785  049C                     	;# 
  2786  049D                     	;# 
  2787  049E                     	;# 
  2788  049F                     	;# 
  2789  0611                     	;# 
  2790  0612                     	;# 
  2791  0613                     	;# 
  2792  0613                     	;# 
  2793  0614                     	;# 
  2794  0615                     	;# 
  2795  0616                     	;# 
  2796  0616                     	;# 
  2797  0617                     	;# 
  2798  0618                     	;# 
  2799  0619                     	;# 
  2800  0619                     	;# 
  2801  061A                     	;# 
  2802  061B                     	;# 
  2803  061C                     	;# 
  2804  061C                     	;# 
  2805  0691                     	;# 
  2806  0692                     	;# 
  2807  0693                     	;# 
  2808  0694                     	;# 
  2809  0695                     	;# 
  2810  0F0F                     	;# 
  2811  0F10                     	;# 
  2812  0F11                     	;# 
  2813  0F12                     	;# 
  2814  0F13                     	;# 
  2815  0F14                     	;# 
  2816  0F15                     	;# 
  2817  0F16                     	;# 
  2818  0F17                     	;# 
  2819  0F18                     	;# 
  2820  0F19                     	;# 
  2821  0F1A                     	;# 
  2822  0F1B                     	;# 
  2823  0F1C                     	;# 
  2824  0F1D                     	;# 
  2825  0F1E                     	;# 
  2826  0F1F                     	;# 
  2827  0F20                     	;# 
  2828  0F21                     	;# 
  2829  0F22                     	;# 
  2830  0F23                     	;# 
  2831  0F24                     	;# 
  2832  0F25                     	;# 
  2833  0F26                     	;# 
  2834  0F27                     	;# 
  2835  0F28                     	;# 
  2836  0F29                     	;# 
  2837  0F2A                     	;# 
  2838  0F2B                     	;# 
  2839  0F2C                     	;# 
  2840  0F2D                     	;# 
  2841  0F2E                     	;# 
  2842  0F2F                     	;# 
  2843  0F8C                     	;# 
  2844  0F8D                     	;# 
  2845  0F91                     	;# 
  2846  0F95                     	;# 
  2847  0F96                     	;# 
  2848  0F97                     	;# 
  2849  0F9C                     	;# 
  2850  0F9D                     	;# 
  2851  0F9E                     	;# 
  2852  0FE3                     	;# 
  2853  0FE4                     	;# 
  2854  0FE5                     	;# 
  2855  0FE6                     	;# 
  2856  0FE7                     	;# 
  2857  0FE8                     	;# 
  2858  0FE9                     	;# 
  2859  0FEA                     	;# 
  2860  0FEB                     	;# 
  2861  0FED                     	;# 
  2862  0FEE                     	;# 
  2863  0FEF                     	;# 
  2864                           
  2865                           	psect	nvBANK0
  2866  003E                     __pnvBANK0:	
  2867  003E                     _TMR2_InterruptHandler:	
  2868  003E                     	ds	2
  2869  0040                     _timer0ReloadVal:	
  2870  0040                     	ds	1
  2871  000E                     _PORTCbits	set	14
  2872  000B                     _INTCON	set	11
  2873  0015                     _TMR0	set	21
  2874  001C                     _T2CONbits	set	28
  2875  001C                     _T2CON	set	28
  2876  001A                     _TMR2	set	26
  2877  001B                     _PR2	set	27
  2878  0011                     _PIR1bits	set	17
  2879  0012                     _PIR2bits	set	18
  2880  000B                     _INTCONbits	set	11
  2881  0095                     _OPTION_REG	set	149
  2882  0095                     _OPTION_REGbits	set	149
  2883  008E                     _TRISC	set	142
  2884  008D                     _TRISB	set	141
  2885  008C                     _TRISA	set	140
  2886  0091                     _PIE1bits	set	145
  2887  0092                     _PIE2bits	set	146
  2888  0097                     _WDTCON	set	151
  2889  0099                     _OSCCON	set	153
  2890  046C                     _TRISB4	set	1132
  2891  046E                     _TRISB6	set	1134
  2892  011D                     _APFCON	set	285
  2893  010E                     _LATC	set	270
  2894  010D                     _LATB	set	269
  2895  010C                     _LATA	set	268
  2896  0116                     _BORCON	set	278
  2897  086C                     _LATB4	set	2156
  2898  086E                     _LATB6	set	2158
  2899  018C                     _ANSELA	set	396
  2900  018D                     _ANSELB	set	397
  2901  018E                     _ANSELC	set	398
  2902  0211                     _SSP1BUF	set	529
  2903  0216                     _SSP1CON2bits	set	534
  2904  0212                     _SSP1ADD	set	530
  2905  0216                     _SSP1CON2	set	534
  2906  0215                     _SSP1CON1	set	533
  2907  0214                     _SSP1STAT	set	532
  2908  020C                     _WPUA	set	524
  2909  020D                     _WPUB	set	525
  2910  0617                     _PWM3DCL	set	1559
  2911  0618                     _PWM3DCH	set	1560
  2912  0619                     _PWM3CON	set	1561
  2913  0611                     _PWM1DCL	set	1553
  2914  0612                     _PWM1DCH	set	1554
  2915  0613                     _PWM1CON	set	1555
  2916  0614                     _PWM2DCL	set	1556
  2917  0615                     _PWM2DCH	set	1557
  2918  0616                     _PWM2CON	set	1558
  2919                           
  2920                           ; #config settings
  2921  0000                     
  2922                           	psect	cinit
  2923  0024                     start_initialization:	
  2924  0024                     __initialization:	
  2925                           
  2926                           ; Clear objects allocated to COMMON
  2927  0024  01FB               	clrf	__pbssCOMMON& (0+127)
  2928  0025  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  2929                           
  2930                           ; Clear objects allocated to BANK0
  2931  0026  0020               	movlb	0	; select bank0
  2932  0027  01C1               	clrf	__pbssBANK0& (0+127)
  2933  0028  01C2               	clrf	(__pbssBANK0+1)& (0+127)
  2934  0029                     end_of_initialization:	
  2935                           ;End of C runtime variable initialization code
  2936                           
  2937  0029                     __end_of__initialization:	
  2938  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2939  002A  0020               	movlb	0
  2940  002B  3180  282D         	ljmp	_main	;jump to C main() function
  2941                           
  2942                           	psect	bssCOMMON
  2943  007B                     __pbssCOMMON:	
  2944  007B                     _i2c_driver_busCollisionISR:	
  2945  007B                     	ds	2
  2946                           
  2947                           	psect	bssBANK0
  2948  0041                     __pbssBANK0:	
  2949  0041                     _i2c_driver_i2cISR:	
  2950  0041                     	ds	2
  2951                           
  2952                           	psect	cstackCOMMON
  2953  0070                     __pcstackCOMMON:	
  2954  0070                     ?_PIN_MANAGER_Initialize:	
  2955  0070                     ?_OSCILLATOR_Initialize:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_WDT_Initialize:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_PWM1_Initialize:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_PWM2_Initialize:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_PWM3_Initialize:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_TMR2_Initialize:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_TMR0_Initialize:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_TMR2_ISR:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ??_TMR2_ISR:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ?_TMR2_DefaultInterruptHandler:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ??_TMR2_DefaultInterruptHandler:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ?_initI2C:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?_initRW1063:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ?_writeInst:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?_initRTC:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     ?_readSec:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0070                     ?_readMin:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006  0070                     ?_readHr:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009  0070                     ?_convertFromBcd:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0070                     ?_FSM:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0070                     ?_printReglageH:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0070                     ?_incrMin:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021  0070                     ?_incrHeure:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024  0070                     ?_waitI2C:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027  0070                     ?_SYSTEM_Initialize:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0070                     ?_INTERRUPT_InterruptManager:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0070                     ??_INTERRUPT_InterruptManager:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0070                     ?_main:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0070                     ?_startI2C:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0070                     ?_stopI2C:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0070                     ?_sendI2C:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0070                     ?_readI2C:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0070                     ?_re_startI2C:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054  0070                     ?_sendNoAckI2C:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057  0070                     ?_changeMin:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060  0070                     ?_changeHeure:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063                           
  3064                           ; 1 bytes @ 0x0
  3065  0070                     	ds	1
  3066  0071                     ??_PIN_MANAGER_Initialize:	
  3067  0071                     ??_OSCILLATOR_Initialize:	
  3068                           ; 1 bytes @ 0x1
  3069                           
  3070  0071                     ??_WDT_Initialize:	
  3071                           ; 1 bytes @ 0x1
  3072                           
  3073  0071                     ??_PWM1_Initialize:	
  3074                           ; 1 bytes @ 0x1
  3075                           
  3076  0071                     ??_PWM2_Initialize:	
  3077                           ; 1 bytes @ 0x1
  3078                           
  3079  0071                     ??_PWM3_Initialize:	
  3080                           ; 1 bytes @ 0x1
  3081                           
  3082  0071                     ??_TMR0_Initialize:	
  3083                           ; 1 bytes @ 0x1
  3084                           
  3085  0071                     ?_TMR2_SetInterruptHandler:	
  3086                           ; 1 bytes @ 0x1
  3087                           
  3088  0071                     ??_initI2C:	
  3089                           ; 1 bytes @ 0x1
  3090                           
  3091  0071                     ?_bitExtracted:	
  3092                           ; 1 bytes @ 0x1
  3093                           
  3094  0071                     ??_FSM:	
  3095                           ; 1 bytes @ 0x1
  3096                           
  3097  0071                     ??_waitI2C:	
  3098                           ; 1 bytes @ 0x1
  3099                           
  3100  0071                     ?_PWM2_LoadDutyValue:	
  3101                           ; 1 bytes @ 0x1
  3102                           
  3103  0071                     ??_startI2C:	
  3104                           ; 1 bytes @ 0x1
  3105                           
  3106  0071                     ??_stopI2C:	
  3107                           ; 1 bytes @ 0x1
  3108                           
  3109  0071                     ??_sendI2C:	
  3110                           ; 1 bytes @ 0x1
  3111                           
  3112  0071                     ??_readI2C:	
  3113                           ; 1 bytes @ 0x1
  3114                           
  3115  0071                     ??_re_startI2C:	
  3116                           ; 1 bytes @ 0x1
  3117                           
  3118  0071                     ??_sendNoAckI2C:	
  3119                           ; 1 bytes @ 0x1
  3120                           
  3121  0071                     ?___bmul:	
  3122                           ; 1 bytes @ 0x1
  3123                           
  3124  0071                     ?___awdiv:	
  3125                           ; 1 bytes @ 0x1
  3126                           
  3127  0071                     sendI2C@data:	
  3128                           ; 2 bytes @ 0x1
  3129                           
  3130  0071                     bitExtracted@k:	
  3131                           ; 1 bytes @ 0x1
  3132                           
  3133  0071                     FSM@IN:	
  3134                           ; 1 bytes @ 0x1
  3135                           
  3136  0071                     ___bmul@multiplicand:	
  3137                           ; 1 bytes @ 0x1
  3138                           
  3139  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
  3140                           ; 1 bytes @ 0x1
  3141                           
  3142  0071                     PWM2_LoadDutyValue@dutyValue:	
  3143                           ; 2 bytes @ 0x1
  3144                           
  3145  0071                     ___awdiv@divisor:	
  3146                           ; 2 bytes @ 0x1
  3147                           
  3148                           
  3149                           ; 2 bytes @ 0x1
  3150  0071                     	ds	1
  3151  0072                     ??_writeInst:	
  3152  0072                     ??_initRTC:	
  3153                           ; 1 bytes @ 0x2
  3154                           
  3155  0072                     ??_changeMin:	
  3156                           ; 1 bytes @ 0x2
  3157                           
  3158  0072                     ??_changeHeure:	
  3159                           ; 1 bytes @ 0x2
  3160                           
  3161  0072                     ??___bmul:	
  3162                           ; 1 bytes @ 0x2
  3163                           
  3164  0072                     readI2C@temp:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167  0072                     writeInst@Inst:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170  0072                     changeMin@minute:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173  0072                     changeHeure@heure:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176  0072                     bitExtracted@p:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179  0072                     initI2C@i:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182                           
  3183                           ; 2 bytes @ 0x2
  3184  0072                     	ds	1
  3185  0073                     ??_TMR2_Initialize:	
  3186  0073                     ??_TMR2_SetInterruptHandler:	
  3187                           ; 1 bytes @ 0x3
  3188                           
  3189  0073                     ??_initRW1063:	
  3190                           ; 1 bytes @ 0x3
  3191                           
  3192  0073                     ??_readSec:	
  3193                           ; 1 bytes @ 0x3
  3194                           
  3195  0073                     ??_readMin:	
  3196                           ; 1 bytes @ 0x3
  3197                           
  3198  0073                     ??_readHr:	
  3199                           ; 1 bytes @ 0x3
  3200                           
  3201  0073                     ??_bitExtracted:	
  3202                           ; 1 bytes @ 0x3
  3203                           
  3204  0073                     ?_writeLCD:	
  3205                           ; 1 bytes @ 0x3
  3206                           
  3207  0073                     ??_SYSTEM_Initialize:	
  3208                           ; 1 bytes @ 0x3
  3209                           
  3210  0073                     ??_PWM2_LoadDutyValue:	
  3211                           ; 1 bytes @ 0x3
  3212                           
  3213  0073                     writeLCD@adress:	
  3214                           ; 1 bytes @ 0x3
  3215                           
  3216  0073                     ___bmul@product:	
  3217                           ; 1 bytes @ 0x3
  3218                           
  3219  0073                     ___awdiv@dividend:	
  3220                           ; 1 bytes @ 0x3
  3221                           
  3222                           
  3223                           ; 2 bytes @ 0x3
  3224  0073                     	ds	1
  3225  0074                     writeLCD@ligne:	
  3226  0074                     readSec@second:	
  3227                           ; 1 bytes @ 0x4
  3228                           
  3229  0074                     readMin@minute:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232  0074                     readHr@heure:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0074                     ___bmul@multiplier:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x4
  3240  0074                     	ds	1
  3241  0075                     ??_convertFromBcd:	
  3242  0075                     ??_writeLCD:	
  3243                           ; 1 bytes @ 0x5
  3244                           
  3245  0075                     ??___awdiv:	
  3246                           ; 1 bytes @ 0x5
  3247                           
  3248  0075                     bitExtracted@number:	
  3249                           ; 1 bytes @ 0x5
  3250                           
  3251                           
  3252                           ; 1 bytes @ 0x5
  3253  0075                     	ds	1
  3254  0076                     ??_incrMin:	
  3255  0076                     ??_incrHeure:	
  3256                           ; 1 bytes @ 0x6
  3257                           
  3258  0076                     writeLCD@data:	
  3259                           ; 1 bytes @ 0x6
  3260                           
  3261  0076                     ___awdiv@counter:	
  3262                           ; 1 bytes @ 0x6
  3263                           
  3264                           
  3265                           ; 1 bytes @ 0x6
  3266  0076                     	ds	1
  3267  0077                     writeLCD@i:	
  3268  0077                     convertFromBcd@byteMSB:	
  3269                           ; 1 bytes @ 0x7
  3270                           
  3271  0077                     ___awdiv@sign:	
  3272                           ; 1 bytes @ 0x7
  3273                           
  3274                           
  3275                           ; 1 bytes @ 0x7
  3276  0077                     	ds	1
  3277  0078                     ??_printReglageH:	
  3278  0078                     convertFromBcd@byteLSB:	
  3279                           ; 1 bytes @ 0x8
  3280                           
  3281  0078                     ___awdiv@quotient:	
  3282                           ; 1 bytes @ 0x8
  3283                           
  3284                           
  3285                           ; 2 bytes @ 0x8
  3286  0078                     	ds	1
  3287  0079                     convertFromBcd@byteBCD:	
  3288                           
  3289                           ; 1 bytes @ 0x9
  3290  0079                     	ds	2
  3291                           
  3292                           	psect	cstackBANK0
  3293  0020                     __pcstackBANK0:	
  3294  0020                     ?_PWM1_LoadDutyValue:	
  3295  0020                     ?_PWM3_LoadDutyValue:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  0020                     printReglageH@dizaineM:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301  0020                     incrMin@dizaineM:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304  0020                     incrHeure@dizaineH:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  0020                     PWM1_LoadDutyValue@dutyValue:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  0020                     PWM3_LoadDutyValue@dutyValue:	
  3311                           ; 2 bytes @ 0x0
  3312                           
  3313                           
  3314                           ; 2 bytes @ 0x0
  3315  0020                     	ds	1
  3316  0021                     printReglageH@uniteM:	
  3317  0021                     incrMin@uniteM:	
  3318                           ; 1 bytes @ 0x1
  3319                           
  3320  0021                     incrHeure@uniteH:	
  3321                           ; 1 bytes @ 0x1
  3322                           
  3323                           
  3324                           ; 1 bytes @ 0x1
  3325  0021                     	ds	1
  3326  0022                     ??_PWM1_LoadDutyValue:	
  3327  0022                     ??_PWM3_LoadDutyValue:	
  3328                           ; 1 bytes @ 0x2
  3329                           
  3330  0022                     printReglageH@dizaineH:	
  3331                           ; 1 bytes @ 0x2
  3332                           
  3333  0022                     incrMin@minute:	
  3334                           ; 1 bytes @ 0x2
  3335                           
  3336  0022                     incrHeure@heure:	
  3337                           ; 1 bytes @ 0x2
  3338                           
  3339                           
  3340                           ; 1 bytes @ 0x2
  3341  0022                     	ds	1
  3342  0023                     printReglageH@uniteH:	
  3343                           
  3344                           ; 1 bytes @ 0x3
  3345  0023                     	ds	1
  3346  0024                     printReglageH@minute:	
  3347                           
  3348                           ; 1 bytes @ 0x4
  3349  0024                     	ds	1
  3350  0025                     printReglageH@heure:	
  3351                           
  3352                           ; 1 bytes @ 0x5
  3353  0025                     	ds	1
  3354  0026                     ??_main:	
  3355                           
  3356                           ; 1 bytes @ 0x6
  3357  0026                     	ds	3
  3358  0029                     main@PWM1:	
  3359                           
  3360                           ; 2 bytes @ 0x9
  3361  0029                     	ds	2
  3362  002B                     main@PWM2:	
  3363                           
  3364                           ; 2 bytes @ 0xB
  3365  002B                     	ds	2
  3366  002D                     main@PWM3:	
  3367                           
  3368                           ; 2 bytes @ 0xD
  3369  002D                     	ds	2
  3370  002F                     main@bufferS:	
  3371                           
  3372                           ; 1 bytes @ 0xF
  3373  002F                     	ds	1
  3374  0030                     main@bufferM:	
  3375                           
  3376                           ; 1 bytes @ 0x10
  3377  0030                     	ds	1
  3378  0031                     main@bufferH:	
  3379                           
  3380                           ; 1 bytes @ 0x11
  3381  0031                     	ds	1
  3382  0032                     main@uniteS:	
  3383                           
  3384                           ; 1 bytes @ 0x12
  3385  0032                     	ds	1
  3386  0033                     main@dizaineS:	
  3387                           
  3388                           ; 1 bytes @ 0x13
  3389  0033                     	ds	1
  3390  0034                     main@uniteM:	
  3391                           
  3392                           ; 1 bytes @ 0x14
  3393  0034                     	ds	1
  3394  0035                     main@dizaineM:	
  3395                           
  3396                           ; 1 bytes @ 0x15
  3397  0035                     	ds	1
  3398  0036                     main@uniteH:	
  3399                           
  3400                           ; 1 bytes @ 0x16
  3401  0036                     	ds	1
  3402  0037                     main@dizaineH:	
  3403                           
  3404                           ; 1 bytes @ 0x17
  3405  0037                     	ds	1
  3406  0038                     main@menu:	
  3407                           
  3408                           ; 1 bytes @ 0x18
  3409  0038                     	ds	1
  3410  0039                     main@select:	
  3411                           
  3412                           ; 1 bytes @ 0x19
  3413  0039                     	ds	1
  3414  003A                     main@i:	
  3415                           
  3416                           ; 1 bytes @ 0x1A
  3417  003A                     	ds	1
  3418  003B                     main@minute:	
  3419                           
  3420                           ; 1 bytes @ 0x1B
  3421  003B                     	ds	1
  3422  003C                     main@heure:	
  3423                           
  3424                           ; 1 bytes @ 0x1C
  3425  003C                     	ds	1
  3426  003D                     main@second:	
  3427                           
  3428                           ; 1 bytes @ 0x1D
  3429  003D                     	ds	1
  3430                           
  3431                           	psect	maintext
  3432  002D                     __pmaintext:	
  3433 ;;
  3434 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3435 ;;
  3436 ;; *************** function _main *****************
  3437 ;; Defined at:
  3438 ;;		line 5 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  PWM3            2   13[BANK0 ] unsigned int 
  3443 ;;  PWM2            2   11[BANK0 ] unsigned int 
  3444 ;;  PWM1            2    9[BANK0 ] unsigned int 
  3445 ;;  second          1   29[BANK0 ] unsigned char 
  3446 ;;  heure           1   28[BANK0 ] unsigned char 
  3447 ;;  minute          1   27[BANK0 ] unsigned char 
  3448 ;;  i               1   26[BANK0 ] unsigned char 
  3449 ;;  select          1   25[BANK0 ] unsigned char 
  3450 ;;  menu            1   24[BANK0 ] unsigned char 
  3451 ;;  dizaineH        1   23[BANK0 ] unsigned char 
  3452 ;;  uniteH          1   22[BANK0 ] unsigned char 
  3453 ;;  dizaineM        1   21[BANK0 ] unsigned char 
  3454 ;;  uniteM          1   20[BANK0 ] unsigned char 
  3455 ;;  dizaineS        1   19[BANK0 ] unsigned char 
  3456 ;;  uniteS          1   18[BANK0 ] unsigned char 
  3457 ;;  bufferH         1   17[BANK0 ] unsigned char 
  3458 ;;  bufferM         1   16[BANK0 ] unsigned char 
  3459 ;;  bufferS         1   15[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : B1F/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3469 ;;      Params:         0       0       0       0       0       0       0
  3470 ;;      Locals:         0      21       0       0       0       0       0
  3471 ;;      Temps:          0       3       0       0       0       0       0
  3472 ;;      Totals:         0      24       0       0       0       0       0
  3473 ;;Total ram usage:       24 bytes
  3474 ;; Hardware stack levels required when called:    8
  3475 ;; This function calls:
  3476 ;;		_FSM
  3477 ;;		_PWM1_LoadDutyValue
  3478 ;;		_PWM2_LoadDutyValue
  3479 ;;		_PWM3_LoadDutyValue
  3480 ;;		_SYSTEM_Initialize
  3481 ;;		___awdiv
  3482 ;;		_bitExtracted
  3483 ;;		_convertFromBcd
  3484 ;;		_incrHeure
  3485 ;;		_incrMin
  3486 ;;		_initI2C
  3487 ;;		_initRTC
  3488 ;;		_initRW1063
  3489 ;;		_printReglageH
  3490 ;;		_readHr
  3491 ;;		_readMin
  3492 ;;		_readSec
  3493 ;;		_writeInst
  3494 ;;		_writeLCD
  3495 ;; This function is called by:
  3496 ;;		Startup code after reset
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _main
  3502  002D                     _main:	
  3503                           
  3504                           ;main.c: 7: SYSTEM_Initialize();
  3505                           
  3506                           ;incstack = 0
  3507                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3508  002D  3185  25AF  3180   	fcall	_SYSTEM_Initialize
  3509                           
  3510                           ;main.c: 8: initI2C();
  3511  0030  3184  240D  3180   	fcall	_initI2C
  3512                           
  3513                           ;main.c: 9: initRW1063();
  3514  0033  3186  265A  3180   	fcall	_initRW1063
  3515                           
  3516                           ;main.c: 10: (INTCONbits.GIE = 0);
  3517  0036  138B               	bcf	11,7	;volatile
  3518                           
  3519                           ;main.c: 11: (INTCONbits.PEIE = 0);
  3520  0037  130B               	bcf	11,6	;volatile
  3521                           
  3522                           ;main.c: 12: uint16_t PWM1 = 0;
  3523  0038  0020               	movlb	0	; select bank0
  3524  0039  01A9               	clrf	main@PWM1
  3525  003A  01AA               	clrf	main@PWM1+1
  3526                           
  3527                           ;main.c: 13: uint16_t PWM2 = 0;
  3528  003B  01AB               	clrf	main@PWM2
  3529  003C  01AC               	clrf	main@PWM2+1
  3530                           
  3531                           ;main.c: 14: uint16_t PWM3 = 0;
  3532  003D  01AD               	clrf	main@PWM3
  3533  003E  01AE               	clrf	main@PWM3+1
  3534                           
  3535                           ;main.c: 15: writeInst(0b00000001);
  3536  003F  3001               	movlw	1
  3537  0040  3186  2614  3180   	fcall	_writeInst
  3538                           
  3539                           ;main.c: 16: _delay((unsigned long)((40)*(16000000/4000.0)));
  3540  0043  30D0               	movlw	208
  3541  0044  0020               	movlb	0	; select bank0
  3542  0045  00A6               	movwf	??_main
  3543  0046  30C9               	movlw	201
  3544  0047                     u2137:	
  3545  0047  0B89               	decfsz	9,f
  3546  0048  2847               	goto	u2137
  3547  0049  0BA6               	decfsz	??_main,f
  3548  004A  2847               	goto	u2137
  3549  004B  3200               	nop2
  3550                           
  3551                           ;main.c: 17: initRTC();
  3552  004C  3183  236B  3180   	fcall	_initRTC
  3553                           
  3554                           ;main.c: 18: uint8_t i=0;
  3555  004F  0020               	movlb	0	; select bank0
  3556  0050  01BA               	clrf	main@i
  3557                           
  3558                           ;main.c: 19: uint8_t second = 0;
  3559  0051  01BD               	clrf	main@second
  3560                           
  3561                           ;main.c: 20: uint8_t minute = 0;
  3562  0052  01BB               	clrf	main@minute
  3563                           
  3564                           ;main.c: 21: uint8_t heure = 0;
  3565  0053  01BC               	clrf	main@heure
  3566                           
  3567                           ;main.c: 22: uint8_t uniteS = 0;
  3568  0054  01B2               	clrf	main@uniteS
  3569                           
  3570                           ;main.c: 23: uint8_t dizaineS = 0;
  3571  0055  01B3               	clrf	main@dizaineS
  3572                           
  3573                           ;main.c: 24: uint8_t uniteM = 0;
  3574  0056  01B4               	clrf	main@uniteM
  3575                           
  3576                           ;main.c: 25: uint8_t dizaineM = 0;
  3577  0057  01B5               	clrf	main@dizaineM
  3578                           
  3579                           ;main.c: 26: uint8_t uniteH = 0;
  3580  0058  01B6               	clrf	main@uniteH
  3581                           
  3582                           ;main.c: 27: uint8_t dizaineH = 0;
  3583  0059  01B7               	clrf	main@dizaineH
  3584                           
  3585                           ;main.c: 28: uint8_t bufferS = 0;
  3586  005A  01AF               	clrf	main@bufferS
  3587                           
  3588                           ;main.c: 29: uint8_t bufferM = 0;
  3589  005B  01B0               	clrf	main@bufferM
  3590                           
  3591                           ;main.c: 30: uint8_t bufferH = 0;
  3592  005C  01B1               	clrf	main@bufferH
  3593                           
  3594                           ;main.c: 31: uint8_t menu = 0;
  3595  005D  01B8               	clrf	main@menu
  3596                           
  3597                           ;main.c: 32: uint8_t select = 0;
  3598  005E  01B9               	clrf	main@select
  3599  005F                     l2655:	
  3600                           ;main.c: 56: while (1) {
  3601                           
  3602                           ;main.c: 33: while (1) {
  3603                           
  3604                           
  3605                           ;main.c: 58: second = readSec();
  3606  005F  3184  2473  3180   	fcall	_readSec
  3607  0062  0020               	movlb	0	; select bank0
  3608  0063  00A6               	movwf	??_main
  3609  0064  0826               	movf	??_main,w
  3610  0065  00BD               	movwf	main@second
  3611                           
  3612                           ;main.c: 59: minute = readMin();
  3613  0066  3184  249C  3180   	fcall	_readMin
  3614  0069  0020               	movlb	0	; select bank0
  3615  006A  00A6               	movwf	??_main
  3616  006B  0826               	movf	??_main,w
  3617  006C  00BB               	movwf	main@minute
  3618                           
  3619                           ;main.c: 60: heure = readHr();
  3620  006D  3184  24C5  3180   	fcall	_readHr
  3621  0070  0020               	movlb	0	; select bank0
  3622  0071  00A6               	movwf	??_main
  3623  0072  0826               	movf	??_main,w
  3624  0073  00BC               	movwf	main@heure
  3625                           
  3626                           ;main.c: 62: second = second - 0b10000000;
  3627  0074  083D               	movf	main@second,w
  3628  0075  3E80               	addlw	128
  3629  0076  00A6               	movwf	??_main
  3630  0077  0826               	movf	??_main,w
  3631  0078  00BD               	movwf	main@second
  3632                           
  3633                           ;main.c: 64: uniteS = bitExtracted(second, 4, 1);
  3634  0079  3004               	movlw	4
  3635  007A  00A6               	movwf	??_main
  3636  007B  0826               	movf	??_main,w
  3637  007C  00F1               	movwf	bitExtracted@k
  3638  007D  01F2               	clrf	bitExtracted@p
  3639  007E  0AF2               	incf	bitExtracted@p,f
  3640  007F  083D               	movf	main@second,w
  3641  0080  3185  25DD  3180   	fcall	_bitExtracted
  3642  0083  0020               	movlb	0	; select bank0
  3643  0084  00A7               	movwf	??_main+1
  3644  0085  0827               	movf	??_main+1,w
  3645  0086  00B2               	movwf	main@uniteS
  3646                           
  3647                           ;main.c: 65: dizaineS = bitExtracted(second, 3, 5);
  3648  0087  3003               	movlw	3
  3649  0088  00A6               	movwf	??_main
  3650  0089  0826               	movf	??_main,w
  3651  008A  00F1               	movwf	bitExtracted@k
  3652  008B  3005               	movlw	5
  3653  008C  00A7               	movwf	??_main+1
  3654  008D  0827               	movf	??_main+1,w
  3655  008E  00F2               	movwf	bitExtracted@p
  3656  008F  083D               	movf	main@second,w
  3657  0090  3185  25DD  3180   	fcall	_bitExtracted
  3658  0093  0020               	movlb	0	; select bank0
  3659  0094  00A8               	movwf	??_main+2
  3660  0095  0828               	movf	??_main+2,w
  3661  0096  00B3               	movwf	main@dizaineS
  3662                           
  3663                           ;main.c: 67: uniteM = bitExtracted(minute, 4, 1);
  3664  0097  3004               	movlw	4
  3665  0098  00A6               	movwf	??_main
  3666  0099  0826               	movf	??_main,w
  3667  009A  00F1               	movwf	bitExtracted@k
  3668  009B  01F2               	clrf	bitExtracted@p
  3669  009C  0AF2               	incf	bitExtracted@p,f
  3670  009D  083B               	movf	main@minute,w
  3671  009E  3185  25DD  3180   	fcall	_bitExtracted
  3672  00A1  0020               	movlb	0	; select bank0
  3673  00A2  00A7               	movwf	??_main+1
  3674  00A3  0827               	movf	??_main+1,w
  3675  00A4  00B4               	movwf	main@uniteM
  3676                           
  3677                           ;main.c: 68: dizaineM = bitExtracted(minute, 3, 5);
  3678  00A5  3003               	movlw	3
  3679  00A6  00A6               	movwf	??_main
  3680  00A7  0826               	movf	??_main,w
  3681  00A8  00F1               	movwf	bitExtracted@k
  3682  00A9  3005               	movlw	5
  3683  00AA  00A7               	movwf	??_main+1
  3684  00AB  0827               	movf	??_main+1,w
  3685  00AC  00F2               	movwf	bitExtracted@p
  3686  00AD  083B               	movf	main@minute,w
  3687  00AE  3185  25DD  3180   	fcall	_bitExtracted
  3688  00B1  0020               	movlb	0	; select bank0
  3689  00B2  00A8               	movwf	??_main+2
  3690  00B3  0828               	movf	??_main+2,w
  3691  00B4  00B5               	movwf	main@dizaineM
  3692                           
  3693                           ;main.c: 70: uniteH = bitExtracted(heure, 4, 1);
  3694  00B5  3004               	movlw	4
  3695  00B6  00A6               	movwf	??_main
  3696  00B7  0826               	movf	??_main,w
  3697  00B8  00F1               	movwf	bitExtracted@k
  3698  00B9  01F2               	clrf	bitExtracted@p
  3699  00BA  0AF2               	incf	bitExtracted@p,f
  3700  00BB  083C               	movf	main@heure,w
  3701  00BC  3185  25DD  3180   	fcall	_bitExtracted
  3702  00BF  0020               	movlb	0	; select bank0
  3703  00C0  00A7               	movwf	??_main+1
  3704  00C1  0827               	movf	??_main+1,w
  3705  00C2  00B6               	movwf	main@uniteH
  3706                           
  3707                           ;main.c: 71: dizaineH = bitExtracted(heure, 2, 5);
  3708  00C3  3002               	movlw	2
  3709  00C4  00A6               	movwf	??_main
  3710  00C5  0826               	movf	??_main,w
  3711  00C6  00F1               	movwf	bitExtracted@k
  3712  00C7  3005               	movlw	5
  3713  00C8  00A7               	movwf	??_main+1
  3714  00C9  0827               	movf	??_main+1,w
  3715  00CA  00F2               	movwf	bitExtracted@p
  3716  00CB  083C               	movf	main@heure,w
  3717  00CC  3185  25DD  3180   	fcall	_bitExtracted
  3718  00CF  0020               	movlb	0	; select bank0
  3719  00D0  00A8               	movwf	??_main+2
  3720  00D1  0828               	movf	??_main+2,w
  3721  00D2  00B7               	movwf	main@dizaineH
  3722                           
  3723                           ;main.c: 73: bufferS = convertFromBcd(second);
  3724  00D3  083D               	movf	main@second,w
  3725  00D4  3185  2547  3180   	fcall	_convertFromBcd
  3726  00D7  0020               	movlb	0	; select bank0
  3727  00D8  00A6               	movwf	??_main
  3728  00D9  0826               	movf	??_main,w
  3729  00DA  00AF               	movwf	main@bufferS
  3730                           
  3731                           ;main.c: 74: bufferM = convertFromBcd(minute);
  3732  00DB  083B               	movf	main@minute,w
  3733  00DC  3185  2547  3180   	fcall	_convertFromBcd
  3734  00DF  0020               	movlb	0	; select bank0
  3735  00E0  00A6               	movwf	??_main
  3736  00E1  0826               	movf	??_main,w
  3737  00E2  00B0               	movwf	main@bufferM
  3738                           
  3739                           ;main.c: 75: bufferH = convertFromBcd(heure);
  3740  00E3  083C               	movf	main@heure,w
  3741  00E4  3185  2547  3180   	fcall	_convertFromBcd
  3742  00E7  0020               	movlb	0	; select bank0
  3743  00E8  00A6               	movwf	??_main
  3744  00E9  0826               	movf	??_main,w
  3745  00EA  00B1               	movwf	main@bufferH
  3746                           
  3747                           ;main.c: 77: PWM1_LoadDutyValue(300 + i / 4);
  3748  00EB  3004               	movlw	4
  3749  00EC  00F1               	movwf	___awdiv@divisor
  3750  00ED  3000               	movlw	0
  3751  00EE  00F2               	movwf	___awdiv@divisor+1
  3752  00EF  083A               	movf	main@i,w
  3753  00F0  00A6               	movwf	??_main
  3754  00F1  01A7               	clrf	??_main+1
  3755  00F2  0826               	movf	??_main,w
  3756  00F3  00F3               	movwf	___awdiv@dividend
  3757  00F4  0827               	movf	??_main+1,w
  3758  00F5  00F4               	movwf	___awdiv@dividend+1
  3759  00F6  3183  23BC  3180   	fcall	___awdiv
  3760  00F9  0871               	movf	?___awdiv,w
  3761  00FA  3E2C               	addlw	44
  3762  00FB  0020               	movlb	0	; select bank0
  3763  00FC  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
  3764  00FD  3001               	movlw	1
  3765  00FE  3D72               	addwfc	?___awdiv+1,w
  3766  00FF  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  3767  0100  3185  2596  3180   	fcall	_PWM1_LoadDutyValue
  3768                           
  3769                           ;main.c: 78: PWM2_LoadDutyValue(960 - i);
  3770  0103  0020               	movlb	0	; select bank0
  3771  0104  083A               	movf	main@i,w
  3772  0105  00A6               	movwf	??_main
  3773  0106  01A7               	clrf	??_main+1
  3774  0107  09A6               	comf	??_main,f
  3775  0108  09A7               	comf	??_main+1,f
  3776  0109  0AA6               	incf	??_main,f
  3777  010A  1903               	skipnz
  3778  010B  0AA7               	incf	??_main+1,f
  3779  010C  0826               	movf	??_main,w
  3780  010D  3EC0               	addlw	192
  3781  010E  00F1               	movwf	PWM2_LoadDutyValue@dutyValue
  3782  010F  3003               	movlw	3
  3783  0110  3D27               	addwfc	??_main+1,w
  3784  0111  00F2               	movwf	PWM2_LoadDutyValue@dutyValue+1
  3785  0112  3185  25C7  3180   	fcall	_PWM2_LoadDutyValue
  3786                           
  3787                           ;main.c: 79: PWM3_LoadDutyValue(10 + i / 10);
  3788  0115  300A               	movlw	10
  3789  0116  00F1               	movwf	___awdiv@divisor
  3790  0117  3000               	movlw	0
  3791  0118  00F2               	movwf	___awdiv@divisor+1
  3792  0119  0020               	movlb	0	; select bank0
  3793  011A  083A               	movf	main@i,w
  3794  011B  00A6               	movwf	??_main
  3795  011C  01A7               	clrf	??_main+1
  3796  011D  0826               	movf	??_main,w
  3797  011E  00F3               	movwf	___awdiv@dividend
  3798  011F  0827               	movf	??_main+1,w
  3799  0120  00F4               	movwf	___awdiv@dividend+1
  3800  0121  3183  23BC  3180   	fcall	___awdiv
  3801  0124  0871               	movf	?___awdiv,w
  3802  0125  3E0A               	addlw	10
  3803  0126  0020               	movlb	0	; select bank0
  3804  0127  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  3805  0128  3000               	movlw	0
  3806  0129  3D72               	addwfc	?___awdiv+1,w
  3807  012A  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3808  012B  3185  257D  3180   	fcall	_PWM3_LoadDutyValue
  3809                           
  3810                           ;main.c: 80: if (menu == 0) {
  3811  012E  0020               	movlb	0	; select bank0
  3812  012F  0838               	movf	main@menu,w
  3813  0130  1D03               	btfss	3,2
  3814  0131  2996               	goto	l2695
  3815                           
  3816                           ;main.c: 81: writeLCD(FSM(dizaineS), 6, 1);
  3817  0132  3006               	movlw	6
  3818  0133  00A6               	movwf	??_main
  3819  0134  0826               	movf	??_main,w
  3820  0135  00F3               	movwf	writeLCD@adress
  3821  0136  01F4               	clrf	writeLCD@ligne
  3822  0137  0AF4               	incf	writeLCD@ligne,f
  3823  0138  0833               	movf	main@dizaineS,w
  3824  0139  3184  24EE  3180   	fcall	_FSM
  3825  013C  3184  2446  3180   	fcall	_writeLCD
  3826                           
  3827                           ;main.c: 82: writeLCD(FSM(uniteS), 7, 1);
  3828  013F  3007               	movlw	7
  3829  0140  0020               	movlb	0	; select bank0
  3830  0141  00A6               	movwf	??_main
  3831  0142  0826               	movf	??_main,w
  3832  0143  00F3               	movwf	writeLCD@adress
  3833  0144  01F4               	clrf	writeLCD@ligne
  3834  0145  0AF4               	incf	writeLCD@ligne,f
  3835  0146  0832               	movf	main@uniteS,w
  3836  0147  3184  24EE  3180   	fcall	_FSM
  3837  014A  3184  2446  3180   	fcall	_writeLCD
  3838                           
  3839                           ;main.c: 83: writeLCD(FSM(dizaineM), 3, 1);
  3840  014D  3003               	movlw	3
  3841  014E  0020               	movlb	0	; select bank0
  3842  014F  00A6               	movwf	??_main
  3843  0150  0826               	movf	??_main,w
  3844  0151  00F3               	movwf	writeLCD@adress
  3845  0152  01F4               	clrf	writeLCD@ligne
  3846  0153  0AF4               	incf	writeLCD@ligne,f
  3847  0154  0835               	movf	main@dizaineM,w
  3848  0155  3184  24EE  3180   	fcall	_FSM
  3849  0158  3184  2446  3180   	fcall	_writeLCD
  3850                           
  3851                           ;main.c: 84: writeLCD(FSM(uniteM), 4, 1);
  3852  015B  3004               	movlw	4
  3853  015C  0020               	movlb	0	; select bank0
  3854  015D  00A6               	movwf	??_main
  3855  015E  0826               	movf	??_main,w
  3856  015F  00F3               	movwf	writeLCD@adress
  3857  0160  01F4               	clrf	writeLCD@ligne
  3858  0161  0AF4               	incf	writeLCD@ligne,f
  3859  0162  0834               	movf	main@uniteM,w
  3860  0163  3184  24EE  3180   	fcall	_FSM
  3861  0166  3184  2446  3180   	fcall	_writeLCD
  3862                           
  3863                           ;main.c: 85: writeLCD(FSM(dizaineH), 0, 1);
  3864  0169  01F3               	clrf	writeLCD@adress
  3865  016A  01F4               	clrf	writeLCD@ligne
  3866  016B  0AF4               	incf	writeLCD@ligne,f
  3867  016C  0020               	movlb	0	; select bank0
  3868  016D  0837               	movf	main@dizaineH,w
  3869  016E  3184  24EE  3180   	fcall	_FSM
  3870  0171  3184  2446  3180   	fcall	_writeLCD
  3871                           
  3872                           ;main.c: 86: writeLCD(FSM(uniteH), 1, 1);
  3873  0174  01F3               	clrf	writeLCD@adress
  3874  0175  0AF3               	incf	writeLCD@adress,f
  3875  0176  01F4               	clrf	writeLCD@ligne
  3876  0177  0AF4               	incf	writeLCD@ligne,f
  3877  0178  0020               	movlb	0	; select bank0
  3878  0179  0836               	movf	main@uniteH,w
  3879  017A  3184  24EE  3180   	fcall	_FSM
  3880  017D  3184  2446  3180   	fcall	_writeLCD
  3881                           
  3882                           ;main.c: 87: writeLCD(':', 2, 1);
  3883  0180  3002               	movlw	2
  3884  0181  0020               	movlb	0	; select bank0
  3885  0182  00A6               	movwf	??_main
  3886  0183  0826               	movf	??_main,w
  3887  0184  00F3               	movwf	writeLCD@adress
  3888  0185  01F4               	clrf	writeLCD@ligne
  3889  0186  0AF4               	incf	writeLCD@ligne,f
  3890  0187  303A               	movlw	58
  3891  0188  3184  2446  3180   	fcall	_writeLCD
  3892                           
  3893                           ;main.c: 88: writeLCD(':', 5, 1);
  3894  018B  3005               	movlw	5
  3895  018C  0020               	movlb	0	; select bank0
  3896  018D  00A6               	movwf	??_main
  3897  018E  0826               	movf	??_main,w
  3898  018F  00F3               	movwf	writeLCD@adress
  3899  0190  01F4               	clrf	writeLCD@ligne
  3900  0191  0AF4               	incf	writeLCD@ligne,f
  3901  0192  303A               	movlw	58
  3902  0193  3184  2446  3180   	fcall	_writeLCD
  3903  0196                     l2695:	
  3904                           
  3905                           ;main.c: 89: }
  3906                           ;main.c: 90: if (PORTCbits.RC4 == 0) {
  3907  0196  0020               	movlb	0	; select bank0
  3908  0197  1A0E               	btfsc	14,4	;volatile
  3909  0198  299D               	goto	l2699
  3910                           
  3911                           ;main.c: 91: menu = 1;
  3912  0199  01B8               	clrf	main@menu
  3913  019A  0AB8               	incf	main@menu,f
  3914  019B                     l282:	
  3915                           ;main.c: 92: while (PORTCbits.RC4 == 0);
  3916                           
  3917  019B  1E0E               	btfss	14,4	;volatile
  3918  019C  299B               	goto	l282
  3919  019D                     l2699:	
  3920                           
  3921                           ;main.c: 93: }
  3922                           ;main.c: 94: if (menu == 1) {
  3923  019D  0338               	decf	main@menu,w
  3924  019E  1D03               	btfss	3,2
  3925  019F  285F               	goto	l2655
  3926                           
  3927                           ;main.c: 95: _delay((unsigned long)((100)*(16000000/4000.0)));
  3928  01A0  3003               	movlw	3
  3929  01A1  0020               	movlb	0	; select bank0
  3930  01A2  00A7               	movwf	??_main+1
  3931  01A3  3008               	movlw	8
  3932  01A4  00A6               	movwf	??_main
  3933  01A5  3077               	movlw	119
  3934  01A6                     u2147:	
  3935  01A6  0B89               	decfsz	9,f
  3936  01A7  29A6               	goto	u2147
  3937  01A8  0BA6               	decfsz	??_main,f
  3938  01A9  29A6               	goto	u2147
  3939  01AA  0BA7               	decfsz	??_main+1,f
  3940  01AB  29A6               	goto	u2147
  3941                           
  3942                           ;main.c: 96: if (PORTCbits.RC0 == 0) {
  3943  01AC  0020               	movlb	0	; select bank0
  3944  01AD  180E               	btfsc	14,0	;volatile
  3945  01AE  29C7               	goto	l286
  3946                           
  3947                           ;main.c: 97: ++select;
  3948  01AF  3001               	movlw	1
  3949  01B0  00A6               	movwf	??_main
  3950  01B1  0826               	movf	??_main,w
  3951  01B2  07B9               	addwf	main@select,f
  3952                           
  3953                           ;main.c: 98: if (select == 1) {
  3954  01B3  0339               	decf	main@select,w
  3955  01B4  1D03               	btfss	3,2
  3956  01B5  29B9               	goto	l2709
  3957                           
  3958                           ;main.c: 99: printReglageH();
  3959  01B6  3181  21D9  3180   	fcall	_printReglageH
  3960  01B9                     l2709:	
  3961                           
  3962                           ;main.c: 100: }
  3963                           ;main.c: 101: if (select == 2) {
  3964  01B9  3002               	movlw	2
  3965  01BA  0020               	movlb	0	; select bank0
  3966  01BB  0639               	xorwf	main@select,w
  3967  01BC  1D03               	btfss	3,2
  3968  01BD  29C5               	goto	l289
  3969                           
  3970                           ;main.c: 102: writeInst(0b00000001);
  3971  01BE  3001               	movlw	1
  3972  01BF  3186  2614  3180   	fcall	_writeInst
  3973                           
  3974                           ;main.c: 103: menu = 0;
  3975  01C2  0020               	movlb	0	; select bank0
  3976  01C3  01B8               	clrf	main@menu
  3977                           
  3978                           ;main.c: 104: select = 0;
  3979  01C4  01B9               	clrf	main@select
  3980  01C5                     l289:	
  3981                           ;main.c: 105: }
  3982                           ;main.c: 106: while (PORTCbits.RC0 == 0);
  3983                           
  3984  01C5  1C0E               	btfss	14,0	;volatile
  3985  01C6  29C5               	goto	l289
  3986  01C7                     l286:	
  3987                           
  3988                           ;main.c: 107: }
  3989                           ;main.c: 108: if (PORTCbits.RC1 == 0) {
  3990  01C7  188E               	btfsc	14,1	;volatile
  3991  01C8  29CF               	goto	l2721
  3992                           
  3993                           ;main.c: 109: incrMin();
  3994  01C9  3183  2313  3180   	fcall	_incrMin
  3995                           
  3996                           ;main.c: 110: printReglageH();
  3997  01CC  3181  21D9  3180   	fcall	_printReglageH
  3998  01CF                     l2721:	
  3999                           
  4000                           ;main.c: 113: }
  4001                           ;main.c: 114: if (PORTCbits.RC2 == 0) {
  4002  01CF  0020               	movlb	0	; select bank0
  4003  01D0  190E               	btfsc	14,2	;volatile
  4004  01D1  285F               	goto	l2655
  4005                           
  4006                           ;main.c: 115: incrHeure();
  4007  01D2  3182  22B3  3180   	fcall	_incrHeure
  4008                           
  4009                           ;main.c: 116: printReglageH();
  4010  01D5  3181  21D9  3180   	fcall	_printReglageH
  4011  01D8  285F               	goto	l2655
  4012  01D9                     __end_of_main:	
  4013                           
  4014                           	psect	text1
  4015  0473                     __ptext1:	
  4016 ;; *************** function _readSec *****************
  4017 ;; Defined at:
  4018 ;;		line 58 in file "RTC.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  second          1    4[COMMON] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      unsigned char 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4032 ;;      Params:         0       0       0       0       0       0       0
  4033 ;;      Locals:         1       0       0       0       0       0       0
  4034 ;;      Temps:          1       0       0       0       0       0       0
  4035 ;;      Totals:         2       0       0       0       0       0       0
  4036 ;;Total ram usage:        2 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_re_startI2C
  4041 ;;		_readI2C
  4042 ;;		_sendI2C
  4043 ;;		_sendNoAckI2C
  4044 ;;		_startI2C
  4045 ;;		_stopI2C
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           
  4052                           ;psect for function _readSec
  4053  0473                     _readSec:	
  4054                           
  4055                           ;RTC.c: 59: uint8_t second = 0;
  4056                           
  4057                           ;incstack = 0
  4058                           ; Regs used in _readSec: [wreg+status,2+status,0+pclath+cstack]
  4059  0473  01F4               	clrf	readSec@second
  4060                           
  4061                           ;RTC.c: 60: startI2C();
  4062  0474  3186  2690  3184   	fcall	_startI2C
  4063                           
  4064                           ;RTC.c: 61: sendI2C(0b11011110);
  4065  0477  30DE               	movlw	222
  4066  0478  3186  2678  3184   	fcall	_sendI2C
  4067  047B                     l514:	
  4068                           ;RTC.c: 62: while (SSP1CON2bits.ACKSTAT == 1);
  4069                           
  4070  047B  0024               	movlb	4	; select bank4
  4071  047C  1B16               	btfsc	22,6	;volatile
  4072  047D  2C7B               	goto	l514
  4073                           
  4074                           ;RTC.c: 63: sendI2C(0x00);
  4075  047E  3000               	movlw	0
  4076  047F  3186  2678  3184   	fcall	_sendI2C
  4077  0482                     l517:	
  4078                           ;RTC.c: 64: while (SSP1CON2bits.ACKSTAT == 1);
  4079                           
  4080  0482  0024               	movlb	4	; select bank4
  4081  0483  1B16               	btfsc	22,6	;volatile
  4082  0484  2C82               	goto	l517
  4083                           
  4084                           ;RTC.c: 65: re_startI2C();
  4085  0485  3186  2699  3184   	fcall	_re_startI2C
  4086                           
  4087                           ;RTC.c: 66: sendI2C(0b11011111);
  4088  0488  30DF               	movlw	223
  4089  0489  3186  2678  3184   	fcall	_sendI2C
  4090  048C                     l520:	
  4091                           ;RTC.c: 67: while (SSP1CON2bits.ACKSTAT == 1);
  4092                           
  4093  048C  0024               	movlb	4	; select bank4
  4094  048D  1B16               	btfsc	22,6	;volatile
  4095  048E  2C8C               	goto	l520
  4096                           
  4097                           ;RTC.c: 68: second = readI2C();
  4098  048F  3186  2627  3184   	fcall	_readI2C
  4099  0492  00F3               	movwf	??_readSec
  4100  0493  0873               	movf	??_readSec,w
  4101  0494  00F4               	movwf	readSec@second
  4102                           
  4103                           ;RTC.c: 69: sendNoAckI2C();
  4104  0495  3186  26C9  3184   	fcall	_sendNoAckI2C
  4105                           
  4106                           ;RTC.c: 70: stopI2C();
  4107  0498  3186  26A1         	fcall	_stopI2C
  4108                           
  4109                           ;RTC.c: 71: return second;
  4110  049A  0874               	movf	readSec@second,w
  4111  049B  0008               	return
  4112  049C                     __end_of_readSec:	
  4113                           
  4114                           	psect	text2
  4115  01D9                     __ptext2:	
  4116 ;; *************** function _printReglageH *****************
  4117 ;; Defined at:
  4118 ;;		line 42 in file "LCD.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  heure           1    5[BANK0 ] unsigned char 
  4123 ;;  minute          1    4[BANK0 ] unsigned char 
  4124 ;;  uniteH          1    3[BANK0 ] unsigned char 
  4125 ;;  dizaineH        1    2[BANK0 ] unsigned char 
  4126 ;;  uniteM          1    1[BANK0 ] unsigned char 
  4127 ;;  dizaineM        1    0[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4137 ;;      Params:         0       0       0       0       0       0       0
  4138 ;;      Locals:         0       6       0       0       0       0       0
  4139 ;;      Temps:          3       0       0       0       0       0       0
  4140 ;;      Totals:         3       6       0       0       0       0       0
  4141 ;;Total ram usage:        9 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    7
  4144 ;; This function calls:
  4145 ;;		_FSM
  4146 ;;		_bitExtracted
  4147 ;;		_readHr
  4148 ;;		_readMin
  4149 ;;		_writeInst
  4150 ;;		_writeLCD
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           
  4157                           ;psect for function _printReglageH
  4158  01D9                     _printReglageH:	
  4159                           
  4160                           ;LCD.c: 44: uint8_t minute=0;
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in _printReglageH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4164  01D9  0020               	movlb	0	; select bank0
  4165  01DA  01A4               	clrf	printReglageH@minute
  4166                           
  4167                           ;LCD.c: 45: uint8_t heure=0;
  4168  01DB  01A5               	clrf	printReglageH@heure
  4169                           
  4170                           ;LCD.c: 46: uint8_t dizaineM=0;
  4171  01DC  01A0               	clrf	printReglageH@dizaineM
  4172                           
  4173                           ;LCD.c: 47: uint8_t uniteM=0;
  4174  01DD  01A1               	clrf	printReglageH@uniteM
  4175                           
  4176                           ;LCD.c: 48: uint8_t dizaineH=0;
  4177  01DE  01A2               	clrf	printReglageH@dizaineH
  4178                           
  4179                           ;LCD.c: 49: uint8_t uniteH=0;
  4180  01DF  01A3               	clrf	printReglageH@uniteH
  4181                           
  4182                           ;LCD.c: 50: writeInst(0b00000001);
  4183  01E0  3001               	movlw	1
  4184  01E1  3186  2614  3181   	fcall	_writeInst
  4185                           
  4186                           ;LCD.c: 51: writeLCD('R', 1, 1);
  4187  01E4  01F3               	clrf	writeLCD@adress
  4188  01E5  0AF3               	incf	writeLCD@adress,f
  4189  01E6  01F4               	clrf	writeLCD@ligne
  4190  01E7  0AF4               	incf	writeLCD@ligne,f
  4191  01E8  3052               	movlw	82
  4192  01E9  3184  2446  3181   	fcall	_writeLCD
  4193                           
  4194                           ;LCD.c: 52: writeLCD('E', 2, 1);
  4195  01EC  3002               	movlw	2
  4196  01ED  00F8               	movwf	??_printReglageH
  4197  01EE  0878               	movf	??_printReglageH,w
  4198  01EF  00F3               	movwf	writeLCD@adress
  4199  01F0  01F4               	clrf	writeLCD@ligne
  4200  01F1  0AF4               	incf	writeLCD@ligne,f
  4201  01F2  3045               	movlw	69
  4202  01F3  3184  2446  3181   	fcall	_writeLCD
  4203                           
  4204                           ;LCD.c: 53: writeLCD('G', 3, 1);
  4205  01F6  3003               	movlw	3
  4206  01F7  00F8               	movwf	??_printReglageH
  4207  01F8  0878               	movf	??_printReglageH,w
  4208  01F9  00F3               	movwf	writeLCD@adress
  4209  01FA  01F4               	clrf	writeLCD@ligne
  4210  01FB  0AF4               	incf	writeLCD@ligne,f
  4211  01FC  3047               	movlw	71
  4212  01FD  3184  2446  3181   	fcall	_writeLCD
  4213                           
  4214                           ;LCD.c: 54: writeLCD(' ', 4, 1);
  4215  0200  3004               	movlw	4
  4216  0201  00F8               	movwf	??_printReglageH
  4217  0202  0878               	movf	??_printReglageH,w
  4218  0203  00F3               	movwf	writeLCD@adress
  4219  0204  01F4               	clrf	writeLCD@ligne
  4220  0205  0AF4               	incf	writeLCD@ligne,f
  4221  0206  3020               	movlw	32
  4222  0207  3184  2446  3181   	fcall	_writeLCD
  4223                           
  4224                           ;LCD.c: 55: writeLCD('H', 5, 1);
  4225  020A  3005               	movlw	5
  4226  020B  00F8               	movwf	??_printReglageH
  4227  020C  0878               	movf	??_printReglageH,w
  4228  020D  00F3               	movwf	writeLCD@adress
  4229  020E  01F4               	clrf	writeLCD@ligne
  4230  020F  0AF4               	incf	writeLCD@ligne,f
  4231  0210  3048               	movlw	72
  4232  0211  3184  2446  3181   	fcall	_writeLCD
  4233                           
  4234                           ;LCD.c: 56: writeLCD('R', 6, 1);
  4235  0214  3006               	movlw	6
  4236  0215  00F8               	movwf	??_printReglageH
  4237  0216  0878               	movf	??_printReglageH,w
  4238  0217  00F3               	movwf	writeLCD@adress
  4239  0218  01F4               	clrf	writeLCD@ligne
  4240  0219  0AF4               	incf	writeLCD@ligne,f
  4241  021A  3052               	movlw	82
  4242  021B  3184  2446  3181   	fcall	_writeLCD
  4243                           
  4244                           ;LCD.c: 57: minute = readMin();
  4245  021E  3184  249C  3181   	fcall	_readMin
  4246  0221  00F8               	movwf	??_printReglageH
  4247  0222  0878               	movf	??_printReglageH,w
  4248  0223  0020               	movlb	0	; select bank0
  4249  0224  00A4               	movwf	printReglageH@minute
  4250                           
  4251                           ;LCD.c: 58: heure = readHr();
  4252  0225  3184  24C5  3181   	fcall	_readHr
  4253  0228  00F8               	movwf	??_printReglageH
  4254  0229  0878               	movf	??_printReglageH,w
  4255  022A  0020               	movlb	0	; select bank0
  4256  022B  00A5               	movwf	printReglageH@heure
  4257                           
  4258                           ;LCD.c: 59: uniteM = bitExtracted(minute, 4, 1);
  4259  022C  3004               	movlw	4
  4260  022D  00F8               	movwf	??_printReglageH
  4261  022E  0878               	movf	??_printReglageH,w
  4262  022F  00F1               	movwf	bitExtracted@k
  4263  0230  01F2               	clrf	bitExtracted@p
  4264  0231  0AF2               	incf	bitExtracted@p,f
  4265  0232  0824               	movf	printReglageH@minute,w
  4266  0233  3185  25DD  3181   	fcall	_bitExtracted
  4267  0236  00F9               	movwf	??_printReglageH+1
  4268  0237  0879               	movf	??_printReglageH+1,w
  4269  0238  0020               	movlb	0	; select bank0
  4270  0239  00A1               	movwf	printReglageH@uniteM
  4271                           
  4272                           ;LCD.c: 60: dizaineM = bitExtracted(minute, 3, 5);
  4273  023A  3003               	movlw	3
  4274  023B  00F8               	movwf	??_printReglageH
  4275  023C  0878               	movf	??_printReglageH,w
  4276  023D  00F1               	movwf	bitExtracted@k
  4277  023E  3005               	movlw	5
  4278  023F  00F9               	movwf	??_printReglageH+1
  4279  0240  0879               	movf	??_printReglageH+1,w
  4280  0241  00F2               	movwf	bitExtracted@p
  4281  0242  0824               	movf	printReglageH@minute,w
  4282  0243  3185  25DD  3181   	fcall	_bitExtracted
  4283  0246  00FA               	movwf	??_printReglageH+2
  4284  0247  087A               	movf	??_printReglageH+2,w
  4285  0248  0020               	movlb	0	; select bank0
  4286  0249  00A0               	movwf	printReglageH@dizaineM
  4287                           
  4288                           ;LCD.c: 61: uniteH = bitExtracted(heure, 4, 1);
  4289  024A  3004               	movlw	4
  4290  024B  00F8               	movwf	??_printReglageH
  4291  024C  0878               	movf	??_printReglageH,w
  4292  024D  00F1               	movwf	bitExtracted@k
  4293  024E  01F2               	clrf	bitExtracted@p
  4294  024F  0AF2               	incf	bitExtracted@p,f
  4295  0250  0825               	movf	printReglageH@heure,w
  4296  0251  3185  25DD  3181   	fcall	_bitExtracted
  4297  0254  00F9               	movwf	??_printReglageH+1
  4298  0255  0879               	movf	??_printReglageH+1,w
  4299  0256  0020               	movlb	0	; select bank0
  4300  0257  00A3               	movwf	printReglageH@uniteH
  4301                           
  4302                           ;LCD.c: 62: dizaineH = bitExtracted(heure, 2, 5);
  4303  0258  3002               	movlw	2
  4304  0259  00F8               	movwf	??_printReglageH
  4305  025A  0878               	movf	??_printReglageH,w
  4306  025B  00F1               	movwf	bitExtracted@k
  4307  025C  3005               	movlw	5
  4308  025D  00F9               	movwf	??_printReglageH+1
  4309  025E  0879               	movf	??_printReglageH+1,w
  4310  025F  00F2               	movwf	bitExtracted@p
  4311  0260  0825               	movf	printReglageH@heure,w
  4312  0261  3185  25DD  3181   	fcall	_bitExtracted
  4313  0264  00FA               	movwf	??_printReglageH+2
  4314  0265  087A               	movf	??_printReglageH+2,w
  4315  0266  0020               	movlb	0	; select bank0
  4316  0267  00A2               	movwf	printReglageH@dizaineH
  4317                           
  4318                           ;LCD.c: 63: writeLCD(FSM(dizaineM), 5, 2);
  4319  0268  3005               	movlw	5
  4320  0269  00F8               	movwf	??_printReglageH
  4321  026A  0878               	movf	??_printReglageH,w
  4322  026B  00F3               	movwf	writeLCD@adress
  4323  026C  3002               	movlw	2
  4324  026D  00F9               	movwf	??_printReglageH+1
  4325  026E  0879               	movf	??_printReglageH+1,w
  4326  026F  00F4               	movwf	writeLCD@ligne
  4327  0270  0820               	movf	printReglageH@dizaineM,w
  4328  0271  3184  24EE  3181   	fcall	_FSM
  4329  0274  3184  2446  3181   	fcall	_writeLCD
  4330                           
  4331                           ;LCD.c: 64: writeLCD(FSM(uniteM), 6, 2);
  4332  0277  3006               	movlw	6
  4333  0278  00F8               	movwf	??_printReglageH
  4334  0279  0878               	movf	??_printReglageH,w
  4335  027A  00F3               	movwf	writeLCD@adress
  4336  027B  3002               	movlw	2
  4337  027C  00F9               	movwf	??_printReglageH+1
  4338  027D  0879               	movf	??_printReglageH+1,w
  4339  027E  00F4               	movwf	writeLCD@ligne
  4340  027F  0020               	movlb	0	; select bank0
  4341  0280  0821               	movf	printReglageH@uniteM,w
  4342  0281  3184  24EE  3181   	fcall	_FSM
  4343  0284  3184  2446  3181   	fcall	_writeLCD
  4344                           
  4345                           ;LCD.c: 65: writeLCD(FSM(dizaineH), 2, 2);
  4346  0287  3002               	movlw	2
  4347  0288  00F8               	movwf	??_printReglageH
  4348  0289  0878               	movf	??_printReglageH,w
  4349  028A  00F3               	movwf	writeLCD@adress
  4350  028B  3002               	movlw	2
  4351  028C  00F9               	movwf	??_printReglageH+1
  4352  028D  0879               	movf	??_printReglageH+1,w
  4353  028E  00F4               	movwf	writeLCD@ligne
  4354  028F  0020               	movlb	0	; select bank0
  4355  0290  0822               	movf	printReglageH@dizaineH,w
  4356  0291  3184  24EE  3181   	fcall	_FSM
  4357  0294  3184  2446  3181   	fcall	_writeLCD
  4358                           
  4359                           ;LCD.c: 66: writeLCD(FSM(uniteH), 3, 2);
  4360  0297  3003               	movlw	3
  4361  0298  00F8               	movwf	??_printReglageH
  4362  0299  0878               	movf	??_printReglageH,w
  4363  029A  00F3               	movwf	writeLCD@adress
  4364  029B  3002               	movlw	2
  4365  029C  00F9               	movwf	??_printReglageH+1
  4366  029D  0879               	movf	??_printReglageH+1,w
  4367  029E  00F4               	movwf	writeLCD@ligne
  4368  029F  0020               	movlb	0	; select bank0
  4369  02A0  0823               	movf	printReglageH@uniteH,w
  4370  02A1  3184  24EE  3181   	fcall	_FSM
  4371  02A4  3184  2446  3181   	fcall	_writeLCD
  4372                           
  4373                           ;LCD.c: 67: writeLCD(':', 4, 2);
  4374  02A7  3004               	movlw	4
  4375  02A8  00F8               	movwf	??_printReglageH
  4376  02A9  0878               	movf	??_printReglageH,w
  4377  02AA  00F3               	movwf	writeLCD@adress
  4378  02AB  3002               	movlw	2
  4379  02AC  00F9               	movwf	??_printReglageH+1
  4380  02AD  0879               	movf	??_printReglageH+1,w
  4381  02AE  00F4               	movwf	writeLCD@ligne
  4382  02AF  303A               	movlw	58
  4383  02B0  3184  2446         	fcall	_writeLCD
  4384  02B2  0008               	return
  4385  02B3                     __end_of_printReglageH:	
  4386                           
  4387                           	psect	text3
  4388  0446                     __ptext3:	
  4389 ;; *************** function _writeLCD *****************
  4390 ;; Defined at:
  4391 ;;		line 16 in file "LCD.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  data            1    wreg     unsigned char 
  4394 ;;  adress          1    3[COMMON] unsigned char 
  4395 ;;  ligne           1    4[COMMON] unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  data            1    6[COMMON] unsigned char 
  4398 ;;  i               1    7[COMMON] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4408 ;;      Params:         2       0       0       0       0       0       0
  4409 ;;      Locals:         2       0       0       0       0       0       0
  4410 ;;      Temps:          1       0       0       0       0       0       0
  4411 ;;      Totals:         5       0       0       0       0       0       0
  4412 ;;Total ram usage:        5 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    6
  4415 ;; This function calls:
  4416 ;;		_sendI2C
  4417 ;;		_startI2C
  4418 ;;		_stopI2C
  4419 ;;		_writeInst
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;;		_printReglageH
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function _writeLCD
  4428  0446                     _writeLCD:	
  4429                           
  4430                           ;incstack = 0
  4431                           ; Regs used in _writeLCD: [wreg+status,2+status,0+pclath+cstack]
  4432                           ;writeLCD@data stored from wreg
  4433  0446  00F6               	movwf	writeLCD@data
  4434                           
  4435                           ;LCD.c: 17: if (ligne == 2) {
  4436  0447  3002               	movlw	2
  4437  0448  0674               	xorwf	writeLCD@ligne,w
  4438  0449  1D03               	btfss	3,2
  4439  044A  2C4F               	goto	l2437
  4440                           
  4441                           ;LCD.c: 18: adress += 40;
  4442  044B  3028               	movlw	40
  4443  044C  00F5               	movwf	??_writeLCD
  4444  044D  0875               	movf	??_writeLCD,w
  4445  044E  07F3               	addwf	writeLCD@adress,f
  4446  044F                     l2437:	
  4447                           
  4448                           ;LCD.c: 19: }
  4449                           ;LCD.c: 20: for (uint8_t i = 0; i < adress; i++) {
  4450  044F  01F7               	clrf	writeLCD@i
  4451  0450                     l2443:	
  4452  0450  0873               	movf	writeLCD@adress,w
  4453  0451  0277               	subwf	writeLCD@i,w
  4454  0452  1803               	btfsc	3,0
  4455  0453  2C5D               	goto	l2445
  4456                           
  4457                           ;LCD.c: 21: writeInst(0b00010100);
  4458  0454  3014               	movlw	20
  4459  0455  3186  2614  3184   	fcall	_writeInst
  4460  0458  3001               	movlw	1
  4461  0459  00F5               	movwf	??_writeLCD
  4462  045A  0875               	movf	??_writeLCD,w
  4463  045B  07F7               	addwf	writeLCD@i,f
  4464  045C  2C50               	goto	l2443
  4465  045D                     l2445:	
  4466                           
  4467                           ;LCD.c: 22: }
  4468                           ;LCD.c: 24: startI2C();
  4469  045D  3186  2690  3184   	fcall	_startI2C
  4470                           
  4471                           ;LCD.c: 25: sendI2C(0x78);
  4472  0460  3078               	movlw	120
  4473  0461  3186  2678  3184   	fcall	_sendI2C
  4474                           
  4475                           ;LCD.c: 27: sendI2C(0x40);
  4476  0464  3040               	movlw	64
  4477  0465  3186  2678  3184   	fcall	_sendI2C
  4478                           
  4479                           ;LCD.c: 29: sendI2C(data);
  4480  0468  0876               	movf	writeLCD@data,w
  4481  0469  3186  2678  3184   	fcall	_sendI2C
  4482                           
  4483                           ;LCD.c: 31: stopI2C();
  4484  046C  3186  26A1  3184   	fcall	_stopI2C
  4485                           
  4486                           ;LCD.c: 32: writeInst(0b00000010);
  4487  046F  3002               	movlw	2
  4488  0470  3186  2614         	fcall	_writeInst
  4489  0472  0008               	return
  4490  0473                     __end_of_writeLCD:	
  4491                           
  4492                           	psect	text4
  4493  04EE                     __ptext4:	
  4494 ;; *************** function _FSM *****************
  4495 ;; Defined at:
  4496 ;;		line 16 in file "conversion.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  IN              1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  IN              1    1[COMMON] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      unsigned char 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4510 ;;      Params:         0       0       0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0
  4513 ;;      Totals:         1       0       0       0       0       0       0
  4514 ;;Total ram usage:        1 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    3
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;;		_printReglageH
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           
  4526                           ;psect for function _FSM
  4527  04EE                     _FSM:	
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _FSM: [wreg-fsr0h+status,2+status,0]
  4531                           ;FSM@IN stored from wreg
  4532  04EE  00F1               	movwf	FSM@IN
  4533                           
  4534                           ;conversion.c: 17: switch (IN) {
  4535  04EF  2D04               	goto	l1867
  4536  04F0                     l1805:	
  4537                           ;conversion.c: 18: case 0:
  4538                           
  4539                           
  4540                           ;conversion.c: 19: return '0';
  4541  04F0  3030               	movlw	48
  4542                           
  4543                           ;conversion.c: 20: break;
  4544  04F1  0008               	return
  4545  04F2                     l1811:	
  4546                           ;conversion.c: 22: case 1:
  4547                           
  4548                           
  4549                           ;conversion.c: 23: return '1';
  4550  04F2  3031               	movlw	49
  4551                           
  4552                           ;conversion.c: 24: break;
  4553  04F3  0008               	return
  4554  04F4                     l1817:	
  4555                           ;conversion.c: 26: case 2:
  4556                           
  4557                           
  4558                           ;conversion.c: 27: return '2';
  4559  04F4  3032               	movlw	50
  4560                           
  4561                           ;conversion.c: 28: break;
  4562  04F5  0008               	return
  4563  04F6                     l1823:	
  4564                           ;conversion.c: 30: case 3:
  4565                           
  4566                           
  4567                           ;conversion.c: 31: return '3';
  4568  04F6  3033               	movlw	51
  4569                           
  4570                           ;conversion.c: 32: break;
  4571  04F7  0008               	return
  4572  04F8                     l1829:	
  4573                           ;conversion.c: 34: case 4:
  4574                           
  4575                           
  4576                           ;conversion.c: 35: return '4';
  4577  04F8  3034               	movlw	52
  4578                           
  4579                           ;conversion.c: 36: break;
  4580  04F9  0008               	return
  4581  04FA                     l1835:	
  4582                           ;conversion.c: 38: case 5:
  4583                           
  4584                           
  4585                           ;conversion.c: 39: return '5';
  4586  04FA  3035               	movlw	53
  4587                           
  4588                           ;conversion.c: 40: break;
  4589  04FB  0008               	return
  4590  04FC                     l1841:	
  4591                           ;conversion.c: 42: case 6:
  4592                           
  4593                           
  4594                           ;conversion.c: 43: return '6';
  4595  04FC  3036               	movlw	54
  4596                           
  4597                           ;conversion.c: 44: break;
  4598  04FD  0008               	return
  4599  04FE                     l1847:	
  4600                           ;conversion.c: 46: case 7:
  4601                           
  4602                           
  4603                           ;conversion.c: 47: return '7';
  4604  04FE  3037               	movlw	55
  4605                           
  4606                           ;conversion.c: 48: break;
  4607  04FF  0008               	return
  4608  0500                     l1853:	
  4609                           ;conversion.c: 50: case 8:
  4610                           
  4611                           
  4612                           ;conversion.c: 51: return '8';
  4613  0500  3038               	movlw	56
  4614                           
  4615                           ;conversion.c: 52: break;
  4616  0501  0008               	return
  4617  0502                     l1859:	
  4618                           ;conversion.c: 54: case 9:
  4619                           
  4620                           
  4621                           ;conversion.c: 55: return '9';
  4622  0502  3039               	movlw	57
  4623                           
  4624                           ;conversion.c: 61: }
  4625                           
  4626                           ;conversion.c: 59: break;
  4627                           
  4628                           ;conversion.c: 58: default:
  4629                           
  4630                           ;conversion.c: 56: break;
  4631  0503  0008               	return
  4632  0504                     l1867:	
  4633  0504  0871               	movf	FSM@IN,w
  4634                           
  4635                           ; Switch size 1, requested type "space"
  4636                           ; Number of cases is 10, Range of values is 0 to 9
  4637                           ; switch strategies available:
  4638                           ; Name         Instructions Cycles
  4639                           ; direct_byte           26     6 (fixed)
  4640                           ; simple_byte           31    16 (average)
  4641                           ; jumptable            260     6 (fixed)
  4642                           ;	Chosen strategy is direct_byte
  4643  0505  0084               	movwf	4
  4644  0506  300A               	movlw	10
  4645  0507  0204               	subwf	4,w
  4646  0508  1803               	skipnc
  4647  0509  0008               	return
  4648  050A  3186               	movlp	high S2797
  4649  050B  3504               	lslf	4,w
  4650  050C  3E00               	addlw	low S2797
  4651  050D  0082               	movwf	2
  4652  050E  0008               	return
  4653  050F                     __end_of_FSM:	
  4654                           
  4655                           	psect	swtext1
  4656  0600                     __pswtext1:	
  4657  0600                     S2797:	
  4658  0600  3184  2CF0         	ljmp	l1805
  4659  0602  3184  2CF2         	ljmp	l1811
  4660  0604  3184  2CF4         	ljmp	l1817
  4661  0606  3184  2CF6         	ljmp	l1823
  4662  0608  3184  2CF8         	ljmp	l1829
  4663  060A  3184  2CFA         	ljmp	l1835
  4664  060C  3184  2CFC         	ljmp	l1841
  4665  060E  3184  2CFE         	ljmp	l1847
  4666  0610  3185  2D00         	ljmp	l1853
  4667  0612  3185  2D02         	ljmp	l1859
  4668                           
  4669                           	psect	text5
  4670  065A                     __ptext5:	
  4671 ;; *************** function _initRW1063 *****************
  4672 ;; Defined at:
  4673 ;;		line 35 in file "LCD.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, pclath, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4687 ;;      Params:         0       0       0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    6
  4694 ;; This function calls:
  4695 ;;		_writeInst
  4696 ;; This function is called by:
  4697 ;;		_main
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function _initRW1063
  4703  065A                     _initRW1063:	
  4704                           
  4705                           ;LCD.c: 36: writeInst(0x38);
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _initRW1063: [wreg+status,2+status,0+pclath+cstack]
  4709  065A  3038               	movlw	56
  4710  065B  3186  2614  3186   	fcall	_writeInst
  4711                           
  4712                           ;LCD.c: 37: writeInst(0x0c);
  4713  065E  300C               	movlw	12
  4714  065F  3186  2614  3186   	fcall	_writeInst
  4715                           
  4716                           ;LCD.c: 38: writeInst(0x06);
  4717  0662  3006               	movlw	6
  4718  0663  3186  2614  3186   	fcall	_writeInst
  4719                           
  4720                           ;LCD.c: 39: writeInst(0b00001100);
  4721  0666  300C               	movlw	12
  4722  0667  3186  2614         	fcall	_writeInst
  4723  0669  0008               	return
  4724  066A                     __end_of_initRW1063:	
  4725                           
  4726                           	psect	text6
  4727  0614                     __ptext6:	
  4728 ;; *************** function _writeInst *****************
  4729 ;; Defined at:
  4730 ;;		line 5 in file "LCD.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  Inst            1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  Inst            1    2[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4744 ;;      Params:         0       0       0       0       0       0       0
  4745 ;;      Locals:         1       0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0
  4747 ;;      Totals:         1       0       0       0       0       0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    5
  4751 ;; This function calls:
  4752 ;;		_sendI2C
  4753 ;;		_startI2C
  4754 ;;		_stopI2C
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;;		_writeLCD
  4758 ;;		_initRW1063
  4759 ;;		_printReglageH
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _writeInst
  4765  0614                     _writeInst:	
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _writeInst: [wreg+status,2+status,0+pclath+cstack]
  4769                           ;writeInst@Inst stored from wreg
  4770  0614  00F2               	movwf	writeInst@Inst
  4771                           
  4772                           ;LCD.c: 6: startI2C();
  4773  0615  3186  2690  3186   	fcall	_startI2C
  4774                           
  4775                           ;LCD.c: 7: sendI2C(0x78);
  4776  0618  3078               	movlw	120
  4777  0619  3186  2678  3186   	fcall	_sendI2C
  4778                           
  4779                           ;LCD.c: 9: sendI2C(0x00);
  4780  061C  3000               	movlw	0
  4781  061D  3186  2678  3186   	fcall	_sendI2C
  4782                           
  4783                           ;LCD.c: 11: sendI2C(Inst);
  4784  0620  0872               	movf	writeInst@Inst,w
  4785  0621  3186  2678  3186   	fcall	_sendI2C
  4786                           
  4787                           ;LCD.c: 13: stopI2C();
  4788  0624  3186  26A1         	fcall	_stopI2C
  4789  0626  0008               	return
  4790  0627                     __end_of_writeInst:	
  4791                           
  4792                           	psect	text7
  4793  036B                     __ptext7:	
  4794 ;; *************** function _initRTC *****************
  4795 ;; Defined at:
  4796 ;;		line 5 in file "RTC.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0, pclath, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4810 ;;      Params:         0       0       0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0
  4813 ;;      Totals:         0       0       0       0       0       0       0
  4814 ;;Total ram usage:        0 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    5
  4817 ;; This function calls:
  4818 ;;		_sendI2C
  4819 ;;		_startI2C
  4820 ;;		_stopI2C
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _initRTC
  4828  036B                     _initRTC:	
  4829                           
  4830                           ;RTC.c: 6: startI2C();
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _initRTC: [wreg+status,2+status,0+pclath+cstack]
  4834  036B  3186  2690  3183   	fcall	_startI2C
  4835                           
  4836                           ;RTC.c: 7: sendI2C(0b11011110);
  4837  036E  30DE               	movlw	222
  4838  036F  3186  2678  3183   	fcall	_sendI2C
  4839  0372                     l460:	
  4840                           ;RTC.c: 8: while (SSP1CON2bits.ACKSTAT == 1);
  4841                           
  4842  0372  0024               	movlb	4	; select bank4
  4843  0373  1B16               	btfsc	22,6	;volatile
  4844  0374  2B72               	goto	l460
  4845                           
  4846                           ;RTC.c: 9: sendI2C(0x00);
  4847  0375  3000               	movlw	0
  4848  0376  3186  2678  3183   	fcall	_sendI2C
  4849  0379                     l463:	
  4850                           ;RTC.c: 10: while (SSP1CON2bits.ACKSTAT == 1);
  4851                           
  4852  0379  0024               	movlb	4	; select bank4
  4853  037A  1B16               	btfsc	22,6	;volatile
  4854  037B  2B79               	goto	l463
  4855                           
  4856                           ;RTC.c: 11: sendI2C(0b10000000);
  4857  037C  3080               	movlw	128
  4858  037D  3186  2678  3183   	fcall	_sendI2C
  4859  0380                     l466:	
  4860                           ;RTC.c: 12: while (SSP1CON2bits.ACKSTAT == 1);
  4861                           
  4862  0380  0024               	movlb	4	; select bank4
  4863  0381  1B16               	btfsc	22,6	;volatile
  4864  0382  2B80               	goto	l466
  4865                           
  4866                           ;RTC.c: 13: stopI2C();
  4867  0383  3186  26A1  3183   	fcall	_stopI2C
  4868                           
  4869                           ;RTC.c: 15: startI2C();
  4870  0386  3186  2690  3183   	fcall	_startI2C
  4871                           
  4872                           ;RTC.c: 16: sendI2C(0b11011110);
  4873  0389  30DE               	movlw	222
  4874  038A  3186  2678  3183   	fcall	_sendI2C
  4875  038D                     l469:	
  4876                           ;RTC.c: 17: while (SSP1CON2bits.ACKSTAT == 1);
  4877                           
  4878  038D  0024               	movlb	4	; select bank4
  4879  038E  1B16               	btfsc	22,6	;volatile
  4880  038F  2B8D               	goto	l469
  4881                           
  4882                           ;RTC.c: 18: sendI2C(0x01);
  4883  0390  3001               	movlw	1
  4884  0391  3186  2678  3183   	fcall	_sendI2C
  4885  0394                     l472:	
  4886                           ;RTC.c: 19: while (SSP1CON2bits.ACKSTAT == 1);
  4887                           
  4888  0394  0024               	movlb	4	; select bank4
  4889  0395  1B16               	btfsc	22,6	;volatile
  4890  0396  2B94               	goto	l472
  4891                           
  4892                           ;RTC.c: 20: sendI2C(0b01001000);
  4893  0397  3048               	movlw	72
  4894  0398  3186  2678  3183   	fcall	_sendI2C
  4895  039B                     l475:	
  4896                           ;RTC.c: 21: while (SSP1CON2bits.ACKSTAT == 1);
  4897                           
  4898  039B  0024               	movlb	4	; select bank4
  4899  039C  1B16               	btfsc	22,6	;volatile
  4900  039D  2B9B               	goto	l475
  4901                           
  4902                           ;RTC.c: 22: stopI2C();
  4903  039E  3186  26A1  3183   	fcall	_stopI2C
  4904                           
  4905                           ;RTC.c: 24: startI2C();
  4906  03A1  3186  2690  3183   	fcall	_startI2C
  4907                           
  4908                           ;RTC.c: 25: sendI2C(0b11011110);
  4909  03A4  30DE               	movlw	222
  4910  03A5  3186  2678  3183   	fcall	_sendI2C
  4911  03A8                     l478:	
  4912                           ;RTC.c: 26: while (SSP1CON2bits.ACKSTAT == 1);
  4913                           
  4914  03A8  0024               	movlb	4	; select bank4
  4915  03A9  1B16               	btfsc	22,6	;volatile
  4916  03AA  2BA8               	goto	l478
  4917                           
  4918                           ;RTC.c: 27: sendI2C(0x02);
  4919  03AB  3002               	movlw	2
  4920  03AC  3186  2678  3183   	fcall	_sendI2C
  4921  03AF                     l481:	
  4922                           ;RTC.c: 28: while (SSP1CON2bits.ACKSTAT == 1);
  4923                           
  4924  03AF  0024               	movlb	4	; select bank4
  4925  03B0  1B16               	btfsc	22,6	;volatile
  4926  03B1  2BAF               	goto	l481
  4927                           
  4928                           ;RTC.c: 29: sendI2C(0b00010100);
  4929  03B2  3014               	movlw	20
  4930  03B3  3186  2678  3183   	fcall	_sendI2C
  4931  03B6                     l484:	
  4932                           ;RTC.c: 30: while (SSP1CON2bits.ACKSTAT == 1);
  4933                           
  4934  03B6  0024               	movlb	4	; select bank4
  4935  03B7  1B16               	btfsc	22,6	;volatile
  4936  03B8  2BB6               	goto	l484
  4937                           
  4938                           ;RTC.c: 31: stopI2C();
  4939  03B9  3186  26A1         	fcall	_stopI2C
  4940  03BB  0008               	return
  4941  03BC                     __end_of_initRTC:	
  4942                           
  4943                           	psect	text8
  4944  040D                     __ptext8:	
  4945 ;; *************** function _initI2C *****************
  4946 ;; Defined at:
  4947 ;;		line 5 in file "i2c.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  i               2    2[COMMON] int 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4961 ;;      Params:         0       0       0       0       0       0       0
  4962 ;;      Locals:         2       0       0       0       0       0       0
  4963 ;;      Temps:          1       0       0       0       0       0       0
  4964 ;;      Totals:         3       0       0       0       0       0       0
  4965 ;;Total ram usage:        3 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    3
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;;		_system_init
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _initI2C
  4978  040D                     _initI2C:	
  4979                           
  4980                           ;i2c.c: 6: int i = 0;
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in _initI2C: [wreg+status,2]
  4984  040D  01F2               	clrf	initI2C@i
  4985  040E  01F3               	clrf	initI2C@i+1
  4986                           
  4987                           ;i2c.c: 11: TRISB6 = 0;
  4988  040F  0021               	movlb	1	; select bank1
  4989  0410  130D               	bcf	13,6	;volatile
  4990                           
  4991                           ;i2c.c: 12: for (i = 0; i < 9; i++) {
  4992  0411  01F2               	clrf	initI2C@i
  4993  0412  01F3               	clrf	initI2C@i+1
  4994  0413  0873               	movf	initI2C@i+1,w
  4995  0414  3A80               	xorlw	128
  4996  0415  00F1               	movwf	??_initI2C
  4997  0416  3080               	movlw	128
  4998  0417  0271               	subwf	??_initI2C,w
  4999  0418  1D03               	skipz
  5000  0419  2C1C               	goto	u1105
  5001  041A  3009               	movlw	9
  5002  041B  0272               	subwf	initI2C@i,w
  5003  041C                     u1105:	
  5004  041C  1803               	btfsc	3,0
  5005  041D  2C30               	goto	l332
  5006  041E                     l331:	
  5007                           
  5008                           ;i2c.c: 13: LATB6 = 1;
  5009  041E  0022               	movlb	2	; select bank2
  5010  041F  170D               	bsf	13,6	;volatile
  5011                           
  5012                           ;i2c.c: 14: LATB6 = 0;
  5013  0420  130D               	bcf	13,6	;volatile
  5014  0421  3001               	movlw	1
  5015  0422  07F2               	addwf	initI2C@i,f
  5016  0423  3000               	movlw	0
  5017  0424  3DF3               	addwfc	initI2C@i+1,f
  5018  0425  0873               	movf	initI2C@i+1,w
  5019  0426  3A80               	xorlw	128
  5020  0427  00F1               	movwf	??_initI2C
  5021  0428  3080               	movlw	128
  5022  0429  0271               	subwf	??_initI2C,w
  5023  042A  1D03               	skipz
  5024  042B  2C2E               	goto	u1115
  5025  042C  3009               	movlw	9
  5026  042D  0272               	subwf	initI2C@i,w
  5027  042E                     u1115:	
  5028  042E  1C03               	skipc
  5029  042F  2C1E               	goto	l331
  5030  0430                     l332:	
  5031                           
  5032                           ;i2c.c: 15: }
  5033                           ;i2c.c: 18: TRISB6 = 1;
  5034  0430  0021               	movlb	1	; select bank1
  5035  0431  170D               	bsf	13,6	;volatile
  5036                           
  5037                           ;i2c.c: 19: TRISB4 = 1;
  5038  0432  160D               	bsf	13,4	;volatile
  5039                           
  5040                           ;i2c.c: 22: ANSELB = 0x00;
  5041  0433  0023               	movlb	3	; select bank3
  5042  0434  018D               	clrf	13	;volatile
  5043                           
  5044                           ;i2c.c: 25: LATB4 = 1;
  5045  0435  0022               	movlb	2	; select bank2
  5046  0436  160D               	bsf	13,4	;volatile
  5047                           
  5048                           ;i2c.c: 26: LATB6 = 1;
  5049  0437  170D               	bsf	13,6	;volatile
  5050                           
  5051                           ;i2c.c: 29: SSP1STAT = 0x80;
  5052  0438  3080               	movlw	128
  5053  0439  0024               	movlb	4	; select bank4
  5054  043A  0094               	movwf	20	;volatile
  5055                           
  5056                           ;i2c.c: 30: SSP1CON1 = 0x28;
  5057  043B  3028               	movlw	40
  5058  043C  0095               	movwf	21	;volatile
  5059                           
  5060                           ;i2c.c: 31: SSP1CON2 = 0x00;
  5061  043D  0196               	clrf	22	;volatile
  5062                           
  5063                           ;i2c.c: 32: SSP1ADD = 0x27;
  5064  043E  3027               	movlw	39
  5065  043F  0092               	movwf	18	;volatile
  5066                           
  5067                           ;i2c.c: 35: OPTION_REG = 0x0;
  5068  0440  0021               	movlb	1	; select bank1
  5069  0441  0195               	clrf	21	;volatile
  5070                           
  5071                           ;i2c.c: 36: WPUB = 0b00010000;
  5072  0442  3010               	movlw	16
  5073  0443  0024               	movlb	4	; select bank4
  5074  0444  008D               	movwf	13	;volatile
  5075  0445  0008               	return
  5076  0446                     __end_of_initI2C:	
  5077                           
  5078                           	psect	text9
  5079  0313                     __ptext9:	
  5080 ;; *************** function _incrMin *****************
  5081 ;; Defined at:
  5082 ;;		line 108 in file "RTC.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  minute          1    2[BANK0 ] unsigned char 
  5087 ;;  uniteM          1    1[BANK0 ] unsigned char 
  5088 ;;  dizaineM        1    0[BANK0 ] unsigned char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5098 ;;      Params:         0       0       0       0       0       0       0
  5099 ;;      Locals:         0       3       0       0       0       0       0
  5100 ;;      Temps:          3       0       0       0       0       0       0
  5101 ;;      Totals:         3       3       0       0       0       0       0
  5102 ;;Total ram usage:        6 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    6
  5105 ;; This function calls:
  5106 ;;		_bitExtracted
  5107 ;;		_changeMin
  5108 ;;		_readMin
  5109 ;; This function is called by:
  5110 ;;		_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           
  5115                           ;psect for function _incrMin
  5116  0313                     _incrMin:	
  5117                           
  5118                           ;RTC.c: 110: uint8_t minute=0;
  5119                           
  5120                           ;incstack = 0
  5121                           ; Regs used in _incrMin: [wreg+status,2+status,0+pclath+cstack]
  5122  0313  0020               	movlb	0	; select bank0
  5123  0314  01A2               	clrf	incrMin@minute
  5124                           
  5125                           ;RTC.c: 111: uint8_t dizaineM=0;
  5126  0315  01A0               	clrf	incrMin@dizaineM
  5127                           
  5128                           ;RTC.c: 112: uint8_t uniteM=0;
  5129  0316  01A1               	clrf	incrMin@uniteM
  5130                           
  5131                           ;RTC.c: 113: minute = readMin();
  5132  0317  3184  249C  3183   	fcall	_readMin
  5133  031A  00F6               	movwf	??_incrMin
  5134  031B  0876               	movf	??_incrMin,w
  5135  031C  0020               	movlb	0	; select bank0
  5136  031D  00A2               	movwf	incrMin@minute
  5137                           
  5138                           ;RTC.c: 114: uniteM = bitExtracted(minute, 4, 1);
  5139  031E  3004               	movlw	4
  5140  031F  00F6               	movwf	??_incrMin
  5141  0320  0876               	movf	??_incrMin,w
  5142  0321  00F1               	movwf	bitExtracted@k
  5143  0322  01F2               	clrf	bitExtracted@p
  5144  0323  0AF2               	incf	bitExtracted@p,f
  5145  0324  0822               	movf	incrMin@minute,w
  5146  0325  3185  25DD  3183   	fcall	_bitExtracted
  5147  0328  00F7               	movwf	??_incrMin+1
  5148  0329  0877               	movf	??_incrMin+1,w
  5149  032A  0020               	movlb	0	; select bank0
  5150  032B  00A1               	movwf	incrMin@uniteM
  5151                           
  5152                           ;RTC.c: 115: dizaineM = bitExtracted(minute, 3, 5);
  5153  032C  3003               	movlw	3
  5154  032D  00F6               	movwf	??_incrMin
  5155  032E  0876               	movf	??_incrMin,w
  5156  032F  00F1               	movwf	bitExtracted@k
  5157  0330  3005               	movlw	5
  5158  0331  00F7               	movwf	??_incrMin+1
  5159  0332  0877               	movf	??_incrMin+1,w
  5160  0333  00F2               	movwf	bitExtracted@p
  5161  0334  0822               	movf	incrMin@minute,w
  5162  0335  3185  25DD  3183   	fcall	_bitExtracted
  5163  0338  00F8               	movwf	??_incrMin+2
  5164  0339  0878               	movf	??_incrMin+2,w
  5165  033A  0020               	movlb	0	; select bank0
  5166  033B  00A0               	movwf	incrMin@dizaineM
  5167                           
  5168                           ;RTC.c: 116: minute=0;
  5169  033C  01A2               	clrf	incrMin@minute
  5170                           
  5171                           ;RTC.c: 117: uniteM=uniteM+1;
  5172  033D  0821               	movf	incrMin@uniteM,w
  5173  033E  3E01               	addlw	1
  5174  033F  00F6               	movwf	??_incrMin
  5175  0340  0876               	movf	??_incrMin,w
  5176  0341  00A1               	movwf	incrMin@uniteM
  5177                           
  5178                           ;RTC.c: 118: if(uniteM>9)
  5179  0342  300A               	movlw	10
  5180  0343  0221               	subwf	incrMin@uniteM,w
  5181  0344  1C03               	skipc
  5182  0345  2B4C               	goto	l2561
  5183                           
  5184                           ;RTC.c: 119: {
  5185                           ;RTC.c: 120: uniteM=0;
  5186  0346  01A1               	clrf	incrMin@uniteM
  5187                           
  5188                           ;RTC.c: 121: dizaineM=dizaineM+1;
  5189  0347  0820               	movf	incrMin@dizaineM,w
  5190  0348  3E01               	addlw	1
  5191  0349  00F6               	movwf	??_incrMin
  5192  034A  0876               	movf	??_incrMin,w
  5193  034B  00A0               	movwf	incrMin@dizaineM
  5194  034C                     l2561:	
  5195                           
  5196                           ;RTC.c: 122: }
  5197                           ;RTC.c: 123: if(dizaineM>6)
  5198  034C  3007               	movlw	7
  5199  034D  0220               	subwf	incrMin@dizaineM,w
  5200  034E  1C03               	skipc
  5201  034F  2B52               	goto	l2565
  5202                           
  5203                           ;RTC.c: 124: {
  5204                           ;RTC.c: 125: dizaineM=0;
  5205  0350  01A0               	clrf	incrMin@dizaineM
  5206                           
  5207                           ;RTC.c: 126: uniteM=0;
  5208  0351  01A1               	clrf	incrMin@uniteM
  5209  0352                     l2565:	
  5210                           
  5211                           ;RTC.c: 127: }
  5212                           ;RTC.c: 128: minute=minute+dizaineM;
  5213  0352  0822               	movf	incrMin@minute,w
  5214  0353  0720               	addwf	incrMin@dizaineM,w
  5215  0354  00F6               	movwf	??_incrMin
  5216  0355  0876               	movf	??_incrMin,w
  5217  0356  00A2               	movwf	incrMin@minute
  5218                           
  5219                           ;RTC.c: 129: minute=minute<<4;
  5220  0357  0822               	movf	incrMin@minute,w
  5221  0358  00F6               	movwf	??_incrMin
  5222  0359  3003               	movlw	3
  5223  035A                     u1985:	
  5224  035A  35F6               	lslf	??_incrMin,f
  5225  035B  3EFF               	addlw	-1
  5226  035C  1D03               	skipz
  5227  035D  2B5A               	goto	u1985
  5228  035E  3576               	lslf	??_incrMin,w
  5229  035F  00F7               	movwf	??_incrMin+1
  5230  0360  0877               	movf	??_incrMin+1,w
  5231  0361  00A2               	movwf	incrMin@minute
  5232                           
  5233                           ;RTC.c: 130: minute=minute+uniteM;
  5234  0362  0822               	movf	incrMin@minute,w
  5235  0363  0721               	addwf	incrMin@uniteM,w
  5236  0364  00F6               	movwf	??_incrMin
  5237  0365  0876               	movf	??_incrMin,w
  5238  0366  00A2               	movwf	incrMin@minute
  5239                           
  5240                           ;RTC.c: 131: changeMin(minute);
  5241  0367  0822               	movf	incrMin@minute,w
  5242  0368  3185  250F         	fcall	_changeMin
  5243  036A  0008               	return
  5244  036B                     __end_of_incrMin:	
  5245                           
  5246                           	psect	text10
  5247  049C                     __ptext10:	
  5248 ;; *************** function _readMin *****************
  5249 ;; Defined at:
  5250 ;;		line 74 in file "RTC.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  minute          1    4[COMMON] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5264 ;;      Params:         0       0       0       0       0       0       0
  5265 ;;      Locals:         1       0       0       0       0       0       0
  5266 ;;      Temps:          1       0       0       0       0       0       0
  5267 ;;      Totals:         2       0       0       0       0       0       0
  5268 ;;Total ram usage:        2 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    5
  5271 ;; This function calls:
  5272 ;;		_re_startI2C
  5273 ;;		_readI2C
  5274 ;;		_sendI2C
  5275 ;;		_sendNoAckI2C
  5276 ;;		_startI2C
  5277 ;;		_stopI2C
  5278 ;; This function is called by:
  5279 ;;		_main
  5280 ;;		_printReglageH
  5281 ;;		_incrMin
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _readMin
  5287  049C                     _readMin:	
  5288                           
  5289                           ;RTC.c: 75: uint8_t minute = 0;
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _readMin: [wreg+status,2+status,0+pclath+cstack]
  5293  049C  01F4               	clrf	readMin@minute
  5294                           
  5295                           ;RTC.c: 76: startI2C();
  5296  049D  3186  2690  3184   	fcall	_startI2C
  5297                           
  5298                           ;RTC.c: 77: sendI2C(0b11011110);
  5299  04A0  30DE               	movlw	222
  5300  04A1  3186  2678  3184   	fcall	_sendI2C
  5301  04A4                     l526:	
  5302                           ;RTC.c: 78: while (SSP1CON2bits.ACKSTAT == 1);
  5303                           
  5304  04A4  0024               	movlb	4	; select bank4
  5305  04A5  1B16               	btfsc	22,6	;volatile
  5306  04A6  2CA4               	goto	l526
  5307                           
  5308                           ;RTC.c: 79: sendI2C(0x01);
  5309  04A7  3001               	movlw	1
  5310  04A8  3186  2678  3184   	fcall	_sendI2C
  5311  04AB                     l529:	
  5312                           ;RTC.c: 80: while (SSP1CON2bits.ACKSTAT == 1);
  5313                           
  5314  04AB  0024               	movlb	4	; select bank4
  5315  04AC  1B16               	btfsc	22,6	;volatile
  5316  04AD  2CAB               	goto	l529
  5317                           
  5318                           ;RTC.c: 81: re_startI2C();
  5319  04AE  3186  2699  3184   	fcall	_re_startI2C
  5320                           
  5321                           ;RTC.c: 82: sendI2C(0b11011111);
  5322  04B1  30DF               	movlw	223
  5323  04B2  3186  2678  3184   	fcall	_sendI2C
  5324  04B5                     l532:	
  5325                           ;RTC.c: 83: while (SSP1CON2bits.ACKSTAT == 1);
  5326                           
  5327  04B5  0024               	movlb	4	; select bank4
  5328  04B6  1B16               	btfsc	22,6	;volatile
  5329  04B7  2CB5               	goto	l532
  5330                           
  5331                           ;RTC.c: 84: minute = readI2C();
  5332  04B8  3186  2627  3184   	fcall	_readI2C
  5333  04BB  00F3               	movwf	??_readMin
  5334  04BC  0873               	movf	??_readMin,w
  5335  04BD  00F4               	movwf	readMin@minute
  5336                           
  5337                           ;RTC.c: 85: sendNoAckI2C();
  5338  04BE  3186  26C9  3184   	fcall	_sendNoAckI2C
  5339                           
  5340                           ;RTC.c: 86: stopI2C();
  5341  04C1  3186  26A1         	fcall	_stopI2C
  5342                           
  5343                           ;RTC.c: 87: return minute;
  5344  04C3  0874               	movf	readMin@minute,w
  5345  04C4  0008               	return
  5346  04C5                     __end_of_readMin:	
  5347                           
  5348                           	psect	text11
  5349  050F                     __ptext11:	
  5350 ;; *************** function _changeMin *****************
  5351 ;; Defined at:
  5352 ;;		line 34 in file "RTC.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  minute          1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  minute          1    2[COMMON] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5366 ;;      Params:         0       0       0       0       0       0       0
  5367 ;;      Locals:         1       0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0
  5369 ;;      Totals:         1       0       0       0       0       0       0
  5370 ;;Total ram usage:        1 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    5
  5373 ;; This function calls:
  5374 ;;		_sendI2C
  5375 ;;		_startI2C
  5376 ;;		_stopI2C
  5377 ;; This function is called by:
  5378 ;;		_incrMin
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function _changeMin
  5384  050F                     _changeMin:	
  5385                           
  5386                           ;incstack = 0
  5387                           ; Regs used in _changeMin: [wreg+status,2+status,0+pclath+cstack]
  5388                           ;changeMin@minute stored from wreg
  5389  050F  00F2               	movwf	changeMin@minute
  5390                           
  5391                           ;RTC.c: 36: startI2C();
  5392  0510  3186  2690  3185   	fcall	_startI2C
  5393                           
  5394                           ;RTC.c: 37: sendI2C(0b11011110);
  5395  0513  30DE               	movlw	222
  5396  0514  3186  2678  3185   	fcall	_sendI2C
  5397  0517                     l490:	
  5398                           ;RTC.c: 38: while (SSP1CON2bits.ACKSTAT == 1);
  5399                           
  5400  0517  0024               	movlb	4	; select bank4
  5401  0518  1B16               	btfsc	22,6	;volatile
  5402  0519  2D17               	goto	l490
  5403                           
  5404                           ;RTC.c: 39: sendI2C(0x01);
  5405  051A  3001               	movlw	1
  5406  051B  3186  2678  3185   	fcall	_sendI2C
  5407  051E                     l493:	
  5408                           ;RTC.c: 40: while (SSP1CON2bits.ACKSTAT == 1);
  5409                           
  5410  051E  0024               	movlb	4	; select bank4
  5411  051F  1B16               	btfsc	22,6	;volatile
  5412  0520  2D1E               	goto	l493
  5413                           
  5414                           ;RTC.c: 41: sendI2C(minute);
  5415  0521  0872               	movf	changeMin@minute,w
  5416  0522  3186  2678  3185   	fcall	_sendI2C
  5417  0525                     l496:	
  5418                           ;RTC.c: 42: while (SSP1CON2bits.ACKSTAT == 1);
  5419                           
  5420  0525  0024               	movlb	4	; select bank4
  5421  0526  1B16               	btfsc	22,6	;volatile
  5422  0527  2D25               	goto	l496
  5423                           
  5424                           ;RTC.c: 43: stopI2C();
  5425  0528  3186  26A1         	fcall	_stopI2C
  5426  052A  0008               	return
  5427  052B                     __end_of_changeMin:	
  5428                           
  5429                           	psect	text12
  5430  02B3                     __ptext12:	
  5431 ;; *************** function _incrHeure *****************
  5432 ;; Defined at:
  5433 ;;		line 134 in file "RTC.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  heure           1    2[BANK0 ] unsigned char 
  5438 ;;  uniteH          1    1[BANK0 ] unsigned char 
  5439 ;;  dizaineH        1    0[BANK0 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0, pclath, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5449 ;;      Params:         0       0       0       0       0       0       0
  5450 ;;      Locals:         0       3       0       0       0       0       0
  5451 ;;      Temps:          3       0       0       0       0       0       0
  5452 ;;      Totals:         3       3       0       0       0       0       0
  5453 ;;Total ram usage:        6 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    6
  5456 ;; This function calls:
  5457 ;;		_bitExtracted
  5458 ;;		_changeHeure
  5459 ;;		_readHr
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           
  5466                           ;psect for function _incrHeure
  5467  02B3                     _incrHeure:	
  5468                           
  5469                           ;RTC.c: 136: uint8_t heure=0;
  5470                           
  5471                           ;incstack = 0
  5472                           ; Regs used in _incrHeure: [wreg+status,2+status,0+pclath+cstack]
  5473  02B3  0020               	movlb	0	; select bank0
  5474  02B4  01A2               	clrf	incrHeure@heure
  5475                           
  5476                           ;RTC.c: 137: uint8_t dizaineH=0;
  5477  02B5  01A0               	clrf	incrHeure@dizaineH
  5478                           
  5479                           ;RTC.c: 138: uint8_t uniteH=0;
  5480  02B6  01A1               	clrf	incrHeure@uniteH
  5481                           
  5482                           ;RTC.c: 139: heure = readHr();
  5483  02B7  3184  24C5  3182   	fcall	_readHr
  5484  02BA  00F6               	movwf	??_incrHeure
  5485  02BB  0876               	movf	??_incrHeure,w
  5486  02BC  0020               	movlb	0	; select bank0
  5487  02BD  00A2               	movwf	incrHeure@heure
  5488                           
  5489                           ;RTC.c: 140: uniteH = bitExtracted(heure, 4, 1);
  5490  02BE  3004               	movlw	4
  5491  02BF  00F6               	movwf	??_incrHeure
  5492  02C0  0876               	movf	??_incrHeure,w
  5493  02C1  00F1               	movwf	bitExtracted@k
  5494  02C2  01F2               	clrf	bitExtracted@p
  5495  02C3  0AF2               	incf	bitExtracted@p,f
  5496  02C4  0822               	movf	incrHeure@heure,w
  5497  02C5  3185  25DD  3182   	fcall	_bitExtracted
  5498  02C8  00F7               	movwf	??_incrHeure+1
  5499  02C9  0877               	movf	??_incrHeure+1,w
  5500  02CA  0020               	movlb	0	; select bank0
  5501  02CB  00A1               	movwf	incrHeure@uniteH
  5502                           
  5503                           ;RTC.c: 141: dizaineH = bitExtracted(heure, 2, 5);
  5504  02CC  3002               	movlw	2
  5505  02CD  00F6               	movwf	??_incrHeure
  5506  02CE  0876               	movf	??_incrHeure,w
  5507  02CF  00F1               	movwf	bitExtracted@k
  5508  02D0  3005               	movlw	5
  5509  02D1  00F7               	movwf	??_incrHeure+1
  5510  02D2  0877               	movf	??_incrHeure+1,w
  5511  02D3  00F2               	movwf	bitExtracted@p
  5512  02D4  0822               	movf	incrHeure@heure,w
  5513  02D5  3185  25DD  3182   	fcall	_bitExtracted
  5514  02D8  00F8               	movwf	??_incrHeure+2
  5515  02D9  0878               	movf	??_incrHeure+2,w
  5516  02DA  0020               	movlb	0	; select bank0
  5517  02DB  00A0               	movwf	incrHeure@dizaineH
  5518                           
  5519                           ;RTC.c: 142: heure=0;
  5520  02DC  01A2               	clrf	incrHeure@heure
  5521                           
  5522                           ;RTC.c: 143: uniteH=uniteH+1;
  5523  02DD  0821               	movf	incrHeure@uniteH,w
  5524  02DE  3E01               	addlw	1
  5525  02DF  00F6               	movwf	??_incrHeure
  5526  02E0  0876               	movf	??_incrHeure,w
  5527  02E1  00A1               	movwf	incrHeure@uniteH
  5528                           
  5529                           ;RTC.c: 144: if(uniteH>9)
  5530  02E2  300A               	movlw	10
  5531  02E3  0221               	subwf	incrHeure@uniteH,w
  5532  02E4  1C03               	skipc
  5533  02E5  2AEC               	goto	l2591
  5534                           
  5535                           ;RTC.c: 145: {
  5536                           ;RTC.c: 146: uniteH=0;
  5537  02E6  01A1               	clrf	incrHeure@uniteH
  5538                           
  5539                           ;RTC.c: 147: dizaineH=dizaineH+1;
  5540  02E7  0820               	movf	incrHeure@dizaineH,w
  5541  02E8  3E01               	addlw	1
  5542  02E9  00F6               	movwf	??_incrHeure
  5543  02EA  0876               	movf	??_incrHeure,w
  5544  02EB  00A0               	movwf	incrHeure@dizaineH
  5545  02EC                     l2591:	
  5546                           
  5547                           ;RTC.c: 148: }
  5548                           ;RTC.c: 149: if(dizaineH>2 && uniteH==4)
  5549  02EC  3003               	movlw	3
  5550  02ED  0220               	subwf	incrHeure@dizaineH,w
  5551  02EE  1C03               	skipc
  5552  02EF  2AFA               	goto	l2599
  5553  02F0  3004               	movlw	4
  5554  02F1  0621               	xorwf	incrHeure@uniteH,w
  5555  02F2  1D03               	btfss	3,2
  5556  02F3  2AFA               	goto	l2599
  5557                           
  5558                           ;RTC.c: 150: {
  5559                           ;RTC.c: 151: dizaineH=0;
  5560  02F4  01A0               	clrf	incrHeure@dizaineH
  5561                           
  5562                           ;RTC.c: 152: uniteH=uniteH+1;
  5563  02F5  0821               	movf	incrHeure@uniteH,w
  5564  02F6  3E01               	addlw	1
  5565  02F7  00F6               	movwf	??_incrHeure
  5566  02F8  0876               	movf	??_incrHeure,w
  5567  02F9  00A1               	movwf	incrHeure@uniteH
  5568  02FA                     l2599:	
  5569                           
  5570                           ;RTC.c: 153: }
  5571                           ;RTC.c: 154: heure=heure+dizaineH;
  5572  02FA  0822               	movf	incrHeure@heure,w
  5573  02FB  0720               	addwf	incrHeure@dizaineH,w
  5574  02FC  00F6               	movwf	??_incrHeure
  5575  02FD  0876               	movf	??_incrHeure,w
  5576  02FE  00A2               	movwf	incrHeure@heure
  5577                           
  5578                           ;RTC.c: 155: heure=heure<<4;
  5579  02FF  0822               	movf	incrHeure@heure,w
  5580  0300  00F6               	movwf	??_incrHeure
  5581  0301  3003               	movlw	3
  5582  0302                     u2025:	
  5583  0302  35F6               	lslf	??_incrHeure,f
  5584  0303  3EFF               	addlw	-1
  5585  0304  1D03               	skipz
  5586  0305  2B02               	goto	u2025
  5587  0306  3576               	lslf	??_incrHeure,w
  5588  0307  00F7               	movwf	??_incrHeure+1
  5589  0308  0877               	movf	??_incrHeure+1,w
  5590  0309  00A2               	movwf	incrHeure@heure
  5591                           
  5592                           ;RTC.c: 156: heure=heure+uniteH;
  5593  030A  0822               	movf	incrHeure@heure,w
  5594  030B  0721               	addwf	incrHeure@uniteH,w
  5595  030C  00F6               	movwf	??_incrHeure
  5596  030D  0876               	movf	??_incrHeure,w
  5597  030E  00A2               	movwf	incrHeure@heure
  5598                           
  5599                           ;RTC.c: 157: changeHeure(heure);
  5600  030F  0822               	movf	incrHeure@heure,w
  5601  0310  3185  252B         	fcall	_changeHeure
  5602  0312  0008               	return
  5603  0313                     __end_of_incrHeure:	
  5604                           
  5605                           	psect	text13
  5606  04C5                     __ptext13:	
  5607 ;; *************** function _readHr *****************
  5608 ;; Defined at:
  5609 ;;		line 90 in file "RTC.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  heure           1    4[COMMON] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      unsigned char 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0, pclath, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5623 ;;      Params:         0       0       0       0       0       0       0
  5624 ;;      Locals:         1       0       0       0       0       0       0
  5625 ;;      Temps:          1       0       0       0       0       0       0
  5626 ;;      Totals:         2       0       0       0       0       0       0
  5627 ;;Total ram usage:        2 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    5
  5630 ;; This function calls:
  5631 ;;		_re_startI2C
  5632 ;;		_readI2C
  5633 ;;		_sendI2C
  5634 ;;		_sendNoAckI2C
  5635 ;;		_startI2C
  5636 ;;		_stopI2C
  5637 ;; This function is called by:
  5638 ;;		_main
  5639 ;;		_printReglageH
  5640 ;;		_incrHeure
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function _readHr
  5646  04C5                     _readHr:	
  5647                           
  5648                           ;RTC.c: 91: uint8_t heure = 0;
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _readHr: [wreg+status,2+status,0+pclath+cstack]
  5652  04C5  01F4               	clrf	readHr@heure
  5653                           
  5654                           ;RTC.c: 92: startI2C();
  5655  04C6  3186  2690  3184   	fcall	_startI2C
  5656                           
  5657                           ;RTC.c: 93: sendI2C(0b11011110);
  5658  04C9  30DE               	movlw	222
  5659  04CA  3186  2678  3184   	fcall	_sendI2C
  5660  04CD                     l538:	
  5661                           ;RTC.c: 94: while (SSP1CON2bits.ACKSTAT == 1);
  5662                           
  5663  04CD  0024               	movlb	4	; select bank4
  5664  04CE  1B16               	btfsc	22,6	;volatile
  5665  04CF  2CCD               	goto	l538
  5666                           
  5667                           ;RTC.c: 95: sendI2C(0x02);
  5668  04D0  3002               	movlw	2
  5669  04D1  3186  2678  3184   	fcall	_sendI2C
  5670  04D4                     l541:	
  5671                           ;RTC.c: 96: while (SSP1CON2bits.ACKSTAT == 1);
  5672                           
  5673  04D4  0024               	movlb	4	; select bank4
  5674  04D5  1B16               	btfsc	22,6	;volatile
  5675  04D6  2CD4               	goto	l541
  5676                           
  5677                           ;RTC.c: 97: re_startI2C();
  5678  04D7  3186  2699  3184   	fcall	_re_startI2C
  5679                           
  5680                           ;RTC.c: 98: sendI2C(0b11011111);
  5681  04DA  30DF               	movlw	223
  5682  04DB  3186  2678  3184   	fcall	_sendI2C
  5683  04DE                     l544:	
  5684                           ;RTC.c: 99: while (SSP1CON2bits.ACKSTAT == 1);
  5685                           
  5686  04DE  0024               	movlb	4	; select bank4
  5687  04DF  1B16               	btfsc	22,6	;volatile
  5688  04E0  2CDE               	goto	l544
  5689                           
  5690                           ;RTC.c: 100: heure = readI2C();
  5691  04E1  3186  2627  3184   	fcall	_readI2C
  5692  04E4  00F3               	movwf	??_readHr
  5693  04E5  0873               	movf	??_readHr,w
  5694  04E6  00F4               	movwf	readHr@heure
  5695                           
  5696                           ;RTC.c: 101: sendNoAckI2C();
  5697  04E7  3186  26C9  3184   	fcall	_sendNoAckI2C
  5698                           
  5699                           ;RTC.c: 102: stopI2C();
  5700  04EA  3186  26A1         	fcall	_stopI2C
  5701                           
  5702                           ;RTC.c: 103: return heure;
  5703  04EC  0874               	movf	readHr@heure,w
  5704  04ED  0008               	return
  5705  04EE                     __end_of_readHr:	
  5706                           
  5707                           	psect	text14
  5708  06C9                     __ptext14:	
  5709 ;; *************** function _sendNoAckI2C *****************
  5710 ;; Defined at:
  5711 ;;		line 88 in file "i2c.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0, pclath, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5725 ;;      Params:         0       0       0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0
  5728 ;;      Totals:         0       0       0       0       0       0       0
  5729 ;;Total ram usage:        0 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    4
  5732 ;; This function calls:
  5733 ;;		_waitI2C
  5734 ;; This function is called by:
  5735 ;;		_readSec
  5736 ;;		_readMin
  5737 ;;		_readHr
  5738 ;;		_readData
  5739 ;;		_getData
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function _sendNoAckI2C
  5745  06C9                     _sendNoAckI2C:	
  5746                           
  5747                           ;i2c.c: 90: waitI2C();
  5748                           
  5749                           ;incstack = 0
  5750                           ; Regs used in _sendNoAckI2C: [wreg+status,2+status,0+pclath+cstack]
  5751  06C9  3186  26A9         	fcall	_waitI2C
  5752                           
  5753                           ;i2c.c: 91: SSP1CON2bits.ACKDT = 1;
  5754  06CB  0024               	movlb	4	; select bank4
  5755  06CC  1696               	bsf	22,5	;volatile
  5756                           
  5757                           ;i2c.c: 92: SSP1CON2bits.ACKEN = 1;
  5758  06CD  1616               	bsf	22,4	;volatile
  5759  06CE  0008               	return
  5760  06CF                     __end_of_sendNoAckI2C:	
  5761                           
  5762                           	psect	text15
  5763  0627                     __ptext15:	
  5764 ;; *************** function _readI2C *****************
  5765 ;; Defined at:
  5766 ;;		line 64 in file "i2c.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  temp            1    2[COMMON] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      unsigned char 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5780 ;;      Params:         0       0       0       0       0       0       0
  5781 ;;      Locals:         1       0       0       0       0       0       0
  5782 ;;      Temps:          1       0       0       0       0       0       0
  5783 ;;      Totals:         2       0       0       0       0       0       0
  5784 ;;Total ram usage:        2 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    4
  5787 ;; This function calls:
  5788 ;;		_waitI2C
  5789 ;; This function is called by:
  5790 ;;		_readSec
  5791 ;;		_readMin
  5792 ;;		_readHr
  5793 ;;		_readData
  5794 ;;		_getData
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _readI2C
  5800  0627                     _readI2C:	
  5801                           
  5802                           ;i2c.c: 66: uint8_t temp;
  5803                           ;i2c.c: 67: waitI2C();
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _readI2C: [wreg+status,2+status,0+pclath+cstack]
  5807  0627  3186  26A9  3186   	fcall	_waitI2C
  5808                           
  5809                           ;i2c.c: 68: SSP1CON2bits.RCEN = 1;
  5810  062A  0024               	movlb	4	; select bank4
  5811  062B  1596               	bsf	22,3	;volatile
  5812                           
  5813                           ;i2c.c: 69: waitI2C();
  5814  062C  3186  26A9  3186   	fcall	_waitI2C
  5815  062F                     l360:	
  5816                           ;i2c.c: 70: while(SSP1CON2bits.RCEN == 1);
  5817                           
  5818  062F  0024               	movlb	4	; select bank4
  5819  0630  1996               	btfsc	22,3	;volatile
  5820  0631  2E2F               	goto	l360
  5821                           
  5822                           ;i2c.c: 71: temp = SSP1BUF;
  5823  0632  0811               	movf	17,w	;volatile
  5824  0633  00F1               	movwf	??_readI2C
  5825  0634  0871               	movf	??_readI2C,w
  5826  0635  00F2               	movwf	readI2C@temp
  5827                           
  5828                           ;i2c.c: 73: return temp;
  5829  0636  0872               	movf	readI2C@temp,w
  5830  0637  0008               	return
  5831  0638                     __end_of_readI2C:	
  5832                           
  5833                           	psect	text16
  5834  0699                     __ptext16:	
  5835 ;; *************** function _re_startI2C *****************
  5836 ;; Defined at:
  5837 ;;		line 75 in file "i2c.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0, pclath, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5851 ;;      Params:         0       0       0       0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0
  5854 ;;      Totals:         0       0       0       0       0       0       0
  5855 ;;Total ram usage:        0 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    4
  5858 ;; This function calls:
  5859 ;;		_waitI2C
  5860 ;; This function is called by:
  5861 ;;		_readSec
  5862 ;;		_readMin
  5863 ;;		_readHr
  5864 ;;		_readData
  5865 ;;		_getData
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           
  5870                           ;psect for function _re_startI2C
  5871  0699                     _re_startI2C:	
  5872                           
  5873                           ;i2c.c: 77: waitI2C();
  5874                           
  5875                           ;incstack = 0
  5876                           ; Regs used in _re_startI2C: [wreg+status,2+status,0+pclath+cstack]
  5877  0699  3186  26A9  3186   	fcall	_waitI2C
  5878                           
  5879                           ;i2c.c: 78: SSP1CON2bits.RSEN = 1;
  5880  069C  0024               	movlb	4	; select bank4
  5881  069D  1496               	bsf	22,1	;volatile
  5882  069E                     l366:	
  5883                           ;i2c.c: 79: while(SSP1CON2bits.RSEN == 1);
  5884                           
  5885  069E  1C96               	btfss	22,1	;volatile
  5886  069F  0008               	return
  5887  06A0  2E9E               	goto	l366
  5888  06A1                     __end_of_re_startI2C:	
  5889                           
  5890                           	psect	text17
  5891  052B                     __ptext17:	
  5892 ;; *************** function _changeHeure *****************
  5893 ;; Defined at:
  5894 ;;		line 46 in file "RTC.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  heure           1    wreg     unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  heure           1    2[COMMON] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5908 ;;      Params:         0       0       0       0       0       0       0
  5909 ;;      Locals:         1       0       0       0       0       0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0
  5911 ;;      Totals:         1       0       0       0       0       0       0
  5912 ;;Total ram usage:        1 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    5
  5915 ;; This function calls:
  5916 ;;		_sendI2C
  5917 ;;		_startI2C
  5918 ;;		_stopI2C
  5919 ;; This function is called by:
  5920 ;;		_incrHeure
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _changeHeure
  5926  052B                     _changeHeure:	
  5927                           
  5928                           ;incstack = 0
  5929                           ; Regs used in _changeHeure: [wreg+status,2+status,0+pclath+cstack]
  5930                           ;changeHeure@heure stored from wreg
  5931  052B  00F2               	movwf	changeHeure@heure
  5932                           
  5933                           ;RTC.c: 48: startI2C();
  5934  052C  3186  2690  3185   	fcall	_startI2C
  5935                           
  5936                           ;RTC.c: 49: sendI2C(0b11011110);
  5937  052F  30DE               	movlw	222
  5938  0530  3186  2678  3185   	fcall	_sendI2C
  5939  0533                     l502:	
  5940                           ;RTC.c: 50: while (SSP1CON2bits.ACKSTAT == 1);
  5941                           
  5942  0533  0024               	movlb	4	; select bank4
  5943  0534  1B16               	btfsc	22,6	;volatile
  5944  0535  2D33               	goto	l502
  5945                           
  5946                           ;RTC.c: 51: sendI2C(0x02);
  5947  0536  3002               	movlw	2
  5948  0537  3186  2678  3185   	fcall	_sendI2C
  5949  053A                     l505:	
  5950                           ;RTC.c: 52: while (SSP1CON2bits.ACKSTAT == 1);
  5951                           
  5952  053A  0024               	movlb	4	; select bank4
  5953  053B  1B16               	btfsc	22,6	;volatile
  5954  053C  2D3A               	goto	l505
  5955                           
  5956                           ;RTC.c: 53: sendI2C(heure);
  5957  053D  0872               	movf	changeHeure@heure,w
  5958  053E  3186  2678  3185   	fcall	_sendI2C
  5959  0541                     l508:	
  5960                           ;RTC.c: 54: while (SSP1CON2bits.ACKSTAT == 1);
  5961                           
  5962  0541  0024               	movlb	4	; select bank4
  5963  0542  1B16               	btfsc	22,6	;volatile
  5964  0543  2D41               	goto	l508
  5965                           
  5966                           ;RTC.c: 55: stopI2C();
  5967  0544  3186  26A1         	fcall	_stopI2C
  5968  0546  0008               	return
  5969  0547                     __end_of_changeHeure:	
  5970                           
  5971                           	psect	text18
  5972  06A1                     __ptext18:	
  5973 ;; *************** function _stopI2C *****************
  5974 ;; Defined at:
  5975 ;;		line 50 in file "i2c.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;		None
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0, pclath, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5989 ;;      Params:         0       0       0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0
  5992 ;;      Totals:         0       0       0       0       0       0       0
  5993 ;;Total ram usage:        0 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    4
  5996 ;; This function calls:
  5997 ;;		_waitI2C
  5998 ;; This function is called by:
  5999 ;;		_writeInst
  6000 ;;		_writeLCD
  6001 ;;		_initRTC
  6002 ;;		_changeMin
  6003 ;;		_changeHeure
  6004 ;;		_readSec
  6005 ;;		_readMin
  6006 ;;		_readHr
  6007 ;;		_writeData
  6008 ;;		_readData
  6009 ;;		_getData
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _stopI2C
  6015  06A1                     _stopI2C:	
  6016                           
  6017                           ;i2c.c: 52: waitI2C();
  6018                           
  6019                           ;incstack = 0
  6020                           ; Regs used in _stopI2C: [wreg+status,2+status,0+pclath+cstack]
  6021  06A1  3186  26A9  3186   	fcall	_waitI2C
  6022                           
  6023                           ;i2c.c: 53: SSP1CON2bits.PEN = 1;
  6024  06A4  0024               	movlb	4	; select bank4
  6025  06A5  1516               	bsf	22,2	;volatile
  6026  06A6                     l348:	
  6027                           ;i2c.c: 54: while(SSP1CON2bits.PEN == 1);
  6028                           
  6029  06A6  1D16               	btfss	22,2	;volatile
  6030  06A7  0008               	return
  6031  06A8  2EA6               	goto	l348
  6032  06A9                     __end_of_stopI2C:	
  6033                           
  6034                           	psect	text19
  6035  0690                     __ptext19:	
  6036 ;; *************** function _startI2C *****************
  6037 ;; Defined at:
  6038 ;;		line 40 in file "i2c.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6052 ;;      Params:         0       0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    4
  6059 ;; This function calls:
  6060 ;;		_waitI2C
  6061 ;; This function is called by:
  6062 ;;		_writeInst
  6063 ;;		_writeLCD
  6064 ;;		_initRTC
  6065 ;;		_changeMin
  6066 ;;		_changeHeure
  6067 ;;		_readSec
  6068 ;;		_readMin
  6069 ;;		_readHr
  6070 ;;		_writeData
  6071 ;;		_readData
  6072 ;;		_getData
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function _startI2C
  6078  0690                     _startI2C:	
  6079                           
  6080                           ;i2c.c: 42: waitI2C();
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in _startI2C: [wreg+status,2+status,0+pclath+cstack]
  6084  0690  3186  26A9  3186   	fcall	_waitI2C
  6085                           
  6086                           ;i2c.c: 43: SSP1CON2=0b00000001;
  6087  0693  3001               	movlw	1
  6088  0694  0024               	movlb	4	; select bank4
  6089  0695  0096               	movwf	22	;volatile
  6090  0696                     l336:	
  6091                           ;i2c.c: 44: while(SSP1CON2bits.SEN == 1);
  6092                           
  6093  0696  1C16               	btfss	22,0	;volatile
  6094  0697  0008               	return
  6095  0698  2E96               	goto	l336
  6096  0699                     __end_of_startI2C:	
  6097                           
  6098                           	psect	text20
  6099  0678                     __ptext20:	
  6100 ;; *************** function _sendI2C *****************
  6101 ;; Defined at:
  6102 ;;		line 56 in file "i2c.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  data            1    wreg     unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  data            1    1[COMMON] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6116 ;;      Params:         0       0       0       0       0       0       0
  6117 ;;      Locals:         1       0       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0
  6119 ;;      Totals:         1       0       0       0       0       0       0
  6120 ;;Total ram usage:        1 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    4
  6123 ;; This function calls:
  6124 ;;		_waitI2C
  6125 ;; This function is called by:
  6126 ;;		_writeInst
  6127 ;;		_writeLCD
  6128 ;;		_initRTC
  6129 ;;		_changeMin
  6130 ;;		_changeHeure
  6131 ;;		_readSec
  6132 ;;		_readMin
  6133 ;;		_readHr
  6134 ;;		_writeData
  6135 ;;		_readData
  6136 ;;		_getData
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function _sendI2C
  6142  0678                     _sendI2C:	
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in _sendI2C: [wreg+status,2+status,0+pclath+cstack]
  6146                           ;sendI2C@data stored from wreg
  6147  0678  00F1               	movwf	sendI2C@data
  6148                           
  6149                           ;i2c.c: 58: waitI2C();
  6150  0679  3186  26A9  3186   	fcall	_waitI2C
  6151                           
  6152                           ;i2c.c: 59: SSP1BUF = data;
  6153  067C  0871               	movf	sendI2C@data,w
  6154  067D  0024               	movlb	4	; select bank4
  6155  067E  0091               	movwf	17	;volatile
  6156                           
  6157                           ;i2c.c: 60: PIR1bits.SSP1IF = 0;
  6158  067F  0020               	movlb	0	; select bank0
  6159  0680  1191               	bcf	17,3	;volatile
  6160  0681                     l354:	
  6161                           ;i2c.c: 61: while(PIR1bits.SSP1IF == 0);
  6162                           
  6163  0681  1991               	btfsc	17,3	;volatile
  6164  0682  0008               	return
  6165  0683  2E81               	goto	l354
  6166  0684                     __end_of_sendI2C:	
  6167                           
  6168                           	psect	text21
  6169  06A9                     __ptext21:	
  6170 ;; *************** function _waitI2C *****************
  6171 ;; Defined at:
  6172 ;;		line 46 in file "i2c.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6186 ;;      Params:         0       0       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    3
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_startI2C
  6197 ;;		_stopI2C
  6198 ;;		_sendI2C
  6199 ;;		_readI2C
  6200 ;;		_re_startI2C
  6201 ;;		_sendNoAckI2C
  6202 ;;		_sendAckI2C
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           
  6207                           ;psect for function _waitI2C
  6208  06A9                     _waitI2C:	
  6209  06A9                     l342:	
  6210                           ;i2c.c: 48: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in _waitI2C: [wreg+status,2]
  6214                           
  6215  06A9  0024               	movlb	4	; select bank4
  6216  06AA  1914               	btfsc	20,2	;volatile
  6217  06AB  2EA9               	goto	l342
  6218  06AC  0816               	movf	22,w	;volatile
  6219  06AD  391F               	andlw	31
  6220  06AE  1903               	btfsc	3,2
  6221  06AF  0008               	return
  6222  06B0  2EA9               	goto	l342
  6223  06B1                     __end_of_waitI2C:	
  6224                           
  6225                           	psect	text22
  6226  05DD                     __ptext22:	
  6227 ;; *************** function _bitExtracted *****************
  6228 ;; Defined at:
  6229 ;;		line 4 in file "conversion.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  number          1    wreg     unsigned char 
  6232 ;;  k               1    1[COMMON] unsigned char 
  6233 ;;  p               1    2[COMMON] unsigned char 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  number          1    5[COMMON] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      unsigned char 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6245 ;;      Params:         2       0       0       0       0       0       0
  6246 ;;      Locals:         1       0       0       0       0       0       0
  6247 ;;      Temps:          2       0       0       0       0       0       0
  6248 ;;      Totals:         5       0       0       0       0       0       0
  6249 ;;Total ram usage:        5 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    3
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_main
  6256 ;;		_printReglageH
  6257 ;;		_incrMin
  6258 ;;		_incrHeure
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           
  6263                           ;psect for function _bitExtracted
  6264  05DD                     _bitExtracted:	
  6265                           
  6266                           ;incstack = 0
  6267                           ; Regs used in _bitExtracted: [wreg+status,2+status,0]
  6268                           ;bitExtracted@number stored from wreg
  6269  05DD  00F5               	movwf	bitExtracted@number
  6270                           
  6271                           ;conversion.c: 5: return (((1 << k) - 1) & (number >> (p - 1)));
  6272  05DE  0875               	movf	bitExtracted@number,w
  6273  05DF  00F3               	movwf	??_bitExtracted
  6274  05E0  0872               	movf	bitExtracted@p,w
  6275  05E1  3EFF               	addlw	-1
  6276  05E2  0A89               	incf	9,f
  6277  05E3  2DE5               	goto	u1724
  6278  05E4                     u1725:	
  6279  05E4  36F3               	lsrf	??_bitExtracted,f
  6280  05E5                     u1724:	
  6281  05E5  0B89               	decfsz	9,f
  6282  05E6  2DE4               	goto	u1725
  6283  05E7  3001               	movlw	1
  6284  05E8  00F4               	movwf	??_bitExtracted+1
  6285  05E9  0A71               	incf	bitExtracted@k,w
  6286  05EA  2DEC               	goto	u1734
  6287  05EB                     u1735:	
  6288  05EB  35F4               	lslf	??_bitExtracted+1,f
  6289  05EC                     u1734:	
  6290  05EC  0B89               	decfsz	9,f
  6291  05ED  2DEB               	goto	u1735
  6292  05EE  0874               	movf	??_bitExtracted+1,w
  6293  05EF  3EFF               	addlw	255
  6294  05F0  0573               	andwf	??_bitExtracted,w
  6295  05F1  0008               	return
  6296  05F2                     __end_of_bitExtracted:	
  6297                           
  6298                           	psect	text23
  6299  0547                     __ptext23:	
  6300 ;; *************** function _convertFromBcd *****************
  6301 ;; Defined at:
  6302 ;;		line 8 in file "conversion.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  byteBCD         1    wreg     unsigned char 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  byteBCD         1    9[COMMON] unsigned char 
  6307 ;;  byteLSB         1    8[COMMON] unsigned char 
  6308 ;;  byteMSB         1    7[COMMON] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      unsigned char 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0, pclath, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6318 ;;      Params:         0       0       0       0       0       0       0
  6319 ;;      Locals:         3       0       0       0       0       0       0
  6320 ;;      Temps:          2       0       0       0       0       0       0
  6321 ;;      Totals:         5       0       0       0       0       0       0
  6322 ;;Total ram usage:        5 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    4
  6325 ;; This function calls:
  6326 ;;		___bmul
  6327 ;; This function is called by:
  6328 ;;		_main
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function _convertFromBcd
  6334  0547                     _convertFromBcd:	
  6335                           
  6336                           ;incstack = 0
  6337                           ; Regs used in _convertFromBcd: [wreg+status,2+status,0+pclath+cstack]
  6338                           ;convertFromBcd@byteBCD stored from wreg
  6339  0547  00F9               	movwf	convertFromBcd@byteBCD
  6340                           
  6341                           ;conversion.c: 9: uint8_t byteMSB = 0;
  6342  0548  01F7               	clrf	convertFromBcd@byteMSB
  6343                           
  6344                           ;conversion.c: 10: uint8_t byteLSB = 0;
  6345  0549  01F8               	clrf	convertFromBcd@byteLSB
  6346                           
  6347                           ;conversion.c: 11: byteMSB = (byteBCD & 0b11110000) >> 4;
  6348  054A  0879               	movf	convertFromBcd@byteBCD,w
  6349  054B  00F5               	movwf	??_convertFromBcd
  6350  054C  3004               	movlw	4
  6351  054D                     u1245:	
  6352  054D  36F5               	lsrf	??_convertFromBcd,f
  6353  054E  0B89               	decfsz	9,f
  6354  054F  2D4D               	goto	u1245
  6355  0550  0875               	movf	??_convertFromBcd,w
  6356  0551  390F               	andlw	15
  6357  0552  00F6               	movwf	??_convertFromBcd+1
  6358  0553  0876               	movf	??_convertFromBcd+1,w
  6359  0554  00F7               	movwf	convertFromBcd@byteMSB
  6360                           
  6361                           ;conversion.c: 12: byteLSB = (byteBCD & 0b00001111);
  6362  0555  0879               	movf	convertFromBcd@byteBCD,w
  6363  0556  390F               	andlw	15
  6364  0557  00F5               	movwf	??_convertFromBcd
  6365  0558  0875               	movf	??_convertFromBcd,w
  6366  0559  00F8               	movwf	convertFromBcd@byteLSB
  6367                           
  6368                           ;conversion.c: 13: return ((byteMSB * 10) + byteLSB);
  6369  055A  300A               	movlw	10
  6370  055B  00F5               	movwf	??_convertFromBcd
  6371  055C  0875               	movf	??_convertFromBcd,w
  6372  055D  00F1               	movwf	___bmul@multiplicand
  6373  055E  0877               	movf	convertFromBcd@byteMSB,w
  6374  055F  3186  2638         	fcall	___bmul
  6375  0561  0778               	addwf	convertFromBcd@byteLSB,w
  6376  0562  0008               	return
  6377  0563                     __end_of_convertFromBcd:	
  6378                           
  6379                           	psect	text24
  6380  0638                     __ptext24:	
  6381 ;; *************** function ___bmul *****************
  6382 ;; Defined at:
  6383 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/Umul8.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  multiplier      1    wreg     unsigned char 
  6386 ;;  multiplicand    1    1[COMMON] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  multiplier      1    4[COMMON] unsigned char 
  6389 ;;  product         1    3[COMMON] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      unsigned char 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6399 ;;      Params:         1       0       0       0       0       0       0
  6400 ;;      Locals:         2       0       0       0       0       0       0
  6401 ;;      Temps:          1       0       0       0       0       0       0
  6402 ;;      Totals:         4       0       0       0       0       0       0
  6403 ;;Total ram usage:        4 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    3
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_convertFromBcd
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           
  6414                           ;psect for function ___bmul
  6415  0638                     ___bmul:	
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6419                           ;___bmul@multiplier stored from wreg
  6420  0638  00F4               	movwf	___bmul@multiplier
  6421  0639  01F3               	clrf	___bmul@product
  6422  063A                     l1905:	
  6423  063A  1C74               	btfss	___bmul@multiplier,0
  6424  063B  2E40               	goto	l1909
  6425  063C  0871               	movf	___bmul@multiplicand,w
  6426  063D  00F2               	movwf	??___bmul
  6427  063E  0872               	movf	??___bmul,w
  6428  063F  07F3               	addwf	___bmul@product,f
  6429  0640                     l1909:	
  6430  0640  1003               	clrc
  6431  0641  0DF1               	rlf	___bmul@multiplicand,f
  6432  0642  1003               	clrc
  6433  0643  0CF4               	rrf	___bmul@multiplier,f
  6434  0644  0874               	movf	___bmul@multiplier,w
  6435  0645  1D03               	btfss	3,2
  6436  0646  2E3A               	goto	l1905
  6437  0647  0873               	movf	___bmul@product,w
  6438  0648  0008               	return
  6439  0649                     __end_of___bmul:	
  6440                           
  6441                           	psect	text25
  6442  03BC                     __ptext25:	
  6443 ;; *************** function ___awdiv *****************
  6444 ;; Defined at:
  6445 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  divisor         2    1[COMMON] int 
  6448 ;;  dividend        2    3[COMMON] int 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  quotient        2    8[COMMON] int 
  6451 ;;  sign            1    7[COMMON] unsigned char 
  6452 ;;  counter         1    6[COMMON] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  2    1[COMMON] int 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6462 ;;      Params:         4       0       0       0       0       0       0
  6463 ;;      Locals:         4       0       0       0       0       0       0
  6464 ;;      Temps:          1       0       0       0       0       0       0
  6465 ;;      Totals:         9       0       0       0       0       0       0
  6466 ;;Total ram usage:        9 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    3
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_main
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function ___awdiv
  6478  03BC                     ___awdiv:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6482  03BC  01F7               	clrf	___awdiv@sign
  6483  03BD  1FF2               	btfss	___awdiv@divisor+1,7
  6484  03BE  2BC6               	goto	l2113
  6485  03BF  09F1               	comf	___awdiv@divisor,f
  6486  03C0  09F2               	comf	___awdiv@divisor+1,f
  6487  03C1  0AF1               	incf	___awdiv@divisor,f
  6488  03C2  1903               	skipnz
  6489  03C3  0AF2               	incf	___awdiv@divisor+1,f
  6490  03C4  01F7               	clrf	___awdiv@sign
  6491  03C5  0AF7               	incf	___awdiv@sign,f
  6492  03C6                     l2113:	
  6493  03C6  1FF4               	btfss	___awdiv@dividend+1,7
  6494  03C7  2BD1               	goto	l2119
  6495  03C8  09F3               	comf	___awdiv@dividend,f
  6496  03C9  09F4               	comf	___awdiv@dividend+1,f
  6497  03CA  0AF3               	incf	___awdiv@dividend,f
  6498  03CB  1903               	skipnz
  6499  03CC  0AF4               	incf	___awdiv@dividend+1,f
  6500  03CD  3001               	movlw	1
  6501  03CE  00F5               	movwf	??___awdiv
  6502  03CF  0875               	movf	??___awdiv,w
  6503  03D0  06F7               	xorwf	___awdiv@sign,f
  6504  03D1                     l2119:	
  6505  03D1  01F8               	clrf	___awdiv@quotient
  6506  03D2  01F9               	clrf	___awdiv@quotient+1
  6507  03D3  0871               	movf	___awdiv@divisor,w
  6508  03D4  0472               	iorwf	___awdiv@divisor+1,w
  6509  03D5  1903               	btfsc	3,2
  6510  03D6  2C00               	goto	l2141
  6511  03D7  01F6               	clrf	___awdiv@counter
  6512  03D8  0AF6               	incf	___awdiv@counter,f
  6513  03D9                     l2129:	
  6514  03D9  1BF2               	btfsc	___awdiv@divisor+1,7
  6515  03DA  2BE5               	goto	l2131
  6516  03DB  3001               	movlw	1
  6517  03DC                     u1355:	
  6518  03DC  35F1               	lslf	___awdiv@divisor,f
  6519  03DD  0DF2               	rlf	___awdiv@divisor+1,f
  6520  03DE  0B89               	decfsz	9,f
  6521  03DF  2BDC               	goto	u1355
  6522  03E0  3001               	movlw	1
  6523  03E1  00F5               	movwf	??___awdiv
  6524  03E2  0875               	movf	??___awdiv,w
  6525  03E3  07F6               	addwf	___awdiv@counter,f
  6526  03E4  2BD9               	goto	l2129
  6527  03E5                     l2131:	
  6528  03E5  3001               	movlw	1
  6529  03E6                     u1375:	
  6530  03E6  35F8               	lslf	___awdiv@quotient,f
  6531  03E7  0DF9               	rlf	___awdiv@quotient+1,f
  6532  03E8  0B89               	decfsz	9,f
  6533  03E9  2BE6               	goto	u1375
  6534  03EA  0872               	movf	___awdiv@divisor+1,w
  6535  03EB  0274               	subwf	___awdiv@dividend+1,w
  6536  03EC  1D03               	skipz
  6537  03ED  2BF0               	goto	u1385
  6538  03EE  0871               	movf	___awdiv@divisor,w
  6539  03EF  0273               	subwf	___awdiv@dividend,w
  6540  03F0                     u1385:	
  6541  03F0  1C03               	skipc
  6542  03F1  2BF7               	goto	l2137
  6543  03F2  0871               	movf	___awdiv@divisor,w
  6544  03F3  02F3               	subwf	___awdiv@dividend,f
  6545  03F4  0872               	movf	___awdiv@divisor+1,w
  6546  03F5  3BF4               	subwfb	___awdiv@dividend+1,f
  6547  03F6  1478               	bsf	___awdiv@quotient,0
  6548  03F7                     l2137:	
  6549  03F7  3001               	movlw	1
  6550  03F8                     u1395:	
  6551  03F8  36F2               	lsrf	___awdiv@divisor+1,f
  6552  03F9  0CF1               	rrf	___awdiv@divisor,f
  6553  03FA  0B89               	decfsz	9,f
  6554  03FB  2BF8               	goto	u1395
  6555  03FC  3001               	movlw	1
  6556  03FD  02F6               	subwf	___awdiv@counter,f
  6557  03FE  1D03               	btfss	3,2
  6558  03FF  2BE5               	goto	l2131
  6559  0400                     l2141:	
  6560  0400  0877               	movf	___awdiv@sign,w
  6561  0401  1903               	btfsc	3,2
  6562  0402  2C08               	goto	l2145
  6563  0403  09F8               	comf	___awdiv@quotient,f
  6564  0404  09F9               	comf	___awdiv@quotient+1,f
  6565  0405  0AF8               	incf	___awdiv@quotient,f
  6566  0406  1903               	skipnz
  6567  0407  0AF9               	incf	___awdiv@quotient+1,f
  6568  0408                     l2145:	
  6569  0408  0879               	movf	___awdiv@quotient+1,w
  6570  0409  00F2               	movwf	?___awdiv+1
  6571  040A  0878               	movf	___awdiv@quotient,w
  6572  040B  00F1               	movwf	?___awdiv
  6573  040C  0008               	return
  6574  040D                     __end_of___awdiv:	
  6575                           
  6576                           	psect	text26
  6577  05AF                     __ptext26:	
  6578 ;; *************** function _SYSTEM_Initialize *****************
  6579 ;; Defined at:
  6580 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, pclath, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6594 ;;      Params:         0       0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    5
  6601 ;; This function calls:
  6602 ;;		_OSCILLATOR_Initialize
  6603 ;;		_PIN_MANAGER_Initialize
  6604 ;;		_PWM1_Initialize
  6605 ;;		_PWM2_Initialize
  6606 ;;		_PWM3_Initialize
  6607 ;;		_TMR0_Initialize
  6608 ;;		_TMR2_Initialize
  6609 ;;		_WDT_Initialize
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           
  6616                           ;psect for function _SYSTEM_Initialize
  6617  05AF                     _SYSTEM_Initialize:	
  6618                           
  6619                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6620                           
  6621                           ;incstack = 0
  6622                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6623  05AF  3185  2563  3185   	fcall	_PIN_MANAGER_Initialize
  6624                           
  6625                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6626  05B2  3186  26D5  3185   	fcall	_OSCILLATOR_Initialize
  6627                           
  6628                           ;mcc.c: 55: WDT_Initialize();
  6629  05B5  3186  26DB  3185   	fcall	_WDT_Initialize
  6630                           
  6631                           ;mcc.c: 56: PWM1_Initialize();
  6632  05B8  3186  26C1  3185   	fcall	_PWM1_Initialize
  6633                           
  6634                           ;mcc.c: 57: PWM2_Initialize();
  6635  05BB  3186  26B9  3185   	fcall	_PWM2_Initialize
  6636                           
  6637                           ;mcc.c: 58: PWM3_Initialize();
  6638  05BE  3186  26B1  3185   	fcall	_PWM3_Initialize
  6639                           
  6640                           ;mcc.c: 59: TMR2_Initialize();
  6641  05C1  3186  2649  3185   	fcall	_TMR2_Initialize
  6642                           
  6643                           ;mcc.c: 60: TMR0_Initialize();
  6644  05C4  3186  266A         	fcall	_TMR0_Initialize
  6645  05C6  0008               	return
  6646  05C7                     __end_of_SYSTEM_Initialize:	
  6647                           
  6648                           	psect	text27
  6649  06DB                     __ptext27:	
  6650 ;; *************** function _WDT_Initialize *****************
  6651 ;; Defined at:
  6652 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6666 ;;      Params:         0       0       0       0       0       0       0
  6667 ;;      Locals:         0       0       0       0       0       0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0
  6669 ;;      Totals:         0       0       0       0       0       0       0
  6670 ;;Total ram usage:        0 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    3
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_SYSTEM_Initialize
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           
  6681                           ;psect for function _WDT_Initialize
  6682  06DB                     _WDT_Initialize:	
  6683                           
  6684                           ;mcc.c: 74: WDTCON = 0x16;
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in _WDT_Initialize: [wreg]
  6688  06DB  3016               	movlw	22
  6689  06DC  0021               	movlb	1	; select bank1
  6690  06DD  0097               	movwf	23	;volatile
  6691  06DE  0008               	return
  6692  06DF                     __end_of_WDT_Initialize:	
  6693                           
  6694                           	psect	text28
  6695  0649                     __ptext28:	
  6696 ;; *************** function _TMR2_Initialize *****************
  6697 ;; Defined at:
  6698 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0, pclath, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6712 ;;      Params:         0       0       0       0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0
  6715 ;;      Totals:         0       0       0       0       0       0       0
  6716 ;;Total ram usage:        0 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    4
  6719 ;; This function calls:
  6720 ;;		_TMR2_SetInterruptHandler
  6721 ;; This function is called by:
  6722 ;;		_SYSTEM_Initialize
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           
  6727                           ;psect for function _TMR2_Initialize
  6728  0649                     _TMR2_Initialize:	
  6729                           
  6730                           ;tmr2.c: 69: PR2 = 0xFF;
  6731                           
  6732                           ;incstack = 0
  6733                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6734  0649  30FF               	movlw	255
  6735  064A  0020               	movlb	0	; select bank0
  6736  064B  009B               	movwf	27	;volatile
  6737                           
  6738                           ;tmr2.c: 72: TMR2 = 0x00;
  6739  064C  019A               	clrf	26	;volatile
  6740                           
  6741                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  6742  064D  1091               	bcf	17,1	;volatile
  6743                           
  6744                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  6745  064E  0021               	movlb	1	; select bank1
  6746  064F  1491               	bsf	17,1	;volatile
  6747                           
  6748                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  6749  0650  30DF               	movlw	low _TMR2_DefaultInterruptHandler
  6750  0651  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  6751  0652  3006               	movlw	high _TMR2_DefaultInterruptHandler
  6752  0653  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  6753  0654  3186  26CF         	fcall	_TMR2_SetInterruptHandler
  6754                           
  6755                           ;tmr2.c: 84: T2CON = 0x04;
  6756  0656  3004               	movlw	4
  6757  0657  0020               	movlb	0	; select bank0
  6758  0658  009C               	movwf	28	;volatile
  6759  0659  0008               	return
  6760  065A                     __end_of_TMR2_Initialize:	
  6761                           
  6762                           	psect	text29
  6763  06CF                     __ptext29:	
  6764 ;; *************** function _TMR2_SetInterruptHandler *****************
  6765 ;; Defined at:
  6766 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  6769 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6781 ;;      Params:         2       0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0
  6784 ;;      Totals:         2       0       0       0       0       0       0
  6785 ;;Total ram usage:        2 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    3
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_TMR2_Initialize
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function _TMR2_SetInterruptHandler
  6797  06CF                     _TMR2_SetInterruptHandler:	
  6798                           
  6799                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  6803  06CF  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  6804  06D0  0020               	movlb	0	; select bank0
  6805  06D1  00BF               	movwf	_TMR2_InterruptHandler+1
  6806  06D2  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  6807  06D3  00BE               	movwf	_TMR2_InterruptHandler
  6808  06D4  0008               	return
  6809  06D5                     __end_of_TMR2_SetInterruptHandler:	
  6810                           
  6811                           	psect	text30
  6812  066A                     __ptext30:	
  6813 ;; *************** function _TMR0_Initialize *****************
  6814 ;; Defined at:
  6815 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6829 ;;      Params:         0       0       0       0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0
  6831 ;;      Temps:          1       0       0       0       0       0       0
  6832 ;;      Totals:         1       0       0       0       0       0       0
  6833 ;;Total ram usage:        1 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    3
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_SYSTEM_Initialize
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           
  6844                           ;psect for function _TMR0_Initialize
  6845  066A                     _TMR0_Initialize:	
  6846                           
  6847                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  6848                           
  6849                           ;incstack = 0
  6850                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  6851  066A  0021               	movlb	1	; select bank1
  6852  066B  0815               	movf	21,w	;volatile
  6853  066C  39C0               	andlw	192
  6854  066D  3817               	iorlw	23
  6855  066E  0095               	movwf	21	;volatile
  6856                           
  6857                           ;tmr0.c: 71: TMR0 = 0x64;
  6858  066F  3064               	movlw	100
  6859  0670  0020               	movlb	0	; select bank0
  6860  0671  0095               	movwf	21	;volatile
  6861                           
  6862                           ;tmr0.c: 74: timer0ReloadVal= 100;
  6863  0672  3064               	movlw	100
  6864  0673  00F1               	movwf	??_TMR0_Initialize
  6865  0674  0871               	movf	??_TMR0_Initialize,w
  6866  0675  00C0               	movwf	_timer0ReloadVal	;volatile
  6867                           
  6868                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  6869  0676  110B               	bcf	11,2	;volatile
  6870  0677  0008               	return
  6871  0678                     __end_of_TMR0_Initialize:	
  6872                           
  6873                           	psect	text31
  6874  06B1                     __ptext31:	
  6875 ;; *************** function _PWM3_Initialize *****************
  6876 ;; Defined at:
  6877 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6891 ;;      Params:         0       0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    3
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_SYSTEM_Initialize
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _PWM3_Initialize
  6907  06B1                     _PWM3_Initialize:	
  6908                           
  6909                           ;pwm3.c: 62: PWM3CON = 0xC0;
  6910                           
  6911                           ;incstack = 0
  6912                           ; Regs used in _PWM3_Initialize: [wreg]
  6913  06B1  30C0               	movlw	192
  6914  06B2  002C               	movlb	12	; select bank12
  6915  06B3  0099               	movwf	25	;volatile
  6916                           
  6917                           ;pwm3.c: 65: PWM3DCH = 0x7F;
  6918  06B4  307F               	movlw	127
  6919  06B5  0098               	movwf	24	;volatile
  6920                           
  6921                           ;pwm3.c: 68: PWM3DCL = 0xC0;
  6922  06B6  30C0               	movlw	192
  6923  06B7  0097               	movwf	23	;volatile
  6924  06B8  0008               	return
  6925  06B9                     __end_of_PWM3_Initialize:	
  6926                           
  6927                           	psect	text32
  6928  06B9                     __ptext32:	
  6929 ;; *************** function _PWM2_Initialize *****************
  6930 ;; Defined at:
  6931 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6945 ;;      Params:         0       0       0       0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0
  6948 ;;      Totals:         0       0       0       0       0       0       0
  6949 ;;Total ram usage:        0 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    3
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_SYSTEM_Initialize
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           
  6960                           ;psect for function _PWM2_Initialize
  6961  06B9                     _PWM2_Initialize:	
  6962                           
  6963                           ;pwm2.c: 62: PWM2CON = 0xC0;
  6964                           
  6965                           ;incstack = 0
  6966                           ; Regs used in _PWM2_Initialize: [wreg]
  6967  06B9  30C0               	movlw	192
  6968  06BA  002C               	movlb	12	; select bank12
  6969  06BB  0096               	movwf	22	;volatile
  6970                           
  6971                           ;pwm2.c: 65: PWM2DCH = 0x7F;
  6972  06BC  307F               	movlw	127
  6973  06BD  0095               	movwf	21	;volatile
  6974                           
  6975                           ;pwm2.c: 68: PWM2DCL = 0xC0;
  6976  06BE  30C0               	movlw	192
  6977  06BF  0094               	movwf	20	;volatile
  6978  06C0  0008               	return
  6979  06C1                     __end_of_PWM2_Initialize:	
  6980                           
  6981                           	psect	text33
  6982  06C1                     __ptext33:	
  6983 ;; *************** function _PWM1_Initialize *****************
  6984 ;; Defined at:
  6985 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;		None
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6999 ;;      Params:         0       0       0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    3
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_SYSTEM_Initialize
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function _PWM1_Initialize
  7015  06C1                     _PWM1_Initialize:	
  7016                           
  7017                           ;pwm1.c: 62: PWM1CON = 0xC0;
  7018                           
  7019                           ;incstack = 0
  7020                           ; Regs used in _PWM1_Initialize: [wreg]
  7021  06C1  30C0               	movlw	192
  7022  06C2  002C               	movlb	12	; select bank12
  7023  06C3  0093               	movwf	19	;volatile
  7024                           
  7025                           ;pwm1.c: 65: PWM1DCH = 0x7F;
  7026  06C4  307F               	movlw	127
  7027  06C5  0092               	movwf	18	;volatile
  7028                           
  7029                           ;pwm1.c: 68: PWM1DCL = 0xC0;
  7030  06C6  30C0               	movlw	192
  7031  06C7  0091               	movwf	17	;volatile
  7032  06C8  0008               	return
  7033  06C9                     __end_of_PWM1_Initialize:	
  7034                           
  7035                           	psect	text34
  7036  0563                     __ptext34:	
  7037 ;; *************** function _PIN_MANAGER_Initialize *****************
  7038 ;; Defined at:
  7039 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7053 ;;      Params:         0       0       0       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0
  7056 ;;      Totals:         0       0       0       0       0       0       0
  7057 ;;Total ram usage:        0 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    3
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_SYSTEM_Initialize
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function _PIN_MANAGER_Initialize
  7069  0563                     _PIN_MANAGER_Initialize:	
  7070                           
  7071                           ;pin_manager.c: 62: LATA = 0x00;
  7072                           
  7073                           ;incstack = 0
  7074                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7075  0563  0022               	movlb	2	; select bank2
  7076  0564  018C               	clrf	12	;volatile
  7077                           
  7078                           ;pin_manager.c: 63: LATB = 0x00;
  7079  0565  018D               	clrf	13	;volatile
  7080                           
  7081                           ;pin_manager.c: 64: LATC = 0x00;
  7082  0566  018E               	clrf	14	;volatile
  7083                           
  7084                           ;pin_manager.c: 69: TRISA = 0x39;
  7085  0567  3039               	movlw	57
  7086  0568  0021               	movlb	1	; select bank1
  7087  0569  008C               	movwf	12	;volatile
  7088                           
  7089                           ;pin_manager.c: 70: TRISB = 0xF0;
  7090  056A  30F0               	movlw	240
  7091  056B  008D               	movwf	13	;volatile
  7092                           
  7093                           ;pin_manager.c: 71: TRISC = 0xD7;
  7094  056C  30D7               	movlw	215
  7095  056D  008E               	movwf	14	;volatile
  7096                           
  7097                           ;pin_manager.c: 76: ANSELC = 0xC8;
  7098  056E  30C8               	movlw	200
  7099  056F  0023               	movlb	3	; select bank3
  7100  0570  008E               	movwf	14	;volatile
  7101                           
  7102                           ;pin_manager.c: 77: ANSELB = 0x20;
  7103  0571  3020               	movlw	32
  7104  0572  008D               	movwf	13	;volatile
  7105                           
  7106                           ;pin_manager.c: 78: ANSELA = 0x17;
  7107  0573  3017               	movlw	23
  7108  0574  008C               	movwf	12	;volatile
  7109                           
  7110                           ;pin_manager.c: 83: WPUB = 0x00;
  7111  0575  0024               	movlb	4	; select bank4
  7112  0576  018D               	clrf	13	;volatile
  7113                           
  7114                           ;pin_manager.c: 84: WPUA = 0x00;
  7115  0577  018C               	clrf	12	;volatile
  7116                           
  7117                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 1;
  7118  0578  0021               	movlb	1	; select bank1
  7119  0579  1795               	bsf	21,7	;volatile
  7120                           
  7121                           ;pin_manager.c: 94: APFCON = 0x00;
  7122  057A  0022               	movlb	2	; select bank2
  7123  057B  019D               	clrf	29	;volatile
  7124  057C  0008               	return
  7125  057D                     __end_of_PIN_MANAGER_Initialize:	
  7126                           
  7127                           	psect	text35
  7128  06D5                     __ptext35:	
  7129 ;; *************** function _OSCILLATOR_Initialize *****************
  7130 ;; Defined at:
  7131 ;;		line 63 in file "mcc_generated_files/mcc.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      void 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7145 ;;      Params:         0       0       0       0       0       0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0
  7148 ;;      Totals:         0       0       0       0       0       0       0
  7149 ;;Total ram usage:        0 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    3
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_SYSTEM_Initialize
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           
  7160                           ;psect for function _OSCILLATOR_Initialize
  7161  06D5                     _OSCILLATOR_Initialize:	
  7162                           
  7163                           ;mcc.c: 66: OSCCON = 0x78;
  7164                           
  7165                           ;incstack = 0
  7166                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7167  06D5  3078               	movlw	120
  7168  06D6  0021               	movlb	1	; select bank1
  7169  06D7  0099               	movwf	25	;volatile
  7170                           
  7171                           ;mcc.c: 68: BORCON = 0x00;
  7172  06D8  0022               	movlb	2	; select bank2
  7173  06D9  0196               	clrf	22	;volatile
  7174  06DA  0008               	return
  7175  06DB                     __end_of_OSCILLATOR_Initialize:	
  7176                           
  7177                           	psect	text36
  7178  057D                     __ptext36:	
  7179 ;; *************** function _PWM3_LoadDutyValue *****************
  7180 ;; Defined at:
  7181 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7195 ;;      Params:         0       2       0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0
  7197 ;;      Temps:          0       2       0       0       0       0       0
  7198 ;;      Totals:         0       4       0       0       0       0       0
  7199 ;;Total ram usage:        4 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    3
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_main
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           
  7210                           ;psect for function _PWM3_LoadDutyValue
  7211  057D                     _PWM3_LoadDutyValue:	
  7212                           
  7213                           ;pwm3.c: 75: PWM3DCH = (dutyValue & 0x03FC)>>2;
  7214                           
  7215                           ;incstack = 0
  7216                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  7217  057D  0020               	movlb	0	; select bank0
  7218  057E  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  7219  057F  00A3               	movwf	??_PWM3_LoadDutyValue+1
  7220  0580  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  7221  0581  00A2               	movwf	??_PWM3_LoadDutyValue
  7222  0582  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  7223  0583  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  7224  0584  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  7225  0585  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  7226  0586  0822               	movf	??_PWM3_LoadDutyValue,w
  7227  0587  002C               	movlb	12	; select bank12
  7228  0588  0098               	movwf	24	;volatile
  7229                           
  7230                           ;pwm3.c: 78: PWM3DCL = (dutyValue & 0x0003)<<6;
  7231  0589  0020               	movlb	0	; select bank0
  7232  058A  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  7233  058B  3903               	andlw	3
  7234  058C  00A2               	movwf	??_PWM3_LoadDutyValue
  7235  058D  3005               	movlw	5
  7236  058E                     u1835:	
  7237  058E  35A2               	lslf	??_PWM3_LoadDutyValue,f
  7238  058F  3EFF               	addlw	-1
  7239  0590  1D03               	skipz
  7240  0591  2D8E               	goto	u1835
  7241  0592  3522               	lslf	??_PWM3_LoadDutyValue,w
  7242  0593  002C               	movlb	12	; select bank12
  7243  0594  0097               	movwf	23	;volatile
  7244  0595  0008               	return
  7245  0596                     __end_of_PWM3_LoadDutyValue:	
  7246                           
  7247                           	psect	text37
  7248  05C7                     __ptext37:	
  7249 ;; *************** function _PWM2_LoadDutyValue *****************
  7250 ;; Defined at:
  7251 ;;		line 72 in file "mcc_generated_files/pwm2.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  dutyValue       2    1[COMMON] unsigned int 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7265 ;;      Params:         2       0       0       0       0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0
  7267 ;;      Temps:          2       0       0       0       0       0       0
  7268 ;;      Totals:         4       0       0       0       0       0       0
  7269 ;;Total ram usage:        4 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    3
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_main
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function _PWM2_LoadDutyValue
  7281  05C7                     _PWM2_LoadDutyValue:	
  7282                           
  7283                           ;pwm2.c: 75: PWM2DCH = (dutyValue & 0x03FC)>>2;
  7284                           
  7285                           ;incstack = 0
  7286                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  7287  05C7  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  7288  05C8  00F4               	movwf	??_PWM2_LoadDutyValue+1
  7289  05C9  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
  7290  05CA  00F3               	movwf	??_PWM2_LoadDutyValue
  7291  05CB  36F4               	lsrf	??_PWM2_LoadDutyValue+1,f
  7292  05CC  0CF3               	rrf	??_PWM2_LoadDutyValue,f
  7293  05CD  36F4               	lsrf	??_PWM2_LoadDutyValue+1,f
  7294  05CE  0CF3               	rrf	??_PWM2_LoadDutyValue,f
  7295  05CF  0873               	movf	??_PWM2_LoadDutyValue,w
  7296  05D0  002C               	movlb	12	; select bank12
  7297  05D1  0095               	movwf	21	;volatile
  7298                           
  7299                           ;pwm2.c: 78: PWM2DCL = (dutyValue & 0x0003)<<6;
  7300  05D2  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
  7301  05D3  3903               	andlw	3
  7302  05D4  00F3               	movwf	??_PWM2_LoadDutyValue
  7303  05D5  3005               	movlw	5
  7304  05D6                     u1075:	
  7305  05D6  35F3               	lslf	??_PWM2_LoadDutyValue,f
  7306  05D7  3EFF               	addlw	-1
  7307  05D8  1D03               	skipz
  7308  05D9  2DD6               	goto	u1075
  7309  05DA  3573               	lslf	??_PWM2_LoadDutyValue,w
  7310  05DB  0094               	movwf	20	;volatile
  7311  05DC  0008               	return
  7312  05DD                     __end_of_PWM2_LoadDutyValue:	
  7313                           
  7314                           	psect	text38
  7315  0596                     __ptext38:	
  7316 ;; *************** function _PWM1_LoadDutyValue *****************
  7317 ;; Defined at:
  7318 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7332 ;;      Params:         0       2       0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0
  7334 ;;      Temps:          0       2       0       0       0       0       0
  7335 ;;      Totals:         0       4       0       0       0       0       0
  7336 ;;Total ram usage:        4 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:    3
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_main
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           
  7347                           ;psect for function _PWM1_LoadDutyValue
  7348  0596                     _PWM1_LoadDutyValue:	
  7349                           
  7350                           ;pwm1.c: 75: PWM1DCH = (dutyValue & 0x03FC)>>2;
  7351                           
  7352                           ;incstack = 0
  7353                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  7354  0596  0020               	movlb	0	; select bank0
  7355  0597  0821               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  7356  0598  00A3               	movwf	??_PWM1_LoadDutyValue+1
  7357  0599  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
  7358  059A  00A2               	movwf	??_PWM1_LoadDutyValue
  7359  059B  36A3               	lsrf	??_PWM1_LoadDutyValue+1,f
  7360  059C  0CA2               	rrf	??_PWM1_LoadDutyValue,f
  7361  059D  36A3               	lsrf	??_PWM1_LoadDutyValue+1,f
  7362  059E  0CA2               	rrf	??_PWM1_LoadDutyValue,f
  7363  059F  0822               	movf	??_PWM1_LoadDutyValue,w
  7364  05A0  002C               	movlb	12	; select bank12
  7365  05A1  0092               	movwf	18	;volatile
  7366                           
  7367                           ;pwm1.c: 78: PWM1DCL = (dutyValue & 0x0003)<<6;
  7368  05A2  0020               	movlb	0	; select bank0
  7369  05A3  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
  7370  05A4  3903               	andlw	3
  7371  05A5  00A2               	movwf	??_PWM1_LoadDutyValue
  7372  05A6  3005               	movlw	5
  7373  05A7                     u1825:	
  7374  05A7  35A2               	lslf	??_PWM1_LoadDutyValue,f
  7375  05A8  3EFF               	addlw	-1
  7376  05A9  1D03               	skipz
  7377  05AA  2DA7               	goto	u1825
  7378  05AB  3522               	lslf	??_PWM1_LoadDutyValue,w
  7379  05AC  002C               	movlb	12	; select bank12
  7380  05AD  0091               	movwf	17	;volatile
  7381  05AE  0008               	return
  7382  05AF                     __end_of_PWM1_LoadDutyValue:	
  7383                           
  7384                           	psect	intentry
  7385  0004                     __pintentry:	
  7386 ;; *************** function _INTERRUPT_InterruptManager *****************
  7387 ;; Defined at:
  7388 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0, pclath, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7402 ;;      Params:         0       0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0
  7404 ;;      Temps:          1       0       0       0       0       0       0
  7405 ;;      Totals:         1       0       0       0       0       0       0
  7406 ;;Total ram usage:        1 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    2
  7409 ;; This function calls:
  7410 ;;		_TMR2_ISR
  7411 ;; This function is called by:
  7412 ;;		Interrupt level 1
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416  0004                     _INTERRUPT_InterruptManager:	
  7417                           
  7418                           ;incstack = 0
  7419  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7420                           
  7421                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7422  0005  3180               	pagesel	$
  7423  0006  0020               	movlb	0	; select bank0
  7424  0007  087F               	movf	127,w
  7425  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  7426                           
  7427                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  7428  0009  1F0B               	btfss	11,6	;volatile
  7429  000A  281D               	goto	i1l64
  7430                           
  7431                           ;interrupt_manager.c: 56: {
  7432                           ;interrupt_manager.c: 57: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  7433  000B  0021               	movlb	1	; select bank1
  7434  000C  1992               	btfsc	18,3	;volatile
  7435                           
  7436                           ;interrupt_manager.c: 58: {
  7437                           ;interrupt_manager.c: 59: i2c_driver_busCollisionISR();
  7438  000D  0020               	movlb	0	; select bank0
  7439  000E  1992               	btfsc	18,3	;volatile
  7440  000F  281D               	goto	i1l64
  7441                           
  7442                           ;interrupt_manager.c: 61: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  7443                           
  7444                           ;interrupt_manager.c: 60: }
  7445  0010  0021               	movlb	1	; select bank1
  7446  0011  1991               	btfsc	17,3	;volatile
  7447                           
  7448                           ;interrupt_manager.c: 62: {
  7449                           ;interrupt_manager.c: 63: i2c_driver_i2cISR();
  7450  0012  0020               	movlb	0	; select bank0
  7451  0013  1991               	btfsc	17,3	;volatile
  7452  0014  281D               	goto	i1l64
  7453                           
  7454                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  7455                           
  7456                           ;interrupt_manager.c: 64: }
  7457  0015  0021               	movlb	1	; select bank1
  7458  0016  1C91               	btfss	17,1	;volatile
  7459  0017  281D               	goto	i1l64
  7460  0018  0020               	movlb	0	; select bank0
  7461  0019  1C91               	btfss	17,1	;volatile
  7462  001A  281D               	goto	i1l64
  7463                           
  7464                           ;interrupt_manager.c: 66: {
  7465                           ;interrupt_manager.c: 67: TMR2_ISR();
  7466  001B  3186  2684         	fcall	_TMR2_ISR
  7467  001D                     i1l64:	
  7468                           ;interrupt_manager.c: 74: else
  7469                           ;interrupt_manager.c: 75: {
  7470                           
  7471                           ;interrupt_manager.c: 72: }
  7472                           ;interrupt_manager.c: 73: }
  7473                           
  7474                           ;interrupt_manager.c: 69: else
  7475                           ;interrupt_manager.c: 70: {
  7476                           
  7477                           ;interrupt_manager.c: 68: }
  7478                           
  7479  001D  0870               	movf	??_INTERRUPT_InterruptManager,w
  7480  001E  0020               	movlb	0	; select bank0
  7481  001F  00FF               	movwf	127
  7482  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7483  0021  0009               	retfie
  7484  0022                     __end_of_INTERRUPT_InterruptManager:	
  7485                           
  7486                           	psect	text40
  7487  0684                     __ptext40:	
  7488 ;; *************** function _TMR2_ISR *****************
  7489 ;; Defined at:
  7490 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0, pclath, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7504 ;;      Params:         0       0       0       0       0       0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0
  7507 ;;      Totals:         0       0       0       0       0       0       0
  7508 ;;Total ram usage:        0 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    1
  7511 ;; This function calls:
  7512 ;;		Absolute function
  7513 ;;		_TMR2_DefaultInterruptHandler
  7514 ;; This function is called by:
  7515 ;;		_INTERRUPT_InterruptManager
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           
  7520                           ;psect for function _TMR2_ISR
  7521  0684                     _TMR2_ISR:	
  7522                           
  7523                           ;tmr2.c: 123: PIR1bits.TMR2IF = 0;
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  7527  0684  0020               	movlb	0	; select bank0
  7528  0685  1091               	bcf	17,1	;volatile
  7529                           
  7530                           ;tmr2.c: 125: if(TMR2_InterruptHandler)
  7531  0686  083E               	movf	_TMR2_InterruptHandler,w
  7532  0687  043F               	iorwf	_TMR2_InterruptHandler+1,w
  7533  0688  1903               	btfsc	3,2
  7534  0689  0008               	return
  7535                           
  7536                           ;tmr2.c: 126: {
  7537                           ;tmr2.c: 127: TMR2_InterruptHandler();
  7538  068A  083F               	movf	_TMR2_InterruptHandler+1,w
  7539  068B  008A               	movwf	10
  7540  068C  083E               	movf	_TMR2_InterruptHandler,w
  7541  068D  000A               	callw
  7542  068E  3186               	pagesel	$
  7543  068F  0008               	return
  7544  0690                     __end_of_TMR2_ISR:	
  7545                           
  7546                           	psect	text41
  7547  06DF                     __ptext41:	
  7548 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7549 ;; Defined at:
  7550 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		None
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7564 ;;      Params:         0       0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0
  7567 ;;      Totals:         0       0       0       0       0       0       0
  7568 ;;Total ram usage:        0 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; This function calls:
  7571 ;;		Nothing
  7572 ;; This function is called by:
  7573 ;;		_TMR2_Initialize
  7574 ;;		_TMR2_ISR
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           
  7579                           ;psect for function _TMR2_DefaultInterruptHandler
  7580  06DF                     _TMR2_DefaultInterruptHandler:	
  7581                           
  7582                           ;incstack = 0
  7583                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  7584  06DF  0008               	return
  7585  06E0                     __end_of_TMR2_DefaultInterruptHandler:	
  7586  007E                     btemp	set	126	;btemp
  7587  007E                     int$flags	set	126
  7588  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     30      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_printReglageH
    _readSec->_readI2C
    _printReglageH->_writeLCD
    _writeLCD->_writeInst
    _initRW1063->_writeInst
    _writeInst->_sendI2C
    _initRTC->_sendI2C
    _incrMin->_bitExtracted
    _readMin->_readI2C
    _changeMin->_sendI2C
    _incrHeure->_bitExtracted
    _readHr->_readI2C
    _changeHeure->_sendI2C
    _convertFromBcd->___bmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PWM3_LoadDutyValue->___awdiv
    _PWM1_LoadDutyValue->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printReglageH

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   17363
                                              6 BANK0     24    24      0
                                _FSM
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                       _bitExtracted
                     _convertFromBcd
                          _incrHeure
                            _incrMin
                            _initI2C
                            _initRTC
                         _initRW1063
                      _printReglageH
                             _readHr
                            _readMin
                            _readSec
                          _writeInst
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _readSec                                              2     2      0     102
                                              3 COMMON     2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _printReglageH                                        9     9      0    5181
                                              8 COMMON     3     3      0
                                              0 BANK0      6     6      0
                                _FSM
                       _bitExtracted
                             _readHr
                            _readMin
                          _writeInst
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             5     3      2    2696
                                              3 COMMON     5     3      2
                                _FSM (ARG)
                            _sendI2C
                           _startI2C
                            _stopI2C
                          _writeInst
 ---------------------------------------------------------------------------------
 (2) _FSM                                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initRW1063                                           0     0      0      62
                          _writeInst
 ---------------------------------------------------------------------------------
 (2) _writeInst                                            1     1      0      62
                                              2 COMMON     1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _initRTC                                              0     0      0      31
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              3     3      0      47
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _incrMin                                              6     6      0    2494
                                              6 COMMON     3     3      0
                                              0 BANK0      3     3      0
                       _bitExtracted
                          _changeMin
                            _readMin
 ---------------------------------------------------------------------------------
 (1) _readMin                                              2     2      0     102
                                              3 COMMON     2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _changeMin                                            1     1      0      62
                                              2 COMMON     1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _incrHeure                                            6     6      0    2556
                                              6 COMMON     3     3      0
                                              0 BANK0      3     3      0
                       _bitExtracted
                        _changeHeure
                             _readHr
 ---------------------------------------------------------------------------------
 (1) _readHr                                               2     2      0     102
                                              3 COMMON     2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _sendNoAckI2C                                         0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _readI2C                                              2     2      0      34
                                              1 COMMON     2     2      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _re_startI2C                                          0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _changeHeure                                          1     1      0      62
                                              2 COMMON     1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      31
                                              1 COMMON     1     1      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (4) _waitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bitExtracted                                         5     3      2    1913
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _convertFromBcd                                       5     5      0     237
                                              5 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     512
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      75
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      75
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     127
                                              0 BANK0      4     2      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM2_LoadDutyValue                                   4     2      2      97
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     127
                                              0 BANK0      4     2      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
   _PWM1_LoadDutyValue
     ___awdiv (ARG)
   _PWM2_LoadDutyValue
   _PWM3_LoadDutyValue
     ___awdiv (ARG)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   ___awdiv
   _bitExtracted
   _convertFromBcd
     ___bmul
   _incrHeure
     _bitExtracted
     _changeHeure
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readHr
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _incrMin
     _bitExtracted
     _changeMin
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readMin
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _initI2C
   _initRTC
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _initRW1063
     _writeInst
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _printReglageH
     _FSM
     _bitExtracted
     _readHr
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readMin
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _writeInst
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _writeLCD
       _FSM (ARG)
       _sendI2C (ARG)
         _waitI2C
       _startI2C (ARG)
         _waitI2C
       _stopI2C (ARG)
         _waitI2C
       _writeInst (ARG)
         _sendI2C
           _waitI2C
         _startI2C
           _waitI2C
         _stopI2C
           _waitI2C
   _readHr
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _readMin
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _readSec
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _writeInst
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _writeLCD
     _FSM (ARG)
     _sendI2C (ARG)
       _waitI2C
     _startI2C (ARG)
       _waitI2C
     _stopI2C (ARG)
       _waitI2C
     _writeInst (ARG)
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      30       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      23       6       43.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0      30      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 14 12:51:59 2018

        __end_of_TMR2_SetInterruptHandler 06D5                        printReglageH@heure 0025  
                                       pc 0002                            ___bmul@product 0073  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0077  
                     printReglageH@minute 0024                           _timer0ReloadVal 0040  
                     printReglageH@uniteH 0023                       printReglageH@uniteM 0021  
                             __CFG_LVP$ON 0000                                       l331 041E  
                                     l332 0430                                       l342 06A9  
                                     l502 0533                                       l336 0696  
                                     l360 062F                                       l520 048C  
                                     l505 053A                                       l354 0681  
                                     l514 047B                                       l282 019B  
                                     l348 06A6                                       l508 0541  
                                     l532 04B5                                       l460 0372  
                                     l541 04D4                                       l517 0482  
                                     l366 069E                                       l526 04A4  
                                     l286 01C7                                       l463 0379  
                                     l544 04DE                                       l472 0394  
                                     l529 04AB                                       l481 03AF  
                                     l289 01C5                                       l538 04CD  
                                     l490 0517                                       l466 0380  
                                     l475 039B                                       l484 03B6  
                                     l493 051E                                       l469 038D  
                                     l478 03A8                                       l496 0525  
                                     _FSM 04EE                                       _PR2 001B  
                         _TMR2_Initialize 0649                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                                    S2797 0600                     printReglageH@dizaineH 0022  
                   printReglageH@dizaineM 0020                                      ?_FSM 0070  
                             main@bufferH 0031                               main@bufferM 0030  
                             main@bufferS 002F                                      l2113 03C6  
                                    l2131 03E5                                      l2141 0400  
                                    l2119 03D1                                      l2145 0408  
                                    l2137 03F7                                      l2129 03D9  
                                    l1811 04F2                                      l2443 0450  
                                    l1805 04F0                                      l2445 045D  
                                    l2437 044F                                      l1823 04F6  
                                    l1905 063A                                      l2561 034C  
                                    l1841 04FC                                      l1817 04F4  
                                    l2721 01CF                                      l1835 04FA  
                                    l1909 0640                                      l2565 0352  
                                    l1853 0500                                      l1829 04F8  
                                    l2709 01B9                                      l2591 02EC  
                                    l1847 04FE                                      l2655 005F  
                                    l1859 0502                                      l1867 0504  
                                    l2599 02FA                                      l2695 0196  
                                    l2699 019D                   __end_of_PWM1_Initialize 06C9  
                                    u1105 041C                                      u1115 042E  
                                    u2025 0302                                      u1075 05D6  
                                    u1245 054D                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u2137 0047                                      u1355 03DC  
                                    u2147 01A6                                      u1375 03E6  
                                    u1385 03F0                                      u1395 03F8  
                                    u1724 05E5                                      u1725 05E4  
                                    u1734 05EC                                      u1735 05EB  
                                    u1825 05A7                                      u1835 058E  
                                    u1985 035A                                      i1l64 001D  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUB 020D  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 002D                                      fsr0l 0004  
                                    btemp 007E                      __end_of_bitExtracted 05F2  
                           __CFG_BOREN$ON 0000                                      start 0022  
                       ___bmul@multiplier 0074                             __CFG_MCLRE$ON 0000  
                                   ??_FSM 0071                   __end_of_PWM2_Initialize 06C1  
                 __end_of_TMR0_Initialize 0678                                     FSM@IN 0071  
          __size_of_OSCILLATOR_Initialize 0006             __end_of_OSCILLATOR_Initialize 06DB  
                            main@dizaineH 0037                              main@dizaineM 0035  
                            main@dizaineS 0033                           ??_printReglageH 0078  
                         changeMin@minute 0072                                     ?_main 0070  
                         __end_of___awdiv 040D                             __CFG_WDTE$OFF 0000  
                         ___awdiv@divisor 0071                                     _T2CON 001C  
                                   _LATB4 086C                                     _LATB6 086E  
                         ___awdiv@counter 0076                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                    __size_of_changeHeure 001C                          __end_of_TMR2_ISR 0690  
                             readI2C@temp 0072                           __end_of_initI2C 0446  
                         __end_of_readI2C 0638                           __end_of_incrMin 036B  
                         __end_of_initRTC 03BC                            _WDT_Initialize 06DB  
                         __end_of_readMin 04C5                           __end_of_readSec 049C  
                         __end_of_sendI2C 0684                                     main@i 003A  
                         __end_of_waitI2C 06B1                   __end_of_PWM3_Initialize 06B9  
                                   pclath 000A                _i2c_driver_busCollisionISR 007B  
                         __end_of_stopI2C 06A9                                     status 0003  
                                   wtemp0 007E                           __initialization 0024  
                            __end_of_main 01D9                              ?_re_startI2C 0070  
                          _convertFromBcd 0547                   __end_of_TMR2_Initialize 065A  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 06CF                                    ??_main 0026  
                        changeHeure@heure 0072                    __end_of_WDT_Initialize 06DF  
                        ___awdiv@dividend 0073                                    _APFCON 011D  
                             readHr@heure 0074                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _BORCON 0116                          ?_PWM1_Initialize 0070  
                                  _INTCON 000B                                    _OSCCON 0099  
                                  _WDTCON 0097                                    _TRISB4 046C  
                                  _TRISB6 046E                            __CFG_PWRTE$OFF 0000  
                                  ___bmul 0638                    __end_of_convertFromBcd 0563  
             __size_of_PWM3_LoadDutyValue 0019                                 ??___awdiv 0075  
                          __CFG_STVREN$ON 0000                                    _readHr 04C5  
                        ?_TMR0_Initialize 0070                          ?_PWM2_Initialize 0070  
                        ___awdiv@quotient 0078                                 ??_initI2C 0071  
                               ??_readI2C 0071                                 ??_incrMin 0076  
                               ??_initRTC 0072                         incrHeure@dizaineH 0020  
                               ??_readMin 0073                                 ??_readSec 0073  
                               ??_sendI2C 0071                                 ??_waitI2C 0071  
                         ?_WDT_Initialize 0070                          __end_of_startI2C 0699  
                               ??_stopI2C 0071  TMR2_SetInterruptHandler@InterruptHandler 0071  
                   __size_of_bitExtracted 0015                               sendI2C@data 0071  
                        __end_of_writeLCD 0473                          ?_PWM3_Initialize 0070  
                       _SYSTEM_Initialize 05AF                   __end_of__initialization 0029  
                      ?_SYSTEM_Initialize 0070                __end_of_PWM2_LoadDutyValue 05DD  
             PWM1_LoadDutyValue@dutyValue 0020                       ___bmul@multiplicand 0071  
                          __pcstackCOMMON 0070                           ?_convertFromBcd 0070  
                     ??_SYSTEM_Initialize 0073                                 ?_TMR2_ISR 0070  
                      __size_of_changeMin 001C                        _PWM1_LoadDutyValue 0596  
                        ?_TMR2_Initialize 0070                             ?_sendNoAckI2C 0070  
                            _bitExtracted 05DD                            _OPTION_REGbits 0095  
                     ?_PWM1_LoadDutyValue 0020                 __end_of_SYSTEM_Initialize 05C7  
                              __pbssBANK0 0041                        __size_of_incrHeure 0060  
                    ??_PWM1_LoadDutyValue 0022                                __pmaintext 002D  
                                 ?___bmul 0071                                ??_TMR2_ISR 0070  
                              __pintentry 0004                                   ?_readHr 0070  
                    __size_of_re_startI2C 0008                            ??_sendNoAckI2C 0071  
                                 _PWM1DCH 0612                                   _PWM1DCL 0611  
                                 _PWM2DCH 0615                                   _PWM2DCL 0614  
                                 _PWM3DCH 0618                                   _PWM3DCL 0617  
                                 _PWM1CON 0613                                   _PWM2CON 0616  
                                 _PWM3CON 0619                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                         __end_of_changeMin 052B  
                   convertFromBcd@byteBCD 0079                     convertFromBcd@byteLSB 0078  
                   convertFromBcd@byteMSB 0077                                _initRW1063 065A  
                      __size_of_writeInst 0013                ??_TMR2_SetInterruptHandler 0073  
                         __size_of___bmul 0011                                   ___awdiv 03BC  
                               ?_startI2C 0070                         __end_of_incrHeure 0313  
                            writeLCD@data 0076                           __size_of_readHr 0029  
                               ?_writeLCD 0073                                   __ptext1 0473  
                                 __ptext2 01D9                                   __ptext3 0446  
                                 __ptext4 04EE                                   __ptext5 065A  
                                 __ptext6 0614                                   __ptext7 036B  
                                 __ptext8 040D                                   __ptext9 0313  
                           ??_changeHeure 0072                                   _initI2C 040D  
                            __size_of_FSM 0021                                   _readI2C 0627  
                                 _incrMin 0313                                   _initRTC 036B  
                   _OSCILLATOR_Initialize 06D5                     __end_of_printReglageH 02B3  
                               _T2CONbits 001C                                   _readMin 049C  
                                 _readSec 0473                                   _sendI2C 0678  
                                 _waitI2C 06A9                  ??_PIN_MANAGER_Initialize 0071  
                           bitExtracted@k 0071                             bitExtracted@p 0072  
                                 _stopI2C 06A1                __size_of_SYSTEM_Initialize 0018  
                    end_of_initialization 0029                             incrMin@minute 0022  
                           incrMin@uniteM 0021                                ??_startI2C 0071  
                              ??_writeLCD 0075                          ??_WDT_Initialize 0071  
                               _PORTCbits 000E                         __end_of_writeInst 0627  
                        __CFG_FOSC$INTOSC 0000                       __end_of_changeHeure 0547  
                             ?_initRW1063 0070                      __end_of_sendNoAckI2C 06CF  
                        ??_convertFromBcd 0075                                main@minute 003B  
                              main@second 003D                                main@select 0039  
              __end_of_PWM3_LoadDutyValue 0596                                main@uniteH 0036  
                              main@uniteM 0034                                main@uniteS 0032  
                __size_of_PWM1_Initialize 0008      __end_of_TMR2_DefaultInterruptHandler 06E0  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 06DF  
                          __end_of___bmul 0649                         __size_of_TMR2_ISR 000C  
                      _PWM2_LoadDutyValue 05C7                            __end_of_readHr 04EE  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0024  
                             __end_of_FSM 050F                  __size_of_PWM2_Initialize 0008  
                __size_of_TMR0_Initialize 000E                       ?_PWM2_LoadDutyValue 0071  
         __size_of_PIN_MANAGER_Initialize 001A                      ??_PWM2_LoadDutyValue 0073  
                __size_of_PWM3_Initialize 0008                                  ??___bmul 0072  
             PWM2_LoadDutyValue@dutyValue 0071                                  ??_readHr 0073  
           ?_TMR2_DefaultInterruptHandler 0070                         _i2c_driver_i2cISR 0041  
                             _changeHeure 052B                       __size_of_initRW1063 0010  
                             __pbssCOMMON 007B                                 ___latbits 0002  
                           __pcstackBANK0 0020                  __size_of_TMR2_Initialize 0011  
                               _changeMin 050F                                 __pnvBANK0 003E  
                          writeLCD@adress 0073               __size_of_PWM1_LoadDutyValue 0019  
                  _PIN_MANAGER_Initialize 0563                             ??_re_startI2C 0071  
                                ?___awdiv 0071                         ??_PWM1_Initialize 0071  
                       __size_of_startI2C 0009              ??_INTERRUPT_InterruptManager 0070  
                               __pswtext1 0600                                  ?_initI2C 0070  
                                ?_readI2C 0070                                  ?_incrMin 0070  
                                ?_initRTC 0070                                  ?_readMin 0070  
                                ?_readSec 0070                                 _incrHeure 02B3  
                       __size_of_writeLCD 002D                                  ?_sendI2C 0070  
                                ?_waitI2C 0070                                  ?_stopI2C 0070  
                   __size_of_sendNoAckI2C 0006                         ??_TMR0_Initialize 0071  
                       ??_PWM2_Initialize 0071                                ?_changeMin 0070  
                                _PIE1bits 0091                                  _PIE2bits 0092  
     __size_of_INTERRUPT_InterruptManager 001E                                  _PIR1bits 0011  
                                _PIR2bits 0012                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR2_ISR 0684  
                                _SSP1STAT 0214                         ??_PWM3_Initialize 0071  
                            _sendNoAckI2C 06C9                       __end_of_re_startI2C 06A1  
                              ?_incrHeure 0070                                 main@heure 003C  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0006  
                           readMin@minute 0074                 ?_TMR2_SetInterruptHandler 0071  
                               _writeInst 0614                             readSec@second 0074  
                       ??_TMR2_Initialize 0073                              ??_initRW1063 0073  
                  __size_of_printReglageH 00DA                   ??_OSCILLATOR_Initialize 0071  
                        __size_of___awdiv 0051                           incrHeure@uniteH 0021  
                         incrMin@dizaineM 0020                        _PWM3_LoadDutyValue 057D  
                           ?_bitExtracted 0071                          __size_of_initI2C 0039  
                        __size_of_readI2C 0011                          __size_of_incrMin 0058  
                      __end_of_initRW1063 066A                          __size_of_initRTC 0051  
                        __size_of_readMin 0029                          __size_of_readSec 0029  
                        __size_of_sendI2C 000C                             writeLCD@ligne 0074  
                        __size_of_waitI2C 0008                                  __ptext10 049C  
                                __ptext11 050F                                  __ptext20 0678  
                                __ptext12 02B3                                  __ptext21 06A9  
                                __ptext13 04C5                                  __ptext30 066A  
                                __ptext22 05DD                                  __ptext14 06C9  
                                __ptext31 06B1                                  __ptext23 0547  
                                __ptext15 0627                                  __ptext40 0684  
                                __ptext32 06B9                                  __ptext24 0638  
                                __ptext16 0699                                  __ptext41 06DF  
                                __ptext33 06C1                                  __ptext25 03BC  
                                __ptext17 052B                                  __ptext34 0563  
                                __ptext26 05AF                                  __ptext18 06A1  
                                __ptext35 06D5                                  __ptext27 06DB  
                                __ptext19 0690                                  __ptext36 057D  
                                __ptext28 0649                                  __ptext37 05C7  
                                __ptext29 06CF                                  __ptext38 0596  
                     ?_PWM3_LoadDutyValue 0020                                ?_writeInst 0070  
                            _SSP1CON2bits 0216                          __size_of_stopI2C 0008  
                           __size_of_main 01AC                               ??_changeMin 0072  
                    ??_PWM3_LoadDutyValue 0022                                  int$flags 007E  
                                main@PWM1 0029                                  main@PWM2 002B  
                                main@PWM3 002D                                  _startI2C 0690  
                             _re_startI2C 0699        __end_of_INTERRUPT_InterruptManager 0022  
              _INTERRUPT_InterruptManager 0004                                  main@menu 0038  
                                _writeLCD 0446                                  initI2C@i 0072  
                          ??_bitExtracted 0073                              ?_changeHeure 0070  
                             ??_incrHeure 0076                                _INTCONbits 000B  
                           _printReglageH 01D9                            incrHeure@heure 0022  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                      bitExtracted@number 0075                                 writeLCD@i 0077  
                         _PWM1_Initialize 06C1               __size_of_PWM2_LoadDutyValue 0016  
             PWM3_LoadDutyValue@dutyValue 0020                   __size_of_convertFromBcd 001C  
                              _OPTION_REG 0095                            ?_printReglageH 0070  
                         _TMR0_Initialize 066A                           _PWM2_Initialize 06B9  
                             ??_writeInst 0072                             writeInst@Inst 0072  
          __end_of_PIN_MANAGER_Initialize 057D                __end_of_PWM1_LoadDutyValue 05AF  
                   _TMR2_InterruptHandler 003E                           _PWM3_Initialize 06B1  
