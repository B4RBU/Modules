

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 16:49:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1619 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011C                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0197                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  028C                     	;# 
   181  028D                     	;# 
   182  028E                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0298                     	;# 
   189  0298                     	;# 
   190  0299                     	;# 
   191  029A                     	;# 
   192  029B                     	;# 
   193  029E                     	;# 
   194  030C                     	;# 
   195  030D                     	;# 
   196  030E                     	;# 
   197  038C                     	;# 
   198  038D                     	;# 
   199  038E                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  0397                     	;# 
   207  0398                     	;# 
   208  0399                     	;# 
   209  040E                     	;# 
   210  0413                     	;# 
   211  0413                     	;# 
   212  0414                     	;# 
   213  0414                     	;# 
   214  0415                     	;# 
   215  0416                     	;# 
   216  0417                     	;# 
   217  0418                     	;# 
   218  041A                     	;# 
   219  041A                     	;# 
   220  041B                     	;# 
   221  041B                     	;# 
   222  041C                     	;# 
   223  041D                     	;# 
   224  041E                     	;# 
   225  041F                     	;# 
   226  0493                     	;# 
   227  0494                     	;# 
   228  0495                     	;# 
   229  0496                     	;# 
   230  049A                     	;# 
   231  049B                     	;# 
   232  049C                     	;# 
   233  049D                     	;# 
   234  058C                     	;# 
   235  058C                     	;# 
   236  058D                     	;# 
   237  058E                     	;# 
   238  058E                     	;# 
   239  058F                     	;# 
   240  0590                     	;# 
   241  0590                     	;# 
   242  0591                     	;# 
   243  0592                     	;# 
   244  0592                     	;# 
   245  0593                     	;# 
   246  0594                     	;# 
   247  0594                     	;# 
   248  0595                     	;# 
   249  0596                     	;# 
   250  0596                     	;# 
   251  0597                     	;# 
   252  0598                     	;# 
   253  0599                     	;# 
   254  059A                     	;# 
   255  059B                     	;# 
   256  059B                     	;# 
   257  059C                     	;# 
   258  059D                     	;# 
   259  060C                     	;# 
   260  060C                     	;# 
   261  060D                     	;# 
   262  060E                     	;# 
   263  060F                     	;# 
   264  060F                     	;# 
   265  0610                     	;# 
   266  0611                     	;# 
   267  0612                     	;# 
   268  0613                     	;# 
   269  0614                     	;# 
   270  0617                     	;# 
   271  0618                     	;# 
   272  0619                     	;# 
   273  061A                     	;# 
   274  061B                     	;# 
   275  061C                     	;# 
   276  0691                     	;# 
   277  0692                     	;# 
   278  0693                     	;# 
   279  0694                     	;# 
   280  0695                     	;# 
   281  0696                     	;# 
   282  0697                     	;# 
   283  0699                     	;# 
   284  069A                     	;# 
   285  0711                     	;# 
   286  0712                     	;# 
   287  0713                     	;# 
   288  0714                     	;# 
   289  0715                     	;# 
   290  0718                     	;# 
   291  0718                     	;# 
   292  0719                     	;# 
   293  071A                     	;# 
   294  071A                     	;# 
   295  071B                     	;# 
   296  071C                     	;# 
   297  071D                     	;# 
   298  0791                     	;# 
   299  0791                     	;# 
   300  0792                     	;# 
   301  0793                     	;# 
   302  0793                     	;# 
   303  0794                     	;# 
   304  0795                     	;# 
   305  0795                     	;# 
   306  0796                     	;# 
   307  0797                     	;# 
   308  0797                     	;# 
   309  0798                     	;# 
   310  0799                     	;# 
   311  079A                     	;# 
   312  080C                     	;# 
   313  080C                     	;# 
   314  080D                     	;# 
   315  080E                     	;# 
   316  080E                     	;# 
   317  080F                     	;# 
   318  0810                     	;# 
   319  0810                     	;# 
   320  0811                     	;# 
   321  0812                     	;# 
   322  0812                     	;# 
   323  0813                     	;# 
   324  0814                     	;# 
   325  0815                     	;# 
   326  0816                     	;# 
   327  0817                     	;# 
   328  0818                     	;# 
   329  0819                     	;# 
   330  081A                     	;# 
   331  081A                     	;# 
   332  081B                     	;# 
   333  081C                     	;# 
   334  081C                     	;# 
   335  081D                     	;# 
   336  088C                     	;# 
   337  088D                     	;# 
   338  088E                     	;# 
   339  088F                     	;# 
   340  088F                     	;# 
   341  0890                     	;# 
   342  0891                     	;# 
   343  0892                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0894                     	;# 
   347  0895                     	;# 
   348  0896                     	;# 
   349  0897                     	;# 
   350  0897                     	;# 
   351  0898                     	;# 
   352  0899                     	;# 
   353  0D8C                     	;# 
   354  0D8C                     	;# 
   355  0D8D                     	;# 
   356  0D8E                     	;# 
   357  0D8F                     	;# 
   358  0D8F                     	;# 
   359  0D90                     	;# 
   360  0D91                     	;# 
   361  0D92                     	;# 
   362  0D92                     	;# 
   363  0D93                     	;# 
   364  0D94                     	;# 
   365  0D95                     	;# 
   366  0D95                     	;# 
   367  0D96                     	;# 
   368  0D97                     	;# 
   369  0D98                     	;# 
   370  0D99                     	;# 
   371  0D9A                     	;# 
   372  0D9B                     	;# 
   373  0D9C                     	;# 
   374  0D9D                     	;# 
   375  0D9E                     	;# 
   376  0D9E                     	;# 
   377  0D9F                     	;# 
   378  0DA0                     	;# 
   379  0DA1                     	;# 
   380  0DA1                     	;# 
   381  0DA2                     	;# 
   382  0DA3                     	;# 
   383  0DA4                     	;# 
   384  0DA4                     	;# 
   385  0DA5                     	;# 
   386  0DA6                     	;# 
   387  0DA7                     	;# 
   388  0DA7                     	;# 
   389  0DA8                     	;# 
   390  0DA9                     	;# 
   391  0DAA                     	;# 
   392  0DAB                     	;# 
   393  0DAC                     	;# 
   394  0DAD                     	;# 
   395  0DAE                     	;# 
   396  0DAF                     	;# 
   397  0E0F                     	;# 
   398  0E10                     	;# 
   399  0E11                     	;# 
   400  0E12                     	;# 
   401  0E13                     	;# 
   402  0E14                     	;# 
   403  0E15                     	;# 
   404  0E16                     	;# 
   405  0E17                     	;# 
   406  0E18                     	;# 
   407  0E19                     	;# 
   408  0E1A                     	;# 
   409  0E1B                     	;# 
   410  0E1C                     	;# 
   411  0E1D                     	;# 
   412  0E1E                     	;# 
   413  0E1F                     	;# 
   414  0E20                     	;# 
   415  0E21                     	;# 
   416  0E22                     	;# 
   417  0E23                     	;# 
   418  0E24                     	;# 
   419  0E25                     	;# 
   420  0E26                     	;# 
   421  0E27                     	;# 
   422  0E28                     	;# 
   423  0E29                     	;# 
   424  0E2A                     	;# 
   425  0E2B                     	;# 
   426  0E2C                     	;# 
   427  0E2D                     	;# 
   428  0E2E                     	;# 
   429  0E90                     	;# 
   430  0E91                     	;# 
   431  0E92                     	;# 
   432  0E94                     	;# 
   433  0E95                     	;# 
   434  0E9C                     	;# 
   435  0E9D                     	;# 
   436  0E9E                     	;# 
   437  0E9F                     	;# 
   438  0EA0                     	;# 
   439  0EA1                     	;# 
   440  0EA2                     	;# 
   441  0EA3                     	;# 
   442  0EA4                     	;# 
   443  0EA5                     	;# 
   444  0EA6                     	;# 
   445  0EA7                     	;# 
   446  0F0F                     	;# 
   447  0F10                     	;# 
   448  0F11                     	;# 
   449  0F12                     	;# 
   450  0F13                     	;# 
   451  0F14                     	;# 
   452  0F15                     	;# 
   453  0F16                     	;# 
   454  0F17                     	;# 
   455  0F18                     	;# 
   456  0F19                     	;# 
   457  0F1A                     	;# 
   458  0F1B                     	;# 
   459  0F1C                     	;# 
   460  0F1D                     	;# 
   461  0F1E                     	;# 
   462  0F1F                     	;# 
   463  0F20                     	;# 
   464  0F21                     	;# 
   465  0F22                     	;# 
   466  0F23                     	;# 
   467  0F24                     	;# 
   468  0F25                     	;# 
   469  0F26                     	;# 
   470  0F27                     	;# 
   471  0F28                     	;# 
   472  0F29                     	;# 
   473  0F2A                     	;# 
   474  0F2B                     	;# 
   475  0F2C                     	;# 
   476  0F2D                     	;# 
   477  0F2E                     	;# 
   478  0F2F                     	;# 
   479  0F30                     	;# 
   480  0F31                     	;# 
   481  0F32                     	;# 
   482  0F33                     	;# 
   483  0F34                     	;# 
   484  0F35                     	;# 
   485  0F36                     	;# 
   486  0F37                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  0010                     	;# 
   514  0011                     	;# 
   515  0012                     	;# 
   516  0013                     	;# 
   517  0014                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  001D                     	;# 
   530  001E                     	;# 
   531  001F                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011C                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  018E                     	;# 
   567  0191                     	;# 
   568  0191                     	;# 
   569  0192                     	;# 
   570  0193                     	;# 
   571  0193                     	;# 
   572  0194                     	;# 
   573  0195                     	;# 
   574  0196                     	;# 
   575  0197                     	;# 
   576  0199                     	;# 
   577  0199                     	;# 
   578  0199                     	;# 
   579  019A                     	;# 
   580  019A                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019C                     	;# 
   590  019D                     	;# 
   591  019D                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019E                     	;# 
   595  019E                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  020C                     	;# 
   602  020D                     	;# 
   603  020E                     	;# 
   604  0211                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0212                     	;# 
   608  0213                     	;# 
   609  0213                     	;# 
   610  0214                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0216                     	;# 
   617  0216                     	;# 
   618  0217                     	;# 
   619  0217                     	;# 
   620  028C                     	;# 
   621  028D                     	;# 
   622  028E                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0294                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  029B                     	;# 
   633  029E                     	;# 
   634  030C                     	;# 
   635  030D                     	;# 
   636  030E                     	;# 
   637  038C                     	;# 
   638  038D                     	;# 
   639  038E                     	;# 
   640  0391                     	;# 
   641  0392                     	;# 
   642  0393                     	;# 
   643  0394                     	;# 
   644  0395                     	;# 
   645  0396                     	;# 
   646  0397                     	;# 
   647  0398                     	;# 
   648  0399                     	;# 
   649  040E                     	;# 
   650  0413                     	;# 
   651  0413                     	;# 
   652  0414                     	;# 
   653  0414                     	;# 
   654  0415                     	;# 
   655  0416                     	;# 
   656  0417                     	;# 
   657  0418                     	;# 
   658  041A                     	;# 
   659  041A                     	;# 
   660  041B                     	;# 
   661  041B                     	;# 
   662  041C                     	;# 
   663  041D                     	;# 
   664  041E                     	;# 
   665  041F                     	;# 
   666  0493                     	;# 
   667  0494                     	;# 
   668  0495                     	;# 
   669  0496                     	;# 
   670  049A                     	;# 
   671  049B                     	;# 
   672  049C                     	;# 
   673  049D                     	;# 
   674  058C                     	;# 
   675  058C                     	;# 
   676  058D                     	;# 
   677  058E                     	;# 
   678  058E                     	;# 
   679  058F                     	;# 
   680  0590                     	;# 
   681  0590                     	;# 
   682  0591                     	;# 
   683  0592                     	;# 
   684  0592                     	;# 
   685  0593                     	;# 
   686  0594                     	;# 
   687  0594                     	;# 
   688  0595                     	;# 
   689  0596                     	;# 
   690  0596                     	;# 
   691  0597                     	;# 
   692  0598                     	;# 
   693  0599                     	;# 
   694  059A                     	;# 
   695  059B                     	;# 
   696  059B                     	;# 
   697  059C                     	;# 
   698  059D                     	;# 
   699  060C                     	;# 
   700  060C                     	;# 
   701  060D                     	;# 
   702  060E                     	;# 
   703  060F                     	;# 
   704  060F                     	;# 
   705  0610                     	;# 
   706  0611                     	;# 
   707  0612                     	;# 
   708  0613                     	;# 
   709  0614                     	;# 
   710  0617                     	;# 
   711  0618                     	;# 
   712  0619                     	;# 
   713  061A                     	;# 
   714  061B                     	;# 
   715  061C                     	;# 
   716  0691                     	;# 
   717  0692                     	;# 
   718  0693                     	;# 
   719  0694                     	;# 
   720  0695                     	;# 
   721  0696                     	;# 
   722  0697                     	;# 
   723  0699                     	;# 
   724  069A                     	;# 
   725  0711                     	;# 
   726  0712                     	;# 
   727  0713                     	;# 
   728  0714                     	;# 
   729  0715                     	;# 
   730  0718                     	;# 
   731  0718                     	;# 
   732  0719                     	;# 
   733  071A                     	;# 
   734  071A                     	;# 
   735  071B                     	;# 
   736  071C                     	;# 
   737  071D                     	;# 
   738  0791                     	;# 
   739  0791                     	;# 
   740  0792                     	;# 
   741  0793                     	;# 
   742  0793                     	;# 
   743  0794                     	;# 
   744  0795                     	;# 
   745  0795                     	;# 
   746  0796                     	;# 
   747  0797                     	;# 
   748  0797                     	;# 
   749  0798                     	;# 
   750  0799                     	;# 
   751  079A                     	;# 
   752  080C                     	;# 
   753  080C                     	;# 
   754  080D                     	;# 
   755  080E                     	;# 
   756  080E                     	;# 
   757  080F                     	;# 
   758  0810                     	;# 
   759  0810                     	;# 
   760  0811                     	;# 
   761  0812                     	;# 
   762  0812                     	;# 
   763  0813                     	;# 
   764  0814                     	;# 
   765  0815                     	;# 
   766  0816                     	;# 
   767  0817                     	;# 
   768  0818                     	;# 
   769  0819                     	;# 
   770  081A                     	;# 
   771  081A                     	;# 
   772  081B                     	;# 
   773  081C                     	;# 
   774  081C                     	;# 
   775  081D                     	;# 
   776  088C                     	;# 
   777  088D                     	;# 
   778  088E                     	;# 
   779  088F                     	;# 
   780  088F                     	;# 
   781  0890                     	;# 
   782  0891                     	;# 
   783  0892                     	;# 
   784  0893                     	;# 
   785  0893                     	;# 
   786  0894                     	;# 
   787  0895                     	;# 
   788  0896                     	;# 
   789  0897                     	;# 
   790  0897                     	;# 
   791  0898                     	;# 
   792  0899                     	;# 
   793  0D8C                     	;# 
   794  0D8C                     	;# 
   795  0D8D                     	;# 
   796  0D8E                     	;# 
   797  0D8F                     	;# 
   798  0D8F                     	;# 
   799  0D90                     	;# 
   800  0D91                     	;# 
   801  0D92                     	;# 
   802  0D92                     	;# 
   803  0D93                     	;# 
   804  0D94                     	;# 
   805  0D95                     	;# 
   806  0D95                     	;# 
   807  0D96                     	;# 
   808  0D97                     	;# 
   809  0D98                     	;# 
   810  0D99                     	;# 
   811  0D9A                     	;# 
   812  0D9B                     	;# 
   813  0D9C                     	;# 
   814  0D9D                     	;# 
   815  0D9E                     	;# 
   816  0D9E                     	;# 
   817  0D9F                     	;# 
   818  0DA0                     	;# 
   819  0DA1                     	;# 
   820  0DA1                     	;# 
   821  0DA2                     	;# 
   822  0DA3                     	;# 
   823  0DA4                     	;# 
   824  0DA4                     	;# 
   825  0DA5                     	;# 
   826  0DA6                     	;# 
   827  0DA7                     	;# 
   828  0DA7                     	;# 
   829  0DA8                     	;# 
   830  0DA9                     	;# 
   831  0DAA                     	;# 
   832  0DAB                     	;# 
   833  0DAC                     	;# 
   834  0DAD                     	;# 
   835  0DAE                     	;# 
   836  0DAF                     	;# 
   837  0E0F                     	;# 
   838  0E10                     	;# 
   839  0E11                     	;# 
   840  0E12                     	;# 
   841  0E13                     	;# 
   842  0E14                     	;# 
   843  0E15                     	;# 
   844  0E16                     	;# 
   845  0E17                     	;# 
   846  0E18                     	;# 
   847  0E19                     	;# 
   848  0E1A                     	;# 
   849  0E1B                     	;# 
   850  0E1C                     	;# 
   851  0E1D                     	;# 
   852  0E1E                     	;# 
   853  0E1F                     	;# 
   854  0E20                     	;# 
   855  0E21                     	;# 
   856  0E22                     	;# 
   857  0E23                     	;# 
   858  0E24                     	;# 
   859  0E25                     	;# 
   860  0E26                     	;# 
   861  0E27                     	;# 
   862  0E28                     	;# 
   863  0E29                     	;# 
   864  0E2A                     	;# 
   865  0E2B                     	;# 
   866  0E2C                     	;# 
   867  0E2D                     	;# 
   868  0E2E                     	;# 
   869  0E90                     	;# 
   870  0E91                     	;# 
   871  0E92                     	;# 
   872  0E94                     	;# 
   873  0E95                     	;# 
   874  0E9C                     	;# 
   875  0E9D                     	;# 
   876  0E9E                     	;# 
   877  0E9F                     	;# 
   878  0EA0                     	;# 
   879  0EA1                     	;# 
   880  0EA2                     	;# 
   881  0EA3                     	;# 
   882  0EA4                     	;# 
   883  0EA5                     	;# 
   884  0EA6                     	;# 
   885  0EA7                     	;# 
   886  0F0F                     	;# 
   887  0F10                     	;# 
   888  0F11                     	;# 
   889  0F12                     	;# 
   890  0F13                     	;# 
   891  0F14                     	;# 
   892  0F15                     	;# 
   893  0F16                     	;# 
   894  0F17                     	;# 
   895  0F18                     	;# 
   896  0F19                     	;# 
   897  0F1A                     	;# 
   898  0F1B                     	;# 
   899  0F1C                     	;# 
   900  0F1D                     	;# 
   901  0F1E                     	;# 
   902  0F1F                     	;# 
   903  0F20                     	;# 
   904  0F21                     	;# 
   905  0F22                     	;# 
   906  0F23                     	;# 
   907  0F24                     	;# 
   908  0F25                     	;# 
   909  0F26                     	;# 
   910  0F27                     	;# 
   911  0F28                     	;# 
   912  0F29                     	;# 
   913  0F2A                     	;# 
   914  0F2B                     	;# 
   915  0F2C                     	;# 
   916  0F2D                     	;# 
   917  0F2E                     	;# 
   918  0F2F                     	;# 
   919  0F30                     	;# 
   920  0F31                     	;# 
   921  0F32                     	;# 
   922  0F33                     	;# 
   923  0F34                     	;# 
   924  0F35                     	;# 
   925  0F36                     	;# 
   926  0F37                     	;# 
   927  0FE4                     	;# 
   928  0FE5                     	;# 
   929  0FE6                     	;# 
   930  0FE7                     	;# 
   931  0FE8                     	;# 
   932  0FE9                     	;# 
   933  0FEA                     	;# 
   934  0FEB                     	;# 
   935  0FED                     	;# 
   936  0FEE                     	;# 
   937  0FEF                     	;# 
   938  0000                     	;# 
   939  0001                     	;# 
   940  0002                     	;# 
   941  0003                     	;# 
   942  0004                     	;# 
   943  0005                     	;# 
   944  0006                     	;# 
   945  0007                     	;# 
   946  0008                     	;# 
   947  0009                     	;# 
   948  000A                     	;# 
   949  000B                     	;# 
   950  000C                     	;# 
   951  000D                     	;# 
   952  000E                     	;# 
   953  0010                     	;# 
   954  0011                     	;# 
   955  0012                     	;# 
   956  0013                     	;# 
   957  0014                     	;# 
   958  0015                     	;# 
   959  0016                     	;# 
   960  0016                     	;# 
   961  0017                     	;# 
   962  0018                     	;# 
   963  0019                     	;# 
   964  001A                     	;# 
   965  001A                     	;# 
   966  001B                     	;# 
   967  001B                     	;# 
   968  001C                     	;# 
   969  001D                     	;# 
   970  001E                     	;# 
   971  001F                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  0090                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0093                     	;# 
   979  0094                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  009F                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011C                     	;# 
  1004  018C                     	;# 
  1005  018D                     	;# 
  1006  018E                     	;# 
  1007  0191                     	;# 
  1008  0191                     	;# 
  1009  0192                     	;# 
  1010  0193                     	;# 
  1011  0193                     	;# 
  1012  0194                     	;# 
  1013  0195                     	;# 
  1014  0196                     	;# 
  1015  0197                     	;# 
  1016  0199                     	;# 
  1017  0199                     	;# 
  1018  0199                     	;# 
  1019  019A                     	;# 
  1020  019A                     	;# 
  1021  019A                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019C                     	;# 
  1028  019C                     	;# 
  1029  019C                     	;# 
  1030  019D                     	;# 
  1031  019D                     	;# 
  1032  019D                     	;# 
  1033  019E                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  019F                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  020C                     	;# 
  1042  020D                     	;# 
  1043  020E                     	;# 
  1044  0211                     	;# 
  1045  0211                     	;# 
  1046  0212                     	;# 
  1047  0212                     	;# 
  1048  0213                     	;# 
  1049  0213                     	;# 
  1050  0214                     	;# 
  1051  0214                     	;# 
  1052  0215                     	;# 
  1053  0215                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0216                     	;# 
  1057  0216                     	;# 
  1058  0217                     	;# 
  1059  0217                     	;# 
  1060  028C                     	;# 
  1061  028D                     	;# 
  1062  028E                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0298                     	;# 
  1069  0298                     	;# 
  1070  0299                     	;# 
  1071  029A                     	;# 
  1072  029B                     	;# 
  1073  029E                     	;# 
  1074  030C                     	;# 
  1075  030D                     	;# 
  1076  030E                     	;# 
  1077  038C                     	;# 
  1078  038D                     	;# 
  1079  038E                     	;# 
  1080  0391                     	;# 
  1081  0392                     	;# 
  1082  0393                     	;# 
  1083  0394                     	;# 
  1084  0395                     	;# 
  1085  0396                     	;# 
  1086  0397                     	;# 
  1087  0398                     	;# 
  1088  0399                     	;# 
  1089  040E                     	;# 
  1090  0413                     	;# 
  1091  0413                     	;# 
  1092  0414                     	;# 
  1093  0414                     	;# 
  1094  0415                     	;# 
  1095  0416                     	;# 
  1096  0417                     	;# 
  1097  0418                     	;# 
  1098  041A                     	;# 
  1099  041A                     	;# 
  1100  041B                     	;# 
  1101  041B                     	;# 
  1102  041C                     	;# 
  1103  041D                     	;# 
  1104  041E                     	;# 
  1105  041F                     	;# 
  1106  0493                     	;# 
  1107  0494                     	;# 
  1108  0495                     	;# 
  1109  0496                     	;# 
  1110  049A                     	;# 
  1111  049B                     	;# 
  1112  049C                     	;# 
  1113  049D                     	;# 
  1114  058C                     	;# 
  1115  058C                     	;# 
  1116  058D                     	;# 
  1117  058E                     	;# 
  1118  058E                     	;# 
  1119  058F                     	;# 
  1120  0590                     	;# 
  1121  0590                     	;# 
  1122  0591                     	;# 
  1123  0592                     	;# 
  1124  0592                     	;# 
  1125  0593                     	;# 
  1126  0594                     	;# 
  1127  0594                     	;# 
  1128  0595                     	;# 
  1129  0596                     	;# 
  1130  0596                     	;# 
  1131  0597                     	;# 
  1132  0598                     	;# 
  1133  0599                     	;# 
  1134  059A                     	;# 
  1135  059B                     	;# 
  1136  059B                     	;# 
  1137  059C                     	;# 
  1138  059D                     	;# 
  1139  060C                     	;# 
  1140  060C                     	;# 
  1141  060D                     	;# 
  1142  060E                     	;# 
  1143  060F                     	;# 
  1144  060F                     	;# 
  1145  0610                     	;# 
  1146  0611                     	;# 
  1147  0612                     	;# 
  1148  0613                     	;# 
  1149  0614                     	;# 
  1150  0617                     	;# 
  1151  0618                     	;# 
  1152  0619                     	;# 
  1153  061A                     	;# 
  1154  061B                     	;# 
  1155  061C                     	;# 
  1156  0691                     	;# 
  1157  0692                     	;# 
  1158  0693                     	;# 
  1159  0694                     	;# 
  1160  0695                     	;# 
  1161  0696                     	;# 
  1162  0697                     	;# 
  1163  0699                     	;# 
  1164  069A                     	;# 
  1165  0711                     	;# 
  1166  0712                     	;# 
  1167  0713                     	;# 
  1168  0714                     	;# 
  1169  0715                     	;# 
  1170  0718                     	;# 
  1171  0718                     	;# 
  1172  0719                     	;# 
  1173  071A                     	;# 
  1174  071A                     	;# 
  1175  071B                     	;# 
  1176  071C                     	;# 
  1177  071D                     	;# 
  1178  0791                     	;# 
  1179  0791                     	;# 
  1180  0792                     	;# 
  1181  0793                     	;# 
  1182  0793                     	;# 
  1183  0794                     	;# 
  1184  0795                     	;# 
  1185  0795                     	;# 
  1186  0796                     	;# 
  1187  0797                     	;# 
  1188  0797                     	;# 
  1189  0798                     	;# 
  1190  0799                     	;# 
  1191  079A                     	;# 
  1192  080C                     	;# 
  1193  080C                     	;# 
  1194  080D                     	;# 
  1195  080E                     	;# 
  1196  080E                     	;# 
  1197  080F                     	;# 
  1198  0810                     	;# 
  1199  0810                     	;# 
  1200  0811                     	;# 
  1201  0812                     	;# 
  1202  0812                     	;# 
  1203  0813                     	;# 
  1204  0814                     	;# 
  1205  0815                     	;# 
  1206  0816                     	;# 
  1207  0817                     	;# 
  1208  0818                     	;# 
  1209  0819                     	;# 
  1210  081A                     	;# 
  1211  081A                     	;# 
  1212  081B                     	;# 
  1213  081C                     	;# 
  1214  081C                     	;# 
  1215  081D                     	;# 
  1216  088C                     	;# 
  1217  088D                     	;# 
  1218  088E                     	;# 
  1219  088F                     	;# 
  1220  088F                     	;# 
  1221  0890                     	;# 
  1222  0891                     	;# 
  1223  0892                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0894                     	;# 
  1227  0895                     	;# 
  1228  0896                     	;# 
  1229  0897                     	;# 
  1230  0897                     	;# 
  1231  0898                     	;# 
  1232  0899                     	;# 
  1233  0D8C                     	;# 
  1234  0D8C                     	;# 
  1235  0D8D                     	;# 
  1236  0D8E                     	;# 
  1237  0D8F                     	;# 
  1238  0D8F                     	;# 
  1239  0D90                     	;# 
  1240  0D91                     	;# 
  1241  0D92                     	;# 
  1242  0D92                     	;# 
  1243  0D93                     	;# 
  1244  0D94                     	;# 
  1245  0D95                     	;# 
  1246  0D95                     	;# 
  1247  0D96                     	;# 
  1248  0D97                     	;# 
  1249  0D98                     	;# 
  1250  0D99                     	;# 
  1251  0D9A                     	;# 
  1252  0D9B                     	;# 
  1253  0D9C                     	;# 
  1254  0D9D                     	;# 
  1255  0D9E                     	;# 
  1256  0D9E                     	;# 
  1257  0D9F                     	;# 
  1258  0DA0                     	;# 
  1259  0DA1                     	;# 
  1260  0DA1                     	;# 
  1261  0DA2                     	;# 
  1262  0DA3                     	;# 
  1263  0DA4                     	;# 
  1264  0DA4                     	;# 
  1265  0DA5                     	;# 
  1266  0DA6                     	;# 
  1267  0DA7                     	;# 
  1268  0DA7                     	;# 
  1269  0DA8                     	;# 
  1270  0DA9                     	;# 
  1271  0DAA                     	;# 
  1272  0DAB                     	;# 
  1273  0DAC                     	;# 
  1274  0DAD                     	;# 
  1275  0DAE                     	;# 
  1276  0DAF                     	;# 
  1277  0E0F                     	;# 
  1278  0E10                     	;# 
  1279  0E11                     	;# 
  1280  0E12                     	;# 
  1281  0E13                     	;# 
  1282  0E14                     	;# 
  1283  0E15                     	;# 
  1284  0E16                     	;# 
  1285  0E17                     	;# 
  1286  0E18                     	;# 
  1287  0E19                     	;# 
  1288  0E1A                     	;# 
  1289  0E1B                     	;# 
  1290  0E1C                     	;# 
  1291  0E1D                     	;# 
  1292  0E1E                     	;# 
  1293  0E1F                     	;# 
  1294  0E20                     	;# 
  1295  0E21                     	;# 
  1296  0E22                     	;# 
  1297  0E23                     	;# 
  1298  0E24                     	;# 
  1299  0E25                     	;# 
  1300  0E26                     	;# 
  1301  0E27                     	;# 
  1302  0E28                     	;# 
  1303  0E29                     	;# 
  1304  0E2A                     	;# 
  1305  0E2B                     	;# 
  1306  0E2C                     	;# 
  1307  0E2D                     	;# 
  1308  0E2E                     	;# 
  1309  0E90                     	;# 
  1310  0E91                     	;# 
  1311  0E92                     	;# 
  1312  0E94                     	;# 
  1313  0E95                     	;# 
  1314  0E9C                     	;# 
  1315  0E9D                     	;# 
  1316  0E9E                     	;# 
  1317  0E9F                     	;# 
  1318  0EA0                     	;# 
  1319  0EA1                     	;# 
  1320  0EA2                     	;# 
  1321  0EA3                     	;# 
  1322  0EA4                     	;# 
  1323  0EA5                     	;# 
  1324  0EA6                     	;# 
  1325  0EA7                     	;# 
  1326  0F0F                     	;# 
  1327  0F10                     	;# 
  1328  0F11                     	;# 
  1329  0F12                     	;# 
  1330  0F13                     	;# 
  1331  0F14                     	;# 
  1332  0F15                     	;# 
  1333  0F16                     	;# 
  1334  0F17                     	;# 
  1335  0F18                     	;# 
  1336  0F19                     	;# 
  1337  0F1A                     	;# 
  1338  0F1B                     	;# 
  1339  0F1C                     	;# 
  1340  0F1D                     	;# 
  1341  0F1E                     	;# 
  1342  0F1F                     	;# 
  1343  0F20                     	;# 
  1344  0F21                     	;# 
  1345  0F22                     	;# 
  1346  0F23                     	;# 
  1347  0F24                     	;# 
  1348  0F25                     	;# 
  1349  0F26                     	;# 
  1350  0F27                     	;# 
  1351  0F28                     	;# 
  1352  0F29                     	;# 
  1353  0F2A                     	;# 
  1354  0F2B                     	;# 
  1355  0F2C                     	;# 
  1356  0F2D                     	;# 
  1357  0F2E                     	;# 
  1358  0F2F                     	;# 
  1359  0F30                     	;# 
  1360  0F31                     	;# 
  1361  0F32                     	;# 
  1362  0F33                     	;# 
  1363  0F34                     	;# 
  1364  0F35                     	;# 
  1365  0F36                     	;# 
  1366  0F37                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  000E                     	;# 
  1393  0010                     	;# 
  1394  0011                     	;# 
  1395  0012                     	;# 
  1396  0013                     	;# 
  1397  0014                     	;# 
  1398  0015                     	;# 
  1399  0016                     	;# 
  1400  0016                     	;# 
  1401  0017                     	;# 
  1402  0018                     	;# 
  1403  0019                     	;# 
  1404  001A                     	;# 
  1405  001A                     	;# 
  1406  001B                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  001D                     	;# 
  1410  001E                     	;# 
  1411  001F                     	;# 
  1412  008C                     	;# 
  1413  008D                     	;# 
  1414  008E                     	;# 
  1415  0090                     	;# 
  1416  0091                     	;# 
  1417  0092                     	;# 
  1418  0093                     	;# 
  1419  0094                     	;# 
  1420  0095                     	;# 
  1421  0096                     	;# 
  1422  0098                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  009F                     	;# 
  1431  010C                     	;# 
  1432  010D                     	;# 
  1433  010E                     	;# 
  1434  0111                     	;# 
  1435  0112                     	;# 
  1436  0113                     	;# 
  1437  0114                     	;# 
  1438  0115                     	;# 
  1439  0116                     	;# 
  1440  0117                     	;# 
  1441  0118                     	;# 
  1442  0119                     	;# 
  1443  011C                     	;# 
  1444  018C                     	;# 
  1445  018D                     	;# 
  1446  018E                     	;# 
  1447  0191                     	;# 
  1448  0191                     	;# 
  1449  0192                     	;# 
  1450  0193                     	;# 
  1451  0193                     	;# 
  1452  0194                     	;# 
  1453  0195                     	;# 
  1454  0196                     	;# 
  1455  0197                     	;# 
  1456  0199                     	;# 
  1457  0199                     	;# 
  1458  0199                     	;# 
  1459  019A                     	;# 
  1460  019A                     	;# 
  1461  019A                     	;# 
  1462  019B                     	;# 
  1463  019B                     	;# 
  1464  019B                     	;# 
  1465  019B                     	;# 
  1466  019B                     	;# 
  1467  019C                     	;# 
  1468  019C                     	;# 
  1469  019C                     	;# 
  1470  019D                     	;# 
  1471  019D                     	;# 
  1472  019D                     	;# 
  1473  019E                     	;# 
  1474  019E                     	;# 
  1475  019E                     	;# 
  1476  019F                     	;# 
  1477  019F                     	;# 
  1478  019F                     	;# 
  1479  019F                     	;# 
  1480  019F                     	;# 
  1481  020C                     	;# 
  1482  020D                     	;# 
  1483  020E                     	;# 
  1484  0211                     	;# 
  1485  0211                     	;# 
  1486  0212                     	;# 
  1487  0212                     	;# 
  1488  0213                     	;# 
  1489  0213                     	;# 
  1490  0214                     	;# 
  1491  0214                     	;# 
  1492  0215                     	;# 
  1493  0215                     	;# 
  1494  0215                     	;# 
  1495  0215                     	;# 
  1496  0216                     	;# 
  1497  0216                     	;# 
  1498  0217                     	;# 
  1499  0217                     	;# 
  1500  028C                     	;# 
  1501  028D                     	;# 
  1502  028E                     	;# 
  1503  0291                     	;# 
  1504  0291                     	;# 
  1505  0292                     	;# 
  1506  0293                     	;# 
  1507  0294                     	;# 
  1508  0298                     	;# 
  1509  0298                     	;# 
  1510  0299                     	;# 
  1511  029A                     	;# 
  1512  029B                     	;# 
  1513  029E                     	;# 
  1514  030C                     	;# 
  1515  030D                     	;# 
  1516  030E                     	;# 
  1517  038C                     	;# 
  1518  038D                     	;# 
  1519  038E                     	;# 
  1520  0391                     	;# 
  1521  0392                     	;# 
  1522  0393                     	;# 
  1523  0394                     	;# 
  1524  0395                     	;# 
  1525  0396                     	;# 
  1526  0397                     	;# 
  1527  0398                     	;# 
  1528  0399                     	;# 
  1529  040E                     	;# 
  1530  0413                     	;# 
  1531  0413                     	;# 
  1532  0414                     	;# 
  1533  0414                     	;# 
  1534  0415                     	;# 
  1535  0416                     	;# 
  1536  0417                     	;# 
  1537  0418                     	;# 
  1538  041A                     	;# 
  1539  041A                     	;# 
  1540  041B                     	;# 
  1541  041B                     	;# 
  1542  041C                     	;# 
  1543  041D                     	;# 
  1544  041E                     	;# 
  1545  041F                     	;# 
  1546  0493                     	;# 
  1547  0494                     	;# 
  1548  0495                     	;# 
  1549  0496                     	;# 
  1550  049A                     	;# 
  1551  049B                     	;# 
  1552  049C                     	;# 
  1553  049D                     	;# 
  1554  058C                     	;# 
  1555  058C                     	;# 
  1556  058D                     	;# 
  1557  058E                     	;# 
  1558  058E                     	;# 
  1559  058F                     	;# 
  1560  0590                     	;# 
  1561  0590                     	;# 
  1562  0591                     	;# 
  1563  0592                     	;# 
  1564  0592                     	;# 
  1565  0593                     	;# 
  1566  0594                     	;# 
  1567  0594                     	;# 
  1568  0595                     	;# 
  1569  0596                     	;# 
  1570  0596                     	;# 
  1571  0597                     	;# 
  1572  0598                     	;# 
  1573  0599                     	;# 
  1574  059A                     	;# 
  1575  059B                     	;# 
  1576  059B                     	;# 
  1577  059C                     	;# 
  1578  059D                     	;# 
  1579  060C                     	;# 
  1580  060C                     	;# 
  1581  060D                     	;# 
  1582  060E                     	;# 
  1583  060F                     	;# 
  1584  060F                     	;# 
  1585  0610                     	;# 
  1586  0611                     	;# 
  1587  0612                     	;# 
  1588  0613                     	;# 
  1589  0614                     	;# 
  1590  0617                     	;# 
  1591  0618                     	;# 
  1592  0619                     	;# 
  1593  061A                     	;# 
  1594  061B                     	;# 
  1595  061C                     	;# 
  1596  0691                     	;# 
  1597  0692                     	;# 
  1598  0693                     	;# 
  1599  0694                     	;# 
  1600  0695                     	;# 
  1601  0696                     	;# 
  1602  0697                     	;# 
  1603  0699                     	;# 
  1604  069A                     	;# 
  1605  0711                     	;# 
  1606  0712                     	;# 
  1607  0713                     	;# 
  1608  0714                     	;# 
  1609  0715                     	;# 
  1610  0718                     	;# 
  1611  0718                     	;# 
  1612  0719                     	;# 
  1613  071A                     	;# 
  1614  071A                     	;# 
  1615  071B                     	;# 
  1616  071C                     	;# 
  1617  071D                     	;# 
  1618  0791                     	;# 
  1619  0791                     	;# 
  1620  0792                     	;# 
  1621  0793                     	;# 
  1622  0793                     	;# 
  1623  0794                     	;# 
  1624  0795                     	;# 
  1625  0795                     	;# 
  1626  0796                     	;# 
  1627  0797                     	;# 
  1628  0797                     	;# 
  1629  0798                     	;# 
  1630  0799                     	;# 
  1631  079A                     	;# 
  1632  080C                     	;# 
  1633  080C                     	;# 
  1634  080D                     	;# 
  1635  080E                     	;# 
  1636  080E                     	;# 
  1637  080F                     	;# 
  1638  0810                     	;# 
  1639  0810                     	;# 
  1640  0811                     	;# 
  1641  0812                     	;# 
  1642  0812                     	;# 
  1643  0813                     	;# 
  1644  0814                     	;# 
  1645  0815                     	;# 
  1646  0816                     	;# 
  1647  0817                     	;# 
  1648  0818                     	;# 
  1649  0819                     	;# 
  1650  081A                     	;# 
  1651  081A                     	;# 
  1652  081B                     	;# 
  1653  081C                     	;# 
  1654  081C                     	;# 
  1655  081D                     	;# 
  1656  088C                     	;# 
  1657  088D                     	;# 
  1658  088E                     	;# 
  1659  088F                     	;# 
  1660  088F                     	;# 
  1661  0890                     	;# 
  1662  0891                     	;# 
  1663  0892                     	;# 
  1664  0893                     	;# 
  1665  0893                     	;# 
  1666  0894                     	;# 
  1667  0895                     	;# 
  1668  0896                     	;# 
  1669  0897                     	;# 
  1670  0897                     	;# 
  1671  0898                     	;# 
  1672  0899                     	;# 
  1673  0D8C                     	;# 
  1674  0D8C                     	;# 
  1675  0D8D                     	;# 
  1676  0D8E                     	;# 
  1677  0D8F                     	;# 
  1678  0D8F                     	;# 
  1679  0D90                     	;# 
  1680  0D91                     	;# 
  1681  0D92                     	;# 
  1682  0D92                     	;# 
  1683  0D93                     	;# 
  1684  0D94                     	;# 
  1685  0D95                     	;# 
  1686  0D95                     	;# 
  1687  0D96                     	;# 
  1688  0D97                     	;# 
  1689  0D98                     	;# 
  1690  0D99                     	;# 
  1691  0D9A                     	;# 
  1692  0D9B                     	;# 
  1693  0D9C                     	;# 
  1694  0D9D                     	;# 
  1695  0D9E                     	;# 
  1696  0D9E                     	;# 
  1697  0D9F                     	;# 
  1698  0DA0                     	;# 
  1699  0DA1                     	;# 
  1700  0DA1                     	;# 
  1701  0DA2                     	;# 
  1702  0DA3                     	;# 
  1703  0DA4                     	;# 
  1704  0DA4                     	;# 
  1705  0DA5                     	;# 
  1706  0DA6                     	;# 
  1707  0DA7                     	;# 
  1708  0DA7                     	;# 
  1709  0DA8                     	;# 
  1710  0DA9                     	;# 
  1711  0DAA                     	;# 
  1712  0DAB                     	;# 
  1713  0DAC                     	;# 
  1714  0DAD                     	;# 
  1715  0DAE                     	;# 
  1716  0DAF                     	;# 
  1717  0E0F                     	;# 
  1718  0E10                     	;# 
  1719  0E11                     	;# 
  1720  0E12                     	;# 
  1721  0E13                     	;# 
  1722  0E14                     	;# 
  1723  0E15                     	;# 
  1724  0E16                     	;# 
  1725  0E17                     	;# 
  1726  0E18                     	;# 
  1727  0E19                     	;# 
  1728  0E1A                     	;# 
  1729  0E1B                     	;# 
  1730  0E1C                     	;# 
  1731  0E1D                     	;# 
  1732  0E1E                     	;# 
  1733  0E1F                     	;# 
  1734  0E20                     	;# 
  1735  0E21                     	;# 
  1736  0E22                     	;# 
  1737  0E23                     	;# 
  1738  0E24                     	;# 
  1739  0E25                     	;# 
  1740  0E26                     	;# 
  1741  0E27                     	;# 
  1742  0E28                     	;# 
  1743  0E29                     	;# 
  1744  0E2A                     	;# 
  1745  0E2B                     	;# 
  1746  0E2C                     	;# 
  1747  0E2D                     	;# 
  1748  0E2E                     	;# 
  1749  0E90                     	;# 
  1750  0E91                     	;# 
  1751  0E92                     	;# 
  1752  0E94                     	;# 
  1753  0E95                     	;# 
  1754  0E9C                     	;# 
  1755  0E9D                     	;# 
  1756  0E9E                     	;# 
  1757  0E9F                     	;# 
  1758  0EA0                     	;# 
  1759  0EA1                     	;# 
  1760  0EA2                     	;# 
  1761  0EA3                     	;# 
  1762  0EA4                     	;# 
  1763  0EA5                     	;# 
  1764  0EA6                     	;# 
  1765  0EA7                     	;# 
  1766  0F0F                     	;# 
  1767  0F10                     	;# 
  1768  0F11                     	;# 
  1769  0F12                     	;# 
  1770  0F13                     	;# 
  1771  0F14                     	;# 
  1772  0F15                     	;# 
  1773  0F16                     	;# 
  1774  0F17                     	;# 
  1775  0F18                     	;# 
  1776  0F19                     	;# 
  1777  0F1A                     	;# 
  1778  0F1B                     	;# 
  1779  0F1C                     	;# 
  1780  0F1D                     	;# 
  1781  0F1E                     	;# 
  1782  0F1F                     	;# 
  1783  0F20                     	;# 
  1784  0F21                     	;# 
  1785  0F22                     	;# 
  1786  0F23                     	;# 
  1787  0F24                     	;# 
  1788  0F25                     	;# 
  1789  0F26                     	;# 
  1790  0F27                     	;# 
  1791  0F28                     	;# 
  1792  0F29                     	;# 
  1793  0F2A                     	;# 
  1794  0F2B                     	;# 
  1795  0F2C                     	;# 
  1796  0F2D                     	;# 
  1797  0F2E                     	;# 
  1798  0F2F                     	;# 
  1799  0F30                     	;# 
  1800  0F31                     	;# 
  1801  0F32                     	;# 
  1802  0F33                     	;# 
  1803  0F34                     	;# 
  1804  0F35                     	;# 
  1805  0F36                     	;# 
  1806  0F37                     	;# 
  1807  0FE4                     	;# 
  1808  0FE5                     	;# 
  1809  0FE6                     	;# 
  1810  0FE7                     	;# 
  1811  0FE8                     	;# 
  1812  0FE9                     	;# 
  1813  0FEA                     	;# 
  1814  0FEB                     	;# 
  1815  0FED                     	;# 
  1816  0FEE                     	;# 
  1817  0FEF                     	;# 
  1818  0015                     _TMR0	set	21
  1819  005A                     _T0IF	set	90
  1820  0095                     _OPTION_REGbits	set	149
  1821  008E                     _TRISC	set	142
  1822  008D                     _TRISB	set	141
  1823  008C                     _TRISA	set	140
  1824  0098                     _OSCTUNE	set	152
  1825  0099                     _OSCCON	set	153
  1826  010C                     _LATAbits	set	268
  1827  010E                     _LATCbits	set	270
  1828  010E                     _LATC	set	270
  1829  010D                     _LATB	set	269
  1830  010C                     _LATA	set	268
  1831  0116                     _BORCON	set	278
  1832  018C                     _ANSELA	set	396
  1833  018D                     _ANSELB	set	397
  1834  018E                     _ANSELC	set	398
  1835  020E                     _WPUC	set	526
  1836  020C                     _WPUA	set	524
  1837  020D                     _WPUB	set	525
  1838  0214                     _SSP1STATbits	set	532
  1839  0211                     _SSP1BUF	set	529
  1840  0215                     _SSP1CON1bits	set	533
  1841  0212                     _SSP1ADD	set	530
  1842  0215                     _SSP1CON1	set	533
  1843  0214                     _SSP1STAT	set	532
  1844  10A0                     _BF	set	4256
  1845  0291                     _CCPR1L	set	657
  1846  028E                     _ODCONC	set	654
  1847  028D                     _ODCONB	set	653
  1848  028C                     _ODCONA	set	652
  1849  0E20                     _SSPCLKPPS	set	3616
  1850  0E21                     _SSPDATPPS	set	3617
  1851  0E9D                     _RB5PPS	set	3741
  1852  0E9E                     _RB6PPS	set	3742
  1853                           
  1854                           ; #config settings
  1855  0000                     
  1856                           	psect	cinit
  1857  07EE                     start_initialization:	
  1858  07EE                     __initialization:	
  1859                           
  1860                           ; Clear objects allocated to BANK0
  1861  07EE  305E               	movlw	low __pbssBANK0
  1862  07EF  0084               	movwf	4
  1863  07F0  3000               	movlw	high __pbssBANK0
  1864  07F1  0085               	movwf	5
  1865  07F2  3011               	movlw	17
  1866  07F3  318F  27F3  3187   	fcall	clear_ram0
  1867                           
  1868                           ; Clear objects allocated to BANK1
  1869  07F6  30A0               	movlw	low __pbssBANK1
  1870  07F7  0084               	movwf	4
  1871  07F8  3000               	movlw	high __pbssBANK1
  1872  07F9  0085               	movwf	5
  1873  07FA  3018               	movlw	24
  1874  07FB  318F  27F3         	fcall	clear_ram0
  1875  07FD                     end_of_initialization:	
  1876                           ;End of C runtime variable initialization code
  1877                           
  1878  07FD                     __end_of__initialization:	
  1879  07FD  0020               	movlb	0
  1880  07FE  3180  28E8         	ljmp	_main	;jump to C main() function
  1881                           
  1882                           	psect	bssBANK0
  1883  005E                     __pbssBANK0:	
  1884  005E                     _DataSector:	
  1885  005E                     	ds	4
  1886  0062                     _BootSector:	
  1887  0062                     	ds	4
  1888  0066                     _ReservedSectors:	
  1889  0066                     	ds	2
  1890  0068                     _BytesPerSector:	
  1891  0068                     	ds	2
  1892  006A                     _Fats:	
  1893  006A                     	ds	1
  1894  006B                     _sdhc:	
  1895  006B                     	ds	1
  1896  006C                     _card:	
  1897  006C                     	ds	2
  1898  006E                     _SectorsPerCluster:	
  1899  006E                     	ds	1
  1900                           
  1901                           	psect	bssBANK1
  1902  00A0                     __pbssBANK1:	
  1903  00A0                     _FileSize:	
  1904  00A0                     	ds	4
  1905  00A4                     _FileCluster:	
  1906  00A4                     	ds	4
  1907  00A8                     _RootDirCluster:	
  1908  00A8                     	ds	4
  1909  00AC                     _SectorsPerFat:	
  1910  00AC                     	ds	4
  1911  00B0                     _RootDir:	
  1912  00B0                     	ds	4
  1913  00B4                     _loc:	
  1914  00B4                     	ds	4
  1915                           
  1916                           	psect	clrtext
  1917  0FF3                     clear_ram0:	
  1918                           ;	Called with FSR0 containing the base address, and
  1919                           ;	WREG with the size to clear
  1920                           
  1921  0FF3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1922  0FF4                     clrloop0:	
  1923  0FF4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1924  0FF5  3101               	addfsr 0,1
  1925  0FF6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1926  0FF7  2FF4               	goto	clrloop0	;have we reached the end yet?
  1927  0FF8  3400               	retlw	0	;all done for this memory range, return
  1928                           
  1929                           	psect	cstackCOMMON
  1930  0070                     __pcstackCOMMON:	
  1931  0070                     ?_PIN_MANAGER_Initialize:	
  1932  0070                     ??_PIN_MANAGER_Initialize:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935  0070                     ?_OSCILLATOR_Initialize:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938  0070                     ??_OSCILLATOR_Initialize:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941  0070                     ?_SPI:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944  0070                     ??_SPI:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947  0070                     ?_SPI_Initialize:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950  0070                     ??_SPI_Initialize:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953  0070                     ?_SYSTEM_Initialize:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956  0070                     ??_SYSTEM_Initialize:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959  0070                     ?_readSD:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962  0070                     ?_fat:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965  0070                     ?_initSD:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968  0070                     ?_main:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971  0070                     ?___lmul:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974  0070                     SPI@spidata:	
  1975                           ; 4 bytes @ 0x0
  1976                           
  1977  0070                     ___lmul@multiplier:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980                           
  1981                           ; 4 bytes @ 0x0
  1982  0070                     	ds	4
  1983  0074                     ___lmul@multiplicand:	
  1984                           
  1985                           ; 4 bytes @ 0x4
  1986  0074                     	ds	4
  1987  0078                     ??___lmul:	
  1988  0078                     ___lmul@product:	
  1989                           ; 1 bytes @ 0x8
  1990                           
  1991                           
  1992                           ; 4 bytes @ 0x8
  1993  0078                     	ds	4
  1994  007C                     ??_initSD:	
  1995                           
  1996                           ; 1 bytes @ 0xC
  1997  007C                     	ds	1
  1998                           
  1999                           	psect	cstackBANK0
  2000  0020                     __pcstackBANK0:	
  2001  0020                     ?_Command:	
  2002  0020                     Command@adrs:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005                           
  2006                           ; 4 bytes @ 0x0
  2007  0020                     	ds	4
  2008  0024                     Command@frame2:	
  2009                           
  2010                           ; 1 bytes @ 0x4
  2011  0024                     	ds	1
  2012  0025                     ??_Command:	
  2013                           
  2014                           ; 1 bytes @ 0x5
  2015  0025                     	ds	4
  2016  0029                     Command@frame1:	
  2017                           
  2018                           ; 1 bytes @ 0x9
  2019  0029                     	ds	1
  2020  002A                     Command@res:	
  2021                           
  2022                           ; 1 bytes @ 0xA
  2023  002A                     	ds	1
  2024  002B                     Command@i:	
  2025                           
  2026                           ; 1 bytes @ 0xB
  2027  002B                     	ds	1
  2028  002C                     ?_file:	
  2029  002C                     ??_readSD:	
  2030                           ; 1 bytes @ 0xC
  2031                           
  2032  002C                     ??_fat:	
  2033                           ; 1 bytes @ 0xC
  2034                           
  2035  002C                     file@offset:	
  2036                           ; 1 bytes @ 0xC
  2037                           
  2038  002C                     initSD@r:	
  2039                           ; 2 bytes @ 0xC
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0xC
  2043  002C                     	ds	2
  2044  002E                     file@sect:	
  2045                           
  2046                           ; 1 bytes @ 0xE
  2047  002E                     	ds	1
  2048  002F                     ??_file:	
  2049                           
  2050                           ; 1 bytes @ 0xF
  2051  002F                     	ds	1
  2052  0030                     initSD@i:	
  2053  0030                     readSD@r:	
  2054                           ; 1 bytes @ 0x10
  2055                           
  2056                           
  2057                           ; 2 bytes @ 0x10
  2058  0030                     	ds	2
  2059  0032                     readSD@data:	
  2060                           
  2061                           ; 1 bytes @ 0x12
  2062  0032                     	ds	1
  2063  0033                     readSD@i:	
  2064                           
  2065                           ; 2 bytes @ 0x13
  2066  0033                     	ds	9
  2067  003C                     fat@r:	
  2068                           
  2069                           ; 2 bytes @ 0x1C
  2070  003C                     	ds	2
  2071  003E                     fat@bps1:	
  2072                           
  2073                           ; 1 bytes @ 0x1E
  2074  003E                     	ds	1
  2075  003F                     fat@bps2:	
  2076  003F                     file@r:	
  2077                           ; 1 bytes @ 0x1F
  2078                           
  2079                           
  2080                           ; 2 bytes @ 0x1F
  2081  003F                     	ds	1
  2082  0040                     fat@rs1:	
  2083                           
  2084                           ; 1 bytes @ 0x20
  2085  0040                     	ds	1
  2086  0041                     fat@rs2:	
  2087  0041                     file@fc:	
  2088                           ; 1 bytes @ 0x21
  2089                           
  2090                           
  2091                           ; 4 bytes @ 0x21
  2092  0041                     	ds	1
  2093  0042                     fat@pfs:	
  2094                           
  2095                           ; 4 bytes @ 0x22
  2096  0042                     	ds	3
  2097  0045                     file@fs:	
  2098                           
  2099                           ; 4 bytes @ 0x25
  2100  0045                     	ds	1
  2101  0046                     fat@spf:	
  2102                           
  2103                           ; 4 bytes @ 0x26
  2104  0046                     	ds	3
  2105  0049                     file@i:	
  2106                           
  2107                           ; 2 bytes @ 0x29
  2108  0049                     	ds	1
  2109  004A                     fat@rdc:	
  2110                           
  2111                           ; 4 bytes @ 0x2A
  2112  004A                     	ds	4
  2113  004E                     fat@i:	
  2114                           
  2115                           ; 2 bytes @ 0x2E
  2116  004E                     	ds	2
  2117  0050                     ??_main:	
  2118                           
  2119                           ; 1 bytes @ 0x30
  2120  0050                     	ds	8
  2121  0058                     _main$610:	
  2122                           
  2123                           ; 4 bytes @ 0x38
  2124  0058                     	ds	4
  2125  005C                     main@fn:	
  2126                           
  2127                           ; 1 bytes @ 0x3C
  2128  005C                     	ds	1
  2129  005D                     main@sn:	
  2130                           
  2131                           ; 1 bytes @ 0x3D
  2132  005D                     	ds	1
  2133                           
  2134                           	psect	maintext
  2135  00E8                     __pmaintext:	
  2136 ;;
  2137 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  2138 ;;
  2139 ;; *************** function _main *****************
  2140 ;; Defined at:
  2141 ;;		line 206 in file "main.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  sn              1   61[BANK0 ] unsigned char 
  2146 ;;  fn              1   60[BANK0 ] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : B1F/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;Total ram usage:       14 bytes
  2161 ;; Hardware stack levels required when called:    3
  2162 ;; This function calls:
  2163 ;;		_SYSTEM_Initialize
  2164 ;;		___lmul
  2165 ;;		_fat
  2166 ;;		_file
  2167 ;;		_initSD
  2168 ;;		_readSD
  2169 ;; This function is called by:
  2170 ;;		Startup code after reset
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _main
  2176  00E8                     _main:	
  2177                           
  2178                           ;main.c: 208: unsigned char fn=1, sn=1;
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2182  00E8  0020               	movlb	0	; select bank0
  2183  00E9  01DC               	clrf	main@fn
  2184  00EA  0ADC               	incf	main@fn,f
  2185  00EB  01DD               	clrf	main@sn
  2186  00EC  0ADD               	incf	main@sn,f
  2187                           
  2188                           ;main.c: 209: SYSTEM_Initialize();
  2189  00ED  3180  2019  3180   	fcall	_SYSTEM_Initialize
  2190                           
  2191                           ;main.c: 210: initSD();
  2192  00F0  3182  220C  3180   	fcall	_initSD
  2193                           
  2194                           ;main.c: 211: fat();
  2195  00F3  3184  24D6  3180   	fcall	_fat
  2196                           
  2197                           ;main.c: 212: card=512;
  2198  00F6  3000               	movlw	0
  2199  00F7  0020               	movlb	0	; select bank0
  2200  00F8  00EC               	movwf	_card
  2201  00F9  3002               	movlw	2
  2202  00FA  00ED               	movwf	_card+1
  2203  00FB                     l1432:	
  2204                           ;main.c: 213: while (1)
  2205                           
  2206                           
  2207                           ;main.c: 214: {
  2208                           ;main.c: 215: file(fn*32+20,sn);
  2209  00FB  0020               	movlb	0	; select bank0
  2210  00FC  085C               	movf	main@fn,w
  2211  00FD  00D0               	movwf	??_main
  2212  00FE  01D1               	clrf	??_main+1
  2213  00FF  3005               	movlw	5
  2214  0100                     u1685:	
  2215  0100  35D0               	lslf	??_main,f
  2216  0101  0DD1               	rlf	??_main+1,f
  2217  0102  0B89               	decfsz	9,f
  2218  0103  2900               	goto	u1685
  2219  0104  0850               	movf	??_main,w
  2220  0105  3E14               	addlw	20
  2221  0106  00AC               	movwf	file@offset
  2222  0107  3000               	movlw	0
  2223  0108  3D51               	addwfc	??_main+1,w
  2224  0109  00AD               	movwf	file@offset+1
  2225  010A  085D               	movf	main@sn,w
  2226  010B  00D2               	movwf	??_main+2
  2227  010C  0852               	movf	??_main+2,w
  2228  010D  00AE               	movwf	file@sect
  2229  010E  3182  22EE  3180   	fcall	_file
  2230                           
  2231                           ;main.c: 216: if(FileCluster){
  2232  0111  0021               	movlb	1	; select bank1
  2233  0112  0827               	movf	(_FileCluster+3)^(0+128),w
  2234  0113  0426               	iorwf	(_FileCluster+2)^(0+128),w
  2235  0114  0425               	iorwf	(_FileCluster+1)^(0+128),w
  2236  0115  0424               	iorwf	_FileCluster^(0+128),w
  2237  0116  1903               	skipnz
  2238  0117  28FB               	goto	l1432
  2239                           
  2240                           ;main.c: 217: loc=(1 + (DataSector) + (unsigned long)(FileCluster-2) * SectorsPerCluster
      +                          ) * card ;
  2241  0118  30FE               	movlw	254
  2242  0119  0724               	addwf	_FileCluster^(0+128),w
  2243  011A  00F0               	movwf	___lmul@multiplier
  2244  011B  30FF               	movlw	255
  2245  011C  3D25               	addwfc	(_FileCluster+1)^(0+128),w
  2246  011D  00F1               	movwf	___lmul@multiplier+1
  2247  011E  30FF               	movlw	255
  2248  011F  3D26               	addwfc	(_FileCluster+2)^(0+128),w
  2249  0120  00F2               	movwf	___lmul@multiplier+2
  2250  0121  30FF               	movlw	255
  2251  0122  3D27               	addwfc	(_FileCluster+3)^(0+128),w
  2252  0123  00F3               	movwf	___lmul@multiplier+3
  2253  0124  0020               	movlb	0	; select bank0
  2254  0125  086E               	movf	_SectorsPerCluster,w
  2255  0126  00D0               	movwf	??_main
  2256  0127  01D1               	clrf	??_main+1
  2257  0128  01D2               	clrf	??_main+2
  2258  0129  01D3               	clrf	??_main+3
  2259  012A  0853               	movf	??_main+3,w
  2260  012B  00F7               	movwf	___lmul@multiplicand+3
  2261  012C  0852               	movf	??_main+2,w
  2262  012D  00F6               	movwf	___lmul@multiplicand+2
  2263  012E  0851               	movf	??_main+1,w
  2264  012F  00F5               	movwf	___lmul@multiplicand+1
  2265  0130  0850               	movf	??_main,w
  2266  0131  00F4               	movwf	___lmul@multiplicand
  2267  0132  3180  204B  3180   	fcall	___lmul
  2268  0135  0870               	movf	?___lmul,w
  2269  0136  0020               	movlb	0	; select bank0
  2270  0137  075E               	addwf	_DataSector,w
  2271  0138  00D4               	movwf	??_main+4
  2272  0139  0871               	movf	?___lmul+1,w
  2273  013A  3D5F               	addwfc	_DataSector+1,w
  2274  013B  00D5               	movwf	??_main+5
  2275  013C  0872               	movf	?___lmul+2,w
  2276  013D  3D60               	addwfc	_DataSector+2,w
  2277  013E  00D6               	movwf	??_main+6
  2278  013F  0873               	movf	?___lmul+3,w
  2279  0140  3D61               	addwfc	_DataSector+3,w
  2280  0141  00D7               	movwf	??_main+7
  2281  0142  3001               	movlw	1
  2282  0143  0754               	addwf	??_main+4,w
  2283  0144  00D8               	movwf	_main$610
  2284  0145  3000               	movlw	0
  2285  0146  3D55               	addwfc	??_main+5,w
  2286  0147  00D9               	movwf	_main$610+1
  2287  0148  3000               	movlw	0
  2288  0149  3D56               	addwfc	??_main+6,w
  2289  014A  00DA               	movwf	_main$610+2
  2290  014B  3000               	movlw	0
  2291  014C  3D57               	addwfc	??_main+7,w
  2292  014D  00DB               	movwf	_main$610+3
  2293                           
  2294                           ;main.c: 217: loc=(1 + (DataSector) + (unsigned long)(FileCluster-2) * SectorsPerCluster
      +                          ) * card ;
  2295  014E  085B               	movf	_main$610+3,w
  2296  014F  00F3               	movwf	___lmul@multiplier+3
  2297  0150  085A               	movf	_main$610+2,w
  2298  0151  00F2               	movwf	___lmul@multiplier+2
  2299  0152  0859               	movf	_main$610+1,w
  2300  0153  00F1               	movwf	___lmul@multiplier+1
  2301  0154  0858               	movf	_main$610,w
  2302  0155  00F0               	movwf	___lmul@multiplier
  2303  0156  086C               	movf	_card,w
  2304  0157  00F4               	movwf	___lmul@multiplicand
  2305  0158  086D               	movf	_card+1,w
  2306  0159  00F5               	movwf	___lmul@multiplicand+1
  2307  015A  01F6               	clrf	___lmul@multiplicand+2
  2308  015B  01F7               	clrf	___lmul@multiplicand+3
  2309  015C  3180  204B  3180   	fcall	___lmul
  2310  015F  0873               	movf	?___lmul+3,w
  2311  0160  0021               	movlb	1	; select bank1
  2312  0161  00B7               	movwf	(_loc+3)^(0+128)
  2313  0162  0872               	movf	?___lmul+2,w
  2314  0163  00B6               	movwf	(_loc+2)^(0+128)
  2315  0164  0871               	movf	?___lmul+1,w
  2316  0165  00B5               	movwf	(_loc+1)^(0+128)
  2317  0166  0870               	movf	?___lmul,w
  2318  0167  00B4               	movwf	_loc^(0+128)
  2319                           
  2320                           ;main.c: 218: readSD();
  2321  0168  3181  216C  3180   	fcall	_readSD
  2322  016B  28FB               	goto	l1432
  2323  016C                     __end_of_main:	
  2324                           
  2325                           	psect	text1
  2326  016C                     __ptext1:	
  2327 ;; *************** function _readSD *****************
  2328 ;; Defined at:
  2329 ;;		line 39 in file "main.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  i               2   19[BANK0 ] unsigned int 
  2334 ;;  r               2   16[BANK0 ] unsigned int 
  2335 ;;  data            1   18[BANK0 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;Total ram usage:        9 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    2
  2352 ;; This function calls:
  2353 ;;		_Command
  2354 ;;		_SPI
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _readSD
  2362  016C                     _readSD:	
  2363                           
  2364                           ;incstack = 0
  2365                           ; Regs used in _readSD: [wreg+status,2+status,0+pclath+cstack]
  2366                           ;main.c: 41: unsigned int i,r;
  2367                           ;main.c: 42: unsigned char data;
  2368                           ;main.c: 44: do { LATCbits.LATC2 = 0; } while(0);
  2369  016C  0022               	movlb	2	; select bank2
  2370  016D  110E               	bcf	14,2	;volatile
  2371                           
  2372                           ;main.c: 45: r = Command(18,loc,0xFF);
  2373  016E  0021               	movlb	1	; select bank1
  2374  016F  0837               	movf	(_loc+3)^(0+128),w
  2375  0170  0020               	movlb	0	; select bank0
  2376  0171  00A3               	movwf	Command@adrs+3
  2377  0172  0021               	movlb	1	; select bank1
  2378  0173  0836               	movf	(_loc+2)^(0+128),w
  2379  0174  0020               	movlb	0	; select bank0
  2380  0175  00A2               	movwf	Command@adrs+2
  2381  0176  0021               	movlb	1	; select bank1
  2382  0177  0835               	movf	(_loc+1)^(0+128),w
  2383  0178  0020               	movlb	0	; select bank0
  2384  0179  00A1               	movwf	Command@adrs+1
  2385  017A  0021               	movlb	1	; select bank1
  2386  017B  0834               	movf	_loc^(0+128),w
  2387  017C  0020               	movlb	0	; select bank0
  2388  017D  00A0               	movwf	Command@adrs
  2389  017E  30FF               	movlw	255
  2390  017F  00AC               	movwf	??_readSD
  2391  0180  082C               	movf	??_readSD,w
  2392  0181  00A4               	movwf	Command@frame2
  2393  0182  3012               	movlw	18
  2394  0183  3180  207A  3181   	fcall	_Command
  2395  0186  0020               	movlb	0	; select bank0
  2396  0187  00AD               	movwf	??_readSD+1
  2397  0188  01AE               	clrf	??_readSD+2
  2398  0189  082D               	movf	??_readSD+1,w
  2399  018A  00B0               	movwf	readSD@r
  2400  018B  082E               	movf	??_readSD+2,w
  2401  018C  00B1               	movwf	readSD@r+1
  2402  018D                     l1258:	
  2403                           ;main.c: 48: while(FileSize--)
  2404                           
  2405  018D  3001               	movlw	1
  2406  018E  0020               	movlb	0	; select bank0
  2407  018F  00AC               	movwf	??_readSD
  2408  0190  3000               	movlw	0
  2409  0191  00AD               	movwf	??_readSD+1
  2410  0192  3000               	movlw	0
  2411  0193  00AE               	movwf	??_readSD+2
  2412  0194  3000               	movlw	0
  2413  0195  00AF               	movwf	??_readSD+3
  2414  0196  082C               	movf	??_readSD,w
  2415  0197  0021               	movlb	1	; select bank1
  2416  0198  02A0               	subwf	_FileSize^(0+128),f
  2417  0199  0020               	movlb	0	; select bank0
  2418  019A  082D               	movf	??_readSD+1,w
  2419  019B  0021               	movlb	1	; select bank1
  2420  019C  3BA1               	subwfb	(_FileSize+1)^(0+128),f
  2421  019D  0020               	movlb	0	; select bank0
  2422  019E  082E               	movf	??_readSD+2,w
  2423  019F  0021               	movlb	1	; select bank1
  2424  01A0  3BA2               	subwfb	(_FileSize+2)^(0+128),f
  2425  01A1  0020               	movlb	0	; select bank0
  2426  01A2  082F               	movf	??_readSD+3,w
  2427  01A3  0021               	movlb	1	; select bank1
  2428  01A4  3BA3               	subwfb	(_FileSize+3)^(0+128),f
  2429  01A5  0A20               	incf	_FileSize^(0+128),w
  2430  01A6  1D03               	skipz
  2431  01A7  29B0               	goto	l1236
  2432  01A8  0A21               	incf	(_FileSize+1)^(0+128),w
  2433  01A9  1D03               	skipz
  2434  01AA  29B0               	goto	l1236
  2435  01AB  0A22               	incf	(_FileSize+2)^(0+128),w
  2436  01AC  1903               	btfsc	3,2
  2437  01AD  0A23               	incf	(_FileSize+3)^(0+128),w
  2438  01AE  1903               	btfsc	3,2
  2439  01AF  29ED               	goto	l1260
  2440  01B0                     l1236:	
  2441                           ;main.c: 49: {
  2442                           ;main.c: 50: while(SPI(0xFF) != 0xFE);
  2443                           
  2444  01B0  30FF               	movlw	255
  2445  01B1  3180  2011  3181   	fcall	_SPI
  2446  01B4  3AFE               	xorlw	254
  2447  01B5  1D03               	skipz
  2448  01B6  29B0               	goto	l1236
  2449                           
  2450                           ;main.c: 51: for(i=0;i<512;i++){
  2451  01B7  0020               	movlb	0	; select bank0
  2452  01B8  01B3               	clrf	readSD@i
  2453  01B9  01B4               	clrf	readSD@i+1
  2454  01BA  3002               	movlw	2
  2455  01BB  0234               	subwf	readSD@i+1,w
  2456  01BC  3000               	movlw	0
  2457  01BD  1903               	skipnz
  2458  01BE  0233               	subwf	readSD@i,w
  2459  01BF  1803               	btfsc	3,0
  2460  01C0  29E4               	goto	l1256
  2461  01C1                     l193:	
  2462                           ;main.c: 52: while(!T0IF){}
  2463                           
  2464  01C1  1D0B               	btfss	11,2	;volatile
  2465  01C2  29C1               	goto	l193
  2466                           
  2467                           ;main.c: 53: TMR0=165;
  2468  01C3  30A5               	movlw	165
  2469  01C4  0020               	movlb	0	; select bank0
  2470  01C5  0095               	movwf	21	;volatile
  2471                           
  2472                           ;main.c: 54: T0IF = 0;
  2473  01C6  110B               	bcf	11,2	;volatile
  2474                           
  2475                           ;main.c: 55: data = SPI(0xFF);
  2476  01C7  30FF               	movlw	255
  2477  01C8  3180  2011  3181   	fcall	_SPI
  2478  01CB  0020               	movlb	0	; select bank0
  2479  01CC  00AC               	movwf	??_readSD
  2480  01CD  082C               	movf	??_readSD,w
  2481  01CE  00B2               	movwf	readSD@data
  2482                           
  2483                           ;main.c: 57: CCPR1L = (data >> 2);
  2484  01CF  0832               	movf	readSD@data,w
  2485  01D0  00AC               	movwf	??_readSD
  2486  01D1  3002               	movlw	2
  2487  01D2                     u1215:	
  2488  01D2  36AC               	lsrf	??_readSD,f
  2489  01D3  0B89               	decfsz	9,f
  2490  01D4  29D2               	goto	u1215
  2491  01D5  082C               	movf	??_readSD,w
  2492  01D6  0025               	movlb	5	; select bank5
  2493  01D7  0091               	movwf	17	;volatile
  2494  01D8  3001               	movlw	1
  2495  01D9  0020               	movlb	0	; select bank0
  2496  01DA  07B3               	addwf	readSD@i,f
  2497  01DB  3000               	movlw	0
  2498  01DC  3DB4               	addwfc	readSD@i+1,f
  2499  01DD  3002               	movlw	2
  2500  01DE  0234               	subwf	readSD@i+1,w
  2501  01DF  3000               	movlw	0
  2502  01E0  1903               	skipnz
  2503  01E1  0233               	subwf	readSD@i,w
  2504  01E2  1C03               	skipc
  2505  01E3  29C1               	goto	l193
  2506  01E4                     l1256:	
  2507                           
  2508                           ;main.c: 58: }
  2509                           ;main.c: 59: SPI(0xFF);
  2510  01E4  30FF               	movlw	255
  2511  01E5  3180  2011  3181   	fcall	_SPI
  2512                           
  2513                           ;main.c: 60: SPI(0xFF);
  2514  01E8  30FF               	movlw	255
  2515  01E9  3180  2011  3181   	fcall	_SPI
  2516  01EC  298D               	goto	l1258
  2517  01ED                     l1260:	
  2518                           
  2519                           ;main.c: 61: }
  2520                           ;main.c: 62: Command(12,0x00,0xFF);
  2521  01ED  3000               	movlw	0
  2522  01EE  0020               	movlb	0	; select bank0
  2523  01EF  00A3               	movwf	Command@adrs+3
  2524  01F0  3000               	movlw	0
  2525  01F1  00A2               	movwf	Command@adrs+2
  2526  01F2  3000               	movlw	0
  2527  01F3  00A1               	movwf	Command@adrs+1
  2528  01F4  3000               	movlw	0
  2529  01F5  00A0               	movwf	Command@adrs
  2530  01F6  30FF               	movlw	255
  2531  01F7  00AC               	movwf	??_readSD
  2532  01F8  082C               	movf	??_readSD,w
  2533  01F9  00A4               	movwf	Command@frame2
  2534  01FA  300C               	movlw	12
  2535  01FB  3180  207A  3181   	fcall	_Command
  2536                           
  2537                           ;main.c: 63: SPI(0xFF);
  2538  01FE  30FF               	movlw	255
  2539  01FF  3180  2011  3181   	fcall	_SPI
  2540                           
  2541                           ;main.c: 64: SPI(0xFF);
  2542  0202  30FF               	movlw	255
  2543  0203  3180  2011  3181   	fcall	_SPI
  2544                           
  2545                           ;main.c: 65: do { LATCbits.LATC2 = 1; } while(0);SPI(0xFF);
  2546  0206  0022               	movlb	2	; select bank2
  2547  0207  150E               	bsf	14,2	;volatile
  2548  0208  30FF               	movlw	255
  2549  0209  3180  2011         	fcall	_SPI
  2550  020B  0008               	return
  2551  020C                     __end_of_readSD:	
  2552                           
  2553                           	psect	text2
  2554  020C                     __ptext2:	
  2555 ;; *************** function _initSD *****************
  2556 ;; Defined at:
  2557 ;;		line 158 in file "main.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  r               4   12[BANK0 ] unsigned char [4]
  2562 ;;  i               1   16[BANK0 ] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2576 ;;Total ram usage:        6 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    2
  2579 ;; This function calls:
  2580 ;;		_Command
  2581 ;;		_SPI
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _initSD
  2589  020C                     _initSD:	
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _initSD: [wreg+status,2+status,0+pclath+cstack]
  2593                           ;main.c: 160: unsigned char i,r[4];
  2594                           ;main.c: 162: do { LATCbits.LATC2 = 1; } while(0);
  2595  020C  0022               	movlb	2	; select bank2
  2596  020D  150E               	bsf	14,2	;volatile
  2597                           
  2598                           ;main.c: 163: for(i=0; i < 10; i++)SPI(0xFF);
  2599  020E  0020               	movlb	0	; select bank0
  2600  020F  01B0               	clrf	initSD@i
  2601  0210  300A               	movlw	10
  2602  0211  0230               	subwf	initSD@i,w
  2603  0212  1803               	btfsc	3,0
  2604  0213  2A21               	goto	l274
  2605  0214                     l1390:	
  2606  0214  30FF               	movlw	255
  2607  0215  3180  2011  3182   	fcall	_SPI
  2608  0218  3001               	movlw	1
  2609  0219  00FC               	movwf	??_initSD
  2610  021A  087C               	movf	??_initSD,w
  2611  021B  0020               	movlb	0	; select bank0
  2612  021C  07B0               	addwf	initSD@i,f
  2613  021D  300A               	movlw	10
  2614  021E  0230               	subwf	initSD@i,w
  2615  021F  1C03               	skipc
  2616  0220  2A14               	goto	l1390
  2617  0221                     l274:	
  2618                           ;main.c: 164: do { LATCbits.LATC2 = 0; } while(0);
  2619                           
  2620  0221  0022               	movlb	2	; select bank2
  2621  0222  110E               	bcf	14,2	;volatile
  2622                           
  2623                           ;main.c: 167: i=100;
  2624  0223  3064               	movlw	100
  2625  0224  00FC               	movwf	??_initSD
  2626  0225  087C               	movf	??_initSD,w
  2627  0226  0020               	movlb	0	; select bank0
  2628  0227  00B0               	movwf	initSD@i
  2629                           
  2630                           ;main.c: 168: while(Command(0x00,0,0x95) !=1 && i!=0)
  2631  0228  2A30               	goto	l1402
  2632  0229                     l1398:	
  2633                           
  2634                           ;main.c: 169: {
  2635                           ;main.c: 171: SPI(0xFF);
  2636  0229  30FF               	movlw	255
  2637  022A  3180  2011  3182   	fcall	_SPI
  2638                           
  2639                           ;main.c: 173: i--;
  2640  022D  3001               	movlw	1
  2641  022E  0020               	movlb	0	; select bank0
  2642  022F  02B0               	subwf	initSD@i,f
  2643  0230                     l1402:	
  2644  0230  3000               	movlw	0
  2645  0231  00A3               	movwf	Command@adrs+3
  2646  0232  3000               	movlw	0
  2647  0233  00A2               	movwf	Command@adrs+2
  2648  0234  3000               	movlw	0
  2649  0235  00A1               	movwf	Command@adrs+1
  2650  0236  3000               	movlw	0
  2651  0237  00A0               	movwf	Command@adrs
  2652  0238  3095               	movlw	149
  2653  0239  00FC               	movwf	??_initSD
  2654  023A  087C               	movf	??_initSD,w
  2655  023B  00A4               	movwf	Command@frame2
  2656  023C  3000               	movlw	0
  2657  023D  3180  207A  3182   	fcall	_Command
  2658  0240  3A01               	xorlw	1
  2659  0241  1903               	skipnz
  2660  0242  2A47               	goto	l1406
  2661  0243  0020               	movlb	0	; select bank0
  2662  0244  0830               	movf	initSD@i,w
  2663  0245  1D03               	btfss	3,2
  2664  0246  2A29               	goto	l1398
  2665  0247                     l1406:	
  2666                           
  2667                           ;main.c: 174: }
  2668                           ;main.c: 175: if(i==0)
  2669  0247  0020               	movlb	0	; select bank0
  2670  0248  0830               	movf	initSD@i,w
  2671  0249  1D03               	btfss	3,2
  2672  024A  2A4F               	goto	l1408
  2673                           
  2674                           ;main.c: 176: { do { LATAbits.LATA1 = 1; } while(0);
  2675  024B  0022               	movlb	2	; select bank2
  2676  024C  148C               	bsf	12,1	;volatile
  2677                           
  2678                           ;main.c: 177: do { LATAbits.LATA2 = 1; } while(0);
  2679  024D  150C               	bsf	12,2	;volatile
  2680                           
  2681                           ;main.c: 178: do { LATAbits.LATA4 = 1; } while(0);
  2682  024E  160C               	bsf	12,4	;volatile
  2683  024F                     l1408:	
  2684                           
  2685                           ;main.c: 179: }
  2686                           ;main.c: 181: if (Command(8,0x01AA,0x87)==1){
  2687  024F  3000               	movlw	0
  2688  0250  0020               	movlb	0	; select bank0
  2689  0251  00A3               	movwf	Command@adrs+3
  2690  0252  3000               	movlw	0
  2691  0253  00A2               	movwf	Command@adrs+2
  2692  0254  3001               	movlw	1
  2693  0255  00A1               	movwf	Command@adrs+1
  2694  0256  30AA               	movlw	170
  2695  0257  00A0               	movwf	Command@adrs
  2696  0258  3087               	movlw	135
  2697  0259  00FC               	movwf	??_initSD
  2698  025A  087C               	movf	??_initSD,w
  2699  025B  00A4               	movwf	Command@frame2
  2700  025C  3008               	movlw	8
  2701  025D  3180  207A  3182   	fcall	_Command
  2702  0260  3A01               	xorlw	1
  2703  0261  1D03               	skipz
  2704  0262  2AB5               	goto	l1420
  2705                           
  2706                           ;main.c: 182: r[0]=SPI(0xFF); r[1]=SPI(0xFF); r[2]=SPI(0xFF); r[3]=SPI(0xFF);
  2707  0263  30FF               	movlw	255
  2708  0264  3180  2011  3182   	fcall	_SPI
  2709  0267  00FC               	movwf	??_initSD
  2710  0268  087C               	movf	??_initSD,w
  2711  0269  0020               	movlb	0	; select bank0
  2712  026A  00AC               	movwf	initSD@r
  2713  026B  30FF               	movlw	255
  2714  026C  3180  2011  3182   	fcall	_SPI
  2715  026F  00FC               	movwf	??_initSD
  2716  0270  087C               	movf	??_initSD,w
  2717  0271  0020               	movlb	0	; select bank0
  2718  0272  00AD               	movwf	initSD@r+1
  2719  0273  30FF               	movlw	255
  2720  0274  3180  2011  3182   	fcall	_SPI
  2721  0277  00FC               	movwf	??_initSD
  2722  0278  087C               	movf	??_initSD,w
  2723  0279  0020               	movlb	0	; select bank0
  2724  027A  00AE               	movwf	initSD@r+2
  2725  027B  30FF               	movlw	255
  2726  027C  3180  2011  3182   	fcall	_SPI
  2727  027F  00FC               	movwf	??_initSD
  2728  0280  087C               	movf	??_initSD,w
  2729  0281  0020               	movlb	0	; select bank0
  2730  0282  00AF               	movwf	initSD@r+3
  2731                           
  2732                           ;main.c: 183: if ( r[2] == 0x01 && r[3] == 0xAA ){
  2733  0283  032E               	decf	initSD@r+2,w
  2734  0284  1D03               	btfss	3,2
  2735  0285  2AB1               	goto	l294
  2736  0286  30AA               	movlw	170
  2737  0287  062F               	xorwf	initSD@r+3,w
  2738  0288  1D03               	btfss	3,2
  2739  0289  2AB1               	goto	l294
  2740                           
  2741                           ;main.c: 186: Command(55,0,0xFF);
  2742  028A  3000               	movlw	0
  2743  028B                     L1:	
  2744  028B  00A3               	movwf	Command@adrs+3
  2745  028C  3000               	movlw	0
  2746  028D  00A2               	movwf	Command@adrs+2
  2747  028E  3000               	movlw	0
  2748  028F  00A1               	movwf	Command@adrs+1
  2749  0290  3000               	movlw	0
  2750  0291  00A0               	movwf	Command@adrs
  2751  0292  30FF               	movlw	255
  2752  0293  00FC               	movwf	??_initSD
  2753  0294  087C               	movf	??_initSD,w
  2754  0295  00A4               	movwf	Command@frame2
  2755  0296  3037               	movlw	55
  2756  0297  3180  207A  3182   	fcall	_Command
  2757  029A  3040               	movlw	64
  2758  029B  0020               	movlb	0	; select bank0
  2759  029C  00A3               	movwf	Command@adrs+3
  2760  029D  3000               	movlw	0
  2761  029E  00A2               	movwf	Command@adrs+2
  2762  029F  3000               	movlw	0
  2763  02A0  00A1               	movwf	Command@adrs+1
  2764  02A1  3000               	movlw	0
  2765  02A2  00A0               	movwf	Command@adrs
  2766  02A3  30FF               	movlw	255
  2767  02A4  00FC               	movwf	??_initSD
  2768  02A5  087C               	movf	??_initSD,w
  2769  02A6  00A4               	movwf	Command@frame2
  2770  02A7  3029               	movlw	41
  2771  02A8  3180  207A  3182   	fcall	_Command
  2772  02AB  3A00               	xorlw	0
  2773  02AC  1903               	btfsc	3,2
  2774  02AD  2AB5               	goto	l1420
  2775                           
  2776                           ;main.c: 187: while(Command(41,0x40000000,0xFF)){Command(55,0,0xFF);}
  2777  02AE  3000               	movlw	0
  2778  02AF  0020               	movlb	0	; select bank0
  2779  02B0  2A8B               	goto	L1
  2780  02B1                     l294:	
  2781                           ;main.c: 188: }else{ do { LATAbits.LATA1 = 1; } while(0);
  2782                           
  2783  02B1  0022               	movlb	2	; select bank2
  2784  02B2  148C               	bsf	12,1	;volatile
  2785                           
  2786                           ;main.c: 189: do { LATAbits.LATA2 = 1; } while(0);
  2787  02B3  150C               	bsf	12,2	;volatile
  2788                           
  2789                           ;main.c: 190: do { LATAbits.LATA4 = 1; } while(0);}
  2790  02B4  160C               	bsf	12,4	;volatile
  2791  02B5                     l1420:	
  2792                           
  2793                           ;main.c: 191: }
  2794                           ;main.c: 193: if (Command(58,0,0xFF)==0)
  2795  02B5  3000               	movlw	0
  2796  02B6  0020               	movlb	0	; select bank0
  2797  02B7  00A3               	movwf	Command@adrs+3
  2798  02B8  3000               	movlw	0
  2799  02B9  00A2               	movwf	Command@adrs+2
  2800  02BA  3000               	movlw	0
  2801  02BB  00A1               	movwf	Command@adrs+1
  2802  02BC  3000               	movlw	0
  2803  02BD  00A0               	movwf	Command@adrs
  2804  02BE  30FF               	movlw	255
  2805  02BF  00FC               	movwf	??_initSD
  2806  02C0  087C               	movf	??_initSD,w
  2807  02C1  00A4               	movwf	Command@frame2
  2808  02C2  303A               	movlw	58
  2809  02C3  3180  207A  3182   	fcall	_Command
  2810  02C6  3A00               	xorlw	0
  2811  02C7  1D03               	skipz
  2812  02C8  0008               	return
  2813                           
  2814                           ;main.c: 194: {
  2815                           ;main.c: 195: r[0]=SPI(0xFF); r[1]=SPI(0xFF); r[2]=SPI(0xFF); r[3]=SPI(0xFF);
  2816  02C9  30FF               	movlw	255
  2817  02CA  3180  2011  3182   	fcall	_SPI
  2818  02CD  00FC               	movwf	??_initSD
  2819  02CE  087C               	movf	??_initSD,w
  2820  02CF  0020               	movlb	0	; select bank0
  2821  02D0  00AC               	movwf	initSD@r
  2822  02D1  30FF               	movlw	255
  2823  02D2  3180  2011  3182   	fcall	_SPI
  2824  02D5  00FC               	movwf	??_initSD
  2825  02D6  087C               	movf	??_initSD,w
  2826  02D7  0020               	movlb	0	; select bank0
  2827  02D8  00AD               	movwf	initSD@r+1
  2828  02D9  30FF               	movlw	255
  2829  02DA  3180  2011  3182   	fcall	_SPI
  2830  02DD  00FC               	movwf	??_initSD
  2831  02DE  087C               	movf	??_initSD,w
  2832  02DF  0020               	movlb	0	; select bank0
  2833  02E0  00AE               	movwf	initSD@r+2
  2834  02E1  30FF               	movlw	255
  2835  02E2  3180  2011         	fcall	_SPI
  2836  02E4  00FC               	movwf	??_initSD
  2837  02E5  087C               	movf	??_initSD,w
  2838  02E6  0020               	movlb	0	; select bank0
  2839  02E7  00AF               	movwf	initSD@r+3
  2840                           
  2841                           ;main.c: 196: sdhc=r[0] & 0x40;
  2842  02E8  082C               	movf	initSD@r,w
  2843  02E9  3940               	andlw	64
  2844  02EA  00FC               	movwf	??_initSD
  2845  02EB  087C               	movf	??_initSD,w
  2846  02EC  00EB               	movwf	_sdhc
  2847  02ED  0008               	return
  2848  02EE                     __end_of_initSD:	
  2849                           
  2850                           	psect	text3
  2851  02EE                     __ptext3:	
  2852 ;; *************** function _file *****************
  2853 ;; Defined at:
  2854 ;;		line 10 in file "main.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  offset          2   12[BANK0 ] unsigned int 
  2857 ;;  sect            1   14[BANK0 ] unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  fs              4   37[BANK0 ] unsigned char [4]
  2860 ;;  fc              4   33[BANK0 ] unsigned char [4]
  2861 ;;  i               2   41[BANK0 ] unsigned int 
  2862 ;;  r               2   31[BANK0 ] unsigned int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2872 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;Total ram usage:       31 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    2
  2879 ;; This function calls:
  2880 ;;		_Command
  2881 ;;		_SPI
  2882 ;;		___lmul
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _file
  2890  02EE                     _file:	
  2891                           
  2892                           ;main.c: 12: unsigned int r,i=0;
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _file: [wreg+status,2+status,0+pclath+cstack]
  2896  02EE  0020               	movlb	0	; select bank0
  2897  02EF  01C9               	clrf	file@i
  2898  02F0  01CA               	clrf	file@i+1
  2899                           
  2900                           ;main.c: 13: unsigned char fc[4], fs[4];
  2901                           ;main.c: 14: r = Command(17,(RootDir+sect)*card,0xFF);
  2902  02F1  082E               	movf	file@sect,w
  2903  02F2  0021               	movlb	1	; select bank1
  2904  02F3  0730               	addwf	_RootDir^(0+128),w
  2905  02F4  00F0               	movwf	___lmul@multiplier
  2906  02F5  0831               	movf	(_RootDir+1)^(0+128),w
  2907  02F6  1803               	skipnc
  2908  02F7  0F31               	incfsz	(_RootDir+1)^(0+128),w
  2909  02F8  1003               	clrc
  2910  02F9  00F1               	movwf	___lmul@multiplier+1
  2911  02FA  0832               	movf	(_RootDir+2)^(0+128),w
  2912  02FB  1803               	skipnc
  2913  02FC  0F32               	incfsz	(_RootDir+2)^(0+128),w
  2914  02FD  1003               	clrc
  2915  02FE  00F2               	movwf	___lmul@multiplier+2
  2916  02FF  0833               	movf	(_RootDir+3)^(0+128),w
  2917  0300  1803               	skipnc
  2918  0301  0A33               	incf	(_RootDir+3)^(0+128),w
  2919  0302  00F3               	movwf	___lmul@multiplier+3
  2920  0303  0020               	movlb	0	; select bank0
  2921  0304  086C               	movf	_card,w
  2922  0305  00F4               	movwf	___lmul@multiplicand
  2923  0306  086D               	movf	_card+1,w
  2924  0307  00F5               	movwf	___lmul@multiplicand+1
  2925  0308  01F6               	clrf	___lmul@multiplicand+2
  2926  0309  01F7               	clrf	___lmul@multiplicand+3
  2927  030A  3180  204B  3182   	fcall	___lmul
  2928  030D  0873               	movf	?___lmul+3,w
  2929  030E  0020               	movlb	0	; select bank0
  2930  030F  00A3               	movwf	Command@adrs+3
  2931  0310  0872               	movf	?___lmul+2,w
  2932  0311  00A2               	movwf	Command@adrs+2
  2933  0312  0871               	movf	?___lmul+1,w
  2934  0313  00A1               	movwf	Command@adrs+1
  2935  0314  0870               	movf	?___lmul,w
  2936  0315  00A0               	movwf	Command@adrs
  2937  0316  30FF               	movlw	255
  2938  0317  00AF               	movwf	??_file
  2939  0318  082F               	movf	??_file,w
  2940  0319  00A4               	movwf	Command@frame2
  2941  031A  3011               	movlw	17
  2942  031B  3180  207A  3182   	fcall	_Command
  2943  031E  0020               	movlb	0	; select bank0
  2944  031F  00B0               	movwf	??_file+1
  2945  0320  01B1               	clrf	??_file+2
  2946  0321  0830               	movf	??_file+1,w
  2947  0322  00BF               	movwf	file@r
  2948  0323  0831               	movf	??_file+2,w
  2949  0324  00C0               	movwf	file@r+1
  2950  0325                     l1180:	
  2951                           ;main.c: 17: while(SPI(0xFF) != 0xFe);
  2952                           
  2953  0325  30FF               	movlw	255
  2954  0326  3180  2011  3182   	fcall	_SPI
  2955  0329  3AFE               	xorlw	254
  2956  032A  1D03               	skipz
  2957  032B  2B25               	goto	l1180
  2958                           
  2959                           ;main.c: 18: for(i=0;i<512;i++){
  2960  032C  0020               	movlb	0	; select bank0
  2961  032D  01C9               	clrf	file@i
  2962  032E  01CA               	clrf	file@i+1
  2963  032F  3002               	movlw	2
  2964  0330  024A               	subwf	file@i+1,w
  2965  0331  3000               	movlw	0
  2966  0332  1903               	skipnz
  2967  0333  0249               	subwf	file@i,w
  2968  0334  1803               	btfsc	3,0
  2969  0335  2BF8               	goto	l1226
  2970  0336                     l1188:	
  2971                           
  2972                           ;main.c: 19: if(i==offset){fc[2]=SPI(0xFF);}
  2973  0336  082D               	movf	file@offset+1,w
  2974  0337  064A               	xorwf	file@i+1,w
  2975  0338  1D03               	skipz
  2976  0339  2B3C               	goto	u1025
  2977  033A  082C               	movf	file@offset,w
  2978  033B  0649               	xorwf	file@i,w
  2979  033C                     u1025:	
  2980  033C  1D03               	skipz
  2981  033D  2B47               	goto	l1192
  2982  033E  30FF               	movlw	255
  2983  033F  3180  2011  3182   	fcall	_SPI
  2984  0342  0020               	movlb	0	; select bank0
  2985  0343  00AF               	movwf	??_file
  2986  0344  082F               	movf	??_file,w
  2987  0345  00C3               	movwf	file@fc+2
  2988  0346  2BEC               	goto	l1222
  2989  0347                     l1192:	
  2990                           
  2991                           ;main.c: 20: else if(i==offset+1){fc[3]=SPI(0xFF);}
  2992  0347  082C               	movf	file@offset,w
  2993  0348  3E01               	addlw	1
  2994  0349  00AF               	movwf	??_file
  2995  034A  3000               	movlw	0
  2996  034B  3D2D               	addwfc	file@offset+1,w
  2997  034C  00B0               	movwf	??_file+1
  2998  034D  084A               	movf	file@i+1,w
  2999  034E  0630               	xorwf	??_file+1,w
  3000  034F  1D03               	skipz
  3001  0350  2B53               	goto	u1035
  3002  0351  0849               	movf	file@i,w
  3003  0352  062F               	xorwf	??_file,w
  3004  0353                     u1035:	
  3005  0353  1D03               	skipz
  3006  0354  2B5E               	goto	l1196
  3007  0355  30FF               	movlw	255
  3008  0356  3180  2011  3182   	fcall	_SPI
  3009  0359  0020               	movlb	0	; select bank0
  3010  035A  00AF               	movwf	??_file
  3011  035B  082F               	movf	??_file,w
  3012  035C  00C4               	movwf	file@fc+3
  3013  035D  2BEC               	goto	l1222
  3014  035E                     l1196:	
  3015                           
  3016                           ;main.c: 21: else if(i==offset+6){fc[0]=SPI(0xFF);}
  3017  035E  082C               	movf	file@offset,w
  3018  035F  3E06               	addlw	6
  3019  0360  00AF               	movwf	??_file
  3020  0361  3000               	movlw	0
  3021  0362  3D2D               	addwfc	file@offset+1,w
  3022  0363  00B0               	movwf	??_file+1
  3023  0364  084A               	movf	file@i+1,w
  3024  0365  0630               	xorwf	??_file+1,w
  3025  0366  1D03               	skipz
  3026  0367  2B6A               	goto	u1045
  3027  0368  0849               	movf	file@i,w
  3028  0369  062F               	xorwf	??_file,w
  3029  036A                     u1045:	
  3030  036A  1D03               	skipz
  3031  036B  2B75               	goto	l1200
  3032  036C  30FF               	movlw	255
  3033  036D  3180  2011  3182   	fcall	_SPI
  3034  0370  0020               	movlb	0	; select bank0
  3035  0371  00AF               	movwf	??_file
  3036  0372  082F               	movf	??_file,w
  3037  0373  00C1               	movwf	file@fc
  3038  0374  2BEC               	goto	l1222
  3039  0375                     l1200:	
  3040                           
  3041                           ;main.c: 22: else if(i==offset+7){fc[1]=SPI(0xFF);}
  3042  0375  082C               	movf	file@offset,w
  3043  0376  3E07               	addlw	7
  3044  0377  00AF               	movwf	??_file
  3045  0378  3000               	movlw	0
  3046  0379  3D2D               	addwfc	file@offset+1,w
  3047  037A  00B0               	movwf	??_file+1
  3048  037B  084A               	movf	file@i+1,w
  3049  037C  0630               	xorwf	??_file+1,w
  3050  037D  1D03               	skipz
  3051  037E  2B81               	goto	u1055
  3052  037F  0849               	movf	file@i,w
  3053  0380  062F               	xorwf	??_file,w
  3054  0381                     u1055:	
  3055  0381  1D03               	skipz
  3056  0382  2B8C               	goto	l1204
  3057  0383  30FF               	movlw	255
  3058  0384  3180  2011  3182   	fcall	_SPI
  3059  0387  0020               	movlb	0	; select bank0
  3060  0388  00AF               	movwf	??_file
  3061  0389  082F               	movf	??_file,w
  3062  038A  00C2               	movwf	file@fc+1
  3063  038B  2BEC               	goto	l1222
  3064  038C                     l1204:	
  3065                           
  3066                           ;main.c: 24: else if(i==offset+8){fs[0]=SPI(0xFF);}
  3067  038C  082C               	movf	file@offset,w
  3068  038D  3E08               	addlw	8
  3069  038E  00AF               	movwf	??_file
  3070  038F  3000               	movlw	0
  3071  0390  3D2D               	addwfc	file@offset+1,w
  3072  0391  00B0               	movwf	??_file+1
  3073  0392  084A               	movf	file@i+1,w
  3074  0393  0630               	xorwf	??_file+1,w
  3075  0394  1D03               	skipz
  3076  0395  2B98               	goto	u1065
  3077  0396  0849               	movf	file@i,w
  3078  0397  062F               	xorwf	??_file,w
  3079  0398                     u1065:	
  3080  0398  1D03               	skipz
  3081  0399  2BA3               	goto	l1208
  3082  039A  30FF               	movlw	255
  3083  039B  3180  2011  3182   	fcall	_SPI
  3084  039E  0020               	movlb	0	; select bank0
  3085  039F  00AF               	movwf	??_file
  3086  03A0  082F               	movf	??_file,w
  3087  03A1  00C5               	movwf	file@fs
  3088  03A2  2BEC               	goto	l1222
  3089  03A3                     l1208:	
  3090                           
  3091                           ;main.c: 25: else if(i==offset+9){fs[1]=SPI(0xFF);}
  3092  03A3  082C               	movf	file@offset,w
  3093  03A4  3E09               	addlw	9
  3094  03A5  00AF               	movwf	??_file
  3095  03A6  3000               	movlw	0
  3096  03A7  3D2D               	addwfc	file@offset+1,w
  3097  03A8  00B0               	movwf	??_file+1
  3098  03A9  084A               	movf	file@i+1,w
  3099  03AA  0630               	xorwf	??_file+1,w
  3100  03AB  1D03               	skipz
  3101  03AC  2BAF               	goto	u1075
  3102  03AD  0849               	movf	file@i,w
  3103  03AE  062F               	xorwf	??_file,w
  3104  03AF                     u1075:	
  3105  03AF  1D03               	skipz
  3106  03B0  2BBA               	goto	l1212
  3107  03B1  30FF               	movlw	255
  3108  03B2  3180  2011  3182   	fcall	_SPI
  3109  03B5  0020               	movlb	0	; select bank0
  3110  03B6  00AF               	movwf	??_file
  3111  03B7  082F               	movf	??_file,w
  3112  03B8  00C6               	movwf	file@fs+1
  3113  03B9  2BEC               	goto	l1222
  3114  03BA                     l1212:	
  3115                           
  3116                           ;main.c: 26: else if(i==offset+10){fs[2]=SPI(0xFF);}
  3117  03BA  082C               	movf	file@offset,w
  3118  03BB  3E0A               	addlw	10
  3119  03BC  00AF               	movwf	??_file
  3120  03BD  3000               	movlw	0
  3121  03BE  3D2D               	addwfc	file@offset+1,w
  3122  03BF  00B0               	movwf	??_file+1
  3123  03C0  084A               	movf	file@i+1,w
  3124  03C1  0630               	xorwf	??_file+1,w
  3125  03C2  1D03               	skipz
  3126  03C3  2BC6               	goto	u1085
  3127  03C4  0849               	movf	file@i,w
  3128  03C5  062F               	xorwf	??_file,w
  3129  03C6                     u1085:	
  3130  03C6  1D03               	skipz
  3131  03C7  2BD1               	goto	l1216
  3132  03C8  30FF               	movlw	255
  3133  03C9  3180  2011  3182   	fcall	_SPI
  3134  03CC  0020               	movlb	0	; select bank0
  3135  03CD  00AF               	movwf	??_file
  3136  03CE  082F               	movf	??_file,w
  3137  03CF  00C7               	movwf	file@fs+2
  3138  03D0  2BEC               	goto	l1222
  3139  03D1                     l1216:	
  3140                           
  3141                           ;main.c: 27: else if(i==offset+11){fs[3]=SPI(0xFF);}
  3142  03D1  082C               	movf	file@offset,w
  3143  03D2  3E0B               	addlw	11
  3144  03D3  00AF               	movwf	??_file
  3145  03D4  3000               	movlw	0
  3146  03D5  3D2D               	addwfc	file@offset+1,w
  3147  03D6  00B0               	movwf	??_file+1
  3148  03D7  084A               	movf	file@i+1,w
  3149  03D8  0630               	xorwf	??_file+1,w
  3150  03D9  1D03               	skipz
  3151  03DA  2BDD               	goto	u1095
  3152  03DB  0849               	movf	file@i,w
  3153  03DC  062F               	xorwf	??_file,w
  3154  03DD                     u1095:	
  3155  03DD  1D03               	skipz
  3156  03DE  2BE8               	goto	l1220
  3157  03DF  30FF               	movlw	255
  3158  03E0  3180  2011  3182   	fcall	_SPI
  3159  03E3  0020               	movlb	0	; select bank0
  3160  03E4  00AF               	movwf	??_file
  3161  03E5  082F               	movf	??_file,w
  3162  03E6  00C8               	movwf	file@fs+3
  3163  03E7  2BEC               	goto	l1222
  3164  03E8                     l1220:	
  3165                           
  3166                           ;main.c: 28: else{SPI(0xFF);}
  3167  03E8  30FF               	movlw	255
  3168  03E9  3180  2011  3182   	fcall	_SPI
  3169  03EC                     l1222:	
  3170  03EC  3001               	movlw	1
  3171  03ED  0020               	movlb	0	; select bank0
  3172  03EE  07C9               	addwf	file@i,f
  3173  03EF  3000               	movlw	0
  3174  03F0  3DCA               	addwfc	file@i+1,f
  3175  03F1  3002               	movlw	2
  3176  03F2  024A               	subwf	file@i+1,w
  3177  03F3  3000               	movlw	0
  3178  03F4  1903               	skipnz
  3179  03F5  0249               	subwf	file@i,w
  3180  03F6  1C03               	skipc
  3181  03F7  2B36               	goto	l1188
  3182  03F8                     l1226:	
  3183                           
  3184                           ;main.c: 30: }
  3185                           ;main.c: 31: SPI(0xFF);
  3186  03F8  30FF               	movlw	255
  3187  03F9  3180  2011  3182   	fcall	_SPI
  3188                           
  3189                           ;main.c: 32: SPI(0xFF);
  3190  03FC  30FF               	movlw	255
  3191  03FD  3180  2011  3182   	fcall	_SPI
  3192                           
  3193                           ;main.c: 33: SPI(0xFF);
  3194  0400  30FF               	movlw	255
  3195  0401  3180  2011  3182   	fcall	_SPI
  3196                           
  3197                           ;main.c: 34: FileCluster = fc[0] | ( (unsigned long)fc[1] << 8 ) | ( (unsigned long)fc[2
      +                          ] << 16 ) | ( (unsigned long)fc[3] << 24 );
  3198  0404  0020               	movlb	0	; select bank0
  3199  0405  0844               	movf	file@fc+3,w
  3200  0406  00AF               	movwf	??_file
  3201  0407  01B0               	clrf	??_file+1
  3202  0408  01B1               	clrf	??_file+2
  3203  0409  01B2               	clrf	??_file+3
  3204  040A  3018               	movlw	24
  3205  040B                     u1115:	
  3206  040B  35AF               	lslf	??_file,f
  3207  040C  0DB0               	rlf	??_file+1,f
  3208  040D  0DB1               	rlf	??_file+2,f
  3209  040E  0DB2               	rlf	??_file+3,f
  3210  040F  0B89               	decfsz	9,f
  3211  0410  2C0B               	goto	u1115
  3212  0411  0843               	movf	file@fc+2,w
  3213  0412  00B3               	movwf	??_file+4
  3214  0413  01B4               	clrf	??_file+5
  3215  0414  01B5               	clrf	??_file+6
  3216  0415  01B6               	clrf	??_file+7
  3217  0416  3010               	movlw	16
  3218  0417                     u1125:	
  3219  0417  35B3               	lslf	??_file+4,f
  3220  0418  0DB4               	rlf	??_file+5,f
  3221  0419  0DB5               	rlf	??_file+6,f
  3222  041A  0DB6               	rlf	??_file+7,f
  3223  041B  0B89               	decfsz	9,f
  3224  041C  2C17               	goto	u1125
  3225  041D  0842               	movf	file@fc+1,w
  3226  041E  00B7               	movwf	??_file+8
  3227  041F  01B8               	clrf	??_file+9
  3228  0420  01B9               	clrf	??_file+10
  3229  0421  01BA               	clrf	??_file+11
  3230  0422  3008               	movlw	8
  3231  0423                     u1135:	
  3232  0423  35B7               	lslf	??_file+8,f
  3233  0424  0DB8               	rlf	??_file+9,f
  3234  0425  0DB9               	rlf	??_file+10,f
  3235  0426  0DBA               	rlf	??_file+11,f
  3236  0427  0B89               	decfsz	9,f
  3237  0428  2C23               	goto	u1135
  3238  0429  0841               	movf	file@fc,w
  3239  042A  00BB               	movwf	??_file+12
  3240  042B  01BC               	clrf	??_file+13
  3241  042C  01BD               	clrf	??_file+14
  3242  042D  01BE               	clrf	??_file+15
  3243  042E  083B               	movf	??_file+12,w
  3244  042F  04B7               	iorwf	??_file+8,f
  3245  0430  083C               	movf	??_file+13,w
  3246  0431  04B8               	iorwf	??_file+9,f
  3247  0432  083D               	movf	??_file+14,w
  3248  0433  04B9               	iorwf	??_file+10,f
  3249  0434  083E               	movf	??_file+15,w
  3250  0435  04BA               	iorwf	??_file+11,f
  3251  0436  0837               	movf	??_file+8,w
  3252  0437  04B3               	iorwf	??_file+4,f
  3253  0438  0838               	movf	??_file+9,w
  3254  0439  04B4               	iorwf	??_file+5,f
  3255  043A  0839               	movf	??_file+10,w
  3256  043B  04B5               	iorwf	??_file+6,f
  3257  043C  083A               	movf	??_file+11,w
  3258  043D  04B6               	iorwf	??_file+7,f
  3259  043E  082F               	movf	??_file,w
  3260  043F  0433               	iorwf	??_file+4,w
  3261  0440  0021               	movlb	1	; select bank1
  3262  0441  00A4               	movwf	_FileCluster^(0+128)
  3263  0442  0020               	movlb	0	; select bank0
  3264  0443  0830               	movf	??_file+1,w
  3265  0444  0434               	iorwf	??_file+5,w
  3266  0445  0021               	movlb	1	; select bank1
  3267  0446  00A5               	movwf	(_FileCluster+1)^(0+128)
  3268  0447  0020               	movlb	0	; select bank0
  3269  0448  0831               	movf	??_file+2,w
  3270  0449  0435               	iorwf	??_file+6,w
  3271  044A  0021               	movlb	1	; select bank1
  3272  044B  00A6               	movwf	(_FileCluster+2)^(0+128)
  3273  044C  0020               	movlb	0	; select bank0
  3274  044D  0832               	movf	??_file+3,w
  3275  044E  0436               	iorwf	??_file+7,w
  3276  044F  0021               	movlb	1	; select bank1
  3277  0450  00A7               	movwf	(_FileCluster+3)^(0+128)
  3278                           
  3279                           ;main.c: 35: FileSize = fs[0] | ( (unsigned long)fs[1] << 8 ) | ( (unsigned long)fs[2] <
      +                          < 16 ) | ( (unsigned long)fs[3] << 24 );
  3280  0451  0020               	movlb	0	; select bank0
  3281  0452  0848               	movf	file@fs+3,w
  3282  0453  00AF               	movwf	??_file
  3283  0454  01B0               	clrf	??_file+1
  3284  0455  01B1               	clrf	??_file+2
  3285  0456  01B2               	clrf	??_file+3
  3286  0457  3018               	movlw	24
  3287  0458                     u1145:	
  3288  0458  35AF               	lslf	??_file,f
  3289  0459  0DB0               	rlf	??_file+1,f
  3290  045A  0DB1               	rlf	??_file+2,f
  3291  045B  0DB2               	rlf	??_file+3,f
  3292  045C  0B89               	decfsz	9,f
  3293  045D  2C58               	goto	u1145
  3294  045E  0847               	movf	file@fs+2,w
  3295  045F  00B3               	movwf	??_file+4
  3296  0460  01B4               	clrf	??_file+5
  3297  0461  01B5               	clrf	??_file+6
  3298  0462  01B6               	clrf	??_file+7
  3299  0463  3010               	movlw	16
  3300  0464                     u1155:	
  3301  0464  35B3               	lslf	??_file+4,f
  3302  0465  0DB4               	rlf	??_file+5,f
  3303  0466  0DB5               	rlf	??_file+6,f
  3304  0467  0DB6               	rlf	??_file+7,f
  3305  0468  0B89               	decfsz	9,f
  3306  0469  2C64               	goto	u1155
  3307  046A  0846               	movf	file@fs+1,w
  3308  046B  00B7               	movwf	??_file+8
  3309  046C  01B8               	clrf	??_file+9
  3310  046D  01B9               	clrf	??_file+10
  3311  046E  01BA               	clrf	??_file+11
  3312  046F  3008               	movlw	8
  3313  0470                     u1165:	
  3314  0470  35B7               	lslf	??_file+8,f
  3315  0471  0DB8               	rlf	??_file+9,f
  3316  0472  0DB9               	rlf	??_file+10,f
  3317  0473  0DBA               	rlf	??_file+11,f
  3318  0474  0B89               	decfsz	9,f
  3319  0475  2C70               	goto	u1165
  3320  0476  0845               	movf	file@fs,w
  3321  0477  00BB               	movwf	??_file+12
  3322  0478  01BC               	clrf	??_file+13
  3323  0479  01BD               	clrf	??_file+14
  3324  047A  01BE               	clrf	??_file+15
  3325  047B  083B               	movf	??_file+12,w
  3326  047C  04B7               	iorwf	??_file+8,f
  3327  047D  083C               	movf	??_file+13,w
  3328  047E  04B8               	iorwf	??_file+9,f
  3329  047F  083D               	movf	??_file+14,w
  3330  0480  04B9               	iorwf	??_file+10,f
  3331  0481  083E               	movf	??_file+15,w
  3332  0482  04BA               	iorwf	??_file+11,f
  3333  0483  0837               	movf	??_file+8,w
  3334  0484  04B3               	iorwf	??_file+4,f
  3335  0485  0838               	movf	??_file+9,w
  3336  0486  04B4               	iorwf	??_file+5,f
  3337  0487  0839               	movf	??_file+10,w
  3338  0488  04B5               	iorwf	??_file+6,f
  3339  0489  083A               	movf	??_file+11,w
  3340  048A  04B6               	iorwf	??_file+7,f
  3341  048B  082F               	movf	??_file,w
  3342  048C  0433               	iorwf	??_file+4,w
  3343  048D  0021               	movlb	1	; select bank1
  3344  048E  00A0               	movwf	_FileSize^(0+128)
  3345  048F  0020               	movlb	0	; select bank0
  3346  0490  0830               	movf	??_file+1,w
  3347  0491  0434               	iorwf	??_file+5,w
  3348  0492  0021               	movlb	1	; select bank1
  3349  0493  00A1               	movwf	(_FileSize+1)^(0+128)
  3350  0494  0020               	movlb	0	; select bank0
  3351  0495  0831               	movf	??_file+2,w
  3352  0496  0435               	iorwf	??_file+6,w
  3353  0497  0021               	movlb	1	; select bank1
  3354  0498  00A2               	movwf	(_FileSize+2)^(0+128)
  3355  0499  0020               	movlb	0	; select bank0
  3356  049A  0832               	movf	??_file+3,w
  3357  049B  0436               	iorwf	??_file+7,w
  3358  049C  0021               	movlb	1	; select bank1
  3359  049D  00A3               	movwf	(_FileSize+3)^(0+128)
  3360                           
  3361                           ;main.c: 36: FileSize = FileSize/512+1;
  3362  049E  3001               	movlw	1
  3363  049F  0020               	movlb	0	; select bank0
  3364  04A0  00AF               	movwf	??_file
  3365  04A1  3000               	movlw	0
  3366  04A2  00B0               	movwf	??_file+1
  3367  04A3  3000               	movlw	0
  3368  04A4  00B1               	movwf	??_file+2
  3369  04A5  3000               	movlw	0
  3370  04A6  00B2               	movwf	??_file+3
  3371  04A7  0021               	movlb	1	; select bank1
  3372  04A8  0820               	movf	_FileSize^(0+128),w
  3373  04A9  0020               	movlb	0	; select bank0
  3374  04AA  00B3               	movwf	??_file+4
  3375  04AB  0021               	movlb	1	; select bank1
  3376  04AC  0821               	movf	(_FileSize+1)^(0+128),w
  3377  04AD  0020               	movlb	0	; select bank0
  3378  04AE  00B4               	movwf	??_file+5
  3379  04AF  0021               	movlb	1	; select bank1
  3380  04B0  0822               	movf	(_FileSize+2)^(0+128),w
  3381  04B1  0020               	movlb	0	; select bank0
  3382  04B2  00B5               	movwf	??_file+6
  3383  04B3  0021               	movlb	1	; select bank1
  3384  04B4  0823               	movf	(_FileSize+3)^(0+128),w
  3385  04B5  0020               	movlb	0	; select bank0
  3386  04B6  00B6               	movwf	??_file+7
  3387  04B7  3009               	movlw	9
  3388  04B8                     u1175:	
  3389  04B8  36B6               	lsrf	??_file+7,f
  3390  04B9  0CB5               	rrf	??_file+6,f
  3391  04BA  0CB4               	rrf	??_file+5,f
  3392  04BB  0CB3               	rrf	??_file+4,f
  3393  04BC  0B89               	decfsz	9,f
  3394  04BD  2CB8               	goto	u1175
  3395  04BE  0833               	movf	??_file+4,w
  3396  04BF  07AF               	addwf	??_file,f
  3397  04C0  0834               	movf	??_file+5,w
  3398  04C1  3DB0               	addwfc	??_file+1,f
  3399  04C2  0835               	movf	??_file+6,w
  3400  04C3  3DB1               	addwfc	??_file+2,f
  3401  04C4  0836               	movf	??_file+7,w
  3402  04C5  3DB2               	addwfc	??_file+3,f
  3403  04C6  0832               	movf	??_file+3,w
  3404  04C7  0021               	movlb	1	; select bank1
  3405  04C8  00A3               	movwf	(_FileSize+3)^(0+128)
  3406  04C9  0020               	movlb	0	; select bank0
  3407  04CA  0831               	movf	??_file+2,w
  3408  04CB  0021               	movlb	1	; select bank1
  3409  04CC  00A2               	movwf	(_FileSize+2)^(0+128)
  3410  04CD  0020               	movlb	0	; select bank0
  3411  04CE  0830               	movf	??_file+1,w
  3412  04CF  0021               	movlb	1	; select bank1
  3413  04D0  00A1               	movwf	(_FileSize+1)^(0+128)
  3414  04D1  0020               	movlb	0	; select bank0
  3415  04D2  082F               	movf	??_file,w
  3416  04D3  0021               	movlb	1	; select bank1
  3417  04D4  00A0               	movwf	_FileSize^(0+128)
  3418  04D5  0008               	return
  3419  04D6                     __end_of_file:	
  3420                           
  3421                           	psect	text4
  3422  04D6                     __ptext4:	
  3423 ;; *************** function _fat *****************
  3424 ;; Defined at:
  3425 ;;		line 68 in file "main.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  rdc             4   42[BANK0 ] unsigned char [4]
  3430 ;;  spf             4   38[BANK0 ] unsigned char [4]
  3431 ;;  pfs             4   34[BANK0 ] unsigned char [4]
  3432 ;;  i               2   46[BANK0 ] unsigned int 
  3433 ;;  r               2   28[BANK0 ] unsigned int 
  3434 ;;  rs2             1   33[BANK0 ] unsigned char 
  3435 ;;  rs1             1   32[BANK0 ] unsigned char 
  3436 ;;  bps2            1   31[BANK0 ] unsigned char 
  3437 ;;  bps1            1   30[BANK0 ] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0, pclath, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;Total ram usage:       36 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    2
  3454 ;; This function calls:
  3455 ;;		_Command
  3456 ;;		_SPI
  3457 ;;		___lmul
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _fat
  3465  04D6                     _fat:	
  3466                           
  3467                           ;main.c: 70: unsigned int r,i;
  3468                           ;main.c: 71: unsigned char pfs[4],bps1,bps2,rs1,rs2,spf[4],rdc[4];
  3469                           ;main.c: 74: r = Command(17,0,0xFF);
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _fat: [wreg+status,2+status,0+pclath+cstack]
  3473  04D6  3000               	movlw	0
  3474  04D7  0020               	movlb	0	; select bank0
  3475  04D8  00A3               	movwf	Command@adrs+3
  3476  04D9  3000               	movlw	0
  3477  04DA  00A2               	movwf	Command@adrs+2
  3478  04DB  3000               	movlw	0
  3479  04DC  00A1               	movwf	Command@adrs+1
  3480  04DD  3000               	movlw	0
  3481  04DE  00A0               	movwf	Command@adrs
  3482  04DF  30FF               	movlw	255
  3483  04E0  00AC               	movwf	??_fat
  3484  04E1  082C               	movf	??_fat,w
  3485  04E2  00A4               	movwf	Command@frame2
  3486  04E3  3011               	movlw	17
  3487  04E4  3180  207A  3184   	fcall	_Command
  3488  04E7  0020               	movlb	0	; select bank0
  3489  04E8  00AD               	movwf	??_fat+1
  3490  04E9  01AE               	clrf	??_fat+2
  3491  04EA  082D               	movf	??_fat+1,w
  3492  04EB  00BC               	movwf	fat@r
  3493  04EC  082E               	movf	??_fat+2,w
  3494  04ED  00BD               	movwf	fat@r+1
  3495                           
  3496                           ;main.c: 75: if(r != 0){do { LATAbits.LATA1 = 1; } while(0);
  3497  04EE  083C               	movf	fat@r,w
  3498  04EF  043D               	iorwf	fat@r+1,w
  3499  04F0  1903               	btfsc	3,2
  3500  04F1  2CF6               	goto	l1268
  3501  04F2  0022               	movlb	2	; select bank2
  3502  04F3  148C               	bsf	12,1	;volatile
  3503                           
  3504                           ;main.c: 76: do { LATAbits.LATA2 = 1; } while(0);
  3505  04F4  150C               	bsf	12,2	;volatile
  3506                           
  3507                           ;main.c: 77: do { LATAbits.LATA4 = 1; } while(0);}
  3508  04F5  160C               	bsf	12,4	;volatile
  3509  04F6                     l1268:	
  3510                           ;main.c: 80: while(SPI(0xFF) != 0xFe);
  3511                           
  3512  04F6  30FF               	movlw	255
  3513  04F7  3180  2011  3184   	fcall	_SPI
  3514  04FA  3AFE               	xorlw	254
  3515  04FB  1D03               	skipz
  3516  04FC  2CF6               	goto	l1268
  3517                           
  3518                           ;main.c: 81: for(i=0;i<512;i++){
  3519  04FD  0020               	movlb	0	; select bank0
  3520  04FE  01CE               	clrf	fat@i
  3521  04FF  01CF               	clrf	fat@i+1
  3522  0500  3002               	movlw	2
  3523  0501  024F               	subwf	fat@i+1,w
  3524  0502  3000               	movlw	0
  3525  0503  1903               	skipnz
  3526  0504  024E               	subwf	fat@i,w
  3527  0505  1803               	btfsc	3,0
  3528  0506  2D57               	goto	l1298
  3529  0507                     l1276:	
  3530                           
  3531                           ;main.c: 82: if(i==454){pfs[0]=SPI(0xFF);}
  3532  0507  30C6               	movlw	198
  3533  0508  064E               	xorwf	fat@i,w
  3534  0509  1D03               	skipz
  3535  050A  2D17               	goto	l1280
  3536  050B  034F               	decf	fat@i+1,w
  3537  050C  1D03               	btfss	3,2
  3538  050D  2D17               	goto	l1280
  3539  050E  30FF               	movlw	255
  3540  050F  3180  2011  3184   	fcall	_SPI
  3541  0512  0020               	movlb	0	; select bank0
  3542  0513  00AC               	movwf	??_fat
  3543  0514  082C               	movf	??_fat,w
  3544  0515  00C2               	movwf	fat@pfs
  3545  0516  2D4B               	goto	l1294
  3546  0517                     l1280:	
  3547                           
  3548                           ;main.c: 83: else if(i==455){pfs[1]=SPI(0xFF);}
  3549  0517  30C7               	movlw	199
  3550  0518  064E               	xorwf	fat@i,w
  3551  0519  1D03               	skipz
  3552  051A  2D27               	goto	l1284
  3553  051B  034F               	decf	fat@i+1,w
  3554  051C  1D03               	btfss	3,2
  3555  051D  2D27               	goto	l1284
  3556  051E  30FF               	movlw	255
  3557  051F  3180  2011  3184   	fcall	_SPI
  3558  0522  0020               	movlb	0	; select bank0
  3559  0523  00AC               	movwf	??_fat
  3560  0524  082C               	movf	??_fat,w
  3561  0525  00C3               	movwf	fat@pfs+1
  3562  0526  2D4B               	goto	l1294
  3563  0527                     l1284:	
  3564                           
  3565                           ;main.c: 84: else if(i==456){pfs[2]=SPI(0xFF);}
  3566  0527  30C8               	movlw	200
  3567  0528  064E               	xorwf	fat@i,w
  3568  0529  1D03               	skipz
  3569  052A  2D37               	goto	l1288
  3570  052B  034F               	decf	fat@i+1,w
  3571  052C  1D03               	btfss	3,2
  3572  052D  2D37               	goto	l1288
  3573  052E  30FF               	movlw	255
  3574  052F  3180  2011  3184   	fcall	_SPI
  3575  0532  0020               	movlb	0	; select bank0
  3576  0533  00AC               	movwf	??_fat
  3577  0534  082C               	movf	??_fat,w
  3578  0535  00C4               	movwf	fat@pfs+2
  3579  0536  2D4B               	goto	l1294
  3580  0537                     l1288:	
  3581                           
  3582                           ;main.c: 85: else if(i==457){pfs[3]=SPI(0xFF);}
  3583  0537  30C9               	movlw	201
  3584  0538  064E               	xorwf	fat@i,w
  3585  0539  1D03               	skipz
  3586  053A  2D47               	goto	l1292
  3587  053B  034F               	decf	fat@i+1,w
  3588  053C  1D03               	btfss	3,2
  3589  053D  2D47               	goto	l1292
  3590  053E  30FF               	movlw	255
  3591  053F  3180  2011  3184   	fcall	_SPI
  3592  0542  0020               	movlb	0	; select bank0
  3593  0543  00AC               	movwf	??_fat
  3594  0544  082C               	movf	??_fat,w
  3595  0545  00C5               	movwf	fat@pfs+3
  3596  0546  2D4B               	goto	l1294
  3597  0547                     l1292:	
  3598                           
  3599                           ;main.c: 86: else{SPI(0xFF);}
  3600  0547  30FF               	movlw	255
  3601  0548  3180  2011  3184   	fcall	_SPI
  3602  054B                     l1294:	
  3603  054B  3001               	movlw	1
  3604  054C  0020               	movlb	0	; select bank0
  3605  054D  07CE               	addwf	fat@i,f
  3606  054E  3000               	movlw	0
  3607  054F  3DCF               	addwfc	fat@i+1,f
  3608  0550  3002               	movlw	2
  3609  0551  024F               	subwf	fat@i+1,w
  3610  0552  3000               	movlw	0
  3611  0553  1903               	skipnz
  3612  0554  024E               	subwf	fat@i,w
  3613  0555  1C03               	skipc
  3614  0556  2D07               	goto	l1276
  3615  0557                     l1298:	
  3616                           
  3617                           ;main.c: 88: }
  3618                           ;main.c: 89: SPI(0xFF);
  3619  0557  30FF               	movlw	255
  3620  0558  3180  2011  3184   	fcall	_SPI
  3621                           
  3622                           ;main.c: 90: SPI(0xFF);
  3623  055B  30FF               	movlw	255
  3624  055C  3180  2011  3184   	fcall	_SPI
  3625                           
  3626                           ;main.c: 91: SPI(0xFF);
  3627  055F  30FF               	movlw	255
  3628  0560  3180  2011  3184   	fcall	_SPI
  3629                           
  3630                           ;main.c: 93: BootSector = pfs[0] | ( (unsigned long)pfs[1] << 8 ) | ( (unsigned long)pfs
      +                          [2] << 16 ) | ( (unsigned long)pfs[3] << 24 );
  3631  0563  0020               	movlb	0	; select bank0
  3632  0564  0845               	movf	fat@pfs+3,w
  3633  0565  00AC               	movwf	??_fat
  3634  0566  01AD               	clrf	??_fat+1
  3635  0567  01AE               	clrf	??_fat+2
  3636  0568  01AF               	clrf	??_fat+3
  3637  0569  3018               	movlw	24
  3638  056A                     u1325:	
  3639  056A  35AC               	lslf	??_fat,f
  3640  056B  0DAD               	rlf	??_fat+1,f
  3641  056C  0DAE               	rlf	??_fat+2,f
  3642  056D  0DAF               	rlf	??_fat+3,f
  3643  056E  0B89               	decfsz	9,f
  3644  056F  2D6A               	goto	u1325
  3645  0570  0844               	movf	fat@pfs+2,w
  3646  0571  00B0               	movwf	??_fat+4
  3647  0572  01B1               	clrf	??_fat+5
  3648  0573  01B2               	clrf	??_fat+6
  3649  0574  01B3               	clrf	??_fat+7
  3650  0575  3010               	movlw	16
  3651  0576                     u1335:	
  3652  0576  35B0               	lslf	??_fat+4,f
  3653  0577  0DB1               	rlf	??_fat+5,f
  3654  0578  0DB2               	rlf	??_fat+6,f
  3655  0579  0DB3               	rlf	??_fat+7,f
  3656  057A  0B89               	decfsz	9,f
  3657  057B  2D76               	goto	u1335
  3658  057C  0843               	movf	fat@pfs+1,w
  3659  057D  00B4               	movwf	??_fat+8
  3660  057E  01B5               	clrf	??_fat+9
  3661  057F  01B6               	clrf	??_fat+10
  3662  0580  01B7               	clrf	??_fat+11
  3663  0581  3008               	movlw	8
  3664  0582                     u1345:	
  3665  0582  35B4               	lslf	??_fat+8,f
  3666  0583  0DB5               	rlf	??_fat+9,f
  3667  0584  0DB6               	rlf	??_fat+10,f
  3668  0585  0DB7               	rlf	??_fat+11,f
  3669  0586  0B89               	decfsz	9,f
  3670  0587  2D82               	goto	u1345
  3671  0588  0842               	movf	fat@pfs,w
  3672  0589  00B8               	movwf	??_fat+12
  3673  058A  01B9               	clrf	??_fat+13
  3674  058B  01BA               	clrf	??_fat+14
  3675  058C  01BB               	clrf	??_fat+15
  3676  058D  0838               	movf	??_fat+12,w
  3677  058E  04B4               	iorwf	??_fat+8,f
  3678  058F  0839               	movf	??_fat+13,w
  3679  0590  04B5               	iorwf	??_fat+9,f
  3680  0591  083A               	movf	??_fat+14,w
  3681  0592  04B6               	iorwf	??_fat+10,f
  3682  0593  083B               	movf	??_fat+15,w
  3683  0594  04B7               	iorwf	??_fat+11,f
  3684  0595  0834               	movf	??_fat+8,w
  3685  0596  04B0               	iorwf	??_fat+4,f
  3686  0597  0835               	movf	??_fat+9,w
  3687  0598  04B1               	iorwf	??_fat+5,f
  3688  0599  0836               	movf	??_fat+10,w
  3689  059A  04B2               	iorwf	??_fat+6,f
  3690  059B  0837               	movf	??_fat+11,w
  3691  059C  04B3               	iorwf	??_fat+7,f
  3692  059D  082C               	movf	??_fat,w
  3693  059E  0430               	iorwf	??_fat+4,w
  3694  059F  00E2               	movwf	_BootSector
  3695  05A0  082D               	movf	??_fat+1,w
  3696  05A1  0431               	iorwf	??_fat+5,w
  3697  05A2  00E3               	movwf	_BootSector+1
  3698  05A3  082E               	movf	??_fat+2,w
  3699  05A4  0432               	iorwf	??_fat+6,w
  3700  05A5  00E4               	movwf	_BootSector+2
  3701  05A6  082F               	movf	??_fat+3,w
  3702  05A7  0433               	iorwf	??_fat+7,w
  3703  05A8  00E5               	movwf	_BootSector+3
  3704                           
  3705                           ;main.c: 96: r = Command(17,BootSector*card,0xFF);
  3706  05A9  086C               	movf	_card,w
  3707  05AA  00F0               	movwf	___lmul@multiplier
  3708  05AB  086D               	movf	_card+1,w
  3709  05AC  00F1               	movwf	___lmul@multiplier+1
  3710  05AD  01F2               	clrf	___lmul@multiplier+2
  3711  05AE  01F3               	clrf	___lmul@multiplier+3
  3712  05AF  0865               	movf	_BootSector+3,w
  3713  05B0  00F7               	movwf	___lmul@multiplicand+3
  3714  05B1  0864               	movf	_BootSector+2,w
  3715  05B2  00F6               	movwf	___lmul@multiplicand+2
  3716  05B3  0863               	movf	_BootSector+1,w
  3717  05B4  00F5               	movwf	___lmul@multiplicand+1
  3718  05B5  0862               	movf	_BootSector,w
  3719  05B6  00F4               	movwf	___lmul@multiplicand
  3720  05B7  3180  204B  3184   	fcall	___lmul
  3721  05BA  0873               	movf	?___lmul+3,w
  3722  05BB  0020               	movlb	0	; select bank0
  3723  05BC  00A3               	movwf	Command@adrs+3
  3724  05BD  0872               	movf	?___lmul+2,w
  3725  05BE  00A2               	movwf	Command@adrs+2
  3726  05BF  0871               	movf	?___lmul+1,w
  3727  05C0  00A1               	movwf	Command@adrs+1
  3728  05C1  0870               	movf	?___lmul,w
  3729  05C2  00A0               	movwf	Command@adrs
  3730  05C3  30FF               	movlw	255
  3731  05C4  00AC               	movwf	??_fat
  3732  05C5  082C               	movf	??_fat,w
  3733  05C6  00A4               	movwf	Command@frame2
  3734  05C7  3011               	movlw	17
  3735  05C8  3180  207A  3184   	fcall	_Command
  3736  05CB  0020               	movlb	0	; select bank0
  3737  05CC  00AD               	movwf	??_fat+1
  3738  05CD  01AE               	clrf	??_fat+2
  3739  05CE  082D               	movf	??_fat+1,w
  3740  05CF  00BC               	movwf	fat@r
  3741  05D0  082E               	movf	??_fat+2,w
  3742  05D1  00BD               	movwf	fat@r+1
  3743  05D2                     l1304:	
  3744                           ;main.c: 99: while(SPI(0xFF) != 0xFe);
  3745                           
  3746  05D2  30FF               	movlw	255
  3747  05D3  3180  2011  3184   	fcall	_SPI
  3748  05D6  3AFE               	xorlw	254
  3749  05D7  1D03               	skipz
  3750  05D8  2DD2               	goto	l1304
  3751                           
  3752                           ;main.c: 100: for(i=0;i<512;i++){
  3753  05D9  0020               	movlb	0	; select bank0
  3754  05DA  01CE               	clrf	fat@i
  3755  05DB  01CF               	clrf	fat@i+1
  3756  05DC  3002               	movlw	2
  3757  05DD  024F               	subwf	fat@i+1,w
  3758  05DE  3000               	movlw	0
  3759  05DF  1903               	skipnz
  3760  05E0  024E               	subwf	fat@i,w
  3761  05E1  1803               	btfsc	3,0
  3762  05E2  2EB7               	goto	l1374
  3763  05E3                     l1312:	
  3764                           
  3765                           ;main.c: 102: if(i==11){bps1=SPI(0xFF);}
  3766  05E3  300B               	movlw	11
  3767  05E4  064E               	xorwf	fat@i,w
  3768  05E5  044F               	iorwf	fat@i+1,w
  3769  05E6  1D03               	btfss	3,2
  3770  05E7  2DF1               	goto	l1316
  3771  05E8  30FF               	movlw	255
  3772  05E9  3180  2011  3184   	fcall	_SPI
  3773  05EC  0020               	movlb	0	; select bank0
  3774  05ED  00AC               	movwf	??_fat
  3775  05EE  082C               	movf	??_fat,w
  3776  05EF  00BE               	movwf	fat@bps1
  3777  05F0  2EAB               	goto	l1370
  3778  05F1                     l1316:	
  3779                           
  3780                           ;main.c: 103: else if(i==12){bps2=SPI(0xFF);}
  3781  05F1  300C               	movlw	12
  3782  05F2  064E               	xorwf	fat@i,w
  3783  05F3  044F               	iorwf	fat@i+1,w
  3784  05F4  1D03               	btfss	3,2
  3785  05F5  2DFF               	goto	l1320
  3786  05F6  30FF               	movlw	255
  3787  05F7  3180  2011  3184   	fcall	_SPI
  3788  05FA  0020               	movlb	0	; select bank0
  3789  05FB  00AC               	movwf	??_fat
  3790  05FC  082C               	movf	??_fat,w
  3791  05FD  00BF               	movwf	fat@bps2
  3792  05FE  2EAB               	goto	l1370
  3793  05FF                     l1320:	
  3794                           
  3795                           ;main.c: 104: else if(i==13){SectorsPerCluster=SPI(0xFF);}
  3796  05FF  300D               	movlw	13
  3797  0600  064E               	xorwf	fat@i,w
  3798  0601  044F               	iorwf	fat@i+1,w
  3799  0602  1D03               	btfss	3,2
  3800  0603  2E0D               	goto	l1324
  3801  0604  30FF               	movlw	255
  3802  0605  3180  2011  3184   	fcall	_SPI
  3803  0608  0020               	movlb	0	; select bank0
  3804  0609  00AC               	movwf	??_fat
  3805  060A  082C               	movf	??_fat,w
  3806  060B  00EE               	movwf	_SectorsPerCluster
  3807  060C  2EAB               	goto	l1370
  3808  060D                     l1324:	
  3809                           
  3810                           ;main.c: 105: else if(i==14){rs1=SPI(0xFF);}
  3811  060D  300E               	movlw	14
  3812  060E  064E               	xorwf	fat@i,w
  3813  060F  044F               	iorwf	fat@i+1,w
  3814  0610  1D03               	btfss	3,2
  3815  0611  2E1B               	goto	l1328
  3816  0612  30FF               	movlw	255
  3817  0613  3180  2011  3184   	fcall	_SPI
  3818  0616  0020               	movlb	0	; select bank0
  3819  0617  00AC               	movwf	??_fat
  3820  0618  082C               	movf	??_fat,w
  3821  0619  00C0               	movwf	fat@rs1
  3822  061A  2EAB               	goto	l1370
  3823  061B                     l1328:	
  3824                           
  3825                           ;main.c: 106: else if(i==15){rs2=SPI(0xFF);}
  3826  061B  300F               	movlw	15
  3827  061C  064E               	xorwf	fat@i,w
  3828  061D  044F               	iorwf	fat@i+1,w
  3829  061E  1D03               	btfss	3,2
  3830  061F  2E29               	goto	l1332
  3831  0620  30FF               	movlw	255
  3832  0621  3180  2011  3184   	fcall	_SPI
  3833  0624  0020               	movlb	0	; select bank0
  3834  0625  00AC               	movwf	??_fat
  3835  0626  082C               	movf	??_fat,w
  3836  0627  00C1               	movwf	fat@rs2
  3837  0628  2EAB               	goto	l1370
  3838  0629                     l1332:	
  3839                           
  3840                           ;main.c: 107: else if(i==16){Fats=SPI(0xFF);}
  3841  0629  3010               	movlw	16
  3842  062A  064E               	xorwf	fat@i,w
  3843  062B  044F               	iorwf	fat@i+1,w
  3844  062C  1D03               	btfss	3,2
  3845  062D  2E37               	goto	l1336
  3846  062E  30FF               	movlw	255
  3847  062F  3180  2011  3184   	fcall	_SPI
  3848  0632  0020               	movlb	0	; select bank0
  3849  0633  00AC               	movwf	??_fat
  3850  0634  082C               	movf	??_fat,w
  3851  0635  00EA               	movwf	_Fats
  3852  0636  2EAB               	goto	l1370
  3853  0637                     l1336:	
  3854                           
  3855                           ;main.c: 108: else if(i==36){spf[0]=SPI(0xFF);}
  3856  0637  3024               	movlw	36
  3857  0638  064E               	xorwf	fat@i,w
  3858  0639  044F               	iorwf	fat@i+1,w
  3859  063A  1D03               	btfss	3,2
  3860  063B  2E45               	goto	l1340
  3861  063C  30FF               	movlw	255
  3862  063D  3180  2011  3184   	fcall	_SPI
  3863  0640  0020               	movlb	0	; select bank0
  3864  0641  00AC               	movwf	??_fat
  3865  0642  082C               	movf	??_fat,w
  3866  0643  00C6               	movwf	fat@spf
  3867  0644  2EAB               	goto	l1370
  3868  0645                     l1340:	
  3869                           
  3870                           ;main.c: 109: else if(i==37){spf[1]=SPI(0xFF);}
  3871  0645  3025               	movlw	37
  3872  0646  064E               	xorwf	fat@i,w
  3873  0647  044F               	iorwf	fat@i+1,w
  3874  0648  1D03               	btfss	3,2
  3875  0649  2E53               	goto	l1344
  3876  064A  30FF               	movlw	255
  3877  064B  3180  2011  3184   	fcall	_SPI
  3878  064E  0020               	movlb	0	; select bank0
  3879  064F  00AC               	movwf	??_fat
  3880  0650  082C               	movf	??_fat,w
  3881  0651  00C7               	movwf	fat@spf+1
  3882  0652  2EAB               	goto	l1370
  3883  0653                     l1344:	
  3884                           
  3885                           ;main.c: 110: else if(i==38){spf[2]=SPI(0xFF);}
  3886  0653  3026               	movlw	38
  3887  0654  064E               	xorwf	fat@i,w
  3888  0655  044F               	iorwf	fat@i+1,w
  3889  0656  1D03               	btfss	3,2
  3890  0657  2E61               	goto	l1348
  3891  0658  30FF               	movlw	255
  3892  0659  3180  2011  3184   	fcall	_SPI
  3893  065C  0020               	movlb	0	; select bank0
  3894  065D  00AC               	movwf	??_fat
  3895  065E  082C               	movf	??_fat,w
  3896  065F  00C8               	movwf	fat@spf+2
  3897  0660  2EAB               	goto	l1370
  3898  0661                     l1348:	
  3899                           
  3900                           ;main.c: 111: else if(i==39){spf[3]=SPI(0xFF);}
  3901  0661  3027               	movlw	39
  3902  0662  064E               	xorwf	fat@i,w
  3903  0663  044F               	iorwf	fat@i+1,w
  3904  0664  1D03               	btfss	3,2
  3905  0665  2E6F               	goto	l1352
  3906  0666  30FF               	movlw	255
  3907  0667  3180  2011  3184   	fcall	_SPI
  3908  066A  0020               	movlb	0	; select bank0
  3909  066B  00AC               	movwf	??_fat
  3910  066C  082C               	movf	??_fat,w
  3911  066D  00C9               	movwf	fat@spf+3
  3912  066E  2EAB               	goto	l1370
  3913  066F                     l1352:	
  3914                           
  3915                           ;main.c: 112: else if(i==44){rdc[0]=SPI(0xFF);}
  3916  066F  302C               	movlw	44
  3917  0670  064E               	xorwf	fat@i,w
  3918  0671  044F               	iorwf	fat@i+1,w
  3919  0672  1D03               	btfss	3,2
  3920  0673  2E7D               	goto	l1356
  3921  0674  30FF               	movlw	255
  3922  0675  3180  2011  3184   	fcall	_SPI
  3923  0678  0020               	movlb	0	; select bank0
  3924  0679  00AC               	movwf	??_fat
  3925  067A  082C               	movf	??_fat,w
  3926  067B  00CA               	movwf	fat@rdc
  3927  067C  2EAB               	goto	l1370
  3928  067D                     l1356:	
  3929                           
  3930                           ;main.c: 113: else if(i==45){rdc[1]=SPI(0xFF);}
  3931  067D  302D               	movlw	45
  3932  067E  064E               	xorwf	fat@i,w
  3933  067F  044F               	iorwf	fat@i+1,w
  3934  0680  1D03               	btfss	3,2
  3935  0681  2E8B               	goto	l1360
  3936  0682  30FF               	movlw	255
  3937  0683  3180  2011  3184   	fcall	_SPI
  3938  0686  0020               	movlb	0	; select bank0
  3939  0687  00AC               	movwf	??_fat
  3940  0688  082C               	movf	??_fat,w
  3941  0689  00CB               	movwf	fat@rdc+1
  3942  068A  2EAB               	goto	l1370
  3943  068B                     l1360:	
  3944                           
  3945                           ;main.c: 114: else if(i==46){rdc[2]=SPI(0xFF);}
  3946  068B  302E               	movlw	46
  3947  068C  064E               	xorwf	fat@i,w
  3948  068D  044F               	iorwf	fat@i+1,w
  3949  068E  1D03               	btfss	3,2
  3950  068F  2E99               	goto	l1364
  3951  0690  30FF               	movlw	255
  3952  0691  3180  2011  3184   	fcall	_SPI
  3953  0694  0020               	movlb	0	; select bank0
  3954  0695  00AC               	movwf	??_fat
  3955  0696  082C               	movf	??_fat,w
  3956  0697  00CC               	movwf	fat@rdc+2
  3957  0698  2EAB               	goto	l1370
  3958  0699                     l1364:	
  3959                           
  3960                           ;main.c: 115: else if(i==47){rdc[3]=SPI(0xFF);}
  3961  0699  302F               	movlw	47
  3962  069A  064E               	xorwf	fat@i,w
  3963  069B  044F               	iorwf	fat@i+1,w
  3964  069C  1D03               	btfss	3,2
  3965  069D  2EA7               	goto	l1368
  3966  069E  30FF               	movlw	255
  3967  069F  3180  2011  3184   	fcall	_SPI
  3968  06A2  0020               	movlb	0	; select bank0
  3969  06A3  00AC               	movwf	??_fat
  3970  06A4  082C               	movf	??_fat,w
  3971  06A5  00CD               	movwf	fat@rdc+3
  3972  06A6  2EAB               	goto	l1370
  3973  06A7                     l1368:	
  3974                           
  3975                           ;main.c: 116: else{SPI(0xFF);}
  3976  06A7  30FF               	movlw	255
  3977  06A8  3180  2011  3184   	fcall	_SPI
  3978  06AB                     l1370:	
  3979  06AB  3001               	movlw	1
  3980  06AC  0020               	movlb	0	; select bank0
  3981  06AD  07CE               	addwf	fat@i,f
  3982  06AE  3000               	movlw	0
  3983  06AF  3DCF               	addwfc	fat@i+1,f
  3984  06B0  3002               	movlw	2
  3985  06B1  024F               	subwf	fat@i+1,w
  3986  06B2  3000               	movlw	0
  3987  06B3  1903               	skipnz
  3988  06B4  024E               	subwf	fat@i,w
  3989  06B5  1C03               	skipc
  3990  06B6  2DE3               	goto	l1312
  3991  06B7                     l1374:	
  3992                           
  3993                           ;main.c: 118: }
  3994                           ;main.c: 119: SPI(0xFF);
  3995  06B7  30FF               	movlw	255
  3996  06B8  3180  2011  3184   	fcall	_SPI
  3997                           
  3998                           ;main.c: 120: SPI(0xFF);
  3999  06BB  30FF               	movlw	255
  4000  06BC  3180  2011  3184   	fcall	_SPI
  4001                           
  4002                           ;main.c: 121: SPI(0xFF);
  4003  06BF  30FF               	movlw	255
  4004  06C0  3180  2011  3184   	fcall	_SPI
  4005                           
  4006                           ;main.c: 123: BytesPerSector = bps1 | ( (unsigned int)bps2 << 8 );
  4007  06C3  0020               	movlb	0	; select bank0
  4008  06C4  083F               	movf	fat@bps2,w
  4009  06C5  00AC               	movwf	??_fat
  4010  06C6  01AD               	clrf	??_fat+1
  4011  06C7  082C               	movf	??_fat,w
  4012  06C8  00AD               	movwf	??_fat+1
  4013  06C9  01AC               	clrf	??_fat
  4014  06CA  082C               	movf	??_fat,w
  4015  06CB  043E               	iorwf	fat@bps1,w
  4016  06CC  00E8               	movwf	_BytesPerSector
  4017  06CD  082D               	movf	??_fat+1,w
  4018  06CE  00E9               	movwf	_BytesPerSector+1
  4019                           
  4020                           ;main.c: 124: ReservedSectors = rs1 | ( (unsigned int)rs2 << 8 );
  4021  06CF  0841               	movf	fat@rs2,w
  4022  06D0  00AC               	movwf	??_fat
  4023  06D1  01AD               	clrf	??_fat+1
  4024  06D2  082C               	movf	??_fat,w
  4025  06D3  00AD               	movwf	??_fat+1
  4026  06D4  01AC               	clrf	??_fat
  4027  06D5  082C               	movf	??_fat,w
  4028  06D6  0440               	iorwf	fat@rs1,w
  4029  06D7  00E6               	movwf	_ReservedSectors
  4030  06D8  082D               	movf	??_fat+1,w
  4031  06D9  00E7               	movwf	_ReservedSectors+1
  4032                           
  4033                           ;main.c: 125: RootDirCluster = rdc[0] | ( (unsigned long)rdc[1] << 8 ) | ( (unsigned lon
      +                          g)rdc[2] << 16 ) | ( (unsigned long)rdc[3] << 24 );
  4034  06DA  084D               	movf	fat@rdc+3,w
  4035  06DB  00AC               	movwf	??_fat
  4036  06DC  01AD               	clrf	??_fat+1
  4037  06DD  01AE               	clrf	??_fat+2
  4038  06DE  01AF               	clrf	??_fat+3
  4039  06DF  3018               	movlw	24
  4040  06E0                     u1525:	
  4041  06E0  35AC               	lslf	??_fat,f
  4042  06E1  0DAD               	rlf	??_fat+1,f
  4043  06E2  0DAE               	rlf	??_fat+2,f
  4044  06E3  0DAF               	rlf	??_fat+3,f
  4045  06E4  0B89               	decfsz	9,f
  4046  06E5  2EE0               	goto	u1525
  4047  06E6  084C               	movf	fat@rdc+2,w
  4048  06E7  00B0               	movwf	??_fat+4
  4049  06E8  01B1               	clrf	??_fat+5
  4050  06E9  01B2               	clrf	??_fat+6
  4051  06EA  01B3               	clrf	??_fat+7
  4052  06EB  3010               	movlw	16
  4053  06EC                     u1535:	
  4054  06EC  35B0               	lslf	??_fat+4,f
  4055  06ED  0DB1               	rlf	??_fat+5,f
  4056  06EE  0DB2               	rlf	??_fat+6,f
  4057  06EF  0DB3               	rlf	??_fat+7,f
  4058  06F0  0B89               	decfsz	9,f
  4059  06F1  2EEC               	goto	u1535
  4060  06F2  084B               	movf	fat@rdc+1,w
  4061  06F3  00B4               	movwf	??_fat+8
  4062  06F4  01B5               	clrf	??_fat+9
  4063  06F5  01B6               	clrf	??_fat+10
  4064  06F6  01B7               	clrf	??_fat+11
  4065  06F7  3008               	movlw	8
  4066  06F8                     u1545:	
  4067  06F8  35B4               	lslf	??_fat+8,f
  4068  06F9  0DB5               	rlf	??_fat+9,f
  4069  06FA  0DB6               	rlf	??_fat+10,f
  4070  06FB  0DB7               	rlf	??_fat+11,f
  4071  06FC  0B89               	decfsz	9,f
  4072  06FD  2EF8               	goto	u1545
  4073  06FE  084A               	movf	fat@rdc,w
  4074  06FF  00B8               	movwf	??_fat+12
  4075  0700  01B9               	clrf	??_fat+13
  4076  0701  01BA               	clrf	??_fat+14
  4077  0702  01BB               	clrf	??_fat+15
  4078  0703  0838               	movf	??_fat+12,w
  4079  0704  04B4               	iorwf	??_fat+8,f
  4080  0705  0839               	movf	??_fat+13,w
  4081  0706  04B5               	iorwf	??_fat+9,f
  4082  0707  083A               	movf	??_fat+14,w
  4083  0708  04B6               	iorwf	??_fat+10,f
  4084  0709  083B               	movf	??_fat+15,w
  4085  070A  04B7               	iorwf	??_fat+11,f
  4086  070B  0834               	movf	??_fat+8,w
  4087  070C  04B0               	iorwf	??_fat+4,f
  4088  070D  0835               	movf	??_fat+9,w
  4089  070E  04B1               	iorwf	??_fat+5,f
  4090  070F  0836               	movf	??_fat+10,w
  4091  0710  04B2               	iorwf	??_fat+6,f
  4092  0711  0837               	movf	??_fat+11,w
  4093  0712  04B3               	iorwf	??_fat+7,f
  4094  0713  082C               	movf	??_fat,w
  4095  0714  0430               	iorwf	??_fat+4,w
  4096  0715  0021               	movlb	1	; select bank1
  4097  0716  00A8               	movwf	_RootDirCluster^(0+128)
  4098  0717  0020               	movlb	0	; select bank0
  4099  0718  082D               	movf	??_fat+1,w
  4100  0719  0431               	iorwf	??_fat+5,w
  4101  071A  0021               	movlb	1	; select bank1
  4102  071B  00A9               	movwf	(_RootDirCluster+1)^(0+128)
  4103  071C  0020               	movlb	0	; select bank0
  4104  071D  082E               	movf	??_fat+2,w
  4105  071E  0432               	iorwf	??_fat+6,w
  4106  071F  0021               	movlb	1	; select bank1
  4107  0720  00AA               	movwf	(_RootDirCluster+2)^(0+128)
  4108  0721  0020               	movlb	0	; select bank0
  4109  0722  082F               	movf	??_fat+3,w
  4110  0723  0433               	iorwf	??_fat+7,w
  4111  0724  0021               	movlb	1	; select bank1
  4112  0725  00AB               	movwf	(_RootDirCluster+3)^(0+128)
  4113                           
  4114                           ;main.c: 126: SectorsPerFat = spf[0] | ( (unsigned long)spf[1] << 8 ) | ( (unsigned long
      +                          )spf[2] << 16 ) | ( (unsigned long)spf[3] << 24 );
  4115  0726  0020               	movlb	0	; select bank0
  4116  0727  0849               	movf	fat@spf+3,w
  4117  0728  00AC               	movwf	??_fat
  4118  0729  01AD               	clrf	??_fat+1
  4119  072A  01AE               	clrf	??_fat+2
  4120  072B  01AF               	clrf	??_fat+3
  4121  072C  3018               	movlw	24
  4122  072D                     u1555:	
  4123  072D  35AC               	lslf	??_fat,f
  4124  072E  0DAD               	rlf	??_fat+1,f
  4125  072F  0DAE               	rlf	??_fat+2,f
  4126  0730  0DAF               	rlf	??_fat+3,f
  4127  0731  0B89               	decfsz	9,f
  4128  0732  2F2D               	goto	u1555
  4129  0733  0848               	movf	fat@spf+2,w
  4130  0734  00B0               	movwf	??_fat+4
  4131  0735  01B1               	clrf	??_fat+5
  4132  0736  01B2               	clrf	??_fat+6
  4133  0737  01B3               	clrf	??_fat+7
  4134  0738  3010               	movlw	16
  4135  0739                     u1565:	
  4136  0739  35B0               	lslf	??_fat+4,f
  4137  073A  0DB1               	rlf	??_fat+5,f
  4138  073B  0DB2               	rlf	??_fat+6,f
  4139  073C  0DB3               	rlf	??_fat+7,f
  4140  073D  0B89               	decfsz	9,f
  4141  073E  2F39               	goto	u1565
  4142  073F  0847               	movf	fat@spf+1,w
  4143  0740  00B4               	movwf	??_fat+8
  4144  0741  01B5               	clrf	??_fat+9
  4145  0742  01B6               	clrf	??_fat+10
  4146  0743  01B7               	clrf	??_fat+11
  4147  0744  3008               	movlw	8
  4148  0745                     u1575:	
  4149  0745  35B4               	lslf	??_fat+8,f
  4150  0746  0DB5               	rlf	??_fat+9,f
  4151  0747  0DB6               	rlf	??_fat+10,f
  4152  0748  0DB7               	rlf	??_fat+11,f
  4153  0749  0B89               	decfsz	9,f
  4154  074A  2F45               	goto	u1575
  4155  074B  0846               	movf	fat@spf,w
  4156  074C  00B8               	movwf	??_fat+12
  4157  074D  01B9               	clrf	??_fat+13
  4158  074E  01BA               	clrf	??_fat+14
  4159  074F  01BB               	clrf	??_fat+15
  4160  0750  0838               	movf	??_fat+12,w
  4161  0751  04B4               	iorwf	??_fat+8,f
  4162  0752  0839               	movf	??_fat+13,w
  4163  0753  04B5               	iorwf	??_fat+9,f
  4164  0754  083A               	movf	??_fat+14,w
  4165  0755  04B6               	iorwf	??_fat+10,f
  4166  0756  083B               	movf	??_fat+15,w
  4167  0757  04B7               	iorwf	??_fat+11,f
  4168  0758  0834               	movf	??_fat+8,w
  4169  0759  04B0               	iorwf	??_fat+4,f
  4170  075A  0835               	movf	??_fat+9,w
  4171  075B  04B1               	iorwf	??_fat+5,f
  4172  075C  0836               	movf	??_fat+10,w
  4173  075D  04B2               	iorwf	??_fat+6,f
  4174  075E  0837               	movf	??_fat+11,w
  4175  075F  04B3               	iorwf	??_fat+7,f
  4176  0760  082C               	movf	??_fat,w
  4177  0761  0430               	iorwf	??_fat+4,w
  4178  0762  0021               	movlb	1	; select bank1
  4179  0763  00AC               	movwf	_SectorsPerFat^(0+128)
  4180  0764  0020               	movlb	0	; select bank0
  4181  0765  082D               	movf	??_fat+1,w
  4182  0766  0431               	iorwf	??_fat+5,w
  4183  0767  0021               	movlb	1	; select bank1
  4184  0768  00AD               	movwf	(_SectorsPerFat+1)^(0+128)
  4185  0769  0020               	movlb	0	; select bank0
  4186  076A  082E               	movf	??_fat+2,w
  4187  076B  0432               	iorwf	??_fat+6,w
  4188  076C  0021               	movlb	1	; select bank1
  4189  076D  00AE               	movwf	(_SectorsPerFat+2)^(0+128)
  4190  076E  0020               	movlb	0	; select bank0
  4191  076F  082F               	movf	??_fat+3,w
  4192  0770  0433               	iorwf	??_fat+7,w
  4193  0771  0021               	movlb	1	; select bank1
  4194  0772  00AF               	movwf	(_SectorsPerFat+3)^(0+128)
  4195                           
  4196                           ;main.c: 127: DataSector = BootSector + (unsigned long)Fats * (unsigned long)SectorsPerF
      +                          at + (unsigned long)ReservedSectors;
  4197  0773  0020               	movlb	0	; select bank0
  4198  0774  0862               	movf	_BootSector,w
  4199  0775  00AC               	movwf	??_fat
  4200  0776  0863               	movf	_BootSector+1,w
  4201  0777  00AD               	movwf	??_fat+1
  4202  0778  0864               	movf	_BootSector+2,w
  4203  0779  00AE               	movwf	??_fat+2
  4204  077A  0865               	movf	_BootSector+3,w
  4205  077B  00AF               	movwf	??_fat+3
  4206  077C  0866               	movf	_ReservedSectors,w
  4207  077D  00B0               	movwf	??_fat+4
  4208  077E  0867               	movf	_ReservedSectors+1,w
  4209  077F  00B1               	movwf	??_fat+5
  4210  0780  01B2               	clrf	??_fat+6
  4211  0781  01B3               	clrf	??_fat+7
  4212  0782  086A               	movf	_Fats,w
  4213  0783  00B4               	movwf	??_fat+8
  4214  0784  01B5               	clrf	??_fat+9
  4215  0785  01B6               	clrf	??_fat+10
  4216  0786  01B7               	clrf	??_fat+11
  4217  0787  0837               	movf	??_fat+11,w
  4218  0788  00F3               	movwf	___lmul@multiplier+3
  4219  0789  0836               	movf	??_fat+10,w
  4220  078A  00F2               	movwf	___lmul@multiplier+2
  4221  078B  0835               	movf	??_fat+9,w
  4222  078C  00F1               	movwf	___lmul@multiplier+1
  4223  078D  0834               	movf	??_fat+8,w
  4224  078E  00F0               	movwf	___lmul@multiplier
  4225  078F  0021               	movlb	1	; select bank1
  4226  0790  082F               	movf	(_SectorsPerFat+3)^(0+128),w
  4227  0791  00F7               	movwf	___lmul@multiplicand+3
  4228  0792  082E               	movf	(_SectorsPerFat+2)^(0+128),w
  4229  0793  00F6               	movwf	___lmul@multiplicand+2
  4230  0794  082D               	movf	(_SectorsPerFat+1)^(0+128),w
  4231  0795  00F5               	movwf	___lmul@multiplicand+1
  4232  0796  082C               	movf	_SectorsPerFat^(0+128),w
  4233  0797  00F4               	movwf	___lmul@multiplicand
  4234  0798  3180  204B  3184   	fcall	___lmul
  4235  079B  0870               	movf	?___lmul,w
  4236  079C  0020               	movlb	0	; select bank0
  4237  079D  07B0               	addwf	??_fat+4,f
  4238  079E  0871               	movf	?___lmul+1,w
  4239  079F  3DB1               	addwfc	??_fat+5,f
  4240  07A0  0872               	movf	?___lmul+2,w
  4241  07A1  3DB2               	addwfc	??_fat+6,f
  4242  07A2  0873               	movf	?___lmul+3,w
  4243  07A3  3DB3               	addwfc	??_fat+7,f
  4244  07A4  0830               	movf	??_fat+4,w
  4245  07A5  07AC               	addwf	??_fat,f
  4246  07A6  0831               	movf	??_fat+5,w
  4247  07A7  3DAD               	addwfc	??_fat+1,f
  4248  07A8  0832               	movf	??_fat+6,w
  4249  07A9  3DAE               	addwfc	??_fat+2,f
  4250  07AA  0833               	movf	??_fat+7,w
  4251  07AB  3DAF               	addwfc	??_fat+3,f
  4252  07AC  082F               	movf	??_fat+3,w
  4253  07AD  00E1               	movwf	_DataSector+3
  4254  07AE  082E               	movf	??_fat+2,w
  4255  07AF  00E0               	movwf	_DataSector+2
  4256  07B0  082D               	movf	??_fat+1,w
  4257  07B1  00DF               	movwf	_DataSector+1
  4258  07B2  082C               	movf	??_fat,w
  4259  07B3  00DE               	movwf	_DataSector
  4260                           
  4261                           ;main.c: 128: RootDir = (RootDirCluster -2) * (unsigned long)SectorsPerCluster + DataSec
      +                          tor;
  4262  07B4  30FE               	movlw	254
  4263  07B5  0021               	movlb	1	; select bank1
  4264  07B6  0728               	addwf	_RootDirCluster^(0+128),w
  4265  07B7  00F0               	movwf	___lmul@multiplier
  4266  07B8  30FF               	movlw	255
  4267  07B9  3D29               	addwfc	(_RootDirCluster+1)^(0+128),w
  4268  07BA  00F1               	movwf	___lmul@multiplier+1
  4269  07BB  30FF               	movlw	255
  4270  07BC  3D2A               	addwfc	(_RootDirCluster+2)^(0+128),w
  4271  07BD  00F2               	movwf	___lmul@multiplier+2
  4272  07BE  30FF               	movlw	255
  4273  07BF  3D2B               	addwfc	(_RootDirCluster+3)^(0+128),w
  4274  07C0  00F3               	movwf	___lmul@multiplier+3
  4275  07C1  0020               	movlb	0	; select bank0
  4276  07C2  086E               	movf	_SectorsPerCluster,w
  4277  07C3  00AC               	movwf	??_fat
  4278  07C4  01AD               	clrf	??_fat+1
  4279  07C5  01AE               	clrf	??_fat+2
  4280  07C6  01AF               	clrf	??_fat+3
  4281  07C7  082F               	movf	??_fat+3,w
  4282  07C8  00F7               	movwf	___lmul@multiplicand+3
  4283  07C9  082E               	movf	??_fat+2,w
  4284  07CA  00F6               	movwf	___lmul@multiplicand+2
  4285  07CB  082D               	movf	??_fat+1,w
  4286  07CC  00F5               	movwf	___lmul@multiplicand+1
  4287  07CD  082C               	movf	??_fat,w
  4288  07CE  00F4               	movwf	___lmul@multiplicand
  4289  07CF  3180  204B         	fcall	___lmul
  4290  07D1  0870               	movf	?___lmul,w
  4291  07D2  0020               	movlb	0	; select bank0
  4292  07D3  075E               	addwf	_DataSector,w
  4293  07D4  00B0               	movwf	??_fat+4
  4294  07D5  0871               	movf	?___lmul+1,w
  4295  07D6  3D5F               	addwfc	_DataSector+1,w
  4296  07D7  00B1               	movwf	??_fat+5
  4297  07D8  0872               	movf	?___lmul+2,w
  4298  07D9  3D60               	addwfc	_DataSector+2,w
  4299  07DA  00B2               	movwf	??_fat+6
  4300  07DB  0873               	movf	?___lmul+3,w
  4301  07DC  3D61               	addwfc	_DataSector+3,w
  4302  07DD  00B3               	movwf	??_fat+7
  4303  07DE  0833               	movf	??_fat+7,w
  4304  07DF  0021               	movlb	1	; select bank1
  4305  07E0  00B3               	movwf	(_RootDir+3)^(0+128)
  4306  07E1  0020               	movlb	0	; select bank0
  4307  07E2  0832               	movf	??_fat+6,w
  4308  07E3  0021               	movlb	1	; select bank1
  4309  07E4  00B2               	movwf	(_RootDir+2)^(0+128)
  4310  07E5  0020               	movlb	0	; select bank0
  4311  07E6  0831               	movf	??_fat+5,w
  4312  07E7  0021               	movlb	1	; select bank1
  4313  07E8  00B1               	movwf	(_RootDir+1)^(0+128)
  4314  07E9  0020               	movlb	0	; select bank0
  4315  07EA  0830               	movf	??_fat+4,w
  4316  07EB  0021               	movlb	1	; select bank1
  4317  07EC  00B0               	movwf	_RootDir^(0+128)
  4318  07ED  0008               	return
  4319  07EE                     __end_of_fat:	
  4320                           
  4321                           	psect	text5
  4322  004B                     __ptext5:	
  4323 ;; *************** function ___lmul *****************
  4324 ;; Defined at:
  4325 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  multiplier      4    0[COMMON] unsigned long 
  4328 ;;  multiplicand    4    4[COMMON] unsigned long 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  product         4    8[COMMON] unsigned long 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  4    0[COMMON] unsigned long 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4340 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;Total ram usage:       12 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_file
  4350 ;;		_fat
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function ___lmul
  4357  004B                     ___lmul:	
  4358                           
  4359                           ;incstack = 0
  4360                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4361  004B  3000               	movlw	0
  4362  004C  00FB               	movwf	___lmul@product+3
  4363  004D  3000               	movlw	0
  4364  004E  00FA               	movwf	___lmul@product+2
  4365  004F  3000               	movlw	0
  4366  0050  00F9               	movwf	___lmul@product+1
  4367  0051  3000               	movlw	0
  4368  0052  00F8               	movwf	___lmul@product
  4369  0053                     l1162:	
  4370  0053  1C70               	btfss	___lmul@multiplier,0
  4371  0054  285D               	goto	l1166
  4372  0055  0874               	movf	___lmul@multiplicand,w
  4373  0056  07F8               	addwf	___lmul@product,f
  4374  0057  0875               	movf	___lmul@multiplicand+1,w
  4375  0058  3DF9               	addwfc	___lmul@product+1,f
  4376  0059  0876               	movf	___lmul@multiplicand+2,w
  4377  005A  3DFA               	addwfc	___lmul@product+2,f
  4378  005B  0877               	movf	___lmul@multiplicand+3,w
  4379  005C  3DFB               	addwfc	___lmul@product+3,f
  4380  005D                     l1166:	
  4381  005D  3001               	movlw	1
  4382  005E                     u975:	
  4383  005E  35F4               	lslf	___lmul@multiplicand,f
  4384  005F  0DF5               	rlf	___lmul@multiplicand+1,f
  4385  0060  0DF6               	rlf	___lmul@multiplicand+2,f
  4386  0061  0DF7               	rlf	___lmul@multiplicand+3,f
  4387  0062  0B89               	decfsz	9,f
  4388  0063  285E               	goto	u975
  4389  0064  3001               	movlw	1
  4390  0065                     u985:	
  4391  0065  36F3               	lsrf	___lmul@multiplier+3,f
  4392  0066  0CF2               	rrf	___lmul@multiplier+2,f
  4393  0067  0CF1               	rrf	___lmul@multiplier+1,f
  4394  0068  0CF0               	rrf	___lmul@multiplier,f
  4395  0069  0B89               	decfsz	9,f
  4396  006A  2865               	goto	u985
  4397  006B  0873               	movf	___lmul@multiplier+3,w
  4398  006C  0472               	iorwf	___lmul@multiplier+2,w
  4399  006D  0471               	iorwf	___lmul@multiplier+1,w
  4400  006E  0470               	iorwf	___lmul@multiplier,w
  4401  006F  1D03               	skipz
  4402  0070  2853               	goto	l1162
  4403  0071  087B               	movf	___lmul@product+3,w
  4404  0072  00F3               	movwf	?___lmul+3
  4405  0073  087A               	movf	___lmul@product+2,w
  4406  0074  00F2               	movwf	?___lmul+2
  4407  0075  0879               	movf	___lmul@product+1,w
  4408  0076  00F1               	movwf	?___lmul+1
  4409  0077  0878               	movf	___lmul@product,w
  4410  0078  00F0               	movwf	?___lmul
  4411  0079  0008               	return
  4412  007A                     __end_of___lmul:	
  4413                           
  4414                           	psect	text6
  4415  007A                     __ptext6:	
  4416 ;; *************** function _Command *****************
  4417 ;; Defined at:
  4418 ;;		line 138 in file "main.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  frame1          1    wreg     unsigned char 
  4421 ;;  adrs            4    0[BANK0 ] unsigned long 
  4422 ;;  frame2          1    4[BANK0 ] unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  frame1          1    9[BANK0 ] unsigned char 
  4425 ;;  i               1   11[BANK0 ] unsigned char 
  4426 ;;  res             1   10[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      unsigned char 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0, pclath, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4436 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;Total ram usage:       12 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    1
  4443 ;; This function calls:
  4444 ;;		_SPI
  4445 ;; This function is called by:
  4446 ;;		_file
  4447 ;;		_readSD
  4448 ;;		_fat
  4449 ;;		_initSD
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function _Command
  4455  007A                     _Command:	
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in _Command: [wreg+status,2+status,0+pclath+cstack]
  4459                           ;Command@frame1 stored from wreg
  4460  007A  0020               	movlb	0	; select bank0
  4461  007B  00A9               	movwf	Command@frame1
  4462                           
  4463                           ;main.c: 140: unsigned char i, res;
  4464                           ;main.c: 143: SPI((frame1 | 0x40) & 0x7F);
  4465  007C  0829               	movf	Command@frame1,w
  4466  007D  3840               	iorlw	64
  4467  007E  397F               	andlw	127
  4468  007F  3180  2011  3180   	fcall	_SPI
  4469                           
  4470                           ;main.c: 144: SPI((adrs & 0xFF000000) >> 24);
  4471  0082  3000               	movlw	0
  4472  0083  0020               	movlb	0	; select bank0
  4473  0084  0520               	andwf	Command@adrs,w
  4474  0085  00A5               	movwf	??_Command
  4475  0086  3000               	movlw	0
  4476  0087  0521               	andwf	Command@adrs+1,w
  4477  0088  00A6               	movwf	??_Command+1
  4478  0089  3000               	movlw	0
  4479  008A  0522               	andwf	Command@adrs+2,w
  4480  008B  00A7               	movwf	??_Command+2
  4481  008C  30FF               	movlw	255
  4482  008D  0523               	andwf	Command@adrs+3,w
  4483  008E  00A8               	movwf	??_Command+3
  4484  008F  3018               	movlw	24
  4485  0090                     u905:	
  4486  0090  36A8               	lsrf	??_Command+3,f
  4487  0091  0CA7               	rrf	??_Command+2,f
  4488  0092  0CA6               	rrf	??_Command+1,f
  4489  0093  0CA5               	rrf	??_Command,f
  4490  0094  0B89               	decfsz	9,f
  4491  0095  2890               	goto	u905
  4492  0096  0825               	movf	??_Command,w
  4493  0097  3180  2011  3180   	fcall	_SPI
  4494                           
  4495                           ;main.c: 145: SPI((adrs & 0x00FF0000) >> 16);
  4496  009A  0020               	movlb	0	; select bank0
  4497  009B  0820               	movf	Command@adrs,w
  4498  009C  00A5               	movwf	??_Command
  4499  009D  0821               	movf	Command@adrs+1,w
  4500  009E  00A6               	movwf	??_Command+1
  4501  009F  0822               	movf	Command@adrs+2,w
  4502  00A0  00A7               	movwf	??_Command+2
  4503  00A1  0823               	movf	Command@adrs+3,w
  4504  00A2  00A8               	movwf	??_Command+3
  4505  00A3  3010               	movlw	16
  4506  00A4                     u915:	
  4507  00A4  36A8               	lsrf	??_Command+3,f
  4508  00A5  0CA7               	rrf	??_Command+2,f
  4509  00A6  0CA6               	rrf	??_Command+1,f
  4510  00A7  0CA5               	rrf	??_Command,f
  4511  00A8  0B89               	decfsz	9,f
  4512  00A9  28A4               	goto	u915
  4513  00AA  0825               	movf	??_Command,w
  4514  00AB  3180  2011  3180   	fcall	_SPI
  4515                           
  4516                           ;main.c: 146: SPI((adrs & 0x0000FF00) >> 8);
  4517  00AE  0020               	movlb	0	; select bank0
  4518  00AF  0820               	movf	Command@adrs,w
  4519  00B0  00A5               	movwf	??_Command
  4520  00B1  0821               	movf	Command@adrs+1,w
  4521  00B2  00A6               	movwf	??_Command+1
  4522  00B3  0822               	movf	Command@adrs+2,w
  4523  00B4  00A7               	movwf	??_Command+2
  4524  00B5  0823               	movf	Command@adrs+3,w
  4525  00B6  00A8               	movwf	??_Command+3
  4526  00B7  3008               	movlw	8
  4527  00B8                     u925:	
  4528  00B8  36A8               	lsrf	??_Command+3,f
  4529  00B9  0CA7               	rrf	??_Command+2,f
  4530  00BA  0CA6               	rrf	??_Command+1,f
  4531  00BB  0CA5               	rrf	??_Command,f
  4532  00BC  0B89               	decfsz	9,f
  4533  00BD  28B8               	goto	u925
  4534  00BE  0825               	movf	??_Command,w
  4535  00BF  3180  2011  3180   	fcall	_SPI
  4536                           
  4537                           ;main.c: 147: SPI(adrs & 0x000000FF);
  4538  00C2  0020               	movlb	0	; select bank0
  4539  00C3  0820               	movf	Command@adrs,w
  4540  00C4  3180  2011  3180   	fcall	_SPI
  4541                           
  4542                           ;main.c: 148: SPI(frame2 | 1);
  4543  00C7  0020               	movlb	0	; select bank0
  4544  00C8  0824               	movf	Command@frame2,w
  4545  00C9  3801               	iorlw	1
  4546  00CA  3180  2011  3180   	fcall	_SPI
  4547                           
  4548                           ;main.c: 150: for(i=0;i<10;i++)
  4549  00CD  0020               	movlb	0	; select bank0
  4550  00CE  01AB               	clrf	Command@i
  4551  00CF  300A               	movlw	10
  4552  00D0  022B               	subwf	Command@i,w
  4553  00D1  1803               	btfsc	3,0
  4554  00D2  28E6               	goto	l1156
  4555  00D3                     l1146:	
  4556                           
  4557                           ;main.c: 151: {
  4558                           ;main.c: 152: res = SPI(0xFF);
  4559  00D3  30FF               	movlw	255
  4560  00D4  3180  2011  3180   	fcall	_SPI
  4561  00D7  0020               	movlb	0	; select bank0
  4562  00D8  00A5               	movwf	??_Command
  4563  00D9  0825               	movf	??_Command,w
  4564  00DA  00AA               	movwf	Command@res
  4565                           
  4566                           ;main.c: 153: if(res != 0xFF)break;
  4567  00DB  0A2A               	incf	Command@res,w
  4568  00DC  1D03               	btfss	3,2
  4569  00DD  28E6               	goto	l1156
  4570  00DE  3001               	movlw	1
  4571  00DF  00A5               	movwf	??_Command
  4572  00E0  0825               	movf	??_Command,w
  4573  00E1  07AB               	addwf	Command@i,f
  4574  00E2  300A               	movlw	10
  4575  00E3  022B               	subwf	Command@i,w
  4576  00E4  1C03               	skipc
  4577  00E5  28D3               	goto	l1146
  4578  00E6                     l1156:	
  4579                           
  4580                           ;main.c: 154: }
  4581                           ;main.c: 155: return res;
  4582  00E6  082A               	movf	Command@res,w
  4583  00E7  0008               	return
  4584  00E8                     __end_of_Command:	
  4585                           
  4586                           	psect	text7
  4587  0011                     __ptext7:	
  4588 ;; *************** function _SPI *****************
  4589 ;; Defined at:
  4590 ;;		line 131 in file "main.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  spidata         1    wreg     unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  spidata         1    0[COMMON] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      unsigned char 
  4597 ;; Registers used:
  4598 ;;		wreg
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;Total ram usage:        1 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_file
  4614 ;;		_readSD
  4615 ;;		_fat
  4616 ;;		_Command
  4617 ;;		_initSD
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _SPI
  4623  0011                     _SPI:	
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _SPI: [wreg]
  4627                           ;SPI@spidata stored from wreg
  4628  0011  00F0               	movwf	SPI@spidata
  4629                           
  4630                           ;main.c: 133: SSP1BUF = spidata;
  4631  0012  0870               	movf	SPI@spidata,w
  4632  0013  0024               	movlb	4	; select bank4
  4633  0014  0091               	movwf	17	;volatile
  4634  0015                     l258:	
  4635                           ;main.c: 134: while (!BF);
  4636                           
  4637  0015  1C14               	btfss	20,0	;volatile
  4638  0016  2815               	goto	l258
  4639                           
  4640                           ;main.c: 135: return SSP1BUF;
  4641  0017  0811               	movf	17,w	;volatile
  4642  0018  0008               	return
  4643  0019                     __end_of_SPI:	
  4644                           
  4645                           	psect	text8
  4646  0019                     __ptext8:	
  4647 ;; *************** function _SYSTEM_Initialize *****************
  4648 ;; Defined at:
  4649 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    1
  4670 ;; This function calls:
  4671 ;;		_OSCILLATOR_Initialize
  4672 ;;		_PIN_MANAGER_Initialize
  4673 ;;		_SPI_Initialize
  4674 ;; This function is called by:
  4675 ;;		_main
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           
  4680                           ;psect for function _SYSTEM_Initialize
  4681  0019                     _SYSTEM_Initialize:	
  4682                           
  4683                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4687  0019  3180  2022  3180   	fcall	_PIN_MANAGER_Initialize
  4688                           
  4689                           ;mcc.c: 53: OSCILLATOR_Initialize();
  4690  001C  318F  27F9  3180   	fcall	_OSCILLATOR_Initialize
  4691                           
  4692                           ;mcc.c: 54: SPI_Initialize();
  4693  001F  3180  2009         	fcall	_SPI_Initialize
  4694  0021  0008               	return
  4695  0022                     __end_of_SYSTEM_Initialize:	
  4696                           
  4697                           	psect	text9
  4698  0009                     __ptext9:	
  4699 ;; *************** function _SPI_Initialize *****************
  4700 ;; Defined at:
  4701 ;;		line 65 in file "mcc_generated_files/spi.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_SYSTEM_Initialize
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _SPI_Initialize
  4730  0009                     _SPI_Initialize:	
  4731                           
  4732                           ;spi.c: 70: SSP1STAT = 0x40;
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _SPI_Initialize: [wreg]
  4736  0009  3040               	movlw	64
  4737  000A  0024               	movlb	4	; select bank4
  4738  000B  0094               	movwf	20	;volatile
  4739                           
  4740                           ;spi.c: 73: SSP1CON1 = 0x2A;
  4741  000C  302A               	movlw	42
  4742  000D  0095               	movwf	21	;volatile
  4743                           
  4744                           ;spi.c: 76: SSP1ADD = 0x13;
  4745  000E  3013               	movlw	19
  4746  000F  0092               	movwf	18	;volatile
  4747  0010  0008               	return
  4748  0011                     __end_of_SPI_Initialize:	
  4749                           
  4750                           	psect	text10
  4751  0022                     __ptext10:	
  4752 ;; *************** function _PIN_MANAGER_Initialize *****************
  4753 ;; Defined at:
  4754 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;		None
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  1    wreg      void 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:        0 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_SYSTEM_Initialize
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           
  4782                           ;psect for function _PIN_MANAGER_Initialize
  4783  0022                     _PIN_MANAGER_Initialize:	
  4784                           
  4785                           ;pin_manager.c: 62: LATA = 0x00;
  4786                           
  4787                           ;incstack = 0
  4788                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4789  0022  0022               	movlb	2	; select bank2
  4790  0023  018C               	clrf	12	;volatile
  4791                           
  4792                           ;pin_manager.c: 63: LATB = 0x00;
  4793  0024  018D               	clrf	13	;volatile
  4794                           
  4795                           ;pin_manager.c: 64: LATC = 0x04;
  4796  0025  3004               	movlw	4
  4797  0026  008E               	movwf	14	;volatile
  4798                           
  4799                           ;pin_manager.c: 69: TRISA = 0x21;
  4800  0027  3021               	movlw	33
  4801  0028  0021               	movlb	1	; select bank1
  4802  0029  008C               	movwf	12	;volatile
  4803                           
  4804                           ;pin_manager.c: 70: TRISB = 0x90;
  4805  002A  3090               	movlw	144
  4806  002B  008D               	movwf	13	;volatile
  4807                           
  4808                           ;pin_manager.c: 71: TRISC = 0xFB;
  4809  002C  30FB               	movlw	251
  4810  002D  008E               	movwf	14	;volatile
  4811                           
  4812                           ;pin_manager.c: 76: ANSELC = 0xCB;
  4813  002E  30CB               	movlw	203
  4814  002F  0023               	movlb	3	; select bank3
  4815  0030  008E               	movwf	14	;volatile
  4816                           
  4817                           ;pin_manager.c: 77: ANSELB = 0x80;
  4818  0031  3080               	movlw	128
  4819  0032  008D               	movwf	13	;volatile
  4820                           
  4821                           ;pin_manager.c: 78: ANSELA = 0x13;
  4822  0033  3013               	movlw	19
  4823  0034  008C               	movwf	12	;volatile
  4824                           
  4825                           ;pin_manager.c: 83: WPUB = 0x00;
  4826  0035  0024               	movlb	4	; select bank4
  4827  0036  018D               	clrf	13	;volatile
  4828                           
  4829                           ;pin_manager.c: 84: WPUA = 0x00;
  4830  0037  018C               	clrf	12	;volatile
  4831                           
  4832                           ;pin_manager.c: 85: WPUC = 0x00;
  4833  0038  018E               	clrf	14	;volatile
  4834                           
  4835                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 0;
  4836  0039  0021               	movlb	1	; select bank1
  4837  003A  1395               	bcf	21,7	;volatile
  4838                           
  4839                           ;pin_manager.c: 91: ODCONA = 0x00;
  4840  003B  0025               	movlb	5	; select bank5
  4841  003C  018C               	clrf	12	;volatile
  4842                           
  4843                           ;pin_manager.c: 92: ODCONB = 0x00;
  4844  003D  018D               	clrf	13	;volatile
  4845                           
  4846                           ;pin_manager.c: 93: ODCONC = 0x00;
  4847  003E  018E               	clrf	14	;volatile
  4848                           
  4849                           ;pin_manager.c: 102: SSPDATPPS = 0x0C;
  4850  003F  300C               	movlw	12
  4851  0040  003C               	movlb	28	; select bank28
  4852  0041  00A1               	movwf	33	;volatile
  4853                           
  4854                           ;pin_manager.c: 103: RB6PPS = 0x10;
  4855  0042  3010               	movlw	16
  4856  0043  003D               	movlb	29	; select bank29
  4857  0044  009E               	movwf	30	;volatile
  4858                           
  4859                           ;pin_manager.c: 104: RB5PPS = 0x11;
  4860  0045  3011               	movlw	17
  4861  0046  009D               	movwf	29	;volatile
  4862                           
  4863                           ;pin_manager.c: 105: SSPCLKPPS = 0x0E;
  4864  0047  300E               	movlw	14
  4865  0048  003C               	movlb	28	; select bank28
  4866  0049  00A0               	movwf	32	;volatile
  4867  004A  0008               	return
  4868  004B                     __end_of_PIN_MANAGER_Initialize:	
  4869                           
  4870                           	psect	text11
  4871  0FF9                     __ptext11:	
  4872 ;; *************** function _OSCILLATOR_Initialize *****************
  4873 ;; Defined at:
  4874 ;;		line 57 in file "mcc_generated_files/mcc.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;Total ram usage:        0 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_SYSTEM_Initialize
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _OSCILLATOR_Initialize
  4903  0FF9                     _OSCILLATOR_Initialize:	
  4904                           
  4905                           ;mcc.c: 60: OSCCON = 0x70;
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4909  0FF9  3070               	movlw	112
  4910  0FFA  0021               	movlb	1	; select bank1
  4911  0FFB  0099               	movwf	25	;volatile
  4912                           
  4913                           ;mcc.c: 62: OSCTUNE = 0x00;
  4914  0FFC  0198               	clrf	24	;volatile
  4915                           
  4916                           ;mcc.c: 64: BORCON = 0x00;
  4917  0FFD  0022               	movlb	2	; select bank2
  4918  0FFE  0196               	clrf	22	;volatile
  4919  0FFF  0008               	return
  4920  1000                     __end_of_OSCILLATOR_Initialize:	
  4921  007E                     btemp	set	126	;btemp
  4922  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     62      79
    BANK1            80      0      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initSD
    _file->___lmul
    _fat->___lmul
    _Command->___lmul

Critical Paths under _main in BANK0

    _main->_fat
    _readSD->_Command
    _initSD->_Command
    _file->_Command
    _fat->_Command

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   10313
                                             48 BANK0     14    14      0
                  _SYSTEM_Initialize
                             ___lmul
                                _fat
                               _file
                             _initSD
                             _readSD
 ---------------------------------------------------------------------------------
 (1) _readSD                                               9     9      0    1503
                                             12 BANK0      9     9      0
                            _Command
                                _SPI
 ---------------------------------------------------------------------------------
 (1) _initSD                                               6     6      0    1739
                                             12 COMMON     1     1      0
                                             12 BANK0      5     5      0
                            _Command
                                _SPI
 ---------------------------------------------------------------------------------
 (1) _file                                                31    28      3    3017
                                             12 BANK0     31    28      3
                            _Command
                                _SPI
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _fat                                                 36    36      0    3257
                                             12 BANK0     36    36      0
                            _Command
                                _SPI
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     728
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Command                                             12     7      5    1411
                                              0 BANK0     12     7      5
                                _SPI
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI                                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   ___lmul
   _fat
     _Command
       _SPI
       ___lmul (ARG)
     _SPI
     ___lmul
   _file
     _Command
       _SPI
       ___lmul (ARG)
     _SPI
     ___lmul
   _initSD
     _Command
       _SPI
       ___lmul (ARG)
     _SPI
   _readSD
     _Command
       _SPI
       ___lmul (ARG)
     _SPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      18       7       30.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      74      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      74      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 16:49:59 2018

                 _SPI_Initialize 0009                      __CFG_CP$OFF 0000                               _BF 10A0  
                    __CFG_LVP$ON 0000                              l193 01C1                              l258 0015  
                            l274 0221                              l294 02B1                              u905 0090  
                            u915 00A4                              u925 00B8                              _SPI 0011  
                            u975 005E                              u985 0065                              _fat 04D6  
                            _loc 00B4                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_IESO$ON 0000                             ?_SPI 0070                     __CFG_ZCD$OFF 0000  
                     _DataSector 005E                             l1200 0375                             l1220 03E8  
                           l1212 03BA                             l1204 038C                             l1222 03EC  
                           l1320 05FF                             l1312 05E3                             l1304 05D2  
                           l1216 03D1                             l1208 03A3                             l1146 00D3  
                           l1162 0053                             l1226 03F8                             l1402 0230  
                           l1156 00E6                             l1340 0645                             l1332 0629  
                           l1324 060D                             l1316 05F1                             l1180 0325  
                           l1420 02B5                             l1260 01ED                             l1236 01B0  
                           l1166 005D                             l1406 0247                             l1360 068B  
                           l1352 066F                             l1344 0653                             l1336 0637  
                           l1328 061B                             l1280 0517                             l1192 0347  
                           l1408 024F                             l1256 01E4                             l1432 00FB  
                           l1370 06AB                             l1258 018D                             l1364 0699  
                           l1356 067D                             l1348 0661                             l1292 0547  
                           l1284 0527                             l1276 0507                             l1268 04F6  
                           l1196 035E                             l1188 0336                             l1374 06B7  
                           l1294 054B                             l1390 0214                             ?_fat 0070  
                           l1368 06A7                             l1288 0537                             l1298 0557  
                           l1398 0229                             _T0IF 005A                             u1025 033C  
                           u1115 040B                             u1035 0353                             u1125 0417  
                           u1045 036A                             u1135 0423                             u1055 0381  
                           u1215 01D2                             u1145 0458                             u1065 0398  
                           u1155 0464                             u1075 03AF                             u1325 056A  
                           u1165 0470                             u1085 03C6                             _LATA 010C  
                           _LATB 010D                             u1335 0576                             u1175 04B8  
                           u1095 03DD                             _LATC 010E                             u1345 0582  
                           u1525 06E0                             u1535 06EC                             u1545 06F8  
                           u1555 072D                             u1565 0739                             u1575 0745  
                           u1685 0100                             _TMR0 0015                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                             _Fats 006A  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             _card 006C  
                           _file 02EE                             _main 00E8                             fat@i 004E  
                           fat@r 003C                             _sdhc 006B                             fsr0h 0005  
                           indf0 0000                             fsr0l 0004                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0003           __end_of_SPI_Initialize 0011  
                  __CFG_MCLRE$ON 0000                  __end_of_Command 00E8                            ??_SPI 0070  
                          ??_fat 002C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1000  
                          ?_file 002C                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                     _BootSector 0062                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E              ___lmul@multiplicand 0074                            file@i 0049  
                          file@r 003F                            status 0003                            wtemp0 007E  
                ?_SPI_Initialize 0070                  __initialization 07EE                     __end_of_file 04D6  
                   __end_of_main 016C                   __CFG_LPBOR$OFF 0000                      _FileCluster 00A4  
                         ??_file 002F                           ??_main 0050                   __CFG_PLLEN$OFF 0000  
                         _CCPR1L 0291                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _BORCON 0116                           _RB5PPS 0E9D  
                         _RB6PPS 0E9E                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                           _OSCCON 0099                        ??_Command 0025  
                 __CFG_PWRTE$OFF 0000                           ___lmul 004B                   __CFG_STVREN$ON 0000  
                         fat@rs1 0040                           fat@rs2 0041                           _initSD 020C  
                         _readSD 016C                           fat@rdc 004A                           fat@pfs 0042  
                         fat@spf 0046                           file@fc 0041                           file@fs 0045  
                         main@fn 005C                           main@sn 005D                   _BytesPerSector 0068  
              _SYSTEM_Initialize 0019          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 0022                       __pbssBANK0 005E                       __pbssBANK1 00A0  
                _ReservedSectors 0066                       __pmaintext 00E8                          ?___lmul 0070  
                __CFG_PPS1WAY$ON 0000                          ?_initSD 0070                          ?_readSD 0070  
                 ___lmul@product 0078                  __CFG_WDTCCS$SWC 0000                          _OSCTUNE 0098  
                        _SSP1ADD 0212                          _SSP1BUF 0211                 ??_SPI_Initialize 0070  
                        _Command 007A                          _RootDir 00B0                  __size_of___lmul 002F  
                __size_of_initSD 00E2                  __size_of_readSD 00A0                          __ptext1 016C  
                        __ptext2 020C                          __ptext3 02EE                          __ptext4 04D6  
                        __ptext5 004B                          __ptext6 007A                          __ptext7 0011  
                        __ptext8 0019                          __ptext9 0009                          fat@bps1 003E  
                        fat@bps2 003F                     __size_of_SPI 0008            _OSCILLATOR_Initialize 0FF9  
                   __size_of_fat 0318         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0009  
                        clrloop0 0FF4             end_of_initialization 07FD                          initSD@i 0030  
                        initSD@r 002C                          readSD@i 0033                          readSD@r 0030  
                     file@offset 002C                    _SectorsPerFat 00AC                        _SSPDATPPS 0E21  
                      _SSPCLKPPS 0E20                 __CFG_FOSC$INTOSC 0000                   _RootDirCluster 00A8  
                 __end_of___lmul 007A                   __end_of_initSD 02EE                   __end_of_readSD 020C  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07EE                      __end_of_SPI 0019  
__size_of_PIN_MANAGER_Initialize 0029                      __end_of_fat 07EE                       readSD@data 0032  
                       ??___lmul 0078                         ??_initSD 007C                         ??_readSD 002C  
                      ___latbits 0002                    __pcstackBANK0 0020                         ?_Command 0020  
         _PIN_MANAGER_Initialize 0022                         _LATAbits 010C                         _LATCbits 010E  
                      clear_ram0 0FF3             __CFG_WDTCPS$WDTCPS1F 0000                         _SSP1CON1 0215  
                       _SSP1STAT 0214                         Command@i 002B                       SPI@spidata 0070  
                       _FileSize 00A0                ___lmul@multiplier 0070                 __size_of_Command 006E  
                  Command@frame1 0029                    Command@frame2 0024          __size_of_SPI_Initialize 0008  
        ??_OSCILLATOR_Initialize 0070                         _main$610 0058                         __ptext10 0022  
                       __ptext11 0FF9                     _SSP1CON1bits 0215                _SectorsPerCluster 006E  
                  __size_of_file 01E8                    __size_of_main 0084             __CFG_WDTCWS$WDTCWSSW 0000  
                       file@sect 002E                     _SSP1STATbits 0214          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      Command@adrs 0020                       Command@res 002A  
 __end_of_PIN_MANAGER_Initialize 004B  
