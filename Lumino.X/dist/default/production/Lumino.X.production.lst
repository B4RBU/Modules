

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 14 13:16:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1509 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011D                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0391                     	;# 
   184  0392                     	;# 
   185  0393                     	;# 
   186  0394                     	;# 
   187  0395                     	;# 
   188  0396                     	;# 
   189  0498                     	;# 
   190  0498                     	;# 
   191  0499                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049B                     	;# 
   195  049C                     	;# 
   196  049D                     	;# 
   197  049E                     	;# 
   198  049F                     	;# 
   199  0611                     	;# 
   200  0612                     	;# 
   201  0613                     	;# 
   202  0613                     	;# 
   203  0614                     	;# 
   204  0615                     	;# 
   205  0616                     	;# 
   206  0616                     	;# 
   207  0617                     	;# 
   208  0618                     	;# 
   209  0619                     	;# 
   210  0619                     	;# 
   211  061A                     	;# 
   212  061B                     	;# 
   213  061C                     	;# 
   214  061C                     	;# 
   215  0691                     	;# 
   216  0692                     	;# 
   217  0693                     	;# 
   218  0694                     	;# 
   219  0695                     	;# 
   220  0F0F                     	;# 
   221  0F10                     	;# 
   222  0F11                     	;# 
   223  0F12                     	;# 
   224  0F13                     	;# 
   225  0F14                     	;# 
   226  0F15                     	;# 
   227  0F16                     	;# 
   228  0F17                     	;# 
   229  0F18                     	;# 
   230  0F19                     	;# 
   231  0F1A                     	;# 
   232  0F1B                     	;# 
   233  0F1C                     	;# 
   234  0F1D                     	;# 
   235  0F1E                     	;# 
   236  0F1F                     	;# 
   237  0F20                     	;# 
   238  0F21                     	;# 
   239  0F22                     	;# 
   240  0F23                     	;# 
   241  0F24                     	;# 
   242  0F25                     	;# 
   243  0F26                     	;# 
   244  0F27                     	;# 
   245  0F28                     	;# 
   246  0F29                     	;# 
   247  0F2A                     	;# 
   248  0F2B                     	;# 
   249  0F2C                     	;# 
   250  0F2D                     	;# 
   251  0F2E                     	;# 
   252  0F2F                     	;# 
   253  0F8C                     	;# 
   254  0F8D                     	;# 
   255  0F91                     	;# 
   256  0F95                     	;# 
   257  0F96                     	;# 
   258  0F97                     	;# 
   259  0F9C                     	;# 
   260  0F9D                     	;# 
   261  0F9E                     	;# 
   262  0FE3                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009B                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0113                     	;# 
   324  0114                     	;# 
   325  0115                     	;# 
   326  0116                     	;# 
   327  0117                     	;# 
   328  0118                     	;# 
   329  0119                     	;# 
   330  011D                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  018E                     	;# 
   334  0191                     	;# 
   335  0191                     	;# 
   336  0192                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0197                     	;# 
   343  0199                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019C                     	;# 
   348  019D                     	;# 
   349  019E                     	;# 
   350  019F                     	;# 
   351  020C                     	;# 
   352  020D                     	;# 
   353  0211                     	;# 
   354  0211                     	;# 
   355  0212                     	;# 
   356  0212                     	;# 
   357  0213                     	;# 
   358  0213                     	;# 
   359  0214                     	;# 
   360  0214                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0216                     	;# 
   365  0216                     	;# 
   366  0217                     	;# 
   367  0217                     	;# 
   368  0391                     	;# 
   369  0392                     	;# 
   370  0393                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  0498                     	;# 
   375  0498                     	;# 
   376  0499                     	;# 
   377  049A                     	;# 
   378  049B                     	;# 
   379  049B                     	;# 
   380  049C                     	;# 
   381  049D                     	;# 
   382  049E                     	;# 
   383  049F                     	;# 
   384  0611                     	;# 
   385  0612                     	;# 
   386  0613                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0615                     	;# 
   390  0616                     	;# 
   391  0616                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  0619                     	;# 
   396  061A                     	;# 
   397  061B                     	;# 
   398  061C                     	;# 
   399  061C                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  0695                     	;# 
   405  0F0F                     	;# 
   406  0F10                     	;# 
   407  0F11                     	;# 
   408  0F12                     	;# 
   409  0F13                     	;# 
   410  0F14                     	;# 
   411  0F15                     	;# 
   412  0F16                     	;# 
   413  0F17                     	;# 
   414  0F18                     	;# 
   415  0F19                     	;# 
   416  0F1A                     	;# 
   417  0F1B                     	;# 
   418  0F1C                     	;# 
   419  0F1D                     	;# 
   420  0F1E                     	;# 
   421  0F1F                     	;# 
   422  0F20                     	;# 
   423  0F21                     	;# 
   424  0F22                     	;# 
   425  0F23                     	;# 
   426  0F24                     	;# 
   427  0F25                     	;# 
   428  0F26                     	;# 
   429  0F27                     	;# 
   430  0F28                     	;# 
   431  0F29                     	;# 
   432  0F2A                     	;# 
   433  0F2B                     	;# 
   434  0F2C                     	;# 
   435  0F2D                     	;# 
   436  0F2E                     	;# 
   437  0F2F                     	;# 
   438  0F8C                     	;# 
   439  0F8D                     	;# 
   440  0F91                     	;# 
   441  0F95                     	;# 
   442  0F96                     	;# 
   443  0F97                     	;# 
   444  0F9C                     	;# 
   445  0F9D                     	;# 
   446  0F9E                     	;# 
   447  0FE3                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0095                     	;# 
   493  0096                     	;# 
   494  0097                     	;# 
   495  0099                     	;# 
   496  009A                     	;# 
   497  009B                     	;# 
   498  009B                     	;# 
   499  009C                     	;# 
   500  009D                     	;# 
   501  009E                     	;# 
   502  009F                     	;# 
   503  010C                     	;# 
   504  010D                     	;# 
   505  010E                     	;# 
   506  0111                     	;# 
   507  0112                     	;# 
   508  0113                     	;# 
   509  0114                     	;# 
   510  0115                     	;# 
   511  0116                     	;# 
   512  0117                     	;# 
   513  0118                     	;# 
   514  0119                     	;# 
   515  011D                     	;# 
   516  018C                     	;# 
   517  018D                     	;# 
   518  018E                     	;# 
   519  0191                     	;# 
   520  0191                     	;# 
   521  0192                     	;# 
   522  0193                     	;# 
   523  0193                     	;# 
   524  0194                     	;# 
   525  0195                     	;# 
   526  0196                     	;# 
   527  0197                     	;# 
   528  0199                     	;# 
   529  019A                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019C                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019F                     	;# 
   536  020C                     	;# 
   537  020D                     	;# 
   538  0211                     	;# 
   539  0211                     	;# 
   540  0212                     	;# 
   541  0212                     	;# 
   542  0213                     	;# 
   543  0213                     	;# 
   544  0214                     	;# 
   545  0214                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0216                     	;# 
   551  0217                     	;# 
   552  0217                     	;# 
   553  0391                     	;# 
   554  0392                     	;# 
   555  0393                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  0498                     	;# 
   560  0498                     	;# 
   561  0499                     	;# 
   562  049A                     	;# 
   563  049B                     	;# 
   564  049B                     	;# 
   565  049C                     	;# 
   566  049D                     	;# 
   567  049E                     	;# 
   568  049F                     	;# 
   569  0611                     	;# 
   570  0612                     	;# 
   571  0613                     	;# 
   572  0613                     	;# 
   573  0614                     	;# 
   574  0615                     	;# 
   575  0616                     	;# 
   576  0616                     	;# 
   577  0617                     	;# 
   578  0618                     	;# 
   579  0619                     	;# 
   580  0619                     	;# 
   581  061A                     	;# 
   582  061B                     	;# 
   583  061C                     	;# 
   584  061C                     	;# 
   585  0691                     	;# 
   586  0692                     	;# 
   587  0693                     	;# 
   588  0694                     	;# 
   589  0695                     	;# 
   590  0F0F                     	;# 
   591  0F10                     	;# 
   592  0F11                     	;# 
   593  0F12                     	;# 
   594  0F13                     	;# 
   595  0F14                     	;# 
   596  0F15                     	;# 
   597  0F16                     	;# 
   598  0F17                     	;# 
   599  0F18                     	;# 
   600  0F19                     	;# 
   601  0F1A                     	;# 
   602  0F1B                     	;# 
   603  0F1C                     	;# 
   604  0F1D                     	;# 
   605  0F1E                     	;# 
   606  0F1F                     	;# 
   607  0F20                     	;# 
   608  0F21                     	;# 
   609  0F22                     	;# 
   610  0F23                     	;# 
   611  0F24                     	;# 
   612  0F25                     	;# 
   613  0F26                     	;# 
   614  0F27                     	;# 
   615  0F28                     	;# 
   616  0F29                     	;# 
   617  0F2A                     	;# 
   618  0F2B                     	;# 
   619  0F2C                     	;# 
   620  0F2D                     	;# 
   621  0F2E                     	;# 
   622  0F2F                     	;# 
   623  0F8C                     	;# 
   624  0F8D                     	;# 
   625  0F91                     	;# 
   626  0F95                     	;# 
   627  0F96                     	;# 
   628  0F97                     	;# 
   629  0F9C                     	;# 
   630  0F9D                     	;# 
   631  0F9E                     	;# 
   632  0FE3                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0093                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  010C                     	;# 
   689  010D                     	;# 
   690  010E                     	;# 
   691  0111                     	;# 
   692  0112                     	;# 
   693  0113                     	;# 
   694  0114                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011D                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  018E                     	;# 
   704  0191                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0199                     	;# 
   714  019A                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  019D                     	;# 
   719  019E                     	;# 
   720  019F                     	;# 
   721  020C                     	;# 
   722  020D                     	;# 
   723  0211                     	;# 
   724  0211                     	;# 
   725  0212                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0213                     	;# 
   729  0214                     	;# 
   730  0214                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0391                     	;# 
   739  0392                     	;# 
   740  0393                     	;# 
   741  0394                     	;# 
   742  0395                     	;# 
   743  0396                     	;# 
   744  0498                     	;# 
   745  0498                     	;# 
   746  0499                     	;# 
   747  049A                     	;# 
   748  049B                     	;# 
   749  049B                     	;# 
   750  049C                     	;# 
   751  049D                     	;# 
   752  049E                     	;# 
   753  049F                     	;# 
   754  0611                     	;# 
   755  0612                     	;# 
   756  0613                     	;# 
   757  0613                     	;# 
   758  0614                     	;# 
   759  0615                     	;# 
   760  0616                     	;# 
   761  0616                     	;# 
   762  0617                     	;# 
   763  0618                     	;# 
   764  0619                     	;# 
   765  0619                     	;# 
   766  061A                     	;# 
   767  061B                     	;# 
   768  061C                     	;# 
   769  061C                     	;# 
   770  0691                     	;# 
   771  0692                     	;# 
   772  0693                     	;# 
   773  0694                     	;# 
   774  0695                     	;# 
   775  0F0F                     	;# 
   776  0F10                     	;# 
   777  0F11                     	;# 
   778  0F12                     	;# 
   779  0F13                     	;# 
   780  0F14                     	;# 
   781  0F15                     	;# 
   782  0F16                     	;# 
   783  0F17                     	;# 
   784  0F18                     	;# 
   785  0F19                     	;# 
   786  0F1A                     	;# 
   787  0F1B                     	;# 
   788  0F1C                     	;# 
   789  0F1D                     	;# 
   790  0F1E                     	;# 
   791  0F1F                     	;# 
   792  0F20                     	;# 
   793  0F21                     	;# 
   794  0F22                     	;# 
   795  0F23                     	;# 
   796  0F24                     	;# 
   797  0F25                     	;# 
   798  0F26                     	;# 
   799  0F27                     	;# 
   800  0F28                     	;# 
   801  0F29                     	;# 
   802  0F2A                     	;# 
   803  0F2B                     	;# 
   804  0F2C                     	;# 
   805  0F2D                     	;# 
   806  0F2E                     	;# 
   807  0F2F                     	;# 
   808  0F8C                     	;# 
   809  0F8D                     	;# 
   810  0F91                     	;# 
   811  0F95                     	;# 
   812  0F96                     	;# 
   813  0F97                     	;# 
   814  0F9C                     	;# 
   815  0F9D                     	;# 
   816  0F9E                     	;# 
   817  0FE3                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829  0000                     	;# 
   830  0001                     	;# 
   831  0002                     	;# 
   832  0003                     	;# 
   833  0004                     	;# 
   834  0005                     	;# 
   835  0006                     	;# 
   836  0007                     	;# 
   837  0008                     	;# 
   838  0009                     	;# 
   839  000A                     	;# 
   840  000B                     	;# 
   841  000C                     	;# 
   842  000D                     	;# 
   843  000E                     	;# 
   844  0011                     	;# 
   845  0012                     	;# 
   846  0013                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001C                     	;# 
   856  008C                     	;# 
   857  008D                     	;# 
   858  008E                     	;# 
   859  0091                     	;# 
   860  0092                     	;# 
   861  0093                     	;# 
   862  0095                     	;# 
   863  0096                     	;# 
   864  0097                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  009F                     	;# 
   873  010C                     	;# 
   874  010D                     	;# 
   875  010E                     	;# 
   876  0111                     	;# 
   877  0112                     	;# 
   878  0113                     	;# 
   879  0114                     	;# 
   880  0115                     	;# 
   881  0116                     	;# 
   882  0117                     	;# 
   883  0118                     	;# 
   884  0119                     	;# 
   885  011D                     	;# 
   886  018C                     	;# 
   887  018D                     	;# 
   888  018E                     	;# 
   889  0191                     	;# 
   890  0191                     	;# 
   891  0192                     	;# 
   892  0193                     	;# 
   893  0193                     	;# 
   894  0194                     	;# 
   895  0195                     	;# 
   896  0196                     	;# 
   897  0197                     	;# 
   898  0199                     	;# 
   899  019A                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  020C                     	;# 
   907  020D                     	;# 
   908  0211                     	;# 
   909  0211                     	;# 
   910  0212                     	;# 
   911  0212                     	;# 
   912  0213                     	;# 
   913  0213                     	;# 
   914  0214                     	;# 
   915  0214                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0216                     	;# 
   920  0216                     	;# 
   921  0217                     	;# 
   922  0217                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  0394                     	;# 
   927  0395                     	;# 
   928  0396                     	;# 
   929  0498                     	;# 
   930  0498                     	;# 
   931  0499                     	;# 
   932  049A                     	;# 
   933  049B                     	;# 
   934  049B                     	;# 
   935  049C                     	;# 
   936  049D                     	;# 
   937  049E                     	;# 
   938  049F                     	;# 
   939  0611                     	;# 
   940  0612                     	;# 
   941  0613                     	;# 
   942  0613                     	;# 
   943  0614                     	;# 
   944  0615                     	;# 
   945  0616                     	;# 
   946  0616                     	;# 
   947  0617                     	;# 
   948  0618                     	;# 
   949  0619                     	;# 
   950  0619                     	;# 
   951  061A                     	;# 
   952  061B                     	;# 
   953  061C                     	;# 
   954  061C                     	;# 
   955  0691                     	;# 
   956  0692                     	;# 
   957  0693                     	;# 
   958  0694                     	;# 
   959  0695                     	;# 
   960  0F0F                     	;# 
   961  0F10                     	;# 
   962  0F11                     	;# 
   963  0F12                     	;# 
   964  0F13                     	;# 
   965  0F14                     	;# 
   966  0F15                     	;# 
   967  0F16                     	;# 
   968  0F17                     	;# 
   969  0F18                     	;# 
   970  0F19                     	;# 
   971  0F1A                     	;# 
   972  0F1B                     	;# 
   973  0F1C                     	;# 
   974  0F1D                     	;# 
   975  0F1E                     	;# 
   976  0F1F                     	;# 
   977  0F20                     	;# 
   978  0F21                     	;# 
   979  0F22                     	;# 
   980  0F23                     	;# 
   981  0F24                     	;# 
   982  0F25                     	;# 
   983  0F26                     	;# 
   984  0F27                     	;# 
   985  0F28                     	;# 
   986  0F29                     	;# 
   987  0F2A                     	;# 
   988  0F2B                     	;# 
   989  0F2C                     	;# 
   990  0F2D                     	;# 
   991  0F2E                     	;# 
   992  0F2F                     	;# 
   993  0F8C                     	;# 
   994  0F8D                     	;# 
   995  0F91                     	;# 
   996  0F95                     	;# 
   997  0F96                     	;# 
   998  0F97                     	;# 
   999  0F9C                     	;# 
  1000  0F9D                     	;# 
  1001  0F9E                     	;# 
  1002  0FE3                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014  0000                     	;# 
  1015  0001                     	;# 
  1016  0002                     	;# 
  1017  0003                     	;# 
  1018  0004                     	;# 
  1019  0005                     	;# 
  1020  0006                     	;# 
  1021  0007                     	;# 
  1022  0008                     	;# 
  1023  0009                     	;# 
  1024  000A                     	;# 
  1025  000B                     	;# 
  1026  000C                     	;# 
  1027  000D                     	;# 
  1028  000E                     	;# 
  1029  0011                     	;# 
  1030  0012                     	;# 
  1031  0013                     	;# 
  1032  0015                     	;# 
  1033  0016                     	;# 
  1034  0016                     	;# 
  1035  0017                     	;# 
  1036  0018                     	;# 
  1037  0019                     	;# 
  1038  001A                     	;# 
  1039  001B                     	;# 
  1040  001C                     	;# 
  1041  008C                     	;# 
  1042  008D                     	;# 
  1043  008E                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0093                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0097                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  009F                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011D                     	;# 
  1071  018C                     	;# 
  1072  018D                     	;# 
  1073  018E                     	;# 
  1074  0191                     	;# 
  1075  0191                     	;# 
  1076  0192                     	;# 
  1077  0193                     	;# 
  1078  0193                     	;# 
  1079  0194                     	;# 
  1080  0195                     	;# 
  1081  0196                     	;# 
  1082  0197                     	;# 
  1083  0199                     	;# 
  1084  019A                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019C                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019F                     	;# 
  1091  020C                     	;# 
  1092  020D                     	;# 
  1093  0211                     	;# 
  1094  0211                     	;# 
  1095  0212                     	;# 
  1096  0212                     	;# 
  1097  0213                     	;# 
  1098  0213                     	;# 
  1099  0214                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0216                     	;# 
  1105  0216                     	;# 
  1106  0217                     	;# 
  1107  0217                     	;# 
  1108  0391                     	;# 
  1109  0392                     	;# 
  1110  0393                     	;# 
  1111  0394                     	;# 
  1112  0395                     	;# 
  1113  0396                     	;# 
  1114  0498                     	;# 
  1115  0498                     	;# 
  1116  0499                     	;# 
  1117  049A                     	;# 
  1118  049B                     	;# 
  1119  049B                     	;# 
  1120  049C                     	;# 
  1121  049D                     	;# 
  1122  049E                     	;# 
  1123  049F                     	;# 
  1124  0611                     	;# 
  1125  0612                     	;# 
  1126  0613                     	;# 
  1127  0613                     	;# 
  1128  0614                     	;# 
  1129  0615                     	;# 
  1130  0616                     	;# 
  1131  0616                     	;# 
  1132  0617                     	;# 
  1133  0618                     	;# 
  1134  0619                     	;# 
  1135  0619                     	;# 
  1136  061A                     	;# 
  1137  061B                     	;# 
  1138  061C                     	;# 
  1139  061C                     	;# 
  1140  0691                     	;# 
  1141  0692                     	;# 
  1142  0693                     	;# 
  1143  0694                     	;# 
  1144  0695                     	;# 
  1145  0F0F                     	;# 
  1146  0F10                     	;# 
  1147  0F11                     	;# 
  1148  0F12                     	;# 
  1149  0F13                     	;# 
  1150  0F14                     	;# 
  1151  0F15                     	;# 
  1152  0F16                     	;# 
  1153  0F17                     	;# 
  1154  0F18                     	;# 
  1155  0F19                     	;# 
  1156  0F1A                     	;# 
  1157  0F1B                     	;# 
  1158  0F1C                     	;# 
  1159  0F1D                     	;# 
  1160  0F1E                     	;# 
  1161  0F1F                     	;# 
  1162  0F20                     	;# 
  1163  0F21                     	;# 
  1164  0F22                     	;# 
  1165  0F23                     	;# 
  1166  0F24                     	;# 
  1167  0F25                     	;# 
  1168  0F26                     	;# 
  1169  0F27                     	;# 
  1170  0F28                     	;# 
  1171  0F29                     	;# 
  1172  0F2A                     	;# 
  1173  0F2B                     	;# 
  1174  0F2C                     	;# 
  1175  0F2D                     	;# 
  1176  0F2E                     	;# 
  1177  0F2F                     	;# 
  1178  0F8C                     	;# 
  1179  0F8D                     	;# 
  1180  0F91                     	;# 
  1181  0F95                     	;# 
  1182  0F96                     	;# 
  1183  0F97                     	;# 
  1184  0F9C                     	;# 
  1185  0F9D                     	;# 
  1186  0F9E                     	;# 
  1187  0FE3                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  000E                     	;# 
  1214  0011                     	;# 
  1215  0012                     	;# 
  1216  0013                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0016                     	;# 
  1220  0017                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  008C                     	;# 
  1227  008D                     	;# 
  1228  008E                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0097                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  009F                     	;# 
  1243  010C                     	;# 
  1244  010D                     	;# 
  1245  010E                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0113                     	;# 
  1249  0114                     	;# 
  1250  0115                     	;# 
  1251  0116                     	;# 
  1252  0117                     	;# 
  1253  0118                     	;# 
  1254  0119                     	;# 
  1255  011D                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  018E                     	;# 
  1259  0191                     	;# 
  1260  0191                     	;# 
  1261  0192                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0194                     	;# 
  1265  0195                     	;# 
  1266  0196                     	;# 
  1267  0197                     	;# 
  1268  0199                     	;# 
  1269  019A                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019C                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  0211                     	;# 
  1279  0211                     	;# 
  1280  0212                     	;# 
  1281  0212                     	;# 
  1282  0213                     	;# 
  1283  0213                     	;# 
  1284  0214                     	;# 
  1285  0214                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0215                     	;# 
  1289  0216                     	;# 
  1290  0216                     	;# 
  1291  0217                     	;# 
  1292  0217                     	;# 
  1293  0391                     	;# 
  1294  0392                     	;# 
  1295  0393                     	;# 
  1296  0394                     	;# 
  1297  0395                     	;# 
  1298  0396                     	;# 
  1299  0498                     	;# 
  1300  0498                     	;# 
  1301  0499                     	;# 
  1302  049A                     	;# 
  1303  049B                     	;# 
  1304  049B                     	;# 
  1305  049C                     	;# 
  1306  049D                     	;# 
  1307  049E                     	;# 
  1308  049F                     	;# 
  1309  0611                     	;# 
  1310  0612                     	;# 
  1311  0613                     	;# 
  1312  0613                     	;# 
  1313  0614                     	;# 
  1314  0615                     	;# 
  1315  0616                     	;# 
  1316  0616                     	;# 
  1317  0617                     	;# 
  1318  0618                     	;# 
  1319  0619                     	;# 
  1320  0619                     	;# 
  1321  061A                     	;# 
  1322  061B                     	;# 
  1323  061C                     	;# 
  1324  061C                     	;# 
  1325  0691                     	;# 
  1326  0692                     	;# 
  1327  0693                     	;# 
  1328  0694                     	;# 
  1329  0695                     	;# 
  1330  0F0F                     	;# 
  1331  0F10                     	;# 
  1332  0F11                     	;# 
  1333  0F12                     	;# 
  1334  0F13                     	;# 
  1335  0F14                     	;# 
  1336  0F15                     	;# 
  1337  0F16                     	;# 
  1338  0F17                     	;# 
  1339  0F18                     	;# 
  1340  0F19                     	;# 
  1341  0F1A                     	;# 
  1342  0F1B                     	;# 
  1343  0F1C                     	;# 
  1344  0F1D                     	;# 
  1345  0F1E                     	;# 
  1346  0F1F                     	;# 
  1347  0F20                     	;# 
  1348  0F21                     	;# 
  1349  0F22                     	;# 
  1350  0F23                     	;# 
  1351  0F24                     	;# 
  1352  0F25                     	;# 
  1353  0F26                     	;# 
  1354  0F27                     	;# 
  1355  0F28                     	;# 
  1356  0F29                     	;# 
  1357  0F2A                     	;# 
  1358  0F2B                     	;# 
  1359  0F2C                     	;# 
  1360  0F2D                     	;# 
  1361  0F2E                     	;# 
  1362  0F2F                     	;# 
  1363  0F8C                     	;# 
  1364  0F8D                     	;# 
  1365  0F91                     	;# 
  1366  0F95                     	;# 
  1367  0F96                     	;# 
  1368  0F97                     	;# 
  1369  0F9C                     	;# 
  1370  0F9D                     	;# 
  1371  0F9E                     	;# 
  1372  0FE3                     	;# 
  1373  0FE4                     	;# 
  1374  0FE5                     	;# 
  1375  0FE6                     	;# 
  1376  0FE7                     	;# 
  1377  0FE8                     	;# 
  1378  0FE9                     	;# 
  1379  0FEA                     	;# 
  1380  0FEB                     	;# 
  1381  0FED                     	;# 
  1382  0FEE                     	;# 
  1383  0FEF                     	;# 
  1384  0000                     	;# 
  1385  0001                     	;# 
  1386  0002                     	;# 
  1387  0003                     	;# 
  1388  0004                     	;# 
  1389  0005                     	;# 
  1390  0006                     	;# 
  1391  0007                     	;# 
  1392  0008                     	;# 
  1393  0009                     	;# 
  1394  000A                     	;# 
  1395  000B                     	;# 
  1396  000C                     	;# 
  1397  000D                     	;# 
  1398  000E                     	;# 
  1399  0011                     	;# 
  1400  0012                     	;# 
  1401  0013                     	;# 
  1402  0015                     	;# 
  1403  0016                     	;# 
  1404  0016                     	;# 
  1405  0017                     	;# 
  1406  0018                     	;# 
  1407  0019                     	;# 
  1408  001A                     	;# 
  1409  001B                     	;# 
  1410  001C                     	;# 
  1411  008C                     	;# 
  1412  008D                     	;# 
  1413  008E                     	;# 
  1414  0091                     	;# 
  1415  0092                     	;# 
  1416  0093                     	;# 
  1417  0095                     	;# 
  1418  0096                     	;# 
  1419  0097                     	;# 
  1420  0099                     	;# 
  1421  009A                     	;# 
  1422  009B                     	;# 
  1423  009B                     	;# 
  1424  009C                     	;# 
  1425  009D                     	;# 
  1426  009E                     	;# 
  1427  009F                     	;# 
  1428  010C                     	;# 
  1429  010D                     	;# 
  1430  010E                     	;# 
  1431  0111                     	;# 
  1432  0112                     	;# 
  1433  0113                     	;# 
  1434  0114                     	;# 
  1435  0115                     	;# 
  1436  0116                     	;# 
  1437  0117                     	;# 
  1438  0118                     	;# 
  1439  0119                     	;# 
  1440  011D                     	;# 
  1441  018C                     	;# 
  1442  018D                     	;# 
  1443  018E                     	;# 
  1444  0191                     	;# 
  1445  0191                     	;# 
  1446  0192                     	;# 
  1447  0193                     	;# 
  1448  0193                     	;# 
  1449  0194                     	;# 
  1450  0195                     	;# 
  1451  0196                     	;# 
  1452  0197                     	;# 
  1453  0199                     	;# 
  1454  019A                     	;# 
  1455  019B                     	;# 
  1456  019B                     	;# 
  1457  019C                     	;# 
  1458  019D                     	;# 
  1459  019E                     	;# 
  1460  019F                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  0391                     	;# 
  1479  0392                     	;# 
  1480  0393                     	;# 
  1481  0394                     	;# 
  1482  0395                     	;# 
  1483  0396                     	;# 
  1484  0498                     	;# 
  1485  0498                     	;# 
  1486  0499                     	;# 
  1487  049A                     	;# 
  1488  049B                     	;# 
  1489  049B                     	;# 
  1490  049C                     	;# 
  1491  049D                     	;# 
  1492  049E                     	;# 
  1493  049F                     	;# 
  1494  0611                     	;# 
  1495  0612                     	;# 
  1496  0613                     	;# 
  1497  0613                     	;# 
  1498  0614                     	;# 
  1499  0615                     	;# 
  1500  0616                     	;# 
  1501  0616                     	;# 
  1502  0617                     	;# 
  1503  0618                     	;# 
  1504  0619                     	;# 
  1505  0619                     	;# 
  1506  061A                     	;# 
  1507  061B                     	;# 
  1508  061C                     	;# 
  1509  061C                     	;# 
  1510  0691                     	;# 
  1511  0692                     	;# 
  1512  0693                     	;# 
  1513  0694                     	;# 
  1514  0695                     	;# 
  1515  0F0F                     	;# 
  1516  0F10                     	;# 
  1517  0F11                     	;# 
  1518  0F12                     	;# 
  1519  0F13                     	;# 
  1520  0F14                     	;# 
  1521  0F15                     	;# 
  1522  0F16                     	;# 
  1523  0F17                     	;# 
  1524  0F18                     	;# 
  1525  0F19                     	;# 
  1526  0F1A                     	;# 
  1527  0F1B                     	;# 
  1528  0F1C                     	;# 
  1529  0F1D                     	;# 
  1530  0F1E                     	;# 
  1531  0F1F                     	;# 
  1532  0F20                     	;# 
  1533  0F21                     	;# 
  1534  0F22                     	;# 
  1535  0F23                     	;# 
  1536  0F24                     	;# 
  1537  0F25                     	;# 
  1538  0F26                     	;# 
  1539  0F27                     	;# 
  1540  0F28                     	;# 
  1541  0F29                     	;# 
  1542  0F2A                     	;# 
  1543  0F2B                     	;# 
  1544  0F2C                     	;# 
  1545  0F2D                     	;# 
  1546  0F2E                     	;# 
  1547  0F2F                     	;# 
  1548  0F8C                     	;# 
  1549  0F8D                     	;# 
  1550  0F91                     	;# 
  1551  0F95                     	;# 
  1552  0F96                     	;# 
  1553  0F97                     	;# 
  1554  0F9C                     	;# 
  1555  0F9D                     	;# 
  1556  0F9E                     	;# 
  1557  0FE3                     	;# 
  1558  0FE4                     	;# 
  1559  0FE5                     	;# 
  1560  0FE6                     	;# 
  1561  0FE7                     	;# 
  1562  0FE8                     	;# 
  1563  0FE9                     	;# 
  1564  0FEA                     	;# 
  1565  0FEB                     	;# 
  1566  0FED                     	;# 
  1567  0FEE                     	;# 
  1568  0FEF                     	;# 
  1569  0000                     	;# 
  1570  0001                     	;# 
  1571  0002                     	;# 
  1572  0003                     	;# 
  1573  0004                     	;# 
  1574  0005                     	;# 
  1575  0006                     	;# 
  1576  0007                     	;# 
  1577  0008                     	;# 
  1578  0009                     	;# 
  1579  000A                     	;# 
  1580  000B                     	;# 
  1581  000C                     	;# 
  1582  000D                     	;# 
  1583  000E                     	;# 
  1584  0011                     	;# 
  1585  0012                     	;# 
  1586  0013                     	;# 
  1587  0015                     	;# 
  1588  0016                     	;# 
  1589  0016                     	;# 
  1590  0017                     	;# 
  1591  0018                     	;# 
  1592  0019                     	;# 
  1593  001A                     	;# 
  1594  001B                     	;# 
  1595  001C                     	;# 
  1596  008C                     	;# 
  1597  008D                     	;# 
  1598  008E                     	;# 
  1599  0091                     	;# 
  1600  0092                     	;# 
  1601  0093                     	;# 
  1602  0095                     	;# 
  1603  0096                     	;# 
  1604  0097                     	;# 
  1605  0099                     	;# 
  1606  009A                     	;# 
  1607  009B                     	;# 
  1608  009B                     	;# 
  1609  009C                     	;# 
  1610  009D                     	;# 
  1611  009E                     	;# 
  1612  009F                     	;# 
  1613  010C                     	;# 
  1614  010D                     	;# 
  1615  010E                     	;# 
  1616  0111                     	;# 
  1617  0112                     	;# 
  1618  0113                     	;# 
  1619  0114                     	;# 
  1620  0115                     	;# 
  1621  0116                     	;# 
  1622  0117                     	;# 
  1623  0118                     	;# 
  1624  0119                     	;# 
  1625  011D                     	;# 
  1626  018C                     	;# 
  1627  018D                     	;# 
  1628  018E                     	;# 
  1629  0191                     	;# 
  1630  0191                     	;# 
  1631  0192                     	;# 
  1632  0193                     	;# 
  1633  0193                     	;# 
  1634  0194                     	;# 
  1635  0195                     	;# 
  1636  0196                     	;# 
  1637  0197                     	;# 
  1638  0199                     	;# 
  1639  019A                     	;# 
  1640  019B                     	;# 
  1641  019B                     	;# 
  1642  019C                     	;# 
  1643  019D                     	;# 
  1644  019E                     	;# 
  1645  019F                     	;# 
  1646  020C                     	;# 
  1647  020D                     	;# 
  1648  0211                     	;# 
  1649  0211                     	;# 
  1650  0212                     	;# 
  1651  0212                     	;# 
  1652  0213                     	;# 
  1653  0213                     	;# 
  1654  0214                     	;# 
  1655  0214                     	;# 
  1656  0215                     	;# 
  1657  0215                     	;# 
  1658  0215                     	;# 
  1659  0216                     	;# 
  1660  0216                     	;# 
  1661  0217                     	;# 
  1662  0217                     	;# 
  1663  0391                     	;# 
  1664  0392                     	;# 
  1665  0393                     	;# 
  1666  0394                     	;# 
  1667  0395                     	;# 
  1668  0396                     	;# 
  1669  0498                     	;# 
  1670  0498                     	;# 
  1671  0499                     	;# 
  1672  049A                     	;# 
  1673  049B                     	;# 
  1674  049B                     	;# 
  1675  049C                     	;# 
  1676  049D                     	;# 
  1677  049E                     	;# 
  1678  049F                     	;# 
  1679  0611                     	;# 
  1680  0612                     	;# 
  1681  0613                     	;# 
  1682  0613                     	;# 
  1683  0614                     	;# 
  1684  0615                     	;# 
  1685  0616                     	;# 
  1686  0616                     	;# 
  1687  0617                     	;# 
  1688  0618                     	;# 
  1689  0619                     	;# 
  1690  0619                     	;# 
  1691  061A                     	;# 
  1692  061B                     	;# 
  1693  061C                     	;# 
  1694  061C                     	;# 
  1695  0691                     	;# 
  1696  0692                     	;# 
  1697  0693                     	;# 
  1698  0694                     	;# 
  1699  0695                     	;# 
  1700  0F0F                     	;# 
  1701  0F10                     	;# 
  1702  0F11                     	;# 
  1703  0F12                     	;# 
  1704  0F13                     	;# 
  1705  0F14                     	;# 
  1706  0F15                     	;# 
  1707  0F16                     	;# 
  1708  0F17                     	;# 
  1709  0F18                     	;# 
  1710  0F19                     	;# 
  1711  0F1A                     	;# 
  1712  0F1B                     	;# 
  1713  0F1C                     	;# 
  1714  0F1D                     	;# 
  1715  0F1E                     	;# 
  1716  0F1F                     	;# 
  1717  0F20                     	;# 
  1718  0F21                     	;# 
  1719  0F22                     	;# 
  1720  0F23                     	;# 
  1721  0F24                     	;# 
  1722  0F25                     	;# 
  1723  0F26                     	;# 
  1724  0F27                     	;# 
  1725  0F28                     	;# 
  1726  0F29                     	;# 
  1727  0F2A                     	;# 
  1728  0F2B                     	;# 
  1729  0F2C                     	;# 
  1730  0F2D                     	;# 
  1731  0F2E                     	;# 
  1732  0F2F                     	;# 
  1733  0F8C                     	;# 
  1734  0F8D                     	;# 
  1735  0F91                     	;# 
  1736  0F95                     	;# 
  1737  0F96                     	;# 
  1738  0F97                     	;# 
  1739  0F9C                     	;# 
  1740  0F9D                     	;# 
  1741  0F9E                     	;# 
  1742  0FE3                     	;# 
  1743  0FE4                     	;# 
  1744  0FE5                     	;# 
  1745  0FE6                     	;# 
  1746  0FE7                     	;# 
  1747  0FE8                     	;# 
  1748  0FE9                     	;# 
  1749  0FEA                     	;# 
  1750  0FEB                     	;# 
  1751  0FED                     	;# 
  1752  0FEE                     	;# 
  1753  0FEF                     	;# 
  1754  0000                     	;# 
  1755  0001                     	;# 
  1756  0002                     	;# 
  1757  0003                     	;# 
  1758  0004                     	;# 
  1759  0005                     	;# 
  1760  0006                     	;# 
  1761  0007                     	;# 
  1762  0008                     	;# 
  1763  0009                     	;# 
  1764  000A                     	;# 
  1765  000B                     	;# 
  1766  000C                     	;# 
  1767  000D                     	;# 
  1768  000E                     	;# 
  1769  0011                     	;# 
  1770  0012                     	;# 
  1771  0013                     	;# 
  1772  0015                     	;# 
  1773  0016                     	;# 
  1774  0016                     	;# 
  1775  0017                     	;# 
  1776  0018                     	;# 
  1777  0019                     	;# 
  1778  001A                     	;# 
  1779  001B                     	;# 
  1780  001C                     	;# 
  1781  008C                     	;# 
  1782  008D                     	;# 
  1783  008E                     	;# 
  1784  0091                     	;# 
  1785  0092                     	;# 
  1786  0093                     	;# 
  1787  0095                     	;# 
  1788  0096                     	;# 
  1789  0097                     	;# 
  1790  0099                     	;# 
  1791  009A                     	;# 
  1792  009B                     	;# 
  1793  009B                     	;# 
  1794  009C                     	;# 
  1795  009D                     	;# 
  1796  009E                     	;# 
  1797  009F                     	;# 
  1798  010C                     	;# 
  1799  010D                     	;# 
  1800  010E                     	;# 
  1801  0111                     	;# 
  1802  0112                     	;# 
  1803  0113                     	;# 
  1804  0114                     	;# 
  1805  0115                     	;# 
  1806  0116                     	;# 
  1807  0117                     	;# 
  1808  0118                     	;# 
  1809  0119                     	;# 
  1810  011D                     	;# 
  1811  018C                     	;# 
  1812  018D                     	;# 
  1813  018E                     	;# 
  1814  0191                     	;# 
  1815  0191                     	;# 
  1816  0192                     	;# 
  1817  0193                     	;# 
  1818  0193                     	;# 
  1819  0194                     	;# 
  1820  0195                     	;# 
  1821  0196                     	;# 
  1822  0197                     	;# 
  1823  0199                     	;# 
  1824  019A                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019C                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019F                     	;# 
  1831  020C                     	;# 
  1832  020D                     	;# 
  1833  0211                     	;# 
  1834  0211                     	;# 
  1835  0212                     	;# 
  1836  0212                     	;# 
  1837  0213                     	;# 
  1838  0213                     	;# 
  1839  0214                     	;# 
  1840  0214                     	;# 
  1841  0215                     	;# 
  1842  0215                     	;# 
  1843  0215                     	;# 
  1844  0216                     	;# 
  1845  0216                     	;# 
  1846  0217                     	;# 
  1847  0217                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  0393                     	;# 
  1851  0394                     	;# 
  1852  0395                     	;# 
  1853  0396                     	;# 
  1854  0498                     	;# 
  1855  0498                     	;# 
  1856  0499                     	;# 
  1857  049A                     	;# 
  1858  049B                     	;# 
  1859  049B                     	;# 
  1860  049C                     	;# 
  1861  049D                     	;# 
  1862  049E                     	;# 
  1863  049F                     	;# 
  1864  0611                     	;# 
  1865  0612                     	;# 
  1866  0613                     	;# 
  1867  0613                     	;# 
  1868  0614                     	;# 
  1869  0615                     	;# 
  1870  0616                     	;# 
  1871  0616                     	;# 
  1872  0617                     	;# 
  1873  0618                     	;# 
  1874  0619                     	;# 
  1875  0619                     	;# 
  1876  061A                     	;# 
  1877  061B                     	;# 
  1878  061C                     	;# 
  1879  061C                     	;# 
  1880  0691                     	;# 
  1881  0692                     	;# 
  1882  0693                     	;# 
  1883  0694                     	;# 
  1884  0695                     	;# 
  1885  0F0F                     	;# 
  1886  0F10                     	;# 
  1887  0F11                     	;# 
  1888  0F12                     	;# 
  1889  0F13                     	;# 
  1890  0F14                     	;# 
  1891  0F15                     	;# 
  1892  0F16                     	;# 
  1893  0F17                     	;# 
  1894  0F18                     	;# 
  1895  0F19                     	;# 
  1896  0F1A                     	;# 
  1897  0F1B                     	;# 
  1898  0F1C                     	;# 
  1899  0F1D                     	;# 
  1900  0F1E                     	;# 
  1901  0F1F                     	;# 
  1902  0F20                     	;# 
  1903  0F21                     	;# 
  1904  0F22                     	;# 
  1905  0F23                     	;# 
  1906  0F24                     	;# 
  1907  0F25                     	;# 
  1908  0F26                     	;# 
  1909  0F27                     	;# 
  1910  0F28                     	;# 
  1911  0F29                     	;# 
  1912  0F2A                     	;# 
  1913  0F2B                     	;# 
  1914  0F2C                     	;# 
  1915  0F2D                     	;# 
  1916  0F2E                     	;# 
  1917  0F2F                     	;# 
  1918  0F8C                     	;# 
  1919  0F8D                     	;# 
  1920  0F91                     	;# 
  1921  0F95                     	;# 
  1922  0F96                     	;# 
  1923  0F97                     	;# 
  1924  0F9C                     	;# 
  1925  0F9D                     	;# 
  1926  0F9E                     	;# 
  1927  0FE3                     	;# 
  1928  0FE4                     	;# 
  1929  0FE5                     	;# 
  1930  0FE6                     	;# 
  1931  0FE7                     	;# 
  1932  0FE8                     	;# 
  1933  0FE9                     	;# 
  1934  0FEA                     	;# 
  1935  0FEB                     	;# 
  1936  0FED                     	;# 
  1937  0FEE                     	;# 
  1938  0FEF                     	;# 
  1939  0000                     	;# 
  1940  0001                     	;# 
  1941  0002                     	;# 
  1942  0003                     	;# 
  1943  0004                     	;# 
  1944  0005                     	;# 
  1945  0006                     	;# 
  1946  0007                     	;# 
  1947  0008                     	;# 
  1948  0009                     	;# 
  1949  000A                     	;# 
  1950  000B                     	;# 
  1951  000C                     	;# 
  1952  000D                     	;# 
  1953  000E                     	;# 
  1954  0011                     	;# 
  1955  0012                     	;# 
  1956  0013                     	;# 
  1957  0015                     	;# 
  1958  0016                     	;# 
  1959  0016                     	;# 
  1960  0017                     	;# 
  1961  0018                     	;# 
  1962  0019                     	;# 
  1963  001A                     	;# 
  1964  001B                     	;# 
  1965  001C                     	;# 
  1966  008C                     	;# 
  1967  008D                     	;# 
  1968  008E                     	;# 
  1969  0091                     	;# 
  1970  0092                     	;# 
  1971  0093                     	;# 
  1972  0095                     	;# 
  1973  0096                     	;# 
  1974  0097                     	;# 
  1975  0099                     	;# 
  1976  009A                     	;# 
  1977  009B                     	;# 
  1978  009B                     	;# 
  1979  009C                     	;# 
  1980  009D                     	;# 
  1981  009E                     	;# 
  1982  009F                     	;# 
  1983  010C                     	;# 
  1984  010D                     	;# 
  1985  010E                     	;# 
  1986  0111                     	;# 
  1987  0112                     	;# 
  1988  0113                     	;# 
  1989  0114                     	;# 
  1990  0115                     	;# 
  1991  0116                     	;# 
  1992  0117                     	;# 
  1993  0118                     	;# 
  1994  0119                     	;# 
  1995  011D                     	;# 
  1996  018C                     	;# 
  1997  018D                     	;# 
  1998  018E                     	;# 
  1999  0191                     	;# 
  2000  0191                     	;# 
  2001  0192                     	;# 
  2002  0193                     	;# 
  2003  0193                     	;# 
  2004  0194                     	;# 
  2005  0195                     	;# 
  2006  0196                     	;# 
  2007  0197                     	;# 
  2008  0199                     	;# 
  2009  019A                     	;# 
  2010  019B                     	;# 
  2011  019B                     	;# 
  2012  019C                     	;# 
  2013  019D                     	;# 
  2014  019E                     	;# 
  2015  019F                     	;# 
  2016  020C                     	;# 
  2017  020D                     	;# 
  2018  0211                     	;# 
  2019  0211                     	;# 
  2020  0212                     	;# 
  2021  0212                     	;# 
  2022  0213                     	;# 
  2023  0213                     	;# 
  2024  0214                     	;# 
  2025  0214                     	;# 
  2026  0215                     	;# 
  2027  0215                     	;# 
  2028  0215                     	;# 
  2029  0216                     	;# 
  2030  0216                     	;# 
  2031  0217                     	;# 
  2032  0217                     	;# 
  2033  0391                     	;# 
  2034  0392                     	;# 
  2035  0393                     	;# 
  2036  0394                     	;# 
  2037  0395                     	;# 
  2038  0396                     	;# 
  2039  0498                     	;# 
  2040  0498                     	;# 
  2041  0499                     	;# 
  2042  049A                     	;# 
  2043  049B                     	;# 
  2044  049B                     	;# 
  2045  049C                     	;# 
  2046  049D                     	;# 
  2047  049E                     	;# 
  2048  049F                     	;# 
  2049  0611                     	;# 
  2050  0612                     	;# 
  2051  0613                     	;# 
  2052  0613                     	;# 
  2053  0614                     	;# 
  2054  0615                     	;# 
  2055  0616                     	;# 
  2056  0616                     	;# 
  2057  0617                     	;# 
  2058  0618                     	;# 
  2059  0619                     	;# 
  2060  0619                     	;# 
  2061  061A                     	;# 
  2062  061B                     	;# 
  2063  061C                     	;# 
  2064  061C                     	;# 
  2065  0691                     	;# 
  2066  0692                     	;# 
  2067  0693                     	;# 
  2068  0694                     	;# 
  2069  0695                     	;# 
  2070  0F0F                     	;# 
  2071  0F10                     	;# 
  2072  0F11                     	;# 
  2073  0F12                     	;# 
  2074  0F13                     	;# 
  2075  0F14                     	;# 
  2076  0F15                     	;# 
  2077  0F16                     	;# 
  2078  0F17                     	;# 
  2079  0F18                     	;# 
  2080  0F19                     	;# 
  2081  0F1A                     	;# 
  2082  0F1B                     	;# 
  2083  0F1C                     	;# 
  2084  0F1D                     	;# 
  2085  0F1E                     	;# 
  2086  0F1F                     	;# 
  2087  0F20                     	;# 
  2088  0F21                     	;# 
  2089  0F22                     	;# 
  2090  0F23                     	;# 
  2091  0F24                     	;# 
  2092  0F25                     	;# 
  2093  0F26                     	;# 
  2094  0F27                     	;# 
  2095  0F28                     	;# 
  2096  0F29                     	;# 
  2097  0F2A                     	;# 
  2098  0F2B                     	;# 
  2099  0F2C                     	;# 
  2100  0F2D                     	;# 
  2101  0F2E                     	;# 
  2102  0F2F                     	;# 
  2103  0F8C                     	;# 
  2104  0F8D                     	;# 
  2105  0F91                     	;# 
  2106  0F95                     	;# 
  2107  0F96                     	;# 
  2108  0F97                     	;# 
  2109  0F9C                     	;# 
  2110  0F9D                     	;# 
  2111  0F9E                     	;# 
  2112  0FE3                     	;# 
  2113  0FE4                     	;# 
  2114  0FE5                     	;# 
  2115  0FE6                     	;# 
  2116  0FE7                     	;# 
  2117  0FE8                     	;# 
  2118  0FE9                     	;# 
  2119  0FEA                     	;# 
  2120  0FEB                     	;# 
  2121  0FED                     	;# 
  2122  0FEE                     	;# 
  2123  0FEF                     	;# 
  2124  0000                     	;# 
  2125  0001                     	;# 
  2126  0002                     	;# 
  2127  0003                     	;# 
  2128  0004                     	;# 
  2129  0005                     	;# 
  2130  0006                     	;# 
  2131  0007                     	;# 
  2132  0008                     	;# 
  2133  0009                     	;# 
  2134  000A                     	;# 
  2135  000B                     	;# 
  2136  000C                     	;# 
  2137  000D                     	;# 
  2138  000E                     	;# 
  2139  0011                     	;# 
  2140  0012                     	;# 
  2141  0013                     	;# 
  2142  0015                     	;# 
  2143  0016                     	;# 
  2144  0016                     	;# 
  2145  0017                     	;# 
  2146  0018                     	;# 
  2147  0019                     	;# 
  2148  001A                     	;# 
  2149  001B                     	;# 
  2150  001C                     	;# 
  2151  008C                     	;# 
  2152  008D                     	;# 
  2153  008E                     	;# 
  2154  0091                     	;# 
  2155  0092                     	;# 
  2156  0093                     	;# 
  2157  0095                     	;# 
  2158  0096                     	;# 
  2159  0097                     	;# 
  2160  0099                     	;# 
  2161  009A                     	;# 
  2162  009B                     	;# 
  2163  009B                     	;# 
  2164  009C                     	;# 
  2165  009D                     	;# 
  2166  009E                     	;# 
  2167  009F                     	;# 
  2168  010C                     	;# 
  2169  010D                     	;# 
  2170  010E                     	;# 
  2171  0111                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0115                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0118                     	;# 
  2179  0119                     	;# 
  2180  011D                     	;# 
  2181  018C                     	;# 
  2182  018D                     	;# 
  2183  018E                     	;# 
  2184  0191                     	;# 
  2185  0191                     	;# 
  2186  0192                     	;# 
  2187  0193                     	;# 
  2188  0193                     	;# 
  2189  0194                     	;# 
  2190  0195                     	;# 
  2191  0196                     	;# 
  2192  0197                     	;# 
  2193  0199                     	;# 
  2194  019A                     	;# 
  2195  019B                     	;# 
  2196  019B                     	;# 
  2197  019C                     	;# 
  2198  019D                     	;# 
  2199  019E                     	;# 
  2200  019F                     	;# 
  2201  020C                     	;# 
  2202  020D                     	;# 
  2203  0211                     	;# 
  2204  0211                     	;# 
  2205  0212                     	;# 
  2206  0212                     	;# 
  2207  0213                     	;# 
  2208  0213                     	;# 
  2209  0214                     	;# 
  2210  0214                     	;# 
  2211  0215                     	;# 
  2212  0215                     	;# 
  2213  0215                     	;# 
  2214  0216                     	;# 
  2215  0216                     	;# 
  2216  0217                     	;# 
  2217  0217                     	;# 
  2218  0391                     	;# 
  2219  0392                     	;# 
  2220  0393                     	;# 
  2221  0394                     	;# 
  2222  0395                     	;# 
  2223  0396                     	;# 
  2224  0498                     	;# 
  2225  0498                     	;# 
  2226  0499                     	;# 
  2227  049A                     	;# 
  2228  049B                     	;# 
  2229  049B                     	;# 
  2230  049C                     	;# 
  2231  049D                     	;# 
  2232  049E                     	;# 
  2233  049F                     	;# 
  2234  0611                     	;# 
  2235  0612                     	;# 
  2236  0613                     	;# 
  2237  0613                     	;# 
  2238  0614                     	;# 
  2239  0615                     	;# 
  2240  0616                     	;# 
  2241  0616                     	;# 
  2242  0617                     	;# 
  2243  0618                     	;# 
  2244  0619                     	;# 
  2245  0619                     	;# 
  2246  061A                     	;# 
  2247  061B                     	;# 
  2248  061C                     	;# 
  2249  061C                     	;# 
  2250  0691                     	;# 
  2251  0692                     	;# 
  2252  0693                     	;# 
  2253  0694                     	;# 
  2254  0695                     	;# 
  2255  0F0F                     	;# 
  2256  0F10                     	;# 
  2257  0F11                     	;# 
  2258  0F12                     	;# 
  2259  0F13                     	;# 
  2260  0F14                     	;# 
  2261  0F15                     	;# 
  2262  0F16                     	;# 
  2263  0F17                     	;# 
  2264  0F18                     	;# 
  2265  0F19                     	;# 
  2266  0F1A                     	;# 
  2267  0F1B                     	;# 
  2268  0F1C                     	;# 
  2269  0F1D                     	;# 
  2270  0F1E                     	;# 
  2271  0F1F                     	;# 
  2272  0F20                     	;# 
  2273  0F21                     	;# 
  2274  0F22                     	;# 
  2275  0F23                     	;# 
  2276  0F24                     	;# 
  2277  0F25                     	;# 
  2278  0F26                     	;# 
  2279  0F27                     	;# 
  2280  0F28                     	;# 
  2281  0F29                     	;# 
  2282  0F2A                     	;# 
  2283  0F2B                     	;# 
  2284  0F2C                     	;# 
  2285  0F2D                     	;# 
  2286  0F2E                     	;# 
  2287  0F2F                     	;# 
  2288  0F8C                     	;# 
  2289  0F8D                     	;# 
  2290  0F91                     	;# 
  2291  0F95                     	;# 
  2292  0F96                     	;# 
  2293  0F97                     	;# 
  2294  0F9C                     	;# 
  2295  0F9D                     	;# 
  2296  0F9E                     	;# 
  2297  0FE3                     	;# 
  2298  0FE4                     	;# 
  2299  0FE5                     	;# 
  2300  0FE6                     	;# 
  2301  0FE7                     	;# 
  2302  0FE8                     	;# 
  2303  0FE9                     	;# 
  2304  0FEA                     	;# 
  2305  0FEB                     	;# 
  2306  0FED                     	;# 
  2307  0FEE                     	;# 
  2308  0FEF                     	;# 
  2309  0000                     	;# 
  2310  0001                     	;# 
  2311  0002                     	;# 
  2312  0003                     	;# 
  2313  0004                     	;# 
  2314  0005                     	;# 
  2315  0006                     	;# 
  2316  0007                     	;# 
  2317  0008                     	;# 
  2318  0009                     	;# 
  2319  000A                     	;# 
  2320  000B                     	;# 
  2321  000C                     	;# 
  2322  000D                     	;# 
  2323  000E                     	;# 
  2324  0011                     	;# 
  2325  0012                     	;# 
  2326  0013                     	;# 
  2327  0015                     	;# 
  2328  0016                     	;# 
  2329  0016                     	;# 
  2330  0017                     	;# 
  2331  0018                     	;# 
  2332  0019                     	;# 
  2333  001A                     	;# 
  2334  001B                     	;# 
  2335  001C                     	;# 
  2336  008C                     	;# 
  2337  008D                     	;# 
  2338  008E                     	;# 
  2339  0091                     	;# 
  2340  0092                     	;# 
  2341  0093                     	;# 
  2342  0095                     	;# 
  2343  0096                     	;# 
  2344  0097                     	;# 
  2345  0099                     	;# 
  2346  009A                     	;# 
  2347  009B                     	;# 
  2348  009B                     	;# 
  2349  009C                     	;# 
  2350  009D                     	;# 
  2351  009E                     	;# 
  2352  009F                     	;# 
  2353  010C                     	;# 
  2354  010D                     	;# 
  2355  010E                     	;# 
  2356  0111                     	;# 
  2357  0112                     	;# 
  2358  0113                     	;# 
  2359  0114                     	;# 
  2360  0115                     	;# 
  2361  0116                     	;# 
  2362  0117                     	;# 
  2363  0118                     	;# 
  2364  0119                     	;# 
  2365  011D                     	;# 
  2366  018C                     	;# 
  2367  018D                     	;# 
  2368  018E                     	;# 
  2369  0191                     	;# 
  2370  0191                     	;# 
  2371  0192                     	;# 
  2372  0193                     	;# 
  2373  0193                     	;# 
  2374  0194                     	;# 
  2375  0195                     	;# 
  2376  0196                     	;# 
  2377  0197                     	;# 
  2378  0199                     	;# 
  2379  019A                     	;# 
  2380  019B                     	;# 
  2381  019B                     	;# 
  2382  019C                     	;# 
  2383  019D                     	;# 
  2384  019E                     	;# 
  2385  019F                     	;# 
  2386  020C                     	;# 
  2387  020D                     	;# 
  2388  0211                     	;# 
  2389  0211                     	;# 
  2390  0212                     	;# 
  2391  0212                     	;# 
  2392  0213                     	;# 
  2393  0213                     	;# 
  2394  0214                     	;# 
  2395  0214                     	;# 
  2396  0215                     	;# 
  2397  0215                     	;# 
  2398  0215                     	;# 
  2399  0216                     	;# 
  2400  0216                     	;# 
  2401  0217                     	;# 
  2402  0217                     	;# 
  2403  0391                     	;# 
  2404  0392                     	;# 
  2405  0393                     	;# 
  2406  0394                     	;# 
  2407  0395                     	;# 
  2408  0396                     	;# 
  2409  0498                     	;# 
  2410  0498                     	;# 
  2411  0499                     	;# 
  2412  049A                     	;# 
  2413  049B                     	;# 
  2414  049B                     	;# 
  2415  049C                     	;# 
  2416  049D                     	;# 
  2417  049E                     	;# 
  2418  049F                     	;# 
  2419  0611                     	;# 
  2420  0612                     	;# 
  2421  0613                     	;# 
  2422  0613                     	;# 
  2423  0614                     	;# 
  2424  0615                     	;# 
  2425  0616                     	;# 
  2426  0616                     	;# 
  2427  0617                     	;# 
  2428  0618                     	;# 
  2429  0619                     	;# 
  2430  0619                     	;# 
  2431  061A                     	;# 
  2432  061B                     	;# 
  2433  061C                     	;# 
  2434  061C                     	;# 
  2435  0691                     	;# 
  2436  0692                     	;# 
  2437  0693                     	;# 
  2438  0694                     	;# 
  2439  0695                     	;# 
  2440  0F0F                     	;# 
  2441  0F10                     	;# 
  2442  0F11                     	;# 
  2443  0F12                     	;# 
  2444  0F13                     	;# 
  2445  0F14                     	;# 
  2446  0F15                     	;# 
  2447  0F16                     	;# 
  2448  0F17                     	;# 
  2449  0F18                     	;# 
  2450  0F19                     	;# 
  2451  0F1A                     	;# 
  2452  0F1B                     	;# 
  2453  0F1C                     	;# 
  2454  0F1D                     	;# 
  2455  0F1E                     	;# 
  2456  0F1F                     	;# 
  2457  0F20                     	;# 
  2458  0F21                     	;# 
  2459  0F22                     	;# 
  2460  0F23                     	;# 
  2461  0F24                     	;# 
  2462  0F25                     	;# 
  2463  0F26                     	;# 
  2464  0F27                     	;# 
  2465  0F28                     	;# 
  2466  0F29                     	;# 
  2467  0F2A                     	;# 
  2468  0F2B                     	;# 
  2469  0F2C                     	;# 
  2470  0F2D                     	;# 
  2471  0F2E                     	;# 
  2472  0F2F                     	;# 
  2473  0F8C                     	;# 
  2474  0F8D                     	;# 
  2475  0F91                     	;# 
  2476  0F95                     	;# 
  2477  0F96                     	;# 
  2478  0F97                     	;# 
  2479  0F9C                     	;# 
  2480  0F9D                     	;# 
  2481  0F9E                     	;# 
  2482  0FE3                     	;# 
  2483  0FE4                     	;# 
  2484  0FE5                     	;# 
  2485  0FE6                     	;# 
  2486  0FE7                     	;# 
  2487  0FE8                     	;# 
  2488  0FE9                     	;# 
  2489  0FEA                     	;# 
  2490  0FEB                     	;# 
  2491  0FED                     	;# 
  2492  0FEE                     	;# 
  2493  0FEF                     	;# 
  2494  0000                     	;# 
  2495  0001                     	;# 
  2496  0002                     	;# 
  2497  0003                     	;# 
  2498  0004                     	;# 
  2499  0005                     	;# 
  2500  0006                     	;# 
  2501  0007                     	;# 
  2502  0008                     	;# 
  2503  0009                     	;# 
  2504  000A                     	;# 
  2505  000B                     	;# 
  2506  000C                     	;# 
  2507  000D                     	;# 
  2508  000E                     	;# 
  2509  0011                     	;# 
  2510  0012                     	;# 
  2511  0013                     	;# 
  2512  0015                     	;# 
  2513  0016                     	;# 
  2514  0016                     	;# 
  2515  0017                     	;# 
  2516  0018                     	;# 
  2517  0019                     	;# 
  2518  001A                     	;# 
  2519  001B                     	;# 
  2520  001C                     	;# 
  2521  008C                     	;# 
  2522  008D                     	;# 
  2523  008E                     	;# 
  2524  0091                     	;# 
  2525  0092                     	;# 
  2526  0093                     	;# 
  2527  0095                     	;# 
  2528  0096                     	;# 
  2529  0097                     	;# 
  2530  0099                     	;# 
  2531  009A                     	;# 
  2532  009B                     	;# 
  2533  009B                     	;# 
  2534  009C                     	;# 
  2535  009D                     	;# 
  2536  009E                     	;# 
  2537  009F                     	;# 
  2538  010C                     	;# 
  2539  010D                     	;# 
  2540  010E                     	;# 
  2541  0111                     	;# 
  2542  0112                     	;# 
  2543  0113                     	;# 
  2544  0114                     	;# 
  2545  0115                     	;# 
  2546  0116                     	;# 
  2547  0117                     	;# 
  2548  0118                     	;# 
  2549  0119                     	;# 
  2550  011D                     	;# 
  2551  018C                     	;# 
  2552  018D                     	;# 
  2553  018E                     	;# 
  2554  0191                     	;# 
  2555  0191                     	;# 
  2556  0192                     	;# 
  2557  0193                     	;# 
  2558  0193                     	;# 
  2559  0194                     	;# 
  2560  0195                     	;# 
  2561  0196                     	;# 
  2562  0197                     	;# 
  2563  0199                     	;# 
  2564  019A                     	;# 
  2565  019B                     	;# 
  2566  019B                     	;# 
  2567  019C                     	;# 
  2568  019D                     	;# 
  2569  019E                     	;# 
  2570  019F                     	;# 
  2571  020C                     	;# 
  2572  020D                     	;# 
  2573  0211                     	;# 
  2574  0211                     	;# 
  2575  0212                     	;# 
  2576  0212                     	;# 
  2577  0213                     	;# 
  2578  0213                     	;# 
  2579  0214                     	;# 
  2580  0214                     	;# 
  2581  0215                     	;# 
  2582  0215                     	;# 
  2583  0215                     	;# 
  2584  0216                     	;# 
  2585  0216                     	;# 
  2586  0217                     	;# 
  2587  0217                     	;# 
  2588  0391                     	;# 
  2589  0392                     	;# 
  2590  0393                     	;# 
  2591  0394                     	;# 
  2592  0395                     	;# 
  2593  0396                     	;# 
  2594  0498                     	;# 
  2595  0498                     	;# 
  2596  0499                     	;# 
  2597  049A                     	;# 
  2598  049B                     	;# 
  2599  049B                     	;# 
  2600  049C                     	;# 
  2601  049D                     	;# 
  2602  049E                     	;# 
  2603  049F                     	;# 
  2604  0611                     	;# 
  2605  0612                     	;# 
  2606  0613                     	;# 
  2607  0613                     	;# 
  2608  0614                     	;# 
  2609  0615                     	;# 
  2610  0616                     	;# 
  2611  0616                     	;# 
  2612  0617                     	;# 
  2613  0618                     	;# 
  2614  0619                     	;# 
  2615  0619                     	;# 
  2616  061A                     	;# 
  2617  061B                     	;# 
  2618  061C                     	;# 
  2619  061C                     	;# 
  2620  0691                     	;# 
  2621  0692                     	;# 
  2622  0693                     	;# 
  2623  0694                     	;# 
  2624  0695                     	;# 
  2625  0F0F                     	;# 
  2626  0F10                     	;# 
  2627  0F11                     	;# 
  2628  0F12                     	;# 
  2629  0F13                     	;# 
  2630  0F14                     	;# 
  2631  0F15                     	;# 
  2632  0F16                     	;# 
  2633  0F17                     	;# 
  2634  0F18                     	;# 
  2635  0F19                     	;# 
  2636  0F1A                     	;# 
  2637  0F1B                     	;# 
  2638  0F1C                     	;# 
  2639  0F1D                     	;# 
  2640  0F1E                     	;# 
  2641  0F1F                     	;# 
  2642  0F20                     	;# 
  2643  0F21                     	;# 
  2644  0F22                     	;# 
  2645  0F23                     	;# 
  2646  0F24                     	;# 
  2647  0F25                     	;# 
  2648  0F26                     	;# 
  2649  0F27                     	;# 
  2650  0F28                     	;# 
  2651  0F29                     	;# 
  2652  0F2A                     	;# 
  2653  0F2B                     	;# 
  2654  0F2C                     	;# 
  2655  0F2D                     	;# 
  2656  0F2E                     	;# 
  2657  0F2F                     	;# 
  2658  0F8C                     	;# 
  2659  0F8D                     	;# 
  2660  0F91                     	;# 
  2661  0F95                     	;# 
  2662  0F96                     	;# 
  2663  0F97                     	;# 
  2664  0F9C                     	;# 
  2665  0F9D                     	;# 
  2666  0F9E                     	;# 
  2667  0FE3                     	;# 
  2668  0FE4                     	;# 
  2669  0FE5                     	;# 
  2670  0FE6                     	;# 
  2671  0FE7                     	;# 
  2672  0FE8                     	;# 
  2673  0FE9                     	;# 
  2674  0FEA                     	;# 
  2675  0FEB                     	;# 
  2676  0FED                     	;# 
  2677  0FEE                     	;# 
  2678  0FEF                     	;# 
  2679  0000                     	;# 
  2680  0001                     	;# 
  2681  0002                     	;# 
  2682  0003                     	;# 
  2683  0004                     	;# 
  2684  0005                     	;# 
  2685  0006                     	;# 
  2686  0007                     	;# 
  2687  0008                     	;# 
  2688  0009                     	;# 
  2689  000A                     	;# 
  2690  000B                     	;# 
  2691  000C                     	;# 
  2692  000D                     	;# 
  2693  000E                     	;# 
  2694  0011                     	;# 
  2695  0012                     	;# 
  2696  0013                     	;# 
  2697  0015                     	;# 
  2698  0016                     	;# 
  2699  0016                     	;# 
  2700  0017                     	;# 
  2701  0018                     	;# 
  2702  0019                     	;# 
  2703  001A                     	;# 
  2704  001B                     	;# 
  2705  001C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  0091                     	;# 
  2710  0092                     	;# 
  2711  0093                     	;# 
  2712  0095                     	;# 
  2713  0096                     	;# 
  2714  0097                     	;# 
  2715  0099                     	;# 
  2716  009A                     	;# 
  2717  009B                     	;# 
  2718  009B                     	;# 
  2719  009C                     	;# 
  2720  009D                     	;# 
  2721  009E                     	;# 
  2722  009F                     	;# 
  2723  010C                     	;# 
  2724  010D                     	;# 
  2725  010E                     	;# 
  2726  0111                     	;# 
  2727  0112                     	;# 
  2728  0113                     	;# 
  2729  0114                     	;# 
  2730  0115                     	;# 
  2731  0116                     	;# 
  2732  0117                     	;# 
  2733  0118                     	;# 
  2734  0119                     	;# 
  2735  011D                     	;# 
  2736  018C                     	;# 
  2737  018D                     	;# 
  2738  018E                     	;# 
  2739  0191                     	;# 
  2740  0191                     	;# 
  2741  0192                     	;# 
  2742  0193                     	;# 
  2743  0193                     	;# 
  2744  0194                     	;# 
  2745  0195                     	;# 
  2746  0196                     	;# 
  2747  0197                     	;# 
  2748  0199                     	;# 
  2749  019A                     	;# 
  2750  019B                     	;# 
  2751  019B                     	;# 
  2752  019C                     	;# 
  2753  019D                     	;# 
  2754  019E                     	;# 
  2755  019F                     	;# 
  2756  020C                     	;# 
  2757  020D                     	;# 
  2758  0211                     	;# 
  2759  0211                     	;# 
  2760  0212                     	;# 
  2761  0212                     	;# 
  2762  0213                     	;# 
  2763  0213                     	;# 
  2764  0214                     	;# 
  2765  0214                     	;# 
  2766  0215                     	;# 
  2767  0215                     	;# 
  2768  0215                     	;# 
  2769  0216                     	;# 
  2770  0216                     	;# 
  2771  0217                     	;# 
  2772  0217                     	;# 
  2773  0391                     	;# 
  2774  0392                     	;# 
  2775  0393                     	;# 
  2776  0394                     	;# 
  2777  0395                     	;# 
  2778  0396                     	;# 
  2779  0498                     	;# 
  2780  0498                     	;# 
  2781  0499                     	;# 
  2782  049A                     	;# 
  2783  049B                     	;# 
  2784  049B                     	;# 
  2785  049C                     	;# 
  2786  049D                     	;# 
  2787  049E                     	;# 
  2788  049F                     	;# 
  2789  0611                     	;# 
  2790  0612                     	;# 
  2791  0613                     	;# 
  2792  0613                     	;# 
  2793  0614                     	;# 
  2794  0615                     	;# 
  2795  0616                     	;# 
  2796  0616                     	;# 
  2797  0617                     	;# 
  2798  0618                     	;# 
  2799  0619                     	;# 
  2800  0619                     	;# 
  2801  061A                     	;# 
  2802  061B                     	;# 
  2803  061C                     	;# 
  2804  061C                     	;# 
  2805  0691                     	;# 
  2806  0692                     	;# 
  2807  0693                     	;# 
  2808  0694                     	;# 
  2809  0695                     	;# 
  2810  0F0F                     	;# 
  2811  0F10                     	;# 
  2812  0F11                     	;# 
  2813  0F12                     	;# 
  2814  0F13                     	;# 
  2815  0F14                     	;# 
  2816  0F15                     	;# 
  2817  0F16                     	;# 
  2818  0F17                     	;# 
  2819  0F18                     	;# 
  2820  0F19                     	;# 
  2821  0F1A                     	;# 
  2822  0F1B                     	;# 
  2823  0F1C                     	;# 
  2824  0F1D                     	;# 
  2825  0F1E                     	;# 
  2826  0F1F                     	;# 
  2827  0F20                     	;# 
  2828  0F21                     	;# 
  2829  0F22                     	;# 
  2830  0F23                     	;# 
  2831  0F24                     	;# 
  2832  0F25                     	;# 
  2833  0F26                     	;# 
  2834  0F27                     	;# 
  2835  0F28                     	;# 
  2836  0F29                     	;# 
  2837  0F2A                     	;# 
  2838  0F2B                     	;# 
  2839  0F2C                     	;# 
  2840  0F2D                     	;# 
  2841  0F2E                     	;# 
  2842  0F2F                     	;# 
  2843  0F8C                     	;# 
  2844  0F8D                     	;# 
  2845  0F91                     	;# 
  2846  0F95                     	;# 
  2847  0F96                     	;# 
  2848  0F97                     	;# 
  2849  0F9C                     	;# 
  2850  0F9D                     	;# 
  2851  0F9E                     	;# 
  2852  0FE3                     	;# 
  2853  0FE4                     	;# 
  2854  0FE5                     	;# 
  2855  0FE6                     	;# 
  2856  0FE7                     	;# 
  2857  0FE8                     	;# 
  2858  0FE9                     	;# 
  2859  0FEA                     	;# 
  2860  0FEB                     	;# 
  2861  0FED                     	;# 
  2862  0FEE                     	;# 
  2863  0FEF                     	;# 
  2864                           
  2865                           	psect	nvBANK0
  2866  003E                     __pnvBANK0:	
  2867  003E                     _TMR2_InterruptHandler:	
  2868  003E                     	ds	2
  2869  0040                     _timer0ReloadVal:	
  2870  0040                     	ds	1
  2871  000E                     _PORTCbits	set	14
  2872  000B                     _INTCON	set	11
  2873  0015                     _TMR0	set	21
  2874  001C                     _T2CONbits	set	28
  2875  001C                     _T2CON	set	28
  2876  001A                     _TMR2	set	26
  2877  001B                     _PR2	set	27
  2878  0011                     _PIR1bits	set	17
  2879  0012                     _PIR2bits	set	18
  2880  000B                     _INTCONbits	set	11
  2881  0095                     _OPTION_REG	set	149
  2882  0095                     _OPTION_REGbits	set	149
  2883  008E                     _TRISC	set	142
  2884  008D                     _TRISB	set	141
  2885  008C                     _TRISA	set	140
  2886  0091                     _PIE1bits	set	145
  2887  0092                     _PIE2bits	set	146
  2888  0097                     _WDTCON	set	151
  2889  0099                     _OSCCON	set	153
  2890  046C                     _TRISB4	set	1132
  2891  046E                     _TRISB6	set	1134
  2892  011D                     _APFCON	set	285
  2893  010E                     _LATC	set	270
  2894  010D                     _LATB	set	269
  2895  010C                     _LATA	set	268
  2896  0116                     _BORCON	set	278
  2897  086C                     _LATB4	set	2156
  2898  086E                     _LATB6	set	2158
  2899  018C                     _ANSELA	set	396
  2900  018D                     _ANSELB	set	397
  2901  018E                     _ANSELC	set	398
  2902  0211                     _SSP1BUF	set	529
  2903  0216                     _SSP1CON2bits	set	534
  2904  0212                     _SSP1ADD	set	530
  2905  0216                     _SSP1CON2	set	534
  2906  0215                     _SSP1CON1	set	533
  2907  0214                     _SSP1STAT	set	532
  2908  020C                     _WPUA	set	524
  2909  020D                     _WPUB	set	525
  2910  0617                     _PWM3DCL	set	1559
  2911  0618                     _PWM3DCH	set	1560
  2912  0619                     _PWM3CON	set	1561
  2913  0611                     _PWM1DCL	set	1553
  2914  0612                     _PWM1DCH	set	1554
  2915  0613                     _PWM1CON	set	1555
  2916  0614                     _PWM2DCL	set	1556
  2917  0615                     _PWM2DCH	set	1557
  2918  0616                     _PWM2CON	set	1558
  2919                           
  2920                           ; #config settings
  2921  0000                     
  2922                           	psect	cinit
  2923  0024                     start_initialization:	
  2924  0024                     __initialization:	
  2925                           
  2926                           ; Clear objects allocated to COMMON
  2927  0024  01FB               	clrf	__pbssCOMMON& (0+127)
  2928  0025  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  2929                           
  2930                           ; Clear objects allocated to BANK0
  2931  0026  0020               	movlb	0	; select bank0
  2932  0027  01C1               	clrf	__pbssBANK0& (0+127)
  2933  0028  01C2               	clrf	(__pbssBANK0+1)& (0+127)
  2934  0029                     end_of_initialization:	
  2935                           ;End of C runtime variable initialization code
  2936                           
  2937  0029                     __end_of__initialization:	
  2938  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2939  002A  0020               	movlb	0
  2940  002B  3180  282D         	ljmp	_main	;jump to C main() function
  2941                           
  2942                           	psect	bssCOMMON
  2943  007B                     __pbssCOMMON:	
  2944  007B                     _i2c_driver_busCollisionISR:	
  2945  007B                     	ds	2
  2946                           
  2947                           	psect	bssBANK0
  2948  0041                     __pbssBANK0:	
  2949  0041                     _i2c_driver_i2cISR:	
  2950  0041                     	ds	2
  2951                           
  2952                           	psect	cstackCOMMON
  2953  0070                     __pcstackCOMMON:	
  2954  0070                     ?_PIN_MANAGER_Initialize:	
  2955  0070                     ?_OSCILLATOR_Initialize:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_WDT_Initialize:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_PWM1_Initialize:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_PWM2_Initialize:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_PWM3_Initialize:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_TMR2_Initialize:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_TMR0_Initialize:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_TMR2_ISR:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ??_TMR2_ISR:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ?_TMR2_DefaultInterruptHandler:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ??_TMR2_DefaultInterruptHandler:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ?_initI2C:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?_initRW1063:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ?_writeInst:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?_initRTC:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     ?_readSec:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0070                     ?_readMin:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006  0070                     ?_readHr:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009  0070                     ?_convertFromBcd:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0070                     ?_FSM:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0070                     ?_printReglageH:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0070                     ?_incrMin:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021  0070                     ?_incrHeure:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024  0070                     ?_waitI2C:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027  0070                     ?_SYSTEM_Initialize:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0070                     ?_INTERRUPT_InterruptManager:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0070                     ??_INTERRUPT_InterruptManager:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0070                     ?_main:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0070                     ?_startI2C:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0070                     ?_stopI2C:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0070                     ?_sendI2C:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0070                     ?_readI2C:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0070                     ?_re_startI2C:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054  0070                     ?_sendNoAckI2C:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057  0070                     ?_changeMin:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060  0070                     ?_changeHeure:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063                           
  3064                           ; 1 bytes @ 0x0
  3065  0070                     	ds	1
  3066  0071                     ??_PIN_MANAGER_Initialize:	
  3067  0071                     ??_OSCILLATOR_Initialize:	
  3068                           ; 1 bytes @ 0x1
  3069                           
  3070  0071                     ??_WDT_Initialize:	
  3071                           ; 1 bytes @ 0x1
  3072                           
  3073  0071                     ??_PWM1_Initialize:	
  3074                           ; 1 bytes @ 0x1
  3075                           
  3076  0071                     ??_PWM2_Initialize:	
  3077                           ; 1 bytes @ 0x1
  3078                           
  3079  0071                     ??_PWM3_Initialize:	
  3080                           ; 1 bytes @ 0x1
  3081                           
  3082  0071                     ??_TMR0_Initialize:	
  3083                           ; 1 bytes @ 0x1
  3084                           
  3085  0071                     ?_TMR2_SetInterruptHandler:	
  3086                           ; 1 bytes @ 0x1
  3087                           
  3088  0071                     ??_initI2C:	
  3089                           ; 1 bytes @ 0x1
  3090                           
  3091  0071                     ?_bitExtracted:	
  3092                           ; 1 bytes @ 0x1
  3093                           
  3094  0071                     ??_FSM:	
  3095                           ; 1 bytes @ 0x1
  3096                           
  3097  0071                     ??_waitI2C:	
  3098                           ; 1 bytes @ 0x1
  3099                           
  3100  0071                     ?_PWM2_LoadDutyValue:	
  3101                           ; 1 bytes @ 0x1
  3102                           
  3103  0071                     ??_startI2C:	
  3104                           ; 1 bytes @ 0x1
  3105                           
  3106  0071                     ??_stopI2C:	
  3107                           ; 1 bytes @ 0x1
  3108                           
  3109  0071                     ??_sendI2C:	
  3110                           ; 1 bytes @ 0x1
  3111                           
  3112  0071                     ??_readI2C:	
  3113                           ; 1 bytes @ 0x1
  3114                           
  3115  0071                     ??_re_startI2C:	
  3116                           ; 1 bytes @ 0x1
  3117                           
  3118  0071                     ??_sendNoAckI2C:	
  3119                           ; 1 bytes @ 0x1
  3120                           
  3121  0071                     ?___bmul:	
  3122                           ; 1 bytes @ 0x1
  3123                           
  3124  0071                     ?___awdiv:	
  3125                           ; 1 bytes @ 0x1
  3126                           
  3127  0071                     sendI2C@data:	
  3128                           ; 2 bytes @ 0x1
  3129                           
  3130  0071                     bitExtracted@k:	
  3131                           ; 1 bytes @ 0x1
  3132                           
  3133  0071                     FSM@IN:	
  3134                           ; 1 bytes @ 0x1
  3135                           
  3136  0071                     ___bmul@multiplicand:	
  3137                           ; 1 bytes @ 0x1
  3138                           
  3139  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
  3140                           ; 1 bytes @ 0x1
  3141                           
  3142  0071                     PWM2_LoadDutyValue@dutyValue:	
  3143                           ; 2 bytes @ 0x1
  3144                           
  3145  0071                     ___awdiv@divisor:	
  3146                           ; 2 bytes @ 0x1
  3147                           
  3148                           
  3149                           ; 2 bytes @ 0x1
  3150  0071                     	ds	1
  3151  0072                     ??_writeInst:	
  3152  0072                     ??_initRTC:	
  3153                           ; 1 bytes @ 0x2
  3154                           
  3155  0072                     ??_changeMin:	
  3156                           ; 1 bytes @ 0x2
  3157                           
  3158  0072                     ??_changeHeure:	
  3159                           ; 1 bytes @ 0x2
  3160                           
  3161  0072                     ??___bmul:	
  3162                           ; 1 bytes @ 0x2
  3163                           
  3164  0072                     readI2C@temp:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167  0072                     writeInst@Inst:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170  0072                     changeMin@minute:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173  0072                     changeHeure@heure:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176  0072                     bitExtracted@p:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179  0072                     initI2C@i:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182                           
  3183                           ; 2 bytes @ 0x2
  3184  0072                     	ds	1
  3185  0073                     ??_TMR2_Initialize:	
  3186  0073                     ??_TMR2_SetInterruptHandler:	
  3187                           ; 1 bytes @ 0x3
  3188                           
  3189  0073                     ??_initRW1063:	
  3190                           ; 1 bytes @ 0x3
  3191                           
  3192  0073                     ??_readSec:	
  3193                           ; 1 bytes @ 0x3
  3194                           
  3195  0073                     ??_readMin:	
  3196                           ; 1 bytes @ 0x3
  3197                           
  3198  0073                     ??_readHr:	
  3199                           ; 1 bytes @ 0x3
  3200                           
  3201  0073                     ??_bitExtracted:	
  3202                           ; 1 bytes @ 0x3
  3203                           
  3204  0073                     ?_writeLCD:	
  3205                           ; 1 bytes @ 0x3
  3206                           
  3207  0073                     ??_SYSTEM_Initialize:	
  3208                           ; 1 bytes @ 0x3
  3209                           
  3210  0073                     ??_PWM2_LoadDutyValue:	
  3211                           ; 1 bytes @ 0x3
  3212                           
  3213  0073                     writeLCD@adress:	
  3214                           ; 1 bytes @ 0x3
  3215                           
  3216  0073                     ___bmul@product:	
  3217                           ; 1 bytes @ 0x3
  3218                           
  3219  0073                     ___awdiv@dividend:	
  3220                           ; 1 bytes @ 0x3
  3221                           
  3222                           
  3223                           ; 2 bytes @ 0x3
  3224  0073                     	ds	1
  3225  0074                     writeLCD@ligne:	
  3226  0074                     readSec@second:	
  3227                           ; 1 bytes @ 0x4
  3228                           
  3229  0074                     readMin@minute:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232  0074                     readHr@heure:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0074                     ___bmul@multiplier:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x4
  3240  0074                     	ds	1
  3241  0075                     ??_convertFromBcd:	
  3242  0075                     ??_writeLCD:	
  3243                           ; 1 bytes @ 0x5
  3244                           
  3245  0075                     ??___awdiv:	
  3246                           ; 1 bytes @ 0x5
  3247                           
  3248  0075                     bitExtracted@number:	
  3249                           ; 1 bytes @ 0x5
  3250                           
  3251                           
  3252                           ; 1 bytes @ 0x5
  3253  0075                     	ds	1
  3254  0076                     ??_incrMin:	
  3255  0076                     ??_incrHeure:	
  3256                           ; 1 bytes @ 0x6
  3257                           
  3258  0076                     writeLCD@data:	
  3259                           ; 1 bytes @ 0x6
  3260                           
  3261  0076                     ___awdiv@counter:	
  3262                           ; 1 bytes @ 0x6
  3263                           
  3264                           
  3265                           ; 1 bytes @ 0x6
  3266  0076                     	ds	1
  3267  0077                     writeLCD@i:	
  3268  0077                     convertFromBcd@byteMSB:	
  3269                           ; 1 bytes @ 0x7
  3270                           
  3271  0077                     ___awdiv@sign:	
  3272                           ; 1 bytes @ 0x7
  3273                           
  3274                           
  3275                           ; 1 bytes @ 0x7
  3276  0077                     	ds	1
  3277  0078                     ??_printReglageH:	
  3278  0078                     convertFromBcd@byteLSB:	
  3279                           ; 1 bytes @ 0x8
  3280                           
  3281  0078                     ___awdiv@quotient:	
  3282                           ; 1 bytes @ 0x8
  3283                           
  3284                           
  3285                           ; 2 bytes @ 0x8
  3286  0078                     	ds	1
  3287  0079                     convertFromBcd@byteBCD:	
  3288                           
  3289                           ; 1 bytes @ 0x9
  3290  0079                     	ds	2
  3291                           
  3292                           	psect	cstackBANK0
  3293  0020                     __pcstackBANK0:	
  3294  0020                     ?_PWM1_LoadDutyValue:	
  3295  0020                     ?_PWM3_LoadDutyValue:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  0020                     printReglageH@dizaineM:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301  0020                     incrMin@dizaineM:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304  0020                     incrHeure@dizaineH:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  0020                     PWM1_LoadDutyValue@dutyValue:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  0020                     PWM3_LoadDutyValue@dutyValue:	
  3311                           ; 2 bytes @ 0x0
  3312                           
  3313                           
  3314                           ; 2 bytes @ 0x0
  3315  0020                     	ds	1
  3316  0021                     printReglageH@uniteM:	
  3317  0021                     incrMin@uniteM:	
  3318                           ; 1 bytes @ 0x1
  3319                           
  3320  0021                     incrHeure@uniteH:	
  3321                           ; 1 bytes @ 0x1
  3322                           
  3323                           
  3324                           ; 1 bytes @ 0x1
  3325  0021                     	ds	1
  3326  0022                     ??_PWM1_LoadDutyValue:	
  3327  0022                     ??_PWM3_LoadDutyValue:	
  3328                           ; 1 bytes @ 0x2
  3329                           
  3330  0022                     printReglageH@dizaineH:	
  3331                           ; 1 bytes @ 0x2
  3332                           
  3333  0022                     incrMin@minute:	
  3334                           ; 1 bytes @ 0x2
  3335                           
  3336  0022                     incrHeure@heure:	
  3337                           ; 1 bytes @ 0x2
  3338                           
  3339                           
  3340                           ; 1 bytes @ 0x2
  3341  0022                     	ds	1
  3342  0023                     printReglageH@uniteH:	
  3343                           
  3344                           ; 1 bytes @ 0x3
  3345  0023                     	ds	1
  3346  0024                     printReglageH@minute:	
  3347                           
  3348                           ; 1 bytes @ 0x4
  3349  0024                     	ds	1
  3350  0025                     printReglageH@heure:	
  3351                           
  3352                           ; 1 bytes @ 0x5
  3353  0025                     	ds	1
  3354  0026                     ??_main:	
  3355                           
  3356                           ; 1 bytes @ 0x6
  3357  0026                     	ds	3
  3358  0029                     main@PWM1:	
  3359                           
  3360                           ; 2 bytes @ 0x9
  3361  0029                     	ds	2
  3362  002B                     main@PWM2:	
  3363                           
  3364                           ; 2 bytes @ 0xB
  3365  002B                     	ds	2
  3366  002D                     main@PWM3:	
  3367                           
  3368                           ; 2 bytes @ 0xD
  3369  002D                     	ds	2
  3370  002F                     main@bufferS:	
  3371                           
  3372                           ; 1 bytes @ 0xF
  3373  002F                     	ds	1
  3374  0030                     main@bufferM:	
  3375                           
  3376                           ; 1 bytes @ 0x10
  3377  0030                     	ds	1
  3378  0031                     main@bufferH:	
  3379                           
  3380                           ; 1 bytes @ 0x11
  3381  0031                     	ds	1
  3382  0032                     main@uniteS:	
  3383                           
  3384                           ; 1 bytes @ 0x12
  3385  0032                     	ds	1
  3386  0033                     main@dizaineS:	
  3387                           
  3388                           ; 1 bytes @ 0x13
  3389  0033                     	ds	1
  3390  0034                     main@uniteM:	
  3391                           
  3392                           ; 1 bytes @ 0x14
  3393  0034                     	ds	1
  3394  0035                     main@dizaineM:	
  3395                           
  3396                           ; 1 bytes @ 0x15
  3397  0035                     	ds	1
  3398  0036                     main@uniteH:	
  3399                           
  3400                           ; 1 bytes @ 0x16
  3401  0036                     	ds	1
  3402  0037                     main@dizaineH:	
  3403                           
  3404                           ; 1 bytes @ 0x17
  3405  0037                     	ds	1
  3406  0038                     main@menu:	
  3407                           
  3408                           ; 1 bytes @ 0x18
  3409  0038                     	ds	1
  3410  0039                     main@select:	
  3411                           
  3412                           ; 1 bytes @ 0x19
  3413  0039                     	ds	1
  3414  003A                     main@i:	
  3415                           
  3416                           ; 1 bytes @ 0x1A
  3417  003A                     	ds	1
  3418  003B                     main@minute:	
  3419                           
  3420                           ; 1 bytes @ 0x1B
  3421  003B                     	ds	1
  3422  003C                     main@heure:	
  3423                           
  3424                           ; 1 bytes @ 0x1C
  3425  003C                     	ds	1
  3426  003D                     main@second:	
  3427                           
  3428                           ; 1 bytes @ 0x1D
  3429  003D                     	ds	1
  3430                           
  3431                           	psect	maintext
  3432  002D                     __pmaintext:	
  3433 ;;
  3434 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3435 ;;
  3436 ;; *************** function _main *****************
  3437 ;; Defined at:
  3438 ;;		line 5 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  PWM3            2   13[BANK0 ] unsigned int 
  3443 ;;  PWM2            2   11[BANK0 ] unsigned int 
  3444 ;;  PWM1            2    9[BANK0 ] unsigned int 
  3445 ;;  second          1   29[BANK0 ] unsigned char 
  3446 ;;  heure           1   28[BANK0 ] unsigned char 
  3447 ;;  minute          1   27[BANK0 ] unsigned char 
  3448 ;;  i               1   26[BANK0 ] unsigned char 
  3449 ;;  select          1   25[BANK0 ] unsigned char 
  3450 ;;  menu            1   24[BANK0 ] unsigned char 
  3451 ;;  dizaineH        1   23[BANK0 ] unsigned char 
  3452 ;;  uniteH          1   22[BANK0 ] unsigned char 
  3453 ;;  dizaineM        1   21[BANK0 ] unsigned char 
  3454 ;;  uniteM          1   20[BANK0 ] unsigned char 
  3455 ;;  dizaineS        1   19[BANK0 ] unsigned char 
  3456 ;;  uniteS          1   18[BANK0 ] unsigned char 
  3457 ;;  bufferH         1   17[BANK0 ] unsigned char 
  3458 ;;  bufferM         1   16[BANK0 ] unsigned char 
  3459 ;;  bufferS         1   15[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : B1F/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3469 ;;      Params:         0       0       0       0       0       0       0       0
  3470 ;;      Locals:         0      21       0       0       0       0       0       0
  3471 ;;      Temps:          0       3       0       0       0       0       0       0
  3472 ;;      Totals:         0      24       0       0       0       0       0       0
  3473 ;;Total ram usage:       24 bytes
  3474 ;; Hardware stack levels required when called:    8
  3475 ;; This function calls:
  3476 ;;		_FSM
  3477 ;;		_PWM1_LoadDutyValue
  3478 ;;		_PWM2_LoadDutyValue
  3479 ;;		_PWM3_LoadDutyValue
  3480 ;;		_SYSTEM_Initialize
  3481 ;;		___awdiv
  3482 ;;		_bitExtracted
  3483 ;;		_convertFromBcd
  3484 ;;		_incrHeure
  3485 ;;		_incrMin
  3486 ;;		_initI2C
  3487 ;;		_initRTC
  3488 ;;		_initRW1063
  3489 ;;		_printReglageH
  3490 ;;		_readHr
  3491 ;;		_readMin
  3492 ;;		_readSec
  3493 ;;		_writeInst
  3494 ;;		_writeLCD
  3495 ;; This function is called by:
  3496 ;;		Startup code after reset
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _main
  3502  002D                     _main:	
  3503                           
  3504                           ;main.c: 7: SYSTEM_Initialize();
  3505                           
  3506                           ;incstack = 0
  3507                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3508  002D  3186  260C  3180   	fcall	_SYSTEM_Initialize
  3509                           
  3510                           ;main.c: 8: initI2C();
  3511  0030  3184  2445  3180   	fcall	_initI2C
  3512                           
  3513                           ;main.c: 9: initRW1063();
  3514  0033  3186  2696  3180   	fcall	_initRW1063
  3515                           
  3516                           ;main.c: 10: (INTCONbits.GIE = 0);
  3517  0036  138B               	bcf	11,7	;volatile
  3518                           
  3519                           ;main.c: 11: (INTCONbits.PEIE = 0);
  3520  0037  130B               	bcf	11,6	;volatile
  3521                           
  3522                           ;main.c: 12: uint16_t PWM1 = 0;
  3523  0038  0020               	movlb	0	; select bank0
  3524  0039  01A9               	clrf	main@PWM1
  3525  003A  01AA               	clrf	main@PWM1+1
  3526                           
  3527                           ;main.c: 13: uint16_t PWM2 = 0;
  3528  003B  01AB               	clrf	main@PWM2
  3529  003C  01AC               	clrf	main@PWM2+1
  3530                           
  3531                           ;main.c: 14: uint16_t PWM3 = 0;
  3532  003D  01AD               	clrf	main@PWM3
  3533  003E  01AE               	clrf	main@PWM3+1
  3534                           
  3535                           ;main.c: 15: writeInst(0b00000001);
  3536  003F  3001               	movlw	1
  3537  0040  3185  2550  3180   	fcall	_writeInst
  3538                           
  3539                           ;main.c: 16: _delay((unsigned long)((40)*(16000000/4000.0)));
  3540  0043  30D0               	movlw	208
  3541  0044  0020               	movlb	0	; select bank0
  3542  0045  00A6               	movwf	??_main
  3543  0046  30C9               	movlw	201
  3544  0047                     u2317:	
  3545  0047  0B89               	decfsz	9,f
  3546  0048  2847               	goto	u2317
  3547  0049  0BA6               	decfsz	??_main,f
  3548  004A  2847               	goto	u2317
  3549  004B  3200               	nop2
  3550                           
  3551                           ;main.c: 17: initRTC();
  3552  004C  3183  23A3  3180   	fcall	_initRTC
  3553                           
  3554                           ;main.c: 18: uint8_t i=0;
  3555  004F  0020               	movlb	0	; select bank0
  3556  0050  01BA               	clrf	main@i
  3557                           
  3558                           ;main.c: 19: uint8_t second = 0;
  3559  0051  01BD               	clrf	main@second
  3560                           
  3561                           ;main.c: 20: uint8_t minute = 0;
  3562  0052  01BB               	clrf	main@minute
  3563                           
  3564                           ;main.c: 21: uint8_t heure = 0;
  3565  0053  01BC               	clrf	main@heure
  3566                           
  3567                           ;main.c: 22: uint8_t uniteS = 0;
  3568  0054  01B2               	clrf	main@uniteS
  3569                           
  3570                           ;main.c: 23: uint8_t dizaineS = 0;
  3571  0055  01B3               	clrf	main@dizaineS
  3572                           
  3573                           ;main.c: 24: uint8_t uniteM = 0;
  3574  0056  01B4               	clrf	main@uniteM
  3575                           
  3576                           ;main.c: 25: uint8_t dizaineM = 0;
  3577  0057  01B5               	clrf	main@dizaineM
  3578                           
  3579                           ;main.c: 26: uint8_t uniteH = 0;
  3580  0058  01B6               	clrf	main@uniteH
  3581                           
  3582                           ;main.c: 27: uint8_t dizaineH = 0;
  3583  0059  01B7               	clrf	main@dizaineH
  3584                           
  3585                           ;main.c: 28: uint8_t bufferS = 0;
  3586  005A  01AF               	clrf	main@bufferS
  3587                           
  3588                           ;main.c: 29: uint8_t bufferM = 0;
  3589  005B  01B0               	clrf	main@bufferM
  3590                           
  3591                           ;main.c: 30: uint8_t bufferH = 0;
  3592  005C  01B1               	clrf	main@bufferH
  3593                           
  3594                           ;main.c: 31: uint8_t menu = 0;
  3595  005D  01B8               	clrf	main@menu
  3596                           
  3597                           ;main.c: 32: uint8_t select = 0;
  3598  005E  01B9               	clrf	main@select
  3599  005F                     l2755:	
  3600                           ;main.c: 56: while (1) {
  3601                           
  3602                           ;main.c: 33: while (1) {
  3603                           
  3604                           
  3605                           ;main.c: 58: second = readSec();
  3606  005F  3184  24B4  3180   	fcall	_readSec
  3607  0062  0020               	movlb	0	; select bank0
  3608  0063  00A6               	movwf	??_main
  3609  0064  0826               	movf	??_main,w
  3610  0065  00BD               	movwf	main@second
  3611                           
  3612                           ;main.c: 59: minute = readMin();
  3613  0066  3184  24DD  3180   	fcall	_readMin
  3614  0069  0020               	movlb	0	; select bank0
  3615  006A  00A6               	movwf	??_main
  3616  006B  0826               	movf	??_main,w
  3617  006C  00BB               	movwf	main@minute
  3618                           
  3619                           ;main.c: 60: heure = readHr();
  3620  006D  3185  2506  3180   	fcall	_readHr
  3621  0070  0020               	movlb	0	; select bank0
  3622  0071  00A6               	movwf	??_main
  3623  0072  0826               	movf	??_main,w
  3624  0073  00BC               	movwf	main@heure
  3625                           
  3626                           ;main.c: 62: second = second - 0b10000000;
  3627  0074  083D               	movf	main@second,w
  3628  0075  3E80               	addlw	128
  3629  0076  00A6               	movwf	??_main
  3630  0077  0826               	movf	??_main,w
  3631  0078  00BD               	movwf	main@second
  3632                           
  3633                           ;main.c: 64: uniteS = bitExtracted(second, 4, 1);
  3634  0079  3004               	movlw	4
  3635  007A  00A6               	movwf	??_main
  3636  007B  0826               	movf	??_main,w
  3637  007C  00F1               	movwf	bitExtracted@k
  3638  007D  01F2               	clrf	bitExtracted@p
  3639  007E  0AF2               	incf	bitExtracted@p,f
  3640  007F  083D               	movf	main@second,w
  3641  0080  3186  263A  3180   	fcall	_bitExtracted
  3642  0083  0020               	movlb	0	; select bank0
  3643  0084  00A7               	movwf	??_main+1
  3644  0085  0827               	movf	??_main+1,w
  3645  0086  00B2               	movwf	main@uniteS
  3646                           
  3647                           ;main.c: 65: dizaineS = bitExtracted(second, 3, 5);
  3648  0087  3003               	movlw	3
  3649  0088  00A6               	movwf	??_main
  3650  0089  0826               	movf	??_main,w
  3651  008A  00F1               	movwf	bitExtracted@k
  3652  008B  3005               	movlw	5
  3653  008C  00A7               	movwf	??_main+1
  3654  008D  0827               	movf	??_main+1,w
  3655  008E  00F2               	movwf	bitExtracted@p
  3656  008F  083D               	movf	main@second,w
  3657  0090  3186  263A  3180   	fcall	_bitExtracted
  3658  0093  0020               	movlb	0	; select bank0
  3659  0094  00A8               	movwf	??_main+2
  3660  0095  0828               	movf	??_main+2,w
  3661  0096  00B3               	movwf	main@dizaineS
  3662                           
  3663                           ;main.c: 67: uniteM = bitExtracted(minute, 4, 1);
  3664  0097  3004               	movlw	4
  3665  0098  00A6               	movwf	??_main
  3666  0099  0826               	movf	??_main,w
  3667  009A  00F1               	movwf	bitExtracted@k
  3668  009B  01F2               	clrf	bitExtracted@p
  3669  009C  0AF2               	incf	bitExtracted@p,f
  3670  009D  083B               	movf	main@minute,w
  3671  009E  3186  263A  3180   	fcall	_bitExtracted
  3672  00A1  0020               	movlb	0	; select bank0
  3673  00A2  00A7               	movwf	??_main+1
  3674  00A3  0827               	movf	??_main+1,w
  3675  00A4  00B4               	movwf	main@uniteM
  3676                           
  3677                           ;main.c: 68: dizaineM = bitExtracted(minute, 3, 5);
  3678  00A5  3003               	movlw	3
  3679  00A6  00A6               	movwf	??_main
  3680  00A7  0826               	movf	??_main,w
  3681  00A8  00F1               	movwf	bitExtracted@k
  3682  00A9  3005               	movlw	5
  3683  00AA  00A7               	movwf	??_main+1
  3684  00AB  0827               	movf	??_main+1,w
  3685  00AC  00F2               	movwf	bitExtracted@p
  3686  00AD  083B               	movf	main@minute,w
  3687  00AE  3186  263A  3180   	fcall	_bitExtracted
  3688  00B1  0020               	movlb	0	; select bank0
  3689  00B2  00A8               	movwf	??_main+2
  3690  00B3  0828               	movf	??_main+2,w
  3691  00B4  00B5               	movwf	main@dizaineM
  3692                           
  3693                           ;main.c: 70: uniteH = bitExtracted(heure, 4, 1);
  3694  00B5  3004               	movlw	4
  3695  00B6  00A6               	movwf	??_main
  3696  00B7  0826               	movf	??_main,w
  3697  00B8  00F1               	movwf	bitExtracted@k
  3698  00B9  01F2               	clrf	bitExtracted@p
  3699  00BA  0AF2               	incf	bitExtracted@p,f
  3700  00BB  083C               	movf	main@heure,w
  3701  00BC  3186  263A  3180   	fcall	_bitExtracted
  3702  00BF  0020               	movlb	0	; select bank0
  3703  00C0  00A7               	movwf	??_main+1
  3704  00C1  0827               	movf	??_main+1,w
  3705  00C2  00B6               	movwf	main@uniteH
  3706                           
  3707                           ;main.c: 71: dizaineH = bitExtracted(heure, 2, 5);
  3708  00C3  3002               	movlw	2
  3709  00C4  00A6               	movwf	??_main
  3710  00C5  0826               	movf	??_main,w
  3711  00C6  00F1               	movwf	bitExtracted@k
  3712  00C7  3005               	movlw	5
  3713  00C8  00A7               	movwf	??_main+1
  3714  00C9  0827               	movf	??_main+1,w
  3715  00CA  00F2               	movwf	bitExtracted@p
  3716  00CB  083C               	movf	main@heure,w
  3717  00CC  3186  263A  3180   	fcall	_bitExtracted
  3718  00CF  0020               	movlb	0	; select bank0
  3719  00D0  00A8               	movwf	??_main+2
  3720  00D1  0828               	movf	??_main+2,w
  3721  00D2  00B7               	movwf	main@dizaineH
  3722                           
  3723                           ;main.c: 73: bufferS = convertFromBcd(second);
  3724  00D3  083D               	movf	main@second,w
  3725  00D4  3185  25A4  3180   	fcall	_convertFromBcd
  3726  00D7  0020               	movlb	0	; select bank0
  3727  00D8  00A6               	movwf	??_main
  3728  00D9  0826               	movf	??_main,w
  3729  00DA  00AF               	movwf	main@bufferS
  3730                           
  3731                           ;main.c: 74: bufferM = convertFromBcd(minute);
  3732  00DB  083B               	movf	main@minute,w
  3733  00DC  3185  25A4  3180   	fcall	_convertFromBcd
  3734  00DF  0020               	movlb	0	; select bank0
  3735  00E0  00A6               	movwf	??_main
  3736  00E1  0826               	movf	??_main,w
  3737  00E2  00B0               	movwf	main@bufferM
  3738                           
  3739                           ;main.c: 75: bufferH = convertFromBcd(heure);
  3740  00E3  083C               	movf	main@heure,w
  3741  00E4  3185  25A4  3180   	fcall	_convertFromBcd
  3742  00E7  0020               	movlb	0	; select bank0
  3743  00E8  00A6               	movwf	??_main
  3744  00E9  0826               	movf	??_main,w
  3745  00EA  00B1               	movwf	main@bufferH
  3746                           
  3747                           ;main.c: 77: PWM1_LoadDutyValue(300 + i / 4);
  3748  00EB  3004               	movlw	4
  3749  00EC  00F1               	movwf	___awdiv@divisor
  3750  00ED  3000               	movlw	0
  3751  00EE  00F2               	movwf	___awdiv@divisor+1
  3752  00EF  083A               	movf	main@i,w
  3753  00F0  00A6               	movwf	??_main
  3754  00F1  01A7               	clrf	??_main+1
  3755  00F2  0826               	movf	??_main,w
  3756  00F3  00F3               	movwf	___awdiv@dividend
  3757  00F4  0827               	movf	??_main+1,w
  3758  00F5  00F4               	movwf	___awdiv@dividend+1
  3759  00F6  3183  23F4  3180   	fcall	___awdiv
  3760  00F9  0871               	movf	?___awdiv,w
  3761  00FA  3E2C               	addlw	44
  3762  00FB  0020               	movlb	0	; select bank0
  3763  00FC  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
  3764  00FD  3001               	movlw	1
  3765  00FE  3D72               	addwfc	?___awdiv+1,w
  3766  00FF  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  3767  0100  3185  25F3  3180   	fcall	_PWM1_LoadDutyValue
  3768                           
  3769                           ;main.c: 78: PWM2_LoadDutyValue(960 - i);
  3770  0103  0020               	movlb	0	; select bank0
  3771  0104  083A               	movf	main@i,w
  3772  0105  00A6               	movwf	??_main
  3773  0106  01A7               	clrf	??_main+1
  3774  0107  09A6               	comf	??_main,f
  3775  0108  09A7               	comf	??_main+1,f
  3776  0109  0AA6               	incf	??_main,f
  3777  010A  1903               	skipnz
  3778  010B  0AA7               	incf	??_main+1,f
  3779  010C  0826               	movf	??_main,w
  3780  010D  3EC0               	addlw	192
  3781  010E  00F1               	movwf	PWM2_LoadDutyValue@dutyValue
  3782  010F  3003               	movlw	3
  3783  0110  3D27               	addwfc	??_main+1,w
  3784  0111  00F2               	movwf	PWM2_LoadDutyValue@dutyValue+1
  3785  0112  3186  2624  3180   	fcall	_PWM2_LoadDutyValue
  3786                           
  3787                           ;main.c: 79: PWM3_LoadDutyValue(10 + i / 10);
  3788  0115  300A               	movlw	10
  3789  0116  00F1               	movwf	___awdiv@divisor
  3790  0117  3000               	movlw	0
  3791  0118  00F2               	movwf	___awdiv@divisor+1
  3792  0119  0020               	movlb	0	; select bank0
  3793  011A  083A               	movf	main@i,w
  3794  011B  00A6               	movwf	??_main
  3795  011C  01A7               	clrf	??_main+1
  3796  011D  0826               	movf	??_main,w
  3797  011E  00F3               	movwf	___awdiv@dividend
  3798  011F  0827               	movf	??_main+1,w
  3799  0120  00F4               	movwf	___awdiv@dividend+1
  3800  0121  3183  23F4  3180   	fcall	___awdiv
  3801  0124  0871               	movf	?___awdiv,w
  3802  0125  3E0A               	addlw	10
  3803  0126  0020               	movlb	0	; select bank0
  3804  0127  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  3805  0128  3000               	movlw	0
  3806  0129  3D72               	addwfc	?___awdiv+1,w
  3807  012A  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3808  012B  3185  25DA  3180   	fcall	_PWM3_LoadDutyValue
  3809                           
  3810                           ;main.c: 80: if (menu == 0) {
  3811  012E  0020               	movlb	0	; select bank0
  3812  012F  0838               	movf	main@menu,w
  3813  0130  1D03               	btfss	3,2
  3814  0131  2996               	goto	l2795
  3815                           
  3816                           ;main.c: 81: writeLCD(FSM(dizaineS), 6, 1);
  3817  0132  3006               	movlw	6
  3818  0133  00A6               	movwf	??_main
  3819  0134  0826               	movf	??_main,w
  3820  0135  00F3               	movwf	writeLCD@adress
  3821  0136  01F4               	clrf	writeLCD@ligne
  3822  0137  0AF4               	incf	writeLCD@ligne,f
  3823  0138  0833               	movf	main@dizaineS,w
  3824  0139  3185  252F  3180   	fcall	_FSM
  3825  013C  3184  247E  3180   	fcall	_writeLCD
  3826                           
  3827                           ;main.c: 82: writeLCD(FSM(uniteS), 7, 1);
  3828  013F  3007               	movlw	7
  3829  0140  0020               	movlb	0	; select bank0
  3830  0141  00A6               	movwf	??_main
  3831  0142  0826               	movf	??_main,w
  3832  0143  00F3               	movwf	writeLCD@adress
  3833  0144  01F4               	clrf	writeLCD@ligne
  3834  0145  0AF4               	incf	writeLCD@ligne,f
  3835  0146  0832               	movf	main@uniteS,w
  3836  0147  3185  252F  3180   	fcall	_FSM
  3837  014A  3184  247E  3180   	fcall	_writeLCD
  3838                           
  3839                           ;main.c: 83: writeLCD(FSM(dizaineM), 3, 1);
  3840  014D  3003               	movlw	3
  3841  014E  0020               	movlb	0	; select bank0
  3842  014F  00A6               	movwf	??_main
  3843  0150  0826               	movf	??_main,w
  3844  0151  00F3               	movwf	writeLCD@adress
  3845  0152  01F4               	clrf	writeLCD@ligne
  3846  0153  0AF4               	incf	writeLCD@ligne,f
  3847  0154  0835               	movf	main@dizaineM,w
  3848  0155  3185  252F  3180   	fcall	_FSM
  3849  0158  3184  247E  3180   	fcall	_writeLCD
  3850                           
  3851                           ;main.c: 84: writeLCD(FSM(uniteM), 4, 1);
  3852  015B  3004               	movlw	4
  3853  015C  0020               	movlb	0	; select bank0
  3854  015D  00A6               	movwf	??_main
  3855  015E  0826               	movf	??_main,w
  3856  015F  00F3               	movwf	writeLCD@adress
  3857  0160  01F4               	clrf	writeLCD@ligne
  3858  0161  0AF4               	incf	writeLCD@ligne,f
  3859  0162  0834               	movf	main@uniteM,w
  3860  0163  3185  252F  3180   	fcall	_FSM
  3861  0166  3184  247E  3180   	fcall	_writeLCD
  3862                           
  3863                           ;main.c: 85: writeLCD(FSM(dizaineH), 0, 1);
  3864  0169  01F3               	clrf	writeLCD@adress
  3865  016A  01F4               	clrf	writeLCD@ligne
  3866  016B  0AF4               	incf	writeLCD@ligne,f
  3867  016C  0020               	movlb	0	; select bank0
  3868  016D  0837               	movf	main@dizaineH,w
  3869  016E  3185  252F  3180   	fcall	_FSM
  3870  0171  3184  247E  3180   	fcall	_writeLCD
  3871                           
  3872                           ;main.c: 86: writeLCD(FSM(uniteH), 1, 1);
  3873  0174  01F3               	clrf	writeLCD@adress
  3874  0175  0AF3               	incf	writeLCD@adress,f
  3875  0176  01F4               	clrf	writeLCD@ligne
  3876  0177  0AF4               	incf	writeLCD@ligne,f
  3877  0178  0020               	movlb	0	; select bank0
  3878  0179  0836               	movf	main@uniteH,w
  3879  017A  3185  252F  3180   	fcall	_FSM
  3880  017D  3184  247E  3180   	fcall	_writeLCD
  3881                           
  3882                           ;main.c: 87: writeLCD(':', 2, 1);
  3883  0180  3002               	movlw	2
  3884  0181  0020               	movlb	0	; select bank0
  3885  0182  00A6               	movwf	??_main
  3886  0183  0826               	movf	??_main,w
  3887  0184  00F3               	movwf	writeLCD@adress
  3888  0185  01F4               	clrf	writeLCD@ligne
  3889  0186  0AF4               	incf	writeLCD@ligne,f
  3890  0187  303A               	movlw	58
  3891  0188  3184  247E  3180   	fcall	_writeLCD
  3892                           
  3893                           ;main.c: 88: writeLCD(':', 5, 1);
  3894  018B  3005               	movlw	5
  3895  018C  0020               	movlb	0	; select bank0
  3896  018D  00A6               	movwf	??_main
  3897  018E  0826               	movf	??_main,w
  3898  018F  00F3               	movwf	writeLCD@adress
  3899  0190  01F4               	clrf	writeLCD@ligne
  3900  0191  0AF4               	incf	writeLCD@ligne,f
  3901  0192  303A               	movlw	58
  3902  0193  3184  247E  3180   	fcall	_writeLCD
  3903  0196                     l2795:	
  3904                           
  3905                           ;main.c: 89: }
  3906                           ;main.c: 90: if (PORTCbits.RC0 == 0) {
  3907  0196  0020               	movlb	0	; select bank0
  3908  0197  180E               	btfsc	14,0	;volatile
  3909  0198  299D               	goto	l2799
  3910                           
  3911                           ;main.c: 91: menu = 1;
  3912  0199  01B8               	clrf	main@menu
  3913  019A  0AB8               	incf	main@menu,f
  3914  019B                     l282:	
  3915                           ;main.c: 92: while (PORTCbits.RC0 == 0);
  3916                           
  3917  019B  1C0E               	btfss	14,0	;volatile
  3918  019C  299B               	goto	l282
  3919  019D                     l2799:	
  3920                           
  3921                           ;main.c: 93: }
  3922                           ;main.c: 94: if (menu == 1) {
  3923  019D  0338               	decf	main@menu,w
  3924  019E  1D03               	btfss	3,2
  3925  019F  285F               	goto	l2755
  3926                           
  3927                           ;main.c: 95: _delay((unsigned long)((100)*(16000000/4000.0)));
  3928  01A0  3003               	movlw	3
  3929  01A1  0020               	movlb	0	; select bank0
  3930  01A2  00A7               	movwf	??_main+1
  3931  01A3  3008               	movlw	8
  3932  01A4  00A6               	movwf	??_main
  3933  01A5  3077               	movlw	119
  3934  01A6                     u2327:	
  3935  01A6  0B89               	decfsz	9,f
  3936  01A7  29A6               	goto	u2327
  3937  01A8  0BA6               	decfsz	??_main,f
  3938  01A9  29A6               	goto	u2327
  3939  01AA  0BA7               	decfsz	??_main+1,f
  3940  01AB  29A6               	goto	u2327
  3941                           
  3942                           ;main.c: 96: if (PORTCbits.RC0 == 0) {
  3943  01AC  0020               	movlb	0	; select bank0
  3944  01AD  180E               	btfsc	14,0	;volatile
  3945  01AE  29C7               	goto	l286
  3946                           
  3947                           ;main.c: 97: ++select;
  3948  01AF  3001               	movlw	1
  3949  01B0  00A6               	movwf	??_main
  3950  01B1  0826               	movf	??_main,w
  3951  01B2  07B9               	addwf	main@select,f
  3952                           
  3953                           ;main.c: 98: if (select == 1) {
  3954  01B3  0339               	decf	main@select,w
  3955  01B4  1D03               	btfss	3,2
  3956  01B5  29B9               	goto	l2809
  3957                           
  3958                           ;main.c: 99: printReglageH();
  3959  01B6  3181  21D9  3180   	fcall	_printReglageH
  3960  01B9                     l2809:	
  3961                           
  3962                           ;main.c: 100: }
  3963                           ;main.c: 101: if (select == 2) {
  3964  01B9  3002               	movlw	2
  3965  01BA  0020               	movlb	0	; select bank0
  3966  01BB  0639               	xorwf	main@select,w
  3967  01BC  1D03               	btfss	3,2
  3968  01BD  29C5               	goto	l289
  3969                           
  3970                           ;main.c: 102: writeInst(0b00000001);
  3971  01BE  3001               	movlw	1
  3972  01BF  3185  2550  3180   	fcall	_writeInst
  3973                           
  3974                           ;main.c: 103: menu = 0;
  3975  01C2  0020               	movlb	0	; select bank0
  3976  01C3  01B8               	clrf	main@menu
  3977                           
  3978                           ;main.c: 104: select = 0;
  3979  01C4  01B9               	clrf	main@select
  3980  01C5                     l289:	
  3981                           ;main.c: 105: }
  3982                           ;main.c: 106: while (PORTCbits.RC0 == 0);
  3983                           
  3984  01C5  1C0E               	btfss	14,0	;volatile
  3985  01C6  29C5               	goto	l289
  3986  01C7                     l286:	
  3987                           
  3988                           ;main.c: 107: }
  3989                           ;main.c: 108: if (PORTCbits.RC1 == 0) {
  3990  01C7  188E               	btfsc	14,1	;volatile
  3991  01C8  29CF               	goto	l2821
  3992                           
  3993                           ;main.c: 109: incrMin();
  3994  01C9  3183  234B  3180   	fcall	_incrMin
  3995                           
  3996                           ;main.c: 110: printReglageH();
  3997  01CC  3181  21D9  3180   	fcall	_printReglageH
  3998  01CF                     l2821:	
  3999                           
  4000                           ;main.c: 113: }
  4001                           ;main.c: 114: if (PORTCbits.RC2 == 0) {
  4002  01CF  0020               	movlb	0	; select bank0
  4003  01D0  190E               	btfsc	14,2	;volatile
  4004  01D1  285F               	goto	l2755
  4005                           
  4006                           ;main.c: 115: incrHeure();
  4007  01D2  3182  22EB  3180   	fcall	_incrHeure
  4008                           
  4009                           ;main.c: 116: printReglageH();
  4010  01D5  3181  21D9  3180   	fcall	_printReglageH
  4011  01D8  285F               	goto	l2755
  4012  01D9                     __end_of_main:	
  4013                           
  4014                           	psect	text1
  4015  04B4                     __ptext1:	
  4016 ;; *************** function _readSec *****************
  4017 ;; Defined at:
  4018 ;;		line 58 in file "RTC.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  second          1    4[COMMON] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      unsigned char 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4032 ;;      Params:         0       0       0       0       0       0       0       0
  4033 ;;      Locals:         1       0       0       0       0       0       0       0
  4034 ;;      Temps:          1       0       0       0       0       0       0       0
  4035 ;;      Totals:         2       0       0       0       0       0       0       0
  4036 ;;Total ram usage:        2 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_re_startI2C
  4041 ;;		_readI2C
  4042 ;;		_sendI2C
  4043 ;;		_sendNoAckI2C
  4044 ;;		_startI2C
  4045 ;;		_stopI2C
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           
  4052                           ;psect for function _readSec
  4053  04B4                     _readSec:	
  4054                           
  4055                           ;RTC.c: 59: uint8_t second = 0;
  4056                           
  4057                           ;incstack = 0
  4058                           ; Regs used in _readSec: [wreg+status,2+status,0+pclath+cstack]
  4059  04B4  01F4               	clrf	readSec@second
  4060                           
  4061                           ;RTC.c: 60: startI2C();
  4062  04B5  3186  26CC  3184   	fcall	_startI2C
  4063                           
  4064                           ;RTC.c: 61: sendI2C(0b11011110);
  4065  04B8  30DE               	movlw	222
  4066  04B9  3186  26B4  3184   	fcall	_sendI2C
  4067  04BC                     l536:	
  4068                           ;RTC.c: 62: while (SSP1CON2bits.ACKSTAT == 1);
  4069                           
  4070  04BC  0024               	movlb	4	; select bank4
  4071  04BD  1B16               	btfsc	22,6	;volatile
  4072  04BE  2CBC               	goto	l536
  4073                           
  4074                           ;RTC.c: 63: sendI2C(0x00);
  4075  04BF  3000               	movlw	0
  4076  04C0  3186  26B4  3184   	fcall	_sendI2C
  4077  04C3                     l539:	
  4078                           ;RTC.c: 64: while (SSP1CON2bits.ACKSTAT == 1);
  4079                           
  4080  04C3  0024               	movlb	4	; select bank4
  4081  04C4  1B16               	btfsc	22,6	;volatile
  4082  04C5  2CC3               	goto	l539
  4083                           
  4084                           ;RTC.c: 65: re_startI2C();
  4085  04C6  3186  26D5  3184   	fcall	_re_startI2C
  4086                           
  4087                           ;RTC.c: 66: sendI2C(0b11011111);
  4088  04C9  30DF               	movlw	223
  4089  04CA  3186  26B4  3184   	fcall	_sendI2C
  4090  04CD                     l542:	
  4091                           ;RTC.c: 67: while (SSP1CON2bits.ACKSTAT == 1);
  4092                           
  4093  04CD  0024               	movlb	4	; select bank4
  4094  04CE  1B16               	btfsc	22,6	;volatile
  4095  04CF  2CCD               	goto	l542
  4096                           
  4097                           ;RTC.c: 68: second = readI2C();
  4098  04D0  3186  2663  3184   	fcall	_readI2C
  4099  04D3  00F3               	movwf	??_readSec
  4100  04D4  0873               	movf	??_readSec,w
  4101  04D5  00F4               	movwf	readSec@second
  4102                           
  4103                           ;RTC.c: 69: sendNoAckI2C();
  4104  04D6  3187  2705  3184   	fcall	_sendNoAckI2C
  4105                           
  4106                           ;RTC.c: 70: stopI2C();
  4107  04D9  3186  26DD         	fcall	_stopI2C
  4108                           
  4109                           ;RTC.c: 71: return second;
  4110  04DB  0874               	movf	readSec@second,w
  4111  04DC  0008               	return
  4112  04DD                     __end_of_readSec:	
  4113                           
  4114                           	psect	text2
  4115  01D9                     __ptext2:	
  4116 ;; *************** function _printReglageH *****************
  4117 ;; Defined at:
  4118 ;;		line 42 in file "LCD.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  heure           1    5[BANK0 ] unsigned char 
  4123 ;;  minute          1    4[BANK0 ] unsigned char 
  4124 ;;  uniteH          1    3[BANK0 ] unsigned char 
  4125 ;;  dizaineH        1    2[BANK0 ] unsigned char 
  4126 ;;  uniteM          1    1[BANK0 ] unsigned char 
  4127 ;;  dizaineM        1    0[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4137 ;;      Params:         0       0       0       0       0       0       0       0
  4138 ;;      Locals:         0       6       0       0       0       0       0       0
  4139 ;;      Temps:          3       0       0       0       0       0       0       0
  4140 ;;      Totals:         3       6       0       0       0       0       0       0
  4141 ;;Total ram usage:        9 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    7
  4144 ;; This function calls:
  4145 ;;		_FSM
  4146 ;;		_bitExtracted
  4147 ;;		_readHr
  4148 ;;		_readMin
  4149 ;;		_writeInst
  4150 ;;		_writeLCD
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           
  4157                           ;psect for function _printReglageH
  4158  01D9                     _printReglageH:	
  4159                           
  4160                           ;LCD.c: 44: uint8_t minute=0;
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in _printReglageH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4164  01D9  0020               	movlb	0	; select bank0
  4165  01DA  01A4               	clrf	printReglageH@minute
  4166                           
  4167                           ;LCD.c: 45: uint8_t heure=0;
  4168  01DB  01A5               	clrf	printReglageH@heure
  4169                           
  4170                           ;LCD.c: 46: uint8_t dizaineM=0;
  4171  01DC  01A0               	clrf	printReglageH@dizaineM
  4172                           
  4173                           ;LCD.c: 47: uint8_t uniteM=0;
  4174  01DD  01A1               	clrf	printReglageH@uniteM
  4175                           
  4176                           ;LCD.c: 48: uint8_t dizaineH=0;
  4177  01DE  01A2               	clrf	printReglageH@dizaineH
  4178                           
  4179                           ;LCD.c: 49: uint8_t uniteH=0;
  4180  01DF  01A3               	clrf	printReglageH@uniteH
  4181                           
  4182                           ;LCD.c: 50: writeInst(0b00000001);
  4183  01E0  3001               	movlw	1
  4184  01E1  3185  2550  3181   	fcall	_writeInst
  4185                           
  4186                           ;LCD.c: 51: _delay((unsigned long)((5)*(16000000/4000.0)));
  4187  01E4  301A               	movlw	26
  4188  01E5  00F8               	movwf	??_printReglageH
  4189  01E6  30F8               	movlw	248
  4190  01E7                     u2337:	
  4191  01E7  0B89               	decfsz	9,f
  4192  01E8  29E7               	goto	u2337
  4193  01E9  0BF8               	decfsz	??_printReglageH,f
  4194  01EA  29E7               	goto	u2337
  4195  01EB  3200               	nop2
  4196                           
  4197                           ;LCD.c: 52: writeLCD('R', 1, 1);
  4198  01EC  01F3               	clrf	writeLCD@adress
  4199  01ED  0AF3               	incf	writeLCD@adress,f
  4200  01EE  01F4               	clrf	writeLCD@ligne
  4201  01EF  0AF4               	incf	writeLCD@ligne,f
  4202  01F0  3052               	movlw	82
  4203  01F1  3184  247E  3181   	fcall	_writeLCD
  4204                           
  4205                           ;LCD.c: 53: _delay((unsigned long)((1)*(16000000/4000.0)));
  4206  01F4  3006               	movlw	6
  4207  01F5  00F8               	movwf	??_printReglageH
  4208  01F6  3030               	movlw	48
  4209  01F7                     u2347:	
  4210  01F7  0B89               	decfsz	9,f
  4211  01F8  29F7               	goto	u2347
  4212  01F9  0BF8               	decfsz	??_printReglageH,f
  4213  01FA  29F7               	goto	u2347
  4214  01FB  3200               	nop2
  4215                           
  4216                           ;LCD.c: 54: writeLCD('E', 2, 1);
  4217  01FC  3002               	movlw	2
  4218  01FD  00F8               	movwf	??_printReglageH
  4219  01FE  0878               	movf	??_printReglageH,w
  4220  01FF  00F3               	movwf	writeLCD@adress
  4221  0200  01F4               	clrf	writeLCD@ligne
  4222  0201  0AF4               	incf	writeLCD@ligne,f
  4223  0202  3045               	movlw	69
  4224  0203  3184  247E  3181   	fcall	_writeLCD
  4225                           
  4226                           ;LCD.c: 55: _delay((unsigned long)((1)*(16000000/4000.0)));
  4227  0206  3006               	movlw	6
  4228  0207  00F8               	movwf	??_printReglageH
  4229  0208  3030               	movlw	48
  4230  0209                     u2357:	
  4231  0209  0B89               	decfsz	9,f
  4232  020A  2A09               	goto	u2357
  4233  020B  0BF8               	decfsz	??_printReglageH,f
  4234  020C  2A09               	goto	u2357
  4235  020D  3200               	nop2
  4236                           
  4237                           ;LCD.c: 56: writeLCD('G', 3, 1);
  4238  020E  3003               	movlw	3
  4239  020F  00F8               	movwf	??_printReglageH
  4240  0210  0878               	movf	??_printReglageH,w
  4241  0211  00F3               	movwf	writeLCD@adress
  4242  0212  01F4               	clrf	writeLCD@ligne
  4243  0213  0AF4               	incf	writeLCD@ligne,f
  4244  0214  3047               	movlw	71
  4245  0215  3184  247E  3181   	fcall	_writeLCD
  4246                           
  4247                           ;LCD.c: 57: _delay((unsigned long)((1)*(16000000/4000.0)));
  4248  0218  3006               	movlw	6
  4249  0219  00F8               	movwf	??_printReglageH
  4250  021A  3030               	movlw	48
  4251  021B                     u2367:	
  4252  021B  0B89               	decfsz	9,f
  4253  021C  2A1B               	goto	u2367
  4254  021D  0BF8               	decfsz	??_printReglageH,f
  4255  021E  2A1B               	goto	u2367
  4256  021F  3200               	nop2
  4257                           
  4258                           ;LCD.c: 58: writeLCD(' ', 4, 1);
  4259  0220  3004               	movlw	4
  4260  0221  00F8               	movwf	??_printReglageH
  4261  0222  0878               	movf	??_printReglageH,w
  4262  0223  00F3               	movwf	writeLCD@adress
  4263  0224  01F4               	clrf	writeLCD@ligne
  4264  0225  0AF4               	incf	writeLCD@ligne,f
  4265  0226  3020               	movlw	32
  4266  0227  3184  247E  3181   	fcall	_writeLCD
  4267                           
  4268                           ;LCD.c: 59: _delay((unsigned long)((1)*(16000000/4000.0)));
  4269  022A  3006               	movlw	6
  4270  022B  00F8               	movwf	??_printReglageH
  4271  022C  3030               	movlw	48
  4272  022D                     u2377:	
  4273  022D  0B89               	decfsz	9,f
  4274  022E  2A2D               	goto	u2377
  4275  022F  0BF8               	decfsz	??_printReglageH,f
  4276  0230  2A2D               	goto	u2377
  4277  0231  3200               	nop2
  4278                           
  4279                           ;LCD.c: 60: writeLCD('H', 5, 1);
  4280  0232  3005               	movlw	5
  4281  0233  00F8               	movwf	??_printReglageH
  4282  0234  0878               	movf	??_printReglageH,w
  4283  0235  00F3               	movwf	writeLCD@adress
  4284  0236  01F4               	clrf	writeLCD@ligne
  4285  0237  0AF4               	incf	writeLCD@ligne,f
  4286  0238  3048               	movlw	72
  4287  0239  3184  247E  3181   	fcall	_writeLCD
  4288                           
  4289                           ;LCD.c: 61: _delay((unsigned long)((1)*(16000000/4000.0)));
  4290  023C  3006               	movlw	6
  4291  023D  00F8               	movwf	??_printReglageH
  4292  023E  3030               	movlw	48
  4293  023F                     u2387:	
  4294  023F  0B89               	decfsz	9,f
  4295  0240  2A3F               	goto	u2387
  4296  0241  0BF8               	decfsz	??_printReglageH,f
  4297  0242  2A3F               	goto	u2387
  4298  0243  3200               	nop2
  4299                           
  4300                           ;LCD.c: 62: writeLCD('R', 6, 1);
  4301  0244  3006               	movlw	6
  4302  0245  00F8               	movwf	??_printReglageH
  4303  0246  0878               	movf	??_printReglageH,w
  4304  0247  00F3               	movwf	writeLCD@adress
  4305  0248  01F4               	clrf	writeLCD@ligne
  4306  0249  0AF4               	incf	writeLCD@ligne,f
  4307  024A  3052               	movlw	82
  4308  024B  3184  247E  3181   	fcall	_writeLCD
  4309                           
  4310                           ;LCD.c: 63: _delay((unsigned long)((1)*(16000000/4000.0)));
  4311  024E  3006               	movlw	6
  4312  024F  00F8               	movwf	??_printReglageH
  4313  0250  3030               	movlw	48
  4314  0251                     u2397:	
  4315  0251  0B89               	decfsz	9,f
  4316  0252  2A51               	goto	u2397
  4317  0253  0BF8               	decfsz	??_printReglageH,f
  4318  0254  2A51               	goto	u2397
  4319  0255  3200               	nop2
  4320                           
  4321                           ;LCD.c: 64: minute = readMin();
  4322  0256  3184  24DD  3181   	fcall	_readMin
  4323  0259  00F8               	movwf	??_printReglageH
  4324  025A  0878               	movf	??_printReglageH,w
  4325  025B  0020               	movlb	0	; select bank0
  4326  025C  00A4               	movwf	printReglageH@minute
  4327                           
  4328                           ;LCD.c: 65: heure = readHr();
  4329  025D  3185  2506  3181   	fcall	_readHr
  4330  0260  00F8               	movwf	??_printReglageH
  4331  0261  0878               	movf	??_printReglageH,w
  4332  0262  0020               	movlb	0	; select bank0
  4333  0263  00A5               	movwf	printReglageH@heure
  4334                           
  4335                           ;LCD.c: 66: uniteM = bitExtracted(minute, 4, 1);
  4336  0264  3004               	movlw	4
  4337  0265  00F8               	movwf	??_printReglageH
  4338  0266  0878               	movf	??_printReglageH,w
  4339  0267  00F1               	movwf	bitExtracted@k
  4340  0268  01F2               	clrf	bitExtracted@p
  4341  0269  0AF2               	incf	bitExtracted@p,f
  4342  026A  0824               	movf	printReglageH@minute,w
  4343  026B  3186  263A  3181   	fcall	_bitExtracted
  4344  026E  00F9               	movwf	??_printReglageH+1
  4345  026F  0879               	movf	??_printReglageH+1,w
  4346  0270  0020               	movlb	0	; select bank0
  4347  0271  00A1               	movwf	printReglageH@uniteM
  4348                           
  4349                           ;LCD.c: 67: dizaineM = bitExtracted(minute, 3, 5);
  4350  0272  3003               	movlw	3
  4351  0273  00F8               	movwf	??_printReglageH
  4352  0274  0878               	movf	??_printReglageH,w
  4353  0275  00F1               	movwf	bitExtracted@k
  4354  0276  3005               	movlw	5
  4355  0277  00F9               	movwf	??_printReglageH+1
  4356  0278  0879               	movf	??_printReglageH+1,w
  4357  0279  00F2               	movwf	bitExtracted@p
  4358  027A  0824               	movf	printReglageH@minute,w
  4359  027B  3186  263A  3181   	fcall	_bitExtracted
  4360  027E  00FA               	movwf	??_printReglageH+2
  4361  027F  087A               	movf	??_printReglageH+2,w
  4362  0280  0020               	movlb	0	; select bank0
  4363  0281  00A0               	movwf	printReglageH@dizaineM
  4364                           
  4365                           ;LCD.c: 68: uniteH = bitExtracted(heure, 4, 1);
  4366  0282  3004               	movlw	4
  4367  0283  00F8               	movwf	??_printReglageH
  4368  0284  0878               	movf	??_printReglageH,w
  4369  0285  00F1               	movwf	bitExtracted@k
  4370  0286  01F2               	clrf	bitExtracted@p
  4371  0287  0AF2               	incf	bitExtracted@p,f
  4372  0288  0825               	movf	printReglageH@heure,w
  4373  0289  3186  263A  3181   	fcall	_bitExtracted
  4374  028C  00F9               	movwf	??_printReglageH+1
  4375  028D  0879               	movf	??_printReglageH+1,w
  4376  028E  0020               	movlb	0	; select bank0
  4377  028F  00A3               	movwf	printReglageH@uniteH
  4378                           
  4379                           ;LCD.c: 69: dizaineH = bitExtracted(heure, 2, 5);
  4380  0290  3002               	movlw	2
  4381  0291  00F8               	movwf	??_printReglageH
  4382  0292  0878               	movf	??_printReglageH,w
  4383  0293  00F1               	movwf	bitExtracted@k
  4384  0294  3005               	movlw	5
  4385  0295  00F9               	movwf	??_printReglageH+1
  4386  0296  0879               	movf	??_printReglageH+1,w
  4387  0297  00F2               	movwf	bitExtracted@p
  4388  0298  0825               	movf	printReglageH@heure,w
  4389  0299  3186  263A  3181   	fcall	_bitExtracted
  4390  029C  00FA               	movwf	??_printReglageH+2
  4391  029D  087A               	movf	??_printReglageH+2,w
  4392  029E  0020               	movlb	0	; select bank0
  4393  029F  00A2               	movwf	printReglageH@dizaineH
  4394                           
  4395                           ;LCD.c: 70: writeLCD(FSM(dizaineM), 5, 2);
  4396  02A0  3005               	movlw	5
  4397  02A1  00F8               	movwf	??_printReglageH
  4398  02A2  0878               	movf	??_printReglageH,w
  4399  02A3  00F3               	movwf	writeLCD@adress
  4400  02A4  3002               	movlw	2
  4401  02A5  00F9               	movwf	??_printReglageH+1
  4402  02A6  0879               	movf	??_printReglageH+1,w
  4403  02A7  00F4               	movwf	writeLCD@ligne
  4404  02A8  0820               	movf	printReglageH@dizaineM,w
  4405  02A9  3185  252F  3181   	fcall	_FSM
  4406  02AC  3184  247E  3181   	fcall	_writeLCD
  4407                           
  4408                           ;LCD.c: 71: writeLCD(FSM(uniteM), 6, 2);
  4409  02AF  3006               	movlw	6
  4410  02B0  00F8               	movwf	??_printReglageH
  4411  02B1  0878               	movf	??_printReglageH,w
  4412  02B2  00F3               	movwf	writeLCD@adress
  4413  02B3  3002               	movlw	2
  4414  02B4  00F9               	movwf	??_printReglageH+1
  4415  02B5  0879               	movf	??_printReglageH+1,w
  4416  02B6  00F4               	movwf	writeLCD@ligne
  4417  02B7  0020               	movlb	0	; select bank0
  4418  02B8  0821               	movf	printReglageH@uniteM,w
  4419  02B9  3185  252F  3181   	fcall	_FSM
  4420  02BC  3184  247E  3181   	fcall	_writeLCD
  4421                           
  4422                           ;LCD.c: 72: writeLCD(FSM(dizaineH), 2, 2);
  4423  02BF  3002               	movlw	2
  4424  02C0  00F8               	movwf	??_printReglageH
  4425  02C1  0878               	movf	??_printReglageH,w
  4426  02C2  00F3               	movwf	writeLCD@adress
  4427  02C3  3002               	movlw	2
  4428  02C4  00F9               	movwf	??_printReglageH+1
  4429  02C5  0879               	movf	??_printReglageH+1,w
  4430  02C6  00F4               	movwf	writeLCD@ligne
  4431  02C7  0020               	movlb	0	; select bank0
  4432  02C8  0822               	movf	printReglageH@dizaineH,w
  4433  02C9  3185  252F  3181   	fcall	_FSM
  4434  02CC  3184  247E  3181   	fcall	_writeLCD
  4435                           
  4436                           ;LCD.c: 73: writeLCD(FSM(uniteH), 3, 2);
  4437  02CF  3003               	movlw	3
  4438  02D0  00F8               	movwf	??_printReglageH
  4439  02D1  0878               	movf	??_printReglageH,w
  4440  02D2  00F3               	movwf	writeLCD@adress
  4441  02D3  3002               	movlw	2
  4442  02D4  00F9               	movwf	??_printReglageH+1
  4443  02D5  0879               	movf	??_printReglageH+1,w
  4444  02D6  00F4               	movwf	writeLCD@ligne
  4445  02D7  0020               	movlb	0	; select bank0
  4446  02D8  0823               	movf	printReglageH@uniteH,w
  4447  02D9  3185  252F  3181   	fcall	_FSM
  4448  02DC  3184  247E  3181   	fcall	_writeLCD
  4449                           
  4450                           ;LCD.c: 74: writeLCD(':', 4, 2);
  4451  02DF  3004               	movlw	4
  4452  02E0  00F8               	movwf	??_printReglageH
  4453  02E1  0878               	movf	??_printReglageH,w
  4454  02E2  00F3               	movwf	writeLCD@adress
  4455  02E3  3002               	movlw	2
  4456  02E4  00F9               	movwf	??_printReglageH+1
  4457  02E5  0879               	movf	??_printReglageH+1,w
  4458  02E6  00F4               	movwf	writeLCD@ligne
  4459  02E7  303A               	movlw	58
  4460  02E8  3184  247E         	fcall	_writeLCD
  4461  02EA  0008               	return
  4462  02EB                     __end_of_printReglageH:	
  4463                           
  4464                           	psect	text3
  4465  047E                     __ptext3:	
  4466 ;; *************** function _writeLCD *****************
  4467 ;; Defined at:
  4468 ;;		line 16 in file "LCD.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  data            1    wreg     unsigned char 
  4471 ;;  adress          1    3[COMMON] unsigned char 
  4472 ;;  ligne           1    4[COMMON] unsigned char 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  data            1    6[COMMON] unsigned char 
  4475 ;;  i               1    7[COMMON] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0, pclath, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4485 ;;      Params:         2       0       0       0       0       0       0       0
  4486 ;;      Locals:         2       0       0       0       0       0       0       0
  4487 ;;      Temps:          1       0       0       0       0       0       0       0
  4488 ;;      Totals:         5       0       0       0       0       0       0       0
  4489 ;;Total ram usage:        5 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    6
  4492 ;; This function calls:
  4493 ;;		_sendI2C
  4494 ;;		_startI2C
  4495 ;;		_stopI2C
  4496 ;;		_writeInst
  4497 ;; This function is called by:
  4498 ;;		_main
  4499 ;;		_printReglageH
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _writeLCD
  4505  047E                     _writeLCD:	
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _writeLCD: [wreg+status,2+status,0+pclath+cstack]
  4509                           ;writeLCD@data stored from wreg
  4510  047E  00F6               	movwf	writeLCD@data
  4511                           
  4512                           ;LCD.c: 17: if (ligne == 2) {
  4513  047F  3002               	movlw	2
  4514  0480  0674               	xorwf	writeLCD@ligne,w
  4515  0481  1D03               	btfss	3,2
  4516  0482  2C87               	goto	l2517
  4517                           
  4518                           ;LCD.c: 18: adress += 40;
  4519  0483  3028               	movlw	40
  4520  0484  00F5               	movwf	??_writeLCD
  4521  0485  0875               	movf	??_writeLCD,w
  4522  0486  07F3               	addwf	writeLCD@adress,f
  4523  0487                     l2517:	
  4524                           
  4525                           ;LCD.c: 19: }
  4526                           ;LCD.c: 20: for (uint8_t i = 0; i < adress; i++) {
  4527  0487  01F7               	clrf	writeLCD@i
  4528  0488                     l2523:	
  4529  0488  0873               	movf	writeLCD@adress,w
  4530  0489  0277               	subwf	writeLCD@i,w
  4531  048A  1803               	btfsc	3,0
  4532  048B  2C95               	goto	l2525
  4533                           
  4534                           ;LCD.c: 21: writeInst(0b00010100);
  4535  048C  3014               	movlw	20
  4536  048D  3185  2550  3184   	fcall	_writeInst
  4537  0490  3001               	movlw	1
  4538  0491  00F5               	movwf	??_writeLCD
  4539  0492  0875               	movf	??_writeLCD,w
  4540  0493  07F7               	addwf	writeLCD@i,f
  4541  0494  2C88               	goto	l2523
  4542  0495                     l2525:	
  4543                           
  4544                           ;LCD.c: 22: }
  4545                           ;LCD.c: 24: startI2C();
  4546  0495  3186  26CC  3184   	fcall	_startI2C
  4547                           
  4548                           ;LCD.c: 25: sendI2C(0x78);
  4549  0498  3078               	movlw	120
  4550  0499  3186  26B4  3184   	fcall	_sendI2C
  4551  049C                     l444:	
  4552                           ;LCD.c: 26: while(SSP1CON2bits.ACKSTAT==1);
  4553                           
  4554  049C  0024               	movlb	4	; select bank4
  4555  049D  1B16               	btfsc	22,6	;volatile
  4556  049E  2C9C               	goto	l444
  4557                           
  4558                           ;LCD.c: 27: sendI2C(0x40);
  4559  049F  3040               	movlw	64
  4560  04A0  3186  26B4  3184   	fcall	_sendI2C
  4561  04A3                     l447:	
  4562                           ;LCD.c: 28: while(SSP1CON2bits.ACKSTAT==1);
  4563                           
  4564  04A3  0024               	movlb	4	; select bank4
  4565  04A4  1B16               	btfsc	22,6	;volatile
  4566  04A5  2CA3               	goto	l447
  4567                           
  4568                           ;LCD.c: 29: sendI2C(data);
  4569  04A6  0876               	movf	writeLCD@data,w
  4570  04A7  3186  26B4  3184   	fcall	_sendI2C
  4571  04AA                     l450:	
  4572                           ;LCD.c: 30: while(SSP1CON2bits.ACKSTAT==1);
  4573                           
  4574  04AA  0024               	movlb	4	; select bank4
  4575  04AB  1B16               	btfsc	22,6	;volatile
  4576  04AC  2CAA               	goto	l450
  4577                           
  4578                           ;LCD.c: 31: stopI2C();
  4579  04AD  3186  26DD  3184   	fcall	_stopI2C
  4580                           
  4581                           ;LCD.c: 32: writeInst(0b00000010);
  4582  04B0  3002               	movlw	2
  4583  04B1  3185  2550         	fcall	_writeInst
  4584  04B3  0008               	return
  4585  04B4                     __end_of_writeLCD:	
  4586                           
  4587                           	psect	text4
  4588  052F                     __ptext4:	
  4589 ;; *************** function _FSM *****************
  4590 ;; Defined at:
  4591 ;;		line 16 in file "conversion.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  IN              1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  IN              1    1[COMMON] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      unsigned char 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4605 ;;      Params:         0       0       0       0       0       0       0       0
  4606 ;;      Locals:         1       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0
  4608 ;;      Totals:         1       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        1 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    3
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;;		_printReglageH
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _FSM
  4622  052F                     _FSM:	
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _FSM: [wreg-fsr0h+status,2+status,0]
  4626                           ;FSM@IN stored from wreg
  4627  052F  00F1               	movwf	FSM@IN
  4628                           
  4629                           ;conversion.c: 17: switch (IN) {
  4630  0530  2D45               	goto	l1921
  4631  0531                     l1859:	
  4632                           ;conversion.c: 18: case 0:
  4633                           
  4634                           
  4635                           ;conversion.c: 19: return '0';
  4636  0531  3030               	movlw	48
  4637                           
  4638                           ;conversion.c: 20: break;
  4639  0532  0008               	return
  4640  0533                     l1865:	
  4641                           ;conversion.c: 22: case 1:
  4642                           
  4643                           
  4644                           ;conversion.c: 23: return '1';
  4645  0533  3031               	movlw	49
  4646                           
  4647                           ;conversion.c: 24: break;
  4648  0534  0008               	return
  4649  0535                     l1871:	
  4650                           ;conversion.c: 26: case 2:
  4651                           
  4652                           
  4653                           ;conversion.c: 27: return '2';
  4654  0535  3032               	movlw	50
  4655                           
  4656                           ;conversion.c: 28: break;
  4657  0536  0008               	return
  4658  0537                     l1877:	
  4659                           ;conversion.c: 30: case 3:
  4660                           
  4661                           
  4662                           ;conversion.c: 31: return '3';
  4663  0537  3033               	movlw	51
  4664                           
  4665                           ;conversion.c: 32: break;
  4666  0538  0008               	return
  4667  0539                     l1883:	
  4668                           ;conversion.c: 34: case 4:
  4669                           
  4670                           
  4671                           ;conversion.c: 35: return '4';
  4672  0539  3034               	movlw	52
  4673                           
  4674                           ;conversion.c: 36: break;
  4675  053A  0008               	return
  4676  053B                     l1889:	
  4677                           ;conversion.c: 38: case 5:
  4678                           
  4679                           
  4680                           ;conversion.c: 39: return '5';
  4681  053B  3035               	movlw	53
  4682                           
  4683                           ;conversion.c: 40: break;
  4684  053C  0008               	return
  4685  053D                     l1895:	
  4686                           ;conversion.c: 42: case 6:
  4687                           
  4688                           
  4689                           ;conversion.c: 43: return '6';
  4690  053D  3036               	movlw	54
  4691                           
  4692                           ;conversion.c: 44: break;
  4693  053E  0008               	return
  4694  053F                     l1901:	
  4695                           ;conversion.c: 46: case 7:
  4696                           
  4697                           
  4698                           ;conversion.c: 47: return '7';
  4699  053F  3037               	movlw	55
  4700                           
  4701                           ;conversion.c: 48: break;
  4702  0540  0008               	return
  4703  0541                     l1907:	
  4704                           ;conversion.c: 50: case 8:
  4705                           
  4706                           
  4707                           ;conversion.c: 51: return '8';
  4708  0541  3038               	movlw	56
  4709                           
  4710                           ;conversion.c: 52: break;
  4711  0542  0008               	return
  4712  0543                     l1913:	
  4713                           ;conversion.c: 54: case 9:
  4714                           
  4715                           
  4716                           ;conversion.c: 55: return '9';
  4717  0543  3039               	movlw	57
  4718                           
  4719                           ;conversion.c: 61: }
  4720                           
  4721                           ;conversion.c: 59: break;
  4722                           
  4723                           ;conversion.c: 58: default:
  4724                           
  4725                           ;conversion.c: 56: break;
  4726  0544  0008               	return
  4727  0545                     l1921:	
  4728  0545  0871               	movf	FSM@IN,w
  4729                           
  4730                           ; Switch size 1, requested type "space"
  4731                           ; Number of cases is 10, Range of values is 0 to 9
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; direct_byte           26     6 (fixed)
  4735                           ; simple_byte           31    16 (average)
  4736                           ; jumptable            260     6 (fixed)
  4737                           ;	Chosen strategy is direct_byte
  4738  0546  0084               	movwf	4
  4739  0547  300A               	movlw	10
  4740  0548  0204               	subwf	4,w
  4741  0549  1803               	skipnc
  4742  054A  0008               	return
  4743  054B  3186               	movlp	high S2897
  4744  054C  3504               	lslf	4,w
  4745  054D  3E4F               	addlw	low S2897
  4746  054E  0082               	movwf	2
  4747  054F  0008               	return
  4748  0550                     __end_of_FSM:	
  4749                           
  4750                           	psect	swtext1
  4751  064F                     __pswtext1:	
  4752  064F                     S2897:	
  4753  064F  3185  2D31         	ljmp	l1859
  4754  0651  3185  2D33         	ljmp	l1865
  4755  0653  3185  2D35         	ljmp	l1871
  4756  0655  3185  2D37         	ljmp	l1877
  4757  0657  3185  2D39         	ljmp	l1883
  4758  0659  3185  2D3B         	ljmp	l1889
  4759  065B  3185  2D3D         	ljmp	l1895
  4760  065D  3185  2D3F         	ljmp	l1901
  4761  065F  3185  2D41         	ljmp	l1907
  4762  0661  3185  2D43         	ljmp	l1913
  4763                           
  4764                           	psect	text5
  4765  0696                     __ptext5:	
  4766 ;; *************** function _initRW1063 *****************
  4767 ;; Defined at:
  4768 ;;		line 35 in file "LCD.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0, pclath, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4782 ;;      Params:         0       0       0       0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    6
  4789 ;; This function calls:
  4790 ;;		_writeInst
  4791 ;; This function is called by:
  4792 ;;		_main
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           
  4797                           ;psect for function _initRW1063
  4798  0696                     _initRW1063:	
  4799                           
  4800                           ;LCD.c: 36: writeInst(0x38);
  4801                           
  4802                           ;incstack = 0
  4803                           ; Regs used in _initRW1063: [wreg+status,2+status,0+pclath+cstack]
  4804  0696  3038               	movlw	56
  4805  0697  3185  2550  3186   	fcall	_writeInst
  4806                           
  4807                           ;LCD.c: 37: writeInst(0x0c);
  4808  069A  300C               	movlw	12
  4809  069B  3185  2550  3186   	fcall	_writeInst
  4810                           
  4811                           ;LCD.c: 38: writeInst(0x06);
  4812  069E  3006               	movlw	6
  4813  069F  3185  2550  3186   	fcall	_writeInst
  4814                           
  4815                           ;LCD.c: 39: writeInst(0b00001100);
  4816  06A2  300C               	movlw	12
  4817  06A3  3185  2550         	fcall	_writeInst
  4818  06A5  0008               	return
  4819  06A6                     __end_of_initRW1063:	
  4820                           
  4821                           	psect	text6
  4822  0550                     __ptext6:	
  4823 ;; *************** function _writeInst *****************
  4824 ;; Defined at:
  4825 ;;		line 5 in file "LCD.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  Inst            1    wreg     unsigned char 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  Inst            1    2[COMMON] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, pclath, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4839 ;;      Params:         0       0       0       0       0       0       0       0
  4840 ;;      Locals:         1       0       0       0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0
  4842 ;;      Totals:         1       0       0       0       0       0       0       0
  4843 ;;Total ram usage:        1 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    5
  4846 ;; This function calls:
  4847 ;;		_sendI2C
  4848 ;;		_startI2C
  4849 ;;		_stopI2C
  4850 ;; This function is called by:
  4851 ;;		_main
  4852 ;;		_writeLCD
  4853 ;;		_initRW1063
  4854 ;;		_printReglageH
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           
  4859                           ;psect for function _writeInst
  4860  0550                     _writeInst:	
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _writeInst: [wreg+status,2+status,0+pclath+cstack]
  4864                           ;writeInst@Inst stored from wreg
  4865  0550  00F2               	movwf	writeInst@Inst
  4866                           
  4867                           ;LCD.c: 6: startI2C();
  4868  0551  3186  26CC  3185   	fcall	_startI2C
  4869                           
  4870                           ;LCD.c: 7: sendI2C(0x78);
  4871  0554  3078               	movlw	120
  4872  0555  3186  26B4  3185   	fcall	_sendI2C
  4873  0558                     l428:	
  4874                           ;LCD.c: 8: while(SSP1CON2bits.ACKSTAT==1);
  4875                           
  4876  0558  0024               	movlb	4	; select bank4
  4877  0559  1B16               	btfsc	22,6	;volatile
  4878  055A  2D58               	goto	l428
  4879                           
  4880                           ;LCD.c: 9: sendI2C(0x00);
  4881  055B  3000               	movlw	0
  4882  055C  3186  26B4  3185   	fcall	_sendI2C
  4883  055F                     l431:	
  4884                           ;LCD.c: 10: while(SSP1CON2bits.ACKSTAT==1);
  4885                           
  4886  055F  0024               	movlb	4	; select bank4
  4887  0560  1B16               	btfsc	22,6	;volatile
  4888  0561  2D5F               	goto	l431
  4889                           
  4890                           ;LCD.c: 11: sendI2C(Inst);
  4891  0562  0872               	movf	writeInst@Inst,w
  4892  0563  3186  26B4  3185   	fcall	_sendI2C
  4893  0566                     l434:	
  4894                           ;LCD.c: 12: while(SSP1CON2bits.ACKSTAT==1);
  4895                           
  4896  0566  0024               	movlb	4	; select bank4
  4897  0567  1B16               	btfsc	22,6	;volatile
  4898  0568  2D66               	goto	l434
  4899                           
  4900                           ;LCD.c: 13: stopI2C();
  4901  0569  3186  26DD         	fcall	_stopI2C
  4902  056B  0008               	return
  4903  056C                     __end_of_writeInst:	
  4904                           
  4905                           	psect	text7
  4906  03A3                     __ptext7:	
  4907 ;; *************** function _initRTC *****************
  4908 ;; Defined at:
  4909 ;;		line 5 in file "RTC.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, pclath, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4923 ;;      Params:         0       0       0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    5
  4930 ;; This function calls:
  4931 ;;		_sendI2C
  4932 ;;		_startI2C
  4933 ;;		_stopI2C
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function _initRTC
  4941  03A3                     _initRTC:	
  4942                           
  4943                           ;RTC.c: 6: startI2C();
  4944                           
  4945                           ;incstack = 0
  4946                           ; Regs used in _initRTC: [wreg+status,2+status,0+pclath+cstack]
  4947  03A3  3186  26CC  3183   	fcall	_startI2C
  4948                           
  4949                           ;RTC.c: 7: sendI2C(0b11011110);
  4950  03A6  30DE               	movlw	222
  4951  03A7  3186  26B4  3183   	fcall	_sendI2C
  4952  03AA                     l482:	
  4953                           ;RTC.c: 8: while (SSP1CON2bits.ACKSTAT == 1);
  4954                           
  4955  03AA  0024               	movlb	4	; select bank4
  4956  03AB  1B16               	btfsc	22,6	;volatile
  4957  03AC  2BAA               	goto	l482
  4958                           
  4959                           ;RTC.c: 9: sendI2C(0x00);
  4960  03AD  3000               	movlw	0
  4961  03AE  3186  26B4  3183   	fcall	_sendI2C
  4962  03B1                     l485:	
  4963                           ;RTC.c: 10: while (SSP1CON2bits.ACKSTAT == 1);
  4964                           
  4965  03B1  0024               	movlb	4	; select bank4
  4966  03B2  1B16               	btfsc	22,6	;volatile
  4967  03B3  2BB1               	goto	l485
  4968                           
  4969                           ;RTC.c: 11: sendI2C(0b10000000);
  4970  03B4  3080               	movlw	128
  4971  03B5  3186  26B4  3183   	fcall	_sendI2C
  4972  03B8                     l488:	
  4973                           ;RTC.c: 12: while (SSP1CON2bits.ACKSTAT == 1);
  4974                           
  4975  03B8  0024               	movlb	4	; select bank4
  4976  03B9  1B16               	btfsc	22,6	;volatile
  4977  03BA  2BB8               	goto	l488
  4978                           
  4979                           ;RTC.c: 13: stopI2C();
  4980  03BB  3186  26DD  3183   	fcall	_stopI2C
  4981                           
  4982                           ;RTC.c: 15: startI2C();
  4983  03BE  3186  26CC  3183   	fcall	_startI2C
  4984                           
  4985                           ;RTC.c: 16: sendI2C(0b11011110);
  4986  03C1  30DE               	movlw	222
  4987  03C2  3186  26B4  3183   	fcall	_sendI2C
  4988  03C5                     l491:	
  4989                           ;RTC.c: 17: while (SSP1CON2bits.ACKSTAT == 1);
  4990                           
  4991  03C5  0024               	movlb	4	; select bank4
  4992  03C6  1B16               	btfsc	22,6	;volatile
  4993  03C7  2BC5               	goto	l491
  4994                           
  4995                           ;RTC.c: 18: sendI2C(0x01);
  4996  03C8  3001               	movlw	1
  4997  03C9  3186  26B4  3183   	fcall	_sendI2C
  4998  03CC                     l494:	
  4999                           ;RTC.c: 19: while (SSP1CON2bits.ACKSTAT == 1);
  5000                           
  5001  03CC  0024               	movlb	4	; select bank4
  5002  03CD  1B16               	btfsc	22,6	;volatile
  5003  03CE  2BCC               	goto	l494
  5004                           
  5005                           ;RTC.c: 20: sendI2C(0b01001000);
  5006  03CF  3048               	movlw	72
  5007  03D0  3186  26B4  3183   	fcall	_sendI2C
  5008  03D3                     l497:	
  5009                           ;RTC.c: 21: while (SSP1CON2bits.ACKSTAT == 1);
  5010                           
  5011  03D3  0024               	movlb	4	; select bank4
  5012  03D4  1B16               	btfsc	22,6	;volatile
  5013  03D5  2BD3               	goto	l497
  5014                           
  5015                           ;RTC.c: 22: stopI2C();
  5016  03D6  3186  26DD  3183   	fcall	_stopI2C
  5017                           
  5018                           ;RTC.c: 24: startI2C();
  5019  03D9  3186  26CC  3183   	fcall	_startI2C
  5020                           
  5021                           ;RTC.c: 25: sendI2C(0b11011110);
  5022  03DC  30DE               	movlw	222
  5023  03DD  3186  26B4  3183   	fcall	_sendI2C
  5024  03E0                     l500:	
  5025                           ;RTC.c: 26: while (SSP1CON2bits.ACKSTAT == 1);
  5026                           
  5027  03E0  0024               	movlb	4	; select bank4
  5028  03E1  1B16               	btfsc	22,6	;volatile
  5029  03E2  2BE0               	goto	l500
  5030                           
  5031                           ;RTC.c: 27: sendI2C(0x02);
  5032  03E3  3002               	movlw	2
  5033  03E4  3186  26B4  3183   	fcall	_sendI2C
  5034  03E7                     l503:	
  5035                           ;RTC.c: 28: while (SSP1CON2bits.ACKSTAT == 1);
  5036                           
  5037  03E7  0024               	movlb	4	; select bank4
  5038  03E8  1B16               	btfsc	22,6	;volatile
  5039  03E9  2BE7               	goto	l503
  5040                           
  5041                           ;RTC.c: 29: sendI2C(0b00010100);
  5042  03EA  3014               	movlw	20
  5043  03EB  3186  26B4  3183   	fcall	_sendI2C
  5044  03EE                     l506:	
  5045                           ;RTC.c: 30: while (SSP1CON2bits.ACKSTAT == 1);
  5046                           
  5047  03EE  0024               	movlb	4	; select bank4
  5048  03EF  1B16               	btfsc	22,6	;volatile
  5049  03F0  2BEE               	goto	l506
  5050                           
  5051                           ;RTC.c: 31: stopI2C();
  5052  03F1  3186  26DD         	fcall	_stopI2C
  5053  03F3  0008               	return
  5054  03F4                     __end_of_initRTC:	
  5055                           
  5056                           	psect	text8
  5057  0445                     __ptext8:	
  5058 ;; *************** function _initI2C *****************
  5059 ;; Defined at:
  5060 ;;		line 5 in file "i2c.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  i               2    2[COMMON] int 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5074 ;;      Params:         0       0       0       0       0       0       0       0
  5075 ;;      Locals:         2       0       0       0       0       0       0       0
  5076 ;;      Temps:          1       0       0       0       0       0       0       0
  5077 ;;      Totals:         3       0       0       0       0       0       0       0
  5078 ;;Total ram usage:        3 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    3
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;;		_system_init
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function _initI2C
  5091  0445                     _initI2C:	
  5092                           
  5093                           ;i2c.c: 6: int i = 0;
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _initI2C: [wreg+status,2]
  5097  0445  01F2               	clrf	initI2C@i
  5098  0446  01F3               	clrf	initI2C@i+1
  5099                           
  5100                           ;i2c.c: 11: TRISB6 = 0;
  5101  0447  0021               	movlb	1	; select bank1
  5102  0448  130D               	bcf	13,6	;volatile
  5103                           
  5104                           ;i2c.c: 12: for (i = 0; i < 9; i++) {
  5105  0449  01F2               	clrf	initI2C@i
  5106  044A  01F3               	clrf	initI2C@i+1
  5107  044B  0873               	movf	initI2C@i+1,w
  5108  044C  3A80               	xorlw	128
  5109  044D  00F1               	movwf	??_initI2C
  5110  044E  3080               	movlw	128
  5111  044F  0271               	subwf	??_initI2C,w
  5112  0450  1D03               	skipz
  5113  0451  2C54               	goto	u1225
  5114  0452  3009               	movlw	9
  5115  0453  0272               	subwf	initI2C@i,w
  5116  0454                     u1225:	
  5117  0454  1803               	btfsc	3,0
  5118  0455  2C68               	goto	l332
  5119  0456                     l331:	
  5120                           
  5121                           ;i2c.c: 13: LATB6 = 1;
  5122  0456  0022               	movlb	2	; select bank2
  5123  0457  170D               	bsf	13,6	;volatile
  5124                           
  5125                           ;i2c.c: 14: LATB6 = 0;
  5126  0458  130D               	bcf	13,6	;volatile
  5127  0459  3001               	movlw	1
  5128  045A  07F2               	addwf	initI2C@i,f
  5129  045B  3000               	movlw	0
  5130  045C  3DF3               	addwfc	initI2C@i+1,f
  5131  045D  0873               	movf	initI2C@i+1,w
  5132  045E  3A80               	xorlw	128
  5133  045F  00F1               	movwf	??_initI2C
  5134  0460  3080               	movlw	128
  5135  0461  0271               	subwf	??_initI2C,w
  5136  0462  1D03               	skipz
  5137  0463  2C66               	goto	u1235
  5138  0464  3009               	movlw	9
  5139  0465  0272               	subwf	initI2C@i,w
  5140  0466                     u1235:	
  5141  0466  1C03               	skipc
  5142  0467  2C56               	goto	l331
  5143  0468                     l332:	
  5144                           
  5145                           ;i2c.c: 15: }
  5146                           ;i2c.c: 18: TRISB6 = 1;
  5147  0468  0021               	movlb	1	; select bank1
  5148  0469  170D               	bsf	13,6	;volatile
  5149                           
  5150                           ;i2c.c: 19: TRISB4 = 1;
  5151  046A  160D               	bsf	13,4	;volatile
  5152                           
  5153                           ;i2c.c: 22: ANSELB = 0x00;
  5154  046B  0023               	movlb	3	; select bank3
  5155  046C  018D               	clrf	13	;volatile
  5156                           
  5157                           ;i2c.c: 25: LATB4 = 1;
  5158  046D  0022               	movlb	2	; select bank2
  5159  046E  160D               	bsf	13,4	;volatile
  5160                           
  5161                           ;i2c.c: 26: LATB6 = 1;
  5162  046F  170D               	bsf	13,6	;volatile
  5163                           
  5164                           ;i2c.c: 29: SSP1STAT = 0x80;
  5165  0470  3080               	movlw	128
  5166  0471  0024               	movlb	4	; select bank4
  5167  0472  0094               	movwf	20	;volatile
  5168                           
  5169                           ;i2c.c: 30: SSP1CON1 = 0x28;
  5170  0473  3028               	movlw	40
  5171  0474  0095               	movwf	21	;volatile
  5172                           
  5173                           ;i2c.c: 31: SSP1CON2 = 0x00;
  5174  0475  0196               	clrf	22	;volatile
  5175                           
  5176                           ;i2c.c: 32: SSP1ADD = 0x27;
  5177  0476  3027               	movlw	39
  5178  0477  0092               	movwf	18	;volatile
  5179                           
  5180                           ;i2c.c: 35: OPTION_REG = 0x0;
  5181  0478  0021               	movlb	1	; select bank1
  5182  0479  0195               	clrf	21	;volatile
  5183                           
  5184                           ;i2c.c: 36: WPUB = 0b00010000;
  5185  047A  3010               	movlw	16
  5186  047B  0024               	movlb	4	; select bank4
  5187  047C  008D               	movwf	13	;volatile
  5188  047D  0008               	return
  5189  047E                     __end_of_initI2C:	
  5190                           
  5191                           	psect	text9
  5192  034B                     __ptext9:	
  5193 ;; *************** function _incrMin *****************
  5194 ;; Defined at:
  5195 ;;		line 108 in file "RTC.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  minute          1    2[BANK0 ] unsigned char 
  5200 ;;  uniteM          1    1[BANK0 ] unsigned char 
  5201 ;;  dizaineM        1    0[BANK0 ] unsigned char 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0, pclath, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5211 ;;      Params:         0       0       0       0       0       0       0       0
  5212 ;;      Locals:         0       3       0       0       0       0       0       0
  5213 ;;      Temps:          3       0       0       0       0       0       0       0
  5214 ;;      Totals:         3       3       0       0       0       0       0       0
  5215 ;;Total ram usage:        6 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    6
  5218 ;; This function calls:
  5219 ;;		_bitExtracted
  5220 ;;		_changeMin
  5221 ;;		_readMin
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           
  5228                           ;psect for function _incrMin
  5229  034B                     _incrMin:	
  5230                           
  5231                           ;RTC.c: 110: uint8_t minute=0;
  5232                           
  5233                           ;incstack = 0
  5234                           ; Regs used in _incrMin: [wreg+status,2+status,0+pclath+cstack]
  5235  034B  0020               	movlb	0	; select bank0
  5236  034C  01A2               	clrf	incrMin@minute
  5237                           
  5238                           ;RTC.c: 111: uint8_t dizaineM=0;
  5239  034D  01A0               	clrf	incrMin@dizaineM
  5240                           
  5241                           ;RTC.c: 112: uint8_t uniteM=0;
  5242  034E  01A1               	clrf	incrMin@uniteM
  5243                           
  5244                           ;RTC.c: 113: minute = readMin();
  5245  034F  3184  24DD  3183   	fcall	_readMin
  5246  0352  00F6               	movwf	??_incrMin
  5247  0353  0876               	movf	??_incrMin,w
  5248  0354  0020               	movlb	0	; select bank0
  5249  0355  00A2               	movwf	incrMin@minute
  5250                           
  5251                           ;RTC.c: 114: uniteM = bitExtracted(minute, 4, 1);
  5252  0356  3004               	movlw	4
  5253  0357  00F6               	movwf	??_incrMin
  5254  0358  0876               	movf	??_incrMin,w
  5255  0359  00F1               	movwf	bitExtracted@k
  5256  035A  01F2               	clrf	bitExtracted@p
  5257  035B  0AF2               	incf	bitExtracted@p,f
  5258  035C  0822               	movf	incrMin@minute,w
  5259  035D  3186  263A  3183   	fcall	_bitExtracted
  5260  0360  00F7               	movwf	??_incrMin+1
  5261  0361  0877               	movf	??_incrMin+1,w
  5262  0362  0020               	movlb	0	; select bank0
  5263  0363  00A1               	movwf	incrMin@uniteM
  5264                           
  5265                           ;RTC.c: 115: dizaineM = bitExtracted(minute, 3, 5);
  5266  0364  3003               	movlw	3
  5267  0365  00F6               	movwf	??_incrMin
  5268  0366  0876               	movf	??_incrMin,w
  5269  0367  00F1               	movwf	bitExtracted@k
  5270  0368  3005               	movlw	5
  5271  0369  00F7               	movwf	??_incrMin+1
  5272  036A  0877               	movf	??_incrMin+1,w
  5273  036B  00F2               	movwf	bitExtracted@p
  5274  036C  0822               	movf	incrMin@minute,w
  5275  036D  3186  263A  3183   	fcall	_bitExtracted
  5276  0370  00F8               	movwf	??_incrMin+2
  5277  0371  0878               	movf	??_incrMin+2,w
  5278  0372  0020               	movlb	0	; select bank0
  5279  0373  00A0               	movwf	incrMin@dizaineM
  5280                           
  5281                           ;RTC.c: 116: minute=0;
  5282  0374  01A2               	clrf	incrMin@minute
  5283                           
  5284                           ;RTC.c: 117: uniteM=uniteM+1;
  5285  0375  0821               	movf	incrMin@uniteM,w
  5286  0376  3E01               	addlw	1
  5287  0377  00F6               	movwf	??_incrMin
  5288  0378  0876               	movf	??_incrMin,w
  5289  0379  00A1               	movwf	incrMin@uniteM
  5290                           
  5291                           ;RTC.c: 118: if(uniteM>9)
  5292  037A  300A               	movlw	10
  5293  037B  0221               	subwf	incrMin@uniteM,w
  5294  037C  1C03               	skipc
  5295  037D  2B84               	goto	l2661
  5296                           
  5297                           ;RTC.c: 119: {
  5298                           ;RTC.c: 120: uniteM=0;
  5299  037E  01A1               	clrf	incrMin@uniteM
  5300                           
  5301                           ;RTC.c: 121: dizaineM=dizaineM+1;
  5302  037F  0820               	movf	incrMin@dizaineM,w
  5303  0380  3E01               	addlw	1
  5304  0381  00F6               	movwf	??_incrMin
  5305  0382  0876               	movf	??_incrMin,w
  5306  0383  00A0               	movwf	incrMin@dizaineM
  5307  0384                     l2661:	
  5308                           
  5309                           ;RTC.c: 122: }
  5310                           ;RTC.c: 123: if(dizaineM>6)
  5311  0384  3007               	movlw	7
  5312  0385  0220               	subwf	incrMin@dizaineM,w
  5313  0386  1C03               	skipc
  5314  0387  2B8A               	goto	l2665
  5315                           
  5316                           ;RTC.c: 124: {
  5317                           ;RTC.c: 125: dizaineM=0;
  5318  0388  01A0               	clrf	incrMin@dizaineM
  5319                           
  5320                           ;RTC.c: 126: uniteM=0;
  5321  0389  01A1               	clrf	incrMin@uniteM
  5322  038A                     l2665:	
  5323                           
  5324                           ;RTC.c: 127: }
  5325                           ;RTC.c: 128: minute=minute+dizaineM;
  5326  038A  0822               	movf	incrMin@minute,w
  5327  038B  0720               	addwf	incrMin@dizaineM,w
  5328  038C  00F6               	movwf	??_incrMin
  5329  038D  0876               	movf	??_incrMin,w
  5330  038E  00A2               	movwf	incrMin@minute
  5331                           
  5332                           ;RTC.c: 129: minute=minute<<4;
  5333  038F  0822               	movf	incrMin@minute,w
  5334  0390  00F6               	movwf	??_incrMin
  5335  0391  3003               	movlw	3
  5336  0392                     u2165:	
  5337  0392  35F6               	lslf	??_incrMin,f
  5338  0393  3EFF               	addlw	-1
  5339  0394  1D03               	skipz
  5340  0395  2B92               	goto	u2165
  5341  0396  3576               	lslf	??_incrMin,w
  5342  0397  00F7               	movwf	??_incrMin+1
  5343  0398  0877               	movf	??_incrMin+1,w
  5344  0399  00A2               	movwf	incrMin@minute
  5345                           
  5346                           ;RTC.c: 130: minute=minute+uniteM;
  5347  039A  0822               	movf	incrMin@minute,w
  5348  039B  0721               	addwf	incrMin@uniteM,w
  5349  039C  00F6               	movwf	??_incrMin
  5350  039D  0876               	movf	??_incrMin,w
  5351  039E  00A2               	movwf	incrMin@minute
  5352                           
  5353                           ;RTC.c: 131: changeMin(minute);
  5354  039F  0822               	movf	incrMin@minute,w
  5355  03A0  3185  256C         	fcall	_changeMin
  5356  03A2  0008               	return
  5357  03A3                     __end_of_incrMin:	
  5358                           
  5359                           	psect	text10
  5360  04DD                     __ptext10:	
  5361 ;; *************** function _readMin *****************
  5362 ;; Defined at:
  5363 ;;		line 74 in file "RTC.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  minute          1    4[COMMON] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0, pclath, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5377 ;;      Params:         0       0       0       0       0       0       0       0
  5378 ;;      Locals:         1       0       0       0       0       0       0       0
  5379 ;;      Temps:          1       0       0       0       0       0       0       0
  5380 ;;      Totals:         2       0       0       0       0       0       0       0
  5381 ;;Total ram usage:        2 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    5
  5384 ;; This function calls:
  5385 ;;		_re_startI2C
  5386 ;;		_readI2C
  5387 ;;		_sendI2C
  5388 ;;		_sendNoAckI2C
  5389 ;;		_startI2C
  5390 ;;		_stopI2C
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;;		_printReglageH
  5394 ;;		_incrMin
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function _readMin
  5400  04DD                     _readMin:	
  5401                           
  5402                           ;RTC.c: 75: uint8_t minute = 0;
  5403                           
  5404                           ;incstack = 0
  5405                           ; Regs used in _readMin: [wreg+status,2+status,0+pclath+cstack]
  5406  04DD  01F4               	clrf	readMin@minute
  5407                           
  5408                           ;RTC.c: 76: startI2C();
  5409  04DE  3186  26CC  3184   	fcall	_startI2C
  5410                           
  5411                           ;RTC.c: 77: sendI2C(0b11011110);
  5412  04E1  30DE               	movlw	222
  5413  04E2  3186  26B4  3184   	fcall	_sendI2C
  5414  04E5                     l548:	
  5415                           ;RTC.c: 78: while (SSP1CON2bits.ACKSTAT == 1);
  5416                           
  5417  04E5  0024               	movlb	4	; select bank4
  5418  04E6  1B16               	btfsc	22,6	;volatile
  5419  04E7  2CE5               	goto	l548
  5420                           
  5421                           ;RTC.c: 79: sendI2C(0x01);
  5422  04E8  3001               	movlw	1
  5423  04E9  3186  26B4  3184   	fcall	_sendI2C
  5424  04EC                     l551:	
  5425                           ;RTC.c: 80: while (SSP1CON2bits.ACKSTAT == 1);
  5426                           
  5427  04EC  0024               	movlb	4	; select bank4
  5428  04ED  1B16               	btfsc	22,6	;volatile
  5429  04EE  2CEC               	goto	l551
  5430                           
  5431                           ;RTC.c: 81: re_startI2C();
  5432  04EF  3186  26D5  3184   	fcall	_re_startI2C
  5433                           
  5434                           ;RTC.c: 82: sendI2C(0b11011111);
  5435  04F2  30DF               	movlw	223
  5436  04F3  3186  26B4  3184   	fcall	_sendI2C
  5437  04F6                     l554:	
  5438                           ;RTC.c: 83: while (SSP1CON2bits.ACKSTAT == 1);
  5439                           
  5440  04F6  0024               	movlb	4	; select bank4
  5441  04F7  1B16               	btfsc	22,6	;volatile
  5442  04F8  2CF6               	goto	l554
  5443                           
  5444                           ;RTC.c: 84: minute = readI2C();
  5445  04F9  3186  2663  3184   	fcall	_readI2C
  5446  04FC  00F3               	movwf	??_readMin
  5447  04FD  0873               	movf	??_readMin,w
  5448  04FE  00F4               	movwf	readMin@minute
  5449                           
  5450                           ;RTC.c: 85: sendNoAckI2C();
  5451  04FF  3187  2705  3184   	fcall	_sendNoAckI2C
  5452                           
  5453                           ;RTC.c: 86: stopI2C();
  5454  0502  3186  26DD         	fcall	_stopI2C
  5455                           
  5456                           ;RTC.c: 87: return minute;
  5457  0504  0874               	movf	readMin@minute,w
  5458  0505  0008               	return
  5459  0506                     __end_of_readMin:	
  5460                           
  5461                           	psect	text11
  5462  056C                     __ptext11:	
  5463 ;; *************** function _changeMin *****************
  5464 ;; Defined at:
  5465 ;;		line 34 in file "RTC.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  minute          1    wreg     unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  minute          1    2[COMMON] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5479 ;;      Params:         0       0       0       0       0       0       0       0
  5480 ;;      Locals:         1       0       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0
  5482 ;;      Totals:         1       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        1 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    5
  5486 ;; This function calls:
  5487 ;;		_sendI2C
  5488 ;;		_startI2C
  5489 ;;		_stopI2C
  5490 ;; This function is called by:
  5491 ;;		_incrMin
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _changeMin
  5497  056C                     _changeMin:	
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in _changeMin: [wreg+status,2+status,0+pclath+cstack]
  5501                           ;changeMin@minute stored from wreg
  5502  056C  00F2               	movwf	changeMin@minute
  5503                           
  5504                           ;RTC.c: 36: startI2C();
  5505  056D  3186  26CC  3185   	fcall	_startI2C
  5506                           
  5507                           ;RTC.c: 37: sendI2C(0b11011110);
  5508  0570  30DE               	movlw	222
  5509  0571  3186  26B4  3185   	fcall	_sendI2C
  5510  0574                     l512:	
  5511                           ;RTC.c: 38: while (SSP1CON2bits.ACKSTAT == 1);
  5512                           
  5513  0574  0024               	movlb	4	; select bank4
  5514  0575  1B16               	btfsc	22,6	;volatile
  5515  0576  2D74               	goto	l512
  5516                           
  5517                           ;RTC.c: 39: sendI2C(0x01);
  5518  0577  3001               	movlw	1
  5519  0578  3186  26B4  3185   	fcall	_sendI2C
  5520  057B                     l515:	
  5521                           ;RTC.c: 40: while (SSP1CON2bits.ACKSTAT == 1);
  5522                           
  5523  057B  0024               	movlb	4	; select bank4
  5524  057C  1B16               	btfsc	22,6	;volatile
  5525  057D  2D7B               	goto	l515
  5526                           
  5527                           ;RTC.c: 41: sendI2C(minute);
  5528  057E  0872               	movf	changeMin@minute,w
  5529  057F  3186  26B4  3185   	fcall	_sendI2C
  5530  0582                     l518:	
  5531                           ;RTC.c: 42: while (SSP1CON2bits.ACKSTAT == 1);
  5532                           
  5533  0582  0024               	movlb	4	; select bank4
  5534  0583  1B16               	btfsc	22,6	;volatile
  5535  0584  2D82               	goto	l518
  5536                           
  5537                           ;RTC.c: 43: stopI2C();
  5538  0585  3186  26DD         	fcall	_stopI2C
  5539  0587  0008               	return
  5540  0588                     __end_of_changeMin:	
  5541                           
  5542                           	psect	text12
  5543  02EB                     __ptext12:	
  5544 ;; *************** function _incrHeure *****************
  5545 ;; Defined at:
  5546 ;;		line 134 in file "RTC.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;		None
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  heure           1    2[BANK0 ] unsigned char 
  5551 ;;  uniteH          1    1[BANK0 ] unsigned char 
  5552 ;;  dizaineH        1    0[BANK0 ] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5562 ;;      Params:         0       0       0       0       0       0       0       0
  5563 ;;      Locals:         0       3       0       0       0       0       0       0
  5564 ;;      Temps:          3       0       0       0       0       0       0       0
  5565 ;;      Totals:         3       3       0       0       0       0       0       0
  5566 ;;Total ram usage:        6 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    6
  5569 ;; This function calls:
  5570 ;;		_bitExtracted
  5571 ;;		_changeHeure
  5572 ;;		_readHr
  5573 ;; This function is called by:
  5574 ;;		_main
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _incrHeure
  5580  02EB                     _incrHeure:	
  5581                           
  5582                           ;RTC.c: 136: uint8_t heure=0;
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _incrHeure: [wreg+status,2+status,0+pclath+cstack]
  5586  02EB  0020               	movlb	0	; select bank0
  5587  02EC  01A2               	clrf	incrHeure@heure
  5588                           
  5589                           ;RTC.c: 137: uint8_t dizaineH=0;
  5590  02ED  01A0               	clrf	incrHeure@dizaineH
  5591                           
  5592                           ;RTC.c: 138: uint8_t uniteH=0;
  5593  02EE  01A1               	clrf	incrHeure@uniteH
  5594                           
  5595                           ;RTC.c: 139: heure = readHr();
  5596  02EF  3185  2506  3182   	fcall	_readHr
  5597  02F2  00F6               	movwf	??_incrHeure
  5598  02F3  0876               	movf	??_incrHeure,w
  5599  02F4  0020               	movlb	0	; select bank0
  5600  02F5  00A2               	movwf	incrHeure@heure
  5601                           
  5602                           ;RTC.c: 140: uniteH = bitExtracted(heure, 4, 1);
  5603  02F6  3004               	movlw	4
  5604  02F7  00F6               	movwf	??_incrHeure
  5605  02F8  0876               	movf	??_incrHeure,w
  5606  02F9  00F1               	movwf	bitExtracted@k
  5607  02FA  01F2               	clrf	bitExtracted@p
  5608  02FB  0AF2               	incf	bitExtracted@p,f
  5609  02FC  0822               	movf	incrHeure@heure,w
  5610  02FD  3186  263A  3182   	fcall	_bitExtracted
  5611  0300  00F7               	movwf	??_incrHeure+1
  5612  0301  0877               	movf	??_incrHeure+1,w
  5613  0302  0020               	movlb	0	; select bank0
  5614  0303  00A1               	movwf	incrHeure@uniteH
  5615                           
  5616                           ;RTC.c: 141: dizaineH = bitExtracted(heure, 2, 5);
  5617  0304  3002               	movlw	2
  5618  0305  00F6               	movwf	??_incrHeure
  5619  0306  0876               	movf	??_incrHeure,w
  5620  0307  00F1               	movwf	bitExtracted@k
  5621  0308  3005               	movlw	5
  5622  0309  00F7               	movwf	??_incrHeure+1
  5623  030A  0877               	movf	??_incrHeure+1,w
  5624  030B  00F2               	movwf	bitExtracted@p
  5625  030C  0822               	movf	incrHeure@heure,w
  5626  030D  3186  263A  3182   	fcall	_bitExtracted
  5627  0310  00F8               	movwf	??_incrHeure+2
  5628  0311  0878               	movf	??_incrHeure+2,w
  5629  0312  0020               	movlb	0	; select bank0
  5630  0313  00A0               	movwf	incrHeure@dizaineH
  5631                           
  5632                           ;RTC.c: 142: heure=0;
  5633  0314  01A2               	clrf	incrHeure@heure
  5634                           
  5635                           ;RTC.c: 143: uniteH=uniteH+1;
  5636  0315  0821               	movf	incrHeure@uniteH,w
  5637  0316  3E01               	addlw	1
  5638  0317  00F6               	movwf	??_incrHeure
  5639  0318  0876               	movf	??_incrHeure,w
  5640  0319  00A1               	movwf	incrHeure@uniteH
  5641                           
  5642                           ;RTC.c: 144: if(uniteH>9)
  5643  031A  300A               	movlw	10
  5644  031B  0221               	subwf	incrHeure@uniteH,w
  5645  031C  1C03               	skipc
  5646  031D  2B24               	goto	l2691
  5647                           
  5648                           ;RTC.c: 145: {
  5649                           ;RTC.c: 146: uniteH=0;
  5650  031E  01A1               	clrf	incrHeure@uniteH
  5651                           
  5652                           ;RTC.c: 147: dizaineH=dizaineH+1;
  5653  031F  0820               	movf	incrHeure@dizaineH,w
  5654  0320  3E01               	addlw	1
  5655  0321  00F6               	movwf	??_incrHeure
  5656  0322  0876               	movf	??_incrHeure,w
  5657  0323  00A0               	movwf	incrHeure@dizaineH
  5658  0324                     l2691:	
  5659                           
  5660                           ;RTC.c: 148: }
  5661                           ;RTC.c: 149: if(dizaineH>2 && uniteH==4)
  5662  0324  3003               	movlw	3
  5663  0325  0220               	subwf	incrHeure@dizaineH,w
  5664  0326  1C03               	skipc
  5665  0327  2B32               	goto	l2699
  5666  0328  3004               	movlw	4
  5667  0329  0621               	xorwf	incrHeure@uniteH,w
  5668  032A  1D03               	btfss	3,2
  5669  032B  2B32               	goto	l2699
  5670                           
  5671                           ;RTC.c: 150: {
  5672                           ;RTC.c: 151: dizaineH=0;
  5673  032C  01A0               	clrf	incrHeure@dizaineH
  5674                           
  5675                           ;RTC.c: 152: uniteH=uniteH+1;
  5676  032D  0821               	movf	incrHeure@uniteH,w
  5677  032E  3E01               	addlw	1
  5678  032F  00F6               	movwf	??_incrHeure
  5679  0330  0876               	movf	??_incrHeure,w
  5680  0331  00A1               	movwf	incrHeure@uniteH
  5681  0332                     l2699:	
  5682                           
  5683                           ;RTC.c: 153: }
  5684                           ;RTC.c: 154: heure=heure+dizaineH;
  5685  0332  0822               	movf	incrHeure@heure,w
  5686  0333  0720               	addwf	incrHeure@dizaineH,w
  5687  0334  00F6               	movwf	??_incrHeure
  5688  0335  0876               	movf	??_incrHeure,w
  5689  0336  00A2               	movwf	incrHeure@heure
  5690                           
  5691                           ;RTC.c: 155: heure=heure<<4;
  5692  0337  0822               	movf	incrHeure@heure,w
  5693  0338  00F6               	movwf	??_incrHeure
  5694  0339  3003               	movlw	3
  5695  033A                     u2205:	
  5696  033A  35F6               	lslf	??_incrHeure,f
  5697  033B  3EFF               	addlw	-1
  5698  033C  1D03               	skipz
  5699  033D  2B3A               	goto	u2205
  5700  033E  3576               	lslf	??_incrHeure,w
  5701  033F  00F7               	movwf	??_incrHeure+1
  5702  0340  0877               	movf	??_incrHeure+1,w
  5703  0341  00A2               	movwf	incrHeure@heure
  5704                           
  5705                           ;RTC.c: 156: heure=heure+uniteH;
  5706  0342  0822               	movf	incrHeure@heure,w
  5707  0343  0721               	addwf	incrHeure@uniteH,w
  5708  0344  00F6               	movwf	??_incrHeure
  5709  0345  0876               	movf	??_incrHeure,w
  5710  0346  00A2               	movwf	incrHeure@heure
  5711                           
  5712                           ;RTC.c: 157: changeHeure(heure);
  5713  0347  0822               	movf	incrHeure@heure,w
  5714  0348  3185  2588         	fcall	_changeHeure
  5715  034A  0008               	return
  5716  034B                     __end_of_incrHeure:	
  5717                           
  5718                           	psect	text13
  5719  0506                     __ptext13:	
  5720 ;; *************** function _readHr *****************
  5721 ;; Defined at:
  5722 ;;		line 90 in file "RTC.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  heure           1    4[COMMON] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      unsigned char 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0, pclath, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5736 ;;      Params:         0       0       0       0       0       0       0       0
  5737 ;;      Locals:         1       0       0       0       0       0       0       0
  5738 ;;      Temps:          1       0       0       0       0       0       0       0
  5739 ;;      Totals:         2       0       0       0       0       0       0       0
  5740 ;;Total ram usage:        2 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    5
  5743 ;; This function calls:
  5744 ;;		_re_startI2C
  5745 ;;		_readI2C
  5746 ;;		_sendI2C
  5747 ;;		_sendNoAckI2C
  5748 ;;		_startI2C
  5749 ;;		_stopI2C
  5750 ;; This function is called by:
  5751 ;;		_main
  5752 ;;		_printReglageH
  5753 ;;		_incrHeure
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function _readHr
  5759  0506                     _readHr:	
  5760                           
  5761                           ;RTC.c: 91: uint8_t heure = 0;
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _readHr: [wreg+status,2+status,0+pclath+cstack]
  5765  0506  01F4               	clrf	readHr@heure
  5766                           
  5767                           ;RTC.c: 92: startI2C();
  5768  0507  3186  26CC  3185   	fcall	_startI2C
  5769                           
  5770                           ;RTC.c: 93: sendI2C(0b11011110);
  5771  050A  30DE               	movlw	222
  5772  050B  3186  26B4  3185   	fcall	_sendI2C
  5773  050E                     l560:	
  5774                           ;RTC.c: 94: while (SSP1CON2bits.ACKSTAT == 1);
  5775                           
  5776  050E  0024               	movlb	4	; select bank4
  5777  050F  1B16               	btfsc	22,6	;volatile
  5778  0510  2D0E               	goto	l560
  5779                           
  5780                           ;RTC.c: 95: sendI2C(0x02);
  5781  0511  3002               	movlw	2
  5782  0512  3186  26B4  3185   	fcall	_sendI2C
  5783  0515                     l563:	
  5784                           ;RTC.c: 96: while (SSP1CON2bits.ACKSTAT == 1);
  5785                           
  5786  0515  0024               	movlb	4	; select bank4
  5787  0516  1B16               	btfsc	22,6	;volatile
  5788  0517  2D15               	goto	l563
  5789                           
  5790                           ;RTC.c: 97: re_startI2C();
  5791  0518  3186  26D5  3185   	fcall	_re_startI2C
  5792                           
  5793                           ;RTC.c: 98: sendI2C(0b11011111);
  5794  051B  30DF               	movlw	223
  5795  051C  3186  26B4  3185   	fcall	_sendI2C
  5796  051F                     l566:	
  5797                           ;RTC.c: 99: while (SSP1CON2bits.ACKSTAT == 1);
  5798                           
  5799  051F  0024               	movlb	4	; select bank4
  5800  0520  1B16               	btfsc	22,6	;volatile
  5801  0521  2D1F               	goto	l566
  5802                           
  5803                           ;RTC.c: 100: heure = readI2C();
  5804  0522  3186  2663  3185   	fcall	_readI2C
  5805  0525  00F3               	movwf	??_readHr
  5806  0526  0873               	movf	??_readHr,w
  5807  0527  00F4               	movwf	readHr@heure
  5808                           
  5809                           ;RTC.c: 101: sendNoAckI2C();
  5810  0528  3187  2705  3185   	fcall	_sendNoAckI2C
  5811                           
  5812                           ;RTC.c: 102: stopI2C();
  5813  052B  3186  26DD         	fcall	_stopI2C
  5814                           
  5815                           ;RTC.c: 103: return heure;
  5816  052D  0874               	movf	readHr@heure,w
  5817  052E  0008               	return
  5818  052F                     __end_of_readHr:	
  5819                           
  5820                           	psect	text14
  5821  0705                     __ptext14:	
  5822 ;; *************** function _sendNoAckI2C *****************
  5823 ;; Defined at:
  5824 ;;		line 88 in file "i2c.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5838 ;;      Params:         0       0       0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		_waitI2C
  5847 ;; This function is called by:
  5848 ;;		_readSec
  5849 ;;		_readMin
  5850 ;;		_readHr
  5851 ;;		_readData
  5852 ;;		_getData
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _sendNoAckI2C
  5858  0705                     _sendNoAckI2C:	
  5859                           
  5860                           ;i2c.c: 90: waitI2C();
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _sendNoAckI2C: [wreg+status,2+status,0+pclath+cstack]
  5864  0705  3186  26E5         	fcall	_waitI2C
  5865                           
  5866                           ;i2c.c: 91: SSP1CON2bits.ACKDT = 1;
  5867  0707  0024               	movlb	4	; select bank4
  5868  0708  1696               	bsf	22,5	;volatile
  5869                           
  5870                           ;i2c.c: 92: SSP1CON2bits.ACKEN = 1;
  5871  0709  1616               	bsf	22,4	;volatile
  5872  070A  0008               	return
  5873  070B                     __end_of_sendNoAckI2C:	
  5874                           
  5875                           	psect	text15
  5876  0663                     __ptext15:	
  5877 ;; *************** function _readI2C *****************
  5878 ;; Defined at:
  5879 ;;		line 64 in file "i2c.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  temp            1    2[COMMON] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      unsigned char 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, pclath, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5893 ;;      Params:         0       0       0       0       0       0       0       0
  5894 ;;      Locals:         1       0       0       0       0       0       0       0
  5895 ;;      Temps:          1       0       0       0       0       0       0       0
  5896 ;;      Totals:         2       0       0       0       0       0       0       0
  5897 ;;Total ram usage:        2 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    4
  5900 ;; This function calls:
  5901 ;;		_waitI2C
  5902 ;; This function is called by:
  5903 ;;		_readSec
  5904 ;;		_readMin
  5905 ;;		_readHr
  5906 ;;		_readData
  5907 ;;		_getData
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _readI2C
  5913  0663                     _readI2C:	
  5914                           
  5915                           ;i2c.c: 66: uint8_t temp;
  5916                           ;i2c.c: 67: waitI2C();
  5917                           
  5918                           ;incstack = 0
  5919                           ; Regs used in _readI2C: [wreg+status,2+status,0+pclath+cstack]
  5920  0663  3186  26E5  3186   	fcall	_waitI2C
  5921                           
  5922                           ;i2c.c: 68: SSP1CON2bits.RCEN = 1;
  5923  0666  0024               	movlb	4	; select bank4
  5924  0667  1596               	bsf	22,3	;volatile
  5925                           
  5926                           ;i2c.c: 69: waitI2C();
  5927  0668  3186  26E5  3186   	fcall	_waitI2C
  5928  066B                     l360:	
  5929                           ;i2c.c: 70: while(SSP1CON2bits.RCEN == 1);
  5930                           
  5931  066B  0024               	movlb	4	; select bank4
  5932  066C  1996               	btfsc	22,3	;volatile
  5933  066D  2E6B               	goto	l360
  5934                           
  5935                           ;i2c.c: 71: temp = SSP1BUF;
  5936  066E  0811               	movf	17,w	;volatile
  5937  066F  00F1               	movwf	??_readI2C
  5938  0670  0871               	movf	??_readI2C,w
  5939  0671  00F2               	movwf	readI2C@temp
  5940                           
  5941                           ;i2c.c: 73: return temp;
  5942  0672  0872               	movf	readI2C@temp,w
  5943  0673  0008               	return
  5944  0674                     __end_of_readI2C:	
  5945                           
  5946                           	psect	text16
  5947  06D5                     __ptext16:	
  5948 ;; *************** function _re_startI2C *****************
  5949 ;; Defined at:
  5950 ;;		line 75 in file "i2c.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0, pclath, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5964 ;;      Params:         0       0       0       0       0       0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0
  5967 ;;      Totals:         0       0       0       0       0       0       0       0
  5968 ;;Total ram usage:        0 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    4
  5971 ;; This function calls:
  5972 ;;		_waitI2C
  5973 ;; This function is called by:
  5974 ;;		_readSec
  5975 ;;		_readMin
  5976 ;;		_readHr
  5977 ;;		_readData
  5978 ;;		_getData
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _re_startI2C
  5984  06D5                     _re_startI2C:	
  5985                           
  5986                           ;i2c.c: 77: waitI2C();
  5987                           
  5988                           ;incstack = 0
  5989                           ; Regs used in _re_startI2C: [wreg+status,2+status,0+pclath+cstack]
  5990  06D5  3186  26E5  3186   	fcall	_waitI2C
  5991                           
  5992                           ;i2c.c: 78: SSP1CON2bits.RSEN = 1;
  5993  06D8  0024               	movlb	4	; select bank4
  5994  06D9  1496               	bsf	22,1	;volatile
  5995  06DA                     l366:	
  5996                           ;i2c.c: 79: while(SSP1CON2bits.RSEN == 1);
  5997                           
  5998  06DA  1C96               	btfss	22,1	;volatile
  5999  06DB  0008               	return
  6000  06DC  2EDA               	goto	l366
  6001  06DD                     __end_of_re_startI2C:	
  6002                           
  6003                           	psect	text17
  6004  0588                     __ptext17:	
  6005 ;; *************** function _changeHeure *****************
  6006 ;; Defined at:
  6007 ;;		line 46 in file "RTC.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  heure           1    wreg     unsigned char 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  heure           1    2[COMMON] unsigned char 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6021 ;;      Params:         0       0       0       0       0       0       0       0
  6022 ;;      Locals:         1       0       0       0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0
  6024 ;;      Totals:         1       0       0       0       0       0       0       0
  6025 ;;Total ram usage:        1 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    5
  6028 ;; This function calls:
  6029 ;;		_sendI2C
  6030 ;;		_startI2C
  6031 ;;		_stopI2C
  6032 ;; This function is called by:
  6033 ;;		_incrHeure
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function _changeHeure
  6039  0588                     _changeHeure:	
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in _changeHeure: [wreg+status,2+status,0+pclath+cstack]
  6043                           ;changeHeure@heure stored from wreg
  6044  0588  00F2               	movwf	changeHeure@heure
  6045                           
  6046                           ;RTC.c: 48: startI2C();
  6047  0589  3186  26CC  3185   	fcall	_startI2C
  6048                           
  6049                           ;RTC.c: 49: sendI2C(0b11011110);
  6050  058C  30DE               	movlw	222
  6051  058D  3186  26B4  3185   	fcall	_sendI2C
  6052  0590                     l524:	
  6053                           ;RTC.c: 50: while (SSP1CON2bits.ACKSTAT == 1);
  6054                           
  6055  0590  0024               	movlb	4	; select bank4
  6056  0591  1B16               	btfsc	22,6	;volatile
  6057  0592  2D90               	goto	l524
  6058                           
  6059                           ;RTC.c: 51: sendI2C(0x02);
  6060  0593  3002               	movlw	2
  6061  0594  3186  26B4  3185   	fcall	_sendI2C
  6062  0597                     l527:	
  6063                           ;RTC.c: 52: while (SSP1CON2bits.ACKSTAT == 1);
  6064                           
  6065  0597  0024               	movlb	4	; select bank4
  6066  0598  1B16               	btfsc	22,6	;volatile
  6067  0599  2D97               	goto	l527
  6068                           
  6069                           ;RTC.c: 53: sendI2C(heure);
  6070  059A  0872               	movf	changeHeure@heure,w
  6071  059B  3186  26B4  3185   	fcall	_sendI2C
  6072  059E                     l530:	
  6073                           ;RTC.c: 54: while (SSP1CON2bits.ACKSTAT == 1);
  6074                           
  6075  059E  0024               	movlb	4	; select bank4
  6076  059F  1B16               	btfsc	22,6	;volatile
  6077  05A0  2D9E               	goto	l530
  6078                           
  6079                           ;RTC.c: 55: stopI2C();
  6080  05A1  3186  26DD         	fcall	_stopI2C
  6081  05A3  0008               	return
  6082  05A4                     __end_of_changeHeure:	
  6083                           
  6084                           	psect	text18
  6085  06DD                     __ptext18:	
  6086 ;; *************** function _stopI2C *****************
  6087 ;; Defined at:
  6088 ;;		line 50 in file "i2c.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6102 ;;      Params:         0       0       0       0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0
  6105 ;;      Totals:         0       0       0       0       0       0       0       0
  6106 ;;Total ram usage:        0 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    4
  6109 ;; This function calls:
  6110 ;;		_waitI2C
  6111 ;; This function is called by:
  6112 ;;		_writeInst
  6113 ;;		_writeLCD
  6114 ;;		_initRTC
  6115 ;;		_changeMin
  6116 ;;		_changeHeure
  6117 ;;		_readSec
  6118 ;;		_readMin
  6119 ;;		_readHr
  6120 ;;		_writeData
  6121 ;;		_readData
  6122 ;;		_getData
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           
  6127                           ;psect for function _stopI2C
  6128  06DD                     _stopI2C:	
  6129                           
  6130                           ;i2c.c: 52: waitI2C();
  6131                           
  6132                           ;incstack = 0
  6133                           ; Regs used in _stopI2C: [wreg+status,2+status,0+pclath+cstack]
  6134  06DD  3186  26E5  3186   	fcall	_waitI2C
  6135                           
  6136                           ;i2c.c: 53: SSP1CON2bits.PEN = 1;
  6137  06E0  0024               	movlb	4	; select bank4
  6138  06E1  1516               	bsf	22,2	;volatile
  6139  06E2                     l348:	
  6140                           ;i2c.c: 54: while(SSP1CON2bits.PEN == 1);
  6141                           
  6142  06E2  1D16               	btfss	22,2	;volatile
  6143  06E3  0008               	return
  6144  06E4  2EE2               	goto	l348
  6145  06E5                     __end_of_stopI2C:	
  6146                           
  6147                           	psect	text19
  6148  06CC                     __ptext19:	
  6149 ;; *************** function _startI2C *****************
  6150 ;; Defined at:
  6151 ;;		line 40 in file "i2c.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0, pclath, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6165 ;;      Params:         0       0       0       0       0       0       0       0
  6166 ;;      Locals:         0       0       0       0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0
  6168 ;;      Totals:         0       0       0       0       0       0       0       0
  6169 ;;Total ram usage:        0 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    4
  6172 ;; This function calls:
  6173 ;;		_waitI2C
  6174 ;; This function is called by:
  6175 ;;		_writeInst
  6176 ;;		_writeLCD
  6177 ;;		_initRTC
  6178 ;;		_changeMin
  6179 ;;		_changeHeure
  6180 ;;		_readSec
  6181 ;;		_readMin
  6182 ;;		_readHr
  6183 ;;		_writeData
  6184 ;;		_readData
  6185 ;;		_getData
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           
  6190                           ;psect for function _startI2C
  6191  06CC                     _startI2C:	
  6192                           
  6193                           ;i2c.c: 42: waitI2C();
  6194                           
  6195                           ;incstack = 0
  6196                           ; Regs used in _startI2C: [wreg+status,2+status,0+pclath+cstack]
  6197  06CC  3186  26E5  3186   	fcall	_waitI2C
  6198                           
  6199                           ;i2c.c: 43: SSP1CON2=0b00000001;
  6200  06CF  3001               	movlw	1
  6201  06D0  0024               	movlb	4	; select bank4
  6202  06D1  0096               	movwf	22	;volatile
  6203  06D2                     l336:	
  6204                           ;i2c.c: 44: while(SSP1CON2bits.SEN == 1);
  6205                           
  6206  06D2  1C16               	btfss	22,0	;volatile
  6207  06D3  0008               	return
  6208  06D4  2ED2               	goto	l336
  6209  06D5                     __end_of_startI2C:	
  6210                           
  6211                           	psect	text20
  6212  06B4                     __ptext20:	
  6213 ;; *************** function _sendI2C *****************
  6214 ;; Defined at:
  6215 ;;		line 56 in file "i2c.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  data            1    wreg     unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  data            1    1[COMMON] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, pclath, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6229 ;;      Params:         0       0       0       0       0       0       0       0
  6230 ;;      Locals:         1       0       0       0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0
  6232 ;;      Totals:         1       0       0       0       0       0       0       0
  6233 ;;Total ram usage:        1 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    4
  6236 ;; This function calls:
  6237 ;;		_waitI2C
  6238 ;; This function is called by:
  6239 ;;		_writeInst
  6240 ;;		_writeLCD
  6241 ;;		_initRTC
  6242 ;;		_changeMin
  6243 ;;		_changeHeure
  6244 ;;		_readSec
  6245 ;;		_readMin
  6246 ;;		_readHr
  6247 ;;		_writeData
  6248 ;;		_readData
  6249 ;;		_getData
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           
  6254                           ;psect for function _sendI2C
  6255  06B4                     _sendI2C:	
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _sendI2C: [wreg+status,2+status,0+pclath+cstack]
  6259                           ;sendI2C@data stored from wreg
  6260  06B4  00F1               	movwf	sendI2C@data
  6261                           
  6262                           ;i2c.c: 58: waitI2C();
  6263  06B5  3186  26E5  3186   	fcall	_waitI2C
  6264                           
  6265                           ;i2c.c: 59: SSP1BUF = data;
  6266  06B8  0871               	movf	sendI2C@data,w
  6267  06B9  0024               	movlb	4	; select bank4
  6268  06BA  0091               	movwf	17	;volatile
  6269                           
  6270                           ;i2c.c: 60: PIR1bits.SSP1IF = 0;
  6271  06BB  0020               	movlb	0	; select bank0
  6272  06BC  1191               	bcf	17,3	;volatile
  6273  06BD                     l354:	
  6274                           ;i2c.c: 61: while(PIR1bits.SSP1IF == 0);
  6275                           
  6276  06BD  1991               	btfsc	17,3	;volatile
  6277  06BE  0008               	return
  6278  06BF  2EBD               	goto	l354
  6279  06C0                     __end_of_sendI2C:	
  6280                           
  6281                           	psect	text21
  6282  06E5                     __ptext21:	
  6283 ;; *************** function _waitI2C *****************
  6284 ;; Defined at:
  6285 ;;		line 46 in file "i2c.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;		None
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6299 ;;      Params:         0       0       0       0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0
  6302 ;;      Totals:         0       0       0       0       0       0       0       0
  6303 ;;Total ram usage:        0 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    3
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_startI2C
  6310 ;;		_stopI2C
  6311 ;;		_sendI2C
  6312 ;;		_readI2C
  6313 ;;		_re_startI2C
  6314 ;;		_sendNoAckI2C
  6315 ;;		_sendAckI2C
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           
  6320                           ;psect for function _waitI2C
  6321  06E5                     _waitI2C:	
  6322  06E5                     l342:	
  6323                           ;i2c.c: 48: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in _waitI2C: [wreg+status,2]
  6327                           
  6328  06E5  0024               	movlb	4	; select bank4
  6329  06E6  1914               	btfsc	20,2	;volatile
  6330  06E7  2EE5               	goto	l342
  6331  06E8  0816               	movf	22,w	;volatile
  6332  06E9  391F               	andlw	31
  6333  06EA  1903               	btfsc	3,2
  6334  06EB  0008               	return
  6335  06EC  2EE5               	goto	l342
  6336  06ED                     __end_of_waitI2C:	
  6337                           
  6338                           	psect	text22
  6339  063A                     __ptext22:	
  6340 ;; *************** function _bitExtracted *****************
  6341 ;; Defined at:
  6342 ;;		line 4 in file "conversion.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  number          1    wreg     unsigned char 
  6345 ;;  k               1    1[COMMON] unsigned char 
  6346 ;;  p               1    2[COMMON] unsigned char 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  number          1    5[COMMON] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      unsigned char 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6358 ;;      Params:         2       0       0       0       0       0       0       0
  6359 ;;      Locals:         1       0       0       0       0       0       0       0
  6360 ;;      Temps:          2       0       0       0       0       0       0       0
  6361 ;;      Totals:         5       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        5 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    3
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;;		_printReglageH
  6370 ;;		_incrMin
  6371 ;;		_incrHeure
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           
  6376                           ;psect for function _bitExtracted
  6377  063A                     _bitExtracted:	
  6378                           
  6379                           ;incstack = 0
  6380                           ; Regs used in _bitExtracted: [wreg+status,2+status,0]
  6381                           ;bitExtracted@number stored from wreg
  6382  063A  00F5               	movwf	bitExtracted@number
  6383                           
  6384                           ;conversion.c: 5: return (((1 << k) - 1) & (number >> (p - 1)));
  6385  063B  0875               	movf	bitExtracted@number,w
  6386  063C  00F3               	movwf	??_bitExtracted
  6387  063D  0872               	movf	bitExtracted@p,w
  6388  063E  3EFF               	addlw	-1
  6389  063F  0A89               	incf	9,f
  6390  0640  2E42               	goto	u1874
  6391  0641                     u1875:	
  6392  0641  36F3               	lsrf	??_bitExtracted,f
  6393  0642                     u1874:	
  6394  0642  0B89               	decfsz	9,f
  6395  0643  2E41               	goto	u1875
  6396  0644  3001               	movlw	1
  6397  0645  00F4               	movwf	??_bitExtracted+1
  6398  0646  0A71               	incf	bitExtracted@k,w
  6399  0647  2E49               	goto	u1884
  6400  0648                     u1885:	
  6401  0648  35F4               	lslf	??_bitExtracted+1,f
  6402  0649                     u1884:	
  6403  0649  0B89               	decfsz	9,f
  6404  064A  2E48               	goto	u1885
  6405  064B  0874               	movf	??_bitExtracted+1,w
  6406  064C  3EFF               	addlw	255
  6407  064D  0573               	andwf	??_bitExtracted,w
  6408  064E  0008               	return
  6409  064F                     __end_of_bitExtracted:	
  6410                           
  6411                           	psect	text23
  6412  05A4                     __ptext23:	
  6413 ;; *************** function _convertFromBcd *****************
  6414 ;; Defined at:
  6415 ;;		line 8 in file "conversion.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  byteBCD         1    wreg     unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  byteBCD         1    9[COMMON] unsigned char 
  6420 ;;  byteLSB         1    8[COMMON] unsigned char 
  6421 ;;  byteMSB         1    7[COMMON] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      unsigned char 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0, pclath, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6431 ;;      Params:         0       0       0       0       0       0       0       0
  6432 ;;      Locals:         3       0       0       0       0       0       0       0
  6433 ;;      Temps:          2       0       0       0       0       0       0       0
  6434 ;;      Totals:         5       0       0       0       0       0       0       0
  6435 ;;Total ram usage:        5 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    4
  6438 ;; This function calls:
  6439 ;;		___bmul
  6440 ;; This function is called by:
  6441 ;;		_main
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function _convertFromBcd
  6447  05A4                     _convertFromBcd:	
  6448                           
  6449                           ;incstack = 0
  6450                           ; Regs used in _convertFromBcd: [wreg+status,2+status,0+pclath+cstack]
  6451                           ;convertFromBcd@byteBCD stored from wreg
  6452  05A4  00F9               	movwf	convertFromBcd@byteBCD
  6453                           
  6454                           ;conversion.c: 9: uint8_t byteMSB = 0;
  6455  05A5  01F7               	clrf	convertFromBcd@byteMSB
  6456                           
  6457                           ;conversion.c: 10: uint8_t byteLSB = 0;
  6458  05A6  01F8               	clrf	convertFromBcd@byteLSB
  6459                           
  6460                           ;conversion.c: 11: byteMSB = (byteBCD & 0b11110000) >> 4;
  6461  05A7  0879               	movf	convertFromBcd@byteBCD,w
  6462  05A8  00F5               	movwf	??_convertFromBcd
  6463  05A9  3004               	movlw	4
  6464  05AA                     u1365:	
  6465  05AA  36F5               	lsrf	??_convertFromBcd,f
  6466  05AB  0B89               	decfsz	9,f
  6467  05AC  2DAA               	goto	u1365
  6468  05AD  0875               	movf	??_convertFromBcd,w
  6469  05AE  390F               	andlw	15
  6470  05AF  00F6               	movwf	??_convertFromBcd+1
  6471  05B0  0876               	movf	??_convertFromBcd+1,w
  6472  05B1  00F7               	movwf	convertFromBcd@byteMSB
  6473                           
  6474                           ;conversion.c: 12: byteLSB = (byteBCD & 0b00001111);
  6475  05B2  0879               	movf	convertFromBcd@byteBCD,w
  6476  05B3  390F               	andlw	15
  6477  05B4  00F5               	movwf	??_convertFromBcd
  6478  05B5  0875               	movf	??_convertFromBcd,w
  6479  05B6  00F8               	movwf	convertFromBcd@byteLSB
  6480                           
  6481                           ;conversion.c: 13: return ((byteMSB * 10) + byteLSB);
  6482  05B7  300A               	movlw	10
  6483  05B8  00F5               	movwf	??_convertFromBcd
  6484  05B9  0875               	movf	??_convertFromBcd,w
  6485  05BA  00F1               	movwf	___bmul@multiplicand
  6486  05BB  0877               	movf	convertFromBcd@byteMSB,w
  6487  05BC  3186  2674         	fcall	___bmul
  6488  05BE  0778               	addwf	convertFromBcd@byteLSB,w
  6489  05BF  0008               	return
  6490  05C0                     __end_of_convertFromBcd:	
  6491                           
  6492                           	psect	text24
  6493  0674                     __ptext24:	
  6494 ;; *************** function ___bmul *****************
  6495 ;; Defined at:
  6496 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/Umul8.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  multiplier      1    wreg     unsigned char 
  6499 ;;  multiplicand    1    1[COMMON] unsigned char 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  multiplier      1    4[COMMON] unsigned char 
  6502 ;;  product         1    3[COMMON] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      unsigned char 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6512 ;;      Params:         1       0       0       0       0       0       0       0
  6513 ;;      Locals:         2       0       0       0       0       0       0       0
  6514 ;;      Temps:          1       0       0       0       0       0       0       0
  6515 ;;      Totals:         4       0       0       0       0       0       0       0
  6516 ;;Total ram usage:        4 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    3
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_convertFromBcd
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           
  6527                           ;psect for function ___bmul
  6528  0674                     ___bmul:	
  6529                           
  6530                           ;incstack = 0
  6531                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6532                           ;___bmul@multiplier stored from wreg
  6533  0674  00F4               	movwf	___bmul@multiplier
  6534  0675  01F3               	clrf	___bmul@product
  6535  0676                     l1965:	
  6536  0676  1C74               	btfss	___bmul@multiplier,0
  6537  0677  2E7C               	goto	l1969
  6538  0678  0871               	movf	___bmul@multiplicand,w
  6539  0679  00F2               	movwf	??___bmul
  6540  067A  0872               	movf	??___bmul,w
  6541  067B  07F3               	addwf	___bmul@product,f
  6542  067C                     l1969:	
  6543  067C  1003               	clrc
  6544  067D  0DF1               	rlf	___bmul@multiplicand,f
  6545  067E  1003               	clrc
  6546  067F  0CF4               	rrf	___bmul@multiplier,f
  6547  0680  0874               	movf	___bmul@multiplier,w
  6548  0681  1D03               	btfss	3,2
  6549  0682  2E76               	goto	l1965
  6550  0683  0873               	movf	___bmul@product,w
  6551  0684  0008               	return
  6552  0685                     __end_of___bmul:	
  6553                           
  6554                           	psect	text25
  6555  03F4                     __ptext25:	
  6556 ;; *************** function ___awdiv *****************
  6557 ;; Defined at:
  6558 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  divisor         2    1[COMMON] int 
  6561 ;;  dividend        2    3[COMMON] int 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  quotient        2    8[COMMON] int 
  6564 ;;  sign            1    7[COMMON] unsigned char 
  6565 ;;  counter         1    6[COMMON] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    1[COMMON] int 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6575 ;;      Params:         4       0       0       0       0       0       0       0
  6576 ;;      Locals:         4       0       0       0       0       0       0       0
  6577 ;;      Temps:          1       0       0       0       0       0       0       0
  6578 ;;      Totals:         9       0       0       0       0       0       0       0
  6579 ;;Total ram usage:        9 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    3
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function ___awdiv
  6591  03F4                     ___awdiv:	
  6592                           
  6593                           ;incstack = 0
  6594                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6595  03F4  01F7               	clrf	___awdiv@sign
  6596  03F5  1FF2               	btfss	___awdiv@divisor+1,7
  6597  03F6  2BFE               	goto	l2187
  6598  03F7  09F1               	comf	___awdiv@divisor,f
  6599  03F8  09F2               	comf	___awdiv@divisor+1,f
  6600  03F9  0AF1               	incf	___awdiv@divisor,f
  6601  03FA  1903               	skipnz
  6602  03FB  0AF2               	incf	___awdiv@divisor+1,f
  6603  03FC  01F7               	clrf	___awdiv@sign
  6604  03FD  0AF7               	incf	___awdiv@sign,f
  6605  03FE                     l2187:	
  6606  03FE  1FF4               	btfss	___awdiv@dividend+1,7
  6607  03FF  2C09               	goto	l2193
  6608  0400  09F3               	comf	___awdiv@dividend,f
  6609  0401  09F4               	comf	___awdiv@dividend+1,f
  6610  0402  0AF3               	incf	___awdiv@dividend,f
  6611  0403  1903               	skipnz
  6612  0404  0AF4               	incf	___awdiv@dividend+1,f
  6613  0405  3001               	movlw	1
  6614  0406  00F5               	movwf	??___awdiv
  6615  0407  0875               	movf	??___awdiv,w
  6616  0408  06F7               	xorwf	___awdiv@sign,f
  6617  0409                     l2193:	
  6618  0409  01F8               	clrf	___awdiv@quotient
  6619  040A  01F9               	clrf	___awdiv@quotient+1
  6620  040B  0871               	movf	___awdiv@divisor,w
  6621  040C  0472               	iorwf	___awdiv@divisor+1,w
  6622  040D  1903               	btfsc	3,2
  6623  040E  2C38               	goto	l2215
  6624  040F  01F6               	clrf	___awdiv@counter
  6625  0410  0AF6               	incf	___awdiv@counter,f
  6626  0411                     l2203:	
  6627  0411  1BF2               	btfsc	___awdiv@divisor+1,7
  6628  0412  2C1D               	goto	l2205
  6629  0413  3001               	movlw	1
  6630  0414                     u1475:	
  6631  0414  35F1               	lslf	___awdiv@divisor,f
  6632  0415  0DF2               	rlf	___awdiv@divisor+1,f
  6633  0416  0B89               	decfsz	9,f
  6634  0417  2C14               	goto	u1475
  6635  0418  3001               	movlw	1
  6636  0419  00F5               	movwf	??___awdiv
  6637  041A  0875               	movf	??___awdiv,w
  6638  041B  07F6               	addwf	___awdiv@counter,f
  6639  041C  2C11               	goto	l2203
  6640  041D                     l2205:	
  6641  041D  3001               	movlw	1
  6642  041E                     u1495:	
  6643  041E  35F8               	lslf	___awdiv@quotient,f
  6644  041F  0DF9               	rlf	___awdiv@quotient+1,f
  6645  0420  0B89               	decfsz	9,f
  6646  0421  2C1E               	goto	u1495
  6647  0422  0872               	movf	___awdiv@divisor+1,w
  6648  0423  0274               	subwf	___awdiv@dividend+1,w
  6649  0424  1D03               	skipz
  6650  0425  2C28               	goto	u1505
  6651  0426  0871               	movf	___awdiv@divisor,w
  6652  0427  0273               	subwf	___awdiv@dividend,w
  6653  0428                     u1505:	
  6654  0428  1C03               	skipc
  6655  0429  2C2F               	goto	l2211
  6656  042A  0871               	movf	___awdiv@divisor,w
  6657  042B  02F3               	subwf	___awdiv@dividend,f
  6658  042C  0872               	movf	___awdiv@divisor+1,w
  6659  042D  3BF4               	subwfb	___awdiv@dividend+1,f
  6660  042E  1478               	bsf	___awdiv@quotient,0
  6661  042F                     l2211:	
  6662  042F  3001               	movlw	1
  6663  0430                     u1515:	
  6664  0430  36F2               	lsrf	___awdiv@divisor+1,f
  6665  0431  0CF1               	rrf	___awdiv@divisor,f
  6666  0432  0B89               	decfsz	9,f
  6667  0433  2C30               	goto	u1515
  6668  0434  3001               	movlw	1
  6669  0435  02F6               	subwf	___awdiv@counter,f
  6670  0436  1D03               	btfss	3,2
  6671  0437  2C1D               	goto	l2205
  6672  0438                     l2215:	
  6673  0438  0877               	movf	___awdiv@sign,w
  6674  0439  1903               	btfsc	3,2
  6675  043A  2C40               	goto	l2219
  6676  043B  09F8               	comf	___awdiv@quotient,f
  6677  043C  09F9               	comf	___awdiv@quotient+1,f
  6678  043D  0AF8               	incf	___awdiv@quotient,f
  6679  043E  1903               	skipnz
  6680  043F  0AF9               	incf	___awdiv@quotient+1,f
  6681  0440                     l2219:	
  6682  0440  0879               	movf	___awdiv@quotient+1,w
  6683  0441  00F2               	movwf	?___awdiv+1
  6684  0442  0878               	movf	___awdiv@quotient,w
  6685  0443  00F1               	movwf	?___awdiv
  6686  0444  0008               	return
  6687  0445                     __end_of___awdiv:	
  6688                           
  6689                           	psect	text26
  6690  060C                     __ptext26:	
  6691 ;; *************** function _SYSTEM_Initialize *****************
  6692 ;; Defined at:
  6693 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0, pclath, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6707 ;;      Params:         0       0       0       0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0
  6710 ;;      Totals:         0       0       0       0       0       0       0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    5
  6714 ;; This function calls:
  6715 ;;		_OSCILLATOR_Initialize
  6716 ;;		_PIN_MANAGER_Initialize
  6717 ;;		_PWM1_Initialize
  6718 ;;		_PWM2_Initialize
  6719 ;;		_PWM3_Initialize
  6720 ;;		_TMR0_Initialize
  6721 ;;		_TMR2_Initialize
  6722 ;;		_WDT_Initialize
  6723 ;; This function is called by:
  6724 ;;		_main
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           
  6729                           ;psect for function _SYSTEM_Initialize
  6730  060C                     _SYSTEM_Initialize:	
  6731                           
  6732                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6736  060C  3185  25C0  3186   	fcall	_PIN_MANAGER_Initialize
  6737                           
  6738                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6739  060F  3187  2711  3186   	fcall	_OSCILLATOR_Initialize
  6740                           
  6741                           ;mcc.c: 55: WDT_Initialize();
  6742  0612  3187  2717  3186   	fcall	_WDT_Initialize
  6743                           
  6744                           ;mcc.c: 56: PWM1_Initialize();
  6745  0615  3186  26FD  3186   	fcall	_PWM1_Initialize
  6746                           
  6747                           ;mcc.c: 57: PWM2_Initialize();
  6748  0618  3186  26F5  3186   	fcall	_PWM2_Initialize
  6749                           
  6750                           ;mcc.c: 58: PWM3_Initialize();
  6751  061B  3186  26ED  3186   	fcall	_PWM3_Initialize
  6752                           
  6753                           ;mcc.c: 59: TMR2_Initialize();
  6754  061E  3186  2685  3186   	fcall	_TMR2_Initialize
  6755                           
  6756                           ;mcc.c: 60: TMR0_Initialize();
  6757  0621  3186  26A6         	fcall	_TMR0_Initialize
  6758  0623  0008               	return
  6759  0624                     __end_of_SYSTEM_Initialize:	
  6760                           
  6761                           	psect	text27
  6762  0717                     __ptext27:	
  6763 ;; *************** function _WDT_Initialize *****************
  6764 ;; Defined at:
  6765 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;		None
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      void 
  6772 ;; Registers used:
  6773 ;;		wreg
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6779 ;;      Params:         0       0       0       0       0       0       0       0
  6780 ;;      Locals:         0       0       0       0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0
  6782 ;;      Totals:         0       0       0       0       0       0       0       0
  6783 ;;Total ram usage:        0 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    3
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_SYSTEM_Initialize
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           
  6794                           ;psect for function _WDT_Initialize
  6795  0717                     _WDT_Initialize:	
  6796                           
  6797                           ;mcc.c: 74: WDTCON = 0x16;
  6798                           
  6799                           ;incstack = 0
  6800                           ; Regs used in _WDT_Initialize: [wreg]
  6801  0717  3016               	movlw	22
  6802  0718  0021               	movlb	1	; select bank1
  6803  0719  0097               	movwf	23	;volatile
  6804  071A  0008               	return
  6805  071B                     __end_of_WDT_Initialize:	
  6806                           
  6807                           	psect	text28
  6808  0685                     __ptext28:	
  6809 ;; *************** function _TMR2_Initialize *****************
  6810 ;; Defined at:
  6811 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;		None
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0, pclath, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6825 ;;      Params:         0       0       0       0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0
  6828 ;;      Totals:         0       0       0       0       0       0       0       0
  6829 ;;Total ram usage:        0 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    4
  6832 ;; This function calls:
  6833 ;;		_TMR2_SetInterruptHandler
  6834 ;; This function is called by:
  6835 ;;		_SYSTEM_Initialize
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           
  6840                           ;psect for function _TMR2_Initialize
  6841  0685                     _TMR2_Initialize:	
  6842                           
  6843                           ;tmr2.c: 69: PR2 = 0xFF;
  6844                           
  6845                           ;incstack = 0
  6846                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6847  0685  30FF               	movlw	255
  6848  0686  0020               	movlb	0	; select bank0
  6849  0687  009B               	movwf	27	;volatile
  6850                           
  6851                           ;tmr2.c: 72: TMR2 = 0x00;
  6852  0688  019A               	clrf	26	;volatile
  6853                           
  6854                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  6855  0689  1091               	bcf	17,1	;volatile
  6856                           
  6857                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  6858  068A  0021               	movlb	1	; select bank1
  6859  068B  1491               	bsf	17,1	;volatile
  6860                           
  6861                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  6862  068C  301B               	movlw	low _TMR2_DefaultInterruptHandler
  6863  068D  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  6864  068E  3007               	movlw	high _TMR2_DefaultInterruptHandler
  6865  068F  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  6866  0690  3187  270B         	fcall	_TMR2_SetInterruptHandler
  6867                           
  6868                           ;tmr2.c: 84: T2CON = 0x04;
  6869  0692  3004               	movlw	4
  6870  0693  0020               	movlb	0	; select bank0
  6871  0694  009C               	movwf	28	;volatile
  6872  0695  0008               	return
  6873  0696                     __end_of_TMR2_Initialize:	
  6874                           
  6875                           	psect	text29
  6876  070B                     __ptext29:	
  6877 ;; *************** function _TMR2_SetInterruptHandler *****************
  6878 ;; Defined at:
  6879 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  6882 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6894 ;;      Params:         2       0       0       0       0       0       0       0
  6895 ;;      Locals:         0       0       0       0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0
  6897 ;;      Totals:         2       0       0       0       0       0       0       0
  6898 ;;Total ram usage:        2 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    3
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_TMR2_Initialize
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           
  6909                           ;psect for function _TMR2_SetInterruptHandler
  6910  070B                     _TMR2_SetInterruptHandler:	
  6911                           
  6912                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
  6913                           
  6914                           ;incstack = 0
  6915                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  6916  070B  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  6917  070C  0020               	movlb	0	; select bank0
  6918  070D  00BF               	movwf	_TMR2_InterruptHandler+1
  6919  070E  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  6920  070F  00BE               	movwf	_TMR2_InterruptHandler
  6921  0710  0008               	return
  6922  0711                     __end_of_TMR2_SetInterruptHandler:	
  6923                           
  6924                           	psect	text30
  6925  06A6                     __ptext30:	
  6926 ;; *************** function _TMR0_Initialize *****************
  6927 ;; Defined at:
  6928 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6942 ;;      Params:         0       0       0       0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0       0       0
  6944 ;;      Temps:          1       0       0       0       0       0       0       0
  6945 ;;      Totals:         1       0       0       0       0       0       0       0
  6946 ;;Total ram usage:        1 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    3
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_SYSTEM_Initialize
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _TMR0_Initialize
  6958  06A6                     _TMR0_Initialize:	
  6959                           
  6960                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  6961                           
  6962                           ;incstack = 0
  6963                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  6964  06A6  0021               	movlb	1	; select bank1
  6965  06A7  0815               	movf	21,w	;volatile
  6966  06A8  39C0               	andlw	192
  6967  06A9  3817               	iorlw	23
  6968  06AA  0095               	movwf	21	;volatile
  6969                           
  6970                           ;tmr0.c: 71: TMR0 = 0x64;
  6971  06AB  3064               	movlw	100
  6972  06AC  0020               	movlb	0	; select bank0
  6973  06AD  0095               	movwf	21	;volatile
  6974                           
  6975                           ;tmr0.c: 74: timer0ReloadVal= 100;
  6976  06AE  3064               	movlw	100
  6977  06AF  00F1               	movwf	??_TMR0_Initialize
  6978  06B0  0871               	movf	??_TMR0_Initialize,w
  6979  06B1  00C0               	movwf	_timer0ReloadVal	;volatile
  6980                           
  6981                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  6982  06B2  110B               	bcf	11,2	;volatile
  6983  06B3  0008               	return
  6984  06B4                     __end_of_TMR0_Initialize:	
  6985                           
  6986                           	psect	text31
  6987  06ED                     __ptext31:	
  6988 ;; *************** function _PWM3_Initialize *****************
  6989 ;; Defined at:
  6990 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7004 ;;      Params:         0       0       0       0       0       0       0       0
  7005 ;;      Locals:         0       0       0       0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0
  7007 ;;      Totals:         0       0       0       0       0       0       0       0
  7008 ;;Total ram usage:        0 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    3
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_SYSTEM_Initialize
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _PWM3_Initialize
  7020  06ED                     _PWM3_Initialize:	
  7021                           
  7022                           ;pwm3.c: 62: PWM3CON = 0xC0;
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in _PWM3_Initialize: [wreg]
  7026  06ED  30C0               	movlw	192
  7027  06EE  002C               	movlb	12	; select bank12
  7028  06EF  0099               	movwf	25	;volatile
  7029                           
  7030                           ;pwm3.c: 65: PWM3DCH = 0x7F;
  7031  06F0  307F               	movlw	127
  7032  06F1  0098               	movwf	24	;volatile
  7033                           
  7034                           ;pwm3.c: 68: PWM3DCL = 0xC0;
  7035  06F2  30C0               	movlw	192
  7036  06F3  0097               	movwf	23	;volatile
  7037  06F4  0008               	return
  7038  06F5                     __end_of_PWM3_Initialize:	
  7039                           
  7040                           	psect	text32
  7041  06F5                     __ptext32:	
  7042 ;; *************** function _PWM2_Initialize *****************
  7043 ;; Defined at:
  7044 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      void 
  7051 ;; Registers used:
  7052 ;;		wreg
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7058 ;;      Params:         0       0       0       0       0       0       0       0
  7059 ;;      Locals:         0       0       0       0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0
  7061 ;;      Totals:         0       0       0       0       0       0       0       0
  7062 ;;Total ram usage:        0 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    3
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_SYSTEM_Initialize
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _PWM2_Initialize
  7074  06F5                     _PWM2_Initialize:	
  7075                           
  7076                           ;pwm2.c: 62: PWM2CON = 0xC0;
  7077                           
  7078                           ;incstack = 0
  7079                           ; Regs used in _PWM2_Initialize: [wreg]
  7080  06F5  30C0               	movlw	192
  7081  06F6  002C               	movlb	12	; select bank12
  7082  06F7  0096               	movwf	22	;volatile
  7083                           
  7084                           ;pwm2.c: 65: PWM2DCH = 0x7F;
  7085  06F8  307F               	movlw	127
  7086  06F9  0095               	movwf	21	;volatile
  7087                           
  7088                           ;pwm2.c: 68: PWM2DCL = 0xC0;
  7089  06FA  30C0               	movlw	192
  7090  06FB  0094               	movwf	20	;volatile
  7091  06FC  0008               	return
  7092  06FD                     __end_of_PWM2_Initialize:	
  7093                           
  7094                           	psect	text33
  7095  06FD                     __ptext33:	
  7096 ;; *************** function _PWM1_Initialize *****************
  7097 ;; Defined at:
  7098 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      void 
  7105 ;; Registers used:
  7106 ;;		wreg
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7112 ;;      Params:         0       0       0       0       0       0       0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0       0
  7115 ;;      Totals:         0       0       0       0       0       0       0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    3
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_SYSTEM_Initialize
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _PWM1_Initialize
  7128  06FD                     _PWM1_Initialize:	
  7129                           
  7130                           ;pwm1.c: 62: PWM1CON = 0xC0;
  7131                           
  7132                           ;incstack = 0
  7133                           ; Regs used in _PWM1_Initialize: [wreg]
  7134  06FD  30C0               	movlw	192
  7135  06FE  002C               	movlb	12	; select bank12
  7136  06FF  0093               	movwf	19	;volatile
  7137                           
  7138                           ;pwm1.c: 65: PWM1DCH = 0x7F;
  7139  0700  307F               	movlw	127
  7140  0701  0092               	movwf	18	;volatile
  7141                           
  7142                           ;pwm1.c: 68: PWM1DCL = 0xC0;
  7143  0702  30C0               	movlw	192
  7144  0703  0091               	movwf	17	;volatile
  7145  0704  0008               	return
  7146  0705                     __end_of_PWM1_Initialize:	
  7147                           
  7148                           	psect	text34
  7149  05C0                     __ptext34:	
  7150 ;; *************** function _PIN_MANAGER_Initialize *****************
  7151 ;; Defined at:
  7152 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;		None
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7166 ;;      Params:         0       0       0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0
  7169 ;;      Totals:         0       0       0       0       0       0       0       0
  7170 ;;Total ram usage:        0 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    3
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		_SYSTEM_Initialize
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           
  7181                           ;psect for function _PIN_MANAGER_Initialize
  7182  05C0                     _PIN_MANAGER_Initialize:	
  7183                           
  7184                           ;pin_manager.c: 62: LATA = 0x00;
  7185                           
  7186                           ;incstack = 0
  7187                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7188  05C0  0022               	movlb	2	; select bank2
  7189  05C1  018C               	clrf	12	;volatile
  7190                           
  7191                           ;pin_manager.c: 63: LATB = 0x00;
  7192  05C2  018D               	clrf	13	;volatile
  7193                           
  7194                           ;pin_manager.c: 64: LATC = 0x00;
  7195  05C3  018E               	clrf	14	;volatile
  7196                           
  7197                           ;pin_manager.c: 69: TRISA = 0x3B;
  7198  05C4  303B               	movlw	59
  7199  05C5  0021               	movlb	1	; select bank1
  7200  05C6  008C               	movwf	12	;volatile
  7201                           
  7202                           ;pin_manager.c: 70: TRISB = 0xF0;
  7203  05C7  30F0               	movlw	240
  7204  05C8  008D               	movwf	13	;volatile
  7205                           
  7206                           ;pin_manager.c: 71: TRISC = 0xD7;
  7207  05C9  30D7               	movlw	215
  7208  05CA  008E               	movwf	14	;volatile
  7209                           
  7210                           ;pin_manager.c: 76: ANSELC = 0xC8;
  7211  05CB  30C8               	movlw	200
  7212  05CC  0023               	movlb	3	; select bank3
  7213  05CD  008E               	movwf	14	;volatile
  7214                           
  7215                           ;pin_manager.c: 77: ANSELB = 0x20;
  7216  05CE  3020               	movlw	32
  7217  05CF  008D               	movwf	13	;volatile
  7218                           
  7219                           ;pin_manager.c: 78: ANSELA = 0x17;
  7220  05D0  3017               	movlw	23
  7221  05D1  008C               	movwf	12	;volatile
  7222                           
  7223                           ;pin_manager.c: 83: WPUB = 0x00;
  7224  05D2  0024               	movlb	4	; select bank4
  7225  05D3  018D               	clrf	13	;volatile
  7226                           
  7227                           ;pin_manager.c: 84: WPUA = 0x00;
  7228  05D4  018C               	clrf	12	;volatile
  7229                           
  7230                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 1;
  7231  05D5  0021               	movlb	1	; select bank1
  7232  05D6  1795               	bsf	21,7	;volatile
  7233                           
  7234                           ;pin_manager.c: 94: APFCON = 0x00;
  7235  05D7  0022               	movlb	2	; select bank2
  7236  05D8  019D               	clrf	29	;volatile
  7237  05D9  0008               	return
  7238  05DA                     __end_of_PIN_MANAGER_Initialize:	
  7239                           
  7240                           	psect	text35
  7241  0711                     __ptext35:	
  7242 ;; *************** function _OSCILLATOR_Initialize *****************
  7243 ;; Defined at:
  7244 ;;		line 63 in file "mcc_generated_files/mcc.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      void 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7258 ;;      Params:         0       0       0       0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    3
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_SYSTEM_Initialize
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           
  7273                           ;psect for function _OSCILLATOR_Initialize
  7274  0711                     _OSCILLATOR_Initialize:	
  7275                           
  7276                           ;mcc.c: 66: OSCCON = 0x78;
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7280  0711  3078               	movlw	120
  7281  0712  0021               	movlb	1	; select bank1
  7282  0713  0099               	movwf	25	;volatile
  7283                           
  7284                           ;mcc.c: 68: BORCON = 0x00;
  7285  0714  0022               	movlb	2	; select bank2
  7286  0715  0196               	clrf	22	;volatile
  7287  0716  0008               	return
  7288  0717                     __end_of_OSCILLATOR_Initialize:	
  7289                           
  7290                           	psect	text36
  7291  05DA                     __ptext36:	
  7292 ;; *************** function _PWM3_LoadDutyValue *****************
  7293 ;; Defined at:
  7294 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7308 ;;      Params:         0       2       0       0       0       0       0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0
  7310 ;;      Temps:          0       2       0       0       0       0       0       0
  7311 ;;      Totals:         0       4       0       0       0       0       0       0
  7312 ;;Total ram usage:        4 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    3
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_main
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _PWM3_LoadDutyValue
  7324  05DA                     _PWM3_LoadDutyValue:	
  7325                           
  7326                           ;pwm3.c: 75: PWM3DCH = (dutyValue & 0x03FC)>>2;
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  7330  05DA  0020               	movlb	0	; select bank0
  7331  05DB  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  7332  05DC  00A3               	movwf	??_PWM3_LoadDutyValue+1
  7333  05DD  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  7334  05DE  00A2               	movwf	??_PWM3_LoadDutyValue
  7335  05DF  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  7336  05E0  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  7337  05E1  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  7338  05E2  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  7339  05E3  0822               	movf	??_PWM3_LoadDutyValue,w
  7340  05E4  002C               	movlb	12	; select bank12
  7341  05E5  0098               	movwf	24	;volatile
  7342                           
  7343                           ;pwm3.c: 78: PWM3DCL = (dutyValue & 0x0003)<<6;
  7344  05E6  0020               	movlb	0	; select bank0
  7345  05E7  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  7346  05E8  3903               	andlw	3
  7347  05E9  00A2               	movwf	??_PWM3_LoadDutyValue
  7348  05EA  3005               	movlw	5
  7349  05EB                     u2015:	
  7350  05EB  35A2               	lslf	??_PWM3_LoadDutyValue,f
  7351  05EC  3EFF               	addlw	-1
  7352  05ED  1D03               	skipz
  7353  05EE  2DEB               	goto	u2015
  7354  05EF  3522               	lslf	??_PWM3_LoadDutyValue,w
  7355  05F0  002C               	movlb	12	; select bank12
  7356  05F1  0097               	movwf	23	;volatile
  7357  05F2  0008               	return
  7358  05F3                     __end_of_PWM3_LoadDutyValue:	
  7359                           
  7360                           	psect	text37
  7361  0624                     __ptext37:	
  7362 ;; *************** function _PWM2_LoadDutyValue *****************
  7363 ;; Defined at:
  7364 ;;		line 72 in file "mcc_generated_files/pwm2.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  dutyValue       2    1[COMMON] unsigned int 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7378 ;;      Params:         2       0       0       0       0       0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0       0       0
  7380 ;;      Temps:          2       0       0       0       0       0       0       0
  7381 ;;      Totals:         4       0       0       0       0       0       0       0
  7382 ;;Total ram usage:        4 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    3
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_main
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function _PWM2_LoadDutyValue
  7394  0624                     _PWM2_LoadDutyValue:	
  7395                           
  7396                           ;pwm2.c: 75: PWM2DCH = (dutyValue & 0x03FC)>>2;
  7397                           
  7398                           ;incstack = 0
  7399                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  7400  0624  0872               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  7401  0625  00F4               	movwf	??_PWM2_LoadDutyValue+1
  7402  0626  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
  7403  0627  00F3               	movwf	??_PWM2_LoadDutyValue
  7404  0628  36F4               	lsrf	??_PWM2_LoadDutyValue+1,f
  7405  0629  0CF3               	rrf	??_PWM2_LoadDutyValue,f
  7406  062A  36F4               	lsrf	??_PWM2_LoadDutyValue+1,f
  7407  062B  0CF3               	rrf	??_PWM2_LoadDutyValue,f
  7408  062C  0873               	movf	??_PWM2_LoadDutyValue,w
  7409  062D  002C               	movlb	12	; select bank12
  7410  062E  0095               	movwf	21	;volatile
  7411                           
  7412                           ;pwm2.c: 78: PWM2DCL = (dutyValue & 0x0003)<<6;
  7413  062F  0871               	movf	PWM2_LoadDutyValue@dutyValue,w
  7414  0630  3903               	andlw	3
  7415  0631  00F3               	movwf	??_PWM2_LoadDutyValue
  7416  0632  3005               	movlw	5
  7417  0633                     u1195:	
  7418  0633  35F3               	lslf	??_PWM2_LoadDutyValue,f
  7419  0634  3EFF               	addlw	-1
  7420  0635  1D03               	skipz
  7421  0636  2E33               	goto	u1195
  7422  0637  3573               	lslf	??_PWM2_LoadDutyValue,w
  7423  0638  0094               	movwf	20	;volatile
  7424  0639  0008               	return
  7425  063A                     __end_of_PWM2_LoadDutyValue:	
  7426                           
  7427                           	psect	text38
  7428  05F3                     __ptext38:	
  7429 ;; *************** function _PWM1_LoadDutyValue *****************
  7430 ;; Defined at:
  7431 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7445 ;;      Params:         0       2       0       0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0
  7447 ;;      Temps:          0       2       0       0       0       0       0       0
  7448 ;;      Totals:         0       4       0       0       0       0       0       0
  7449 ;;Total ram usage:        4 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    3
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_main
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           
  7460                           ;psect for function _PWM1_LoadDutyValue
  7461  05F3                     _PWM1_LoadDutyValue:	
  7462                           
  7463                           ;pwm1.c: 75: PWM1DCH = (dutyValue & 0x03FC)>>2;
  7464                           
  7465                           ;incstack = 0
  7466                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  7467  05F3  0020               	movlb	0	; select bank0
  7468  05F4  0821               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  7469  05F5  00A3               	movwf	??_PWM1_LoadDutyValue+1
  7470  05F6  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
  7471  05F7  00A2               	movwf	??_PWM1_LoadDutyValue
  7472  05F8  36A3               	lsrf	??_PWM1_LoadDutyValue+1,f
  7473  05F9  0CA2               	rrf	??_PWM1_LoadDutyValue,f
  7474  05FA  36A3               	lsrf	??_PWM1_LoadDutyValue+1,f
  7475  05FB  0CA2               	rrf	??_PWM1_LoadDutyValue,f
  7476  05FC  0822               	movf	??_PWM1_LoadDutyValue,w
  7477  05FD  002C               	movlb	12	; select bank12
  7478  05FE  0092               	movwf	18	;volatile
  7479                           
  7480                           ;pwm1.c: 78: PWM1DCL = (dutyValue & 0x0003)<<6;
  7481  05FF  0020               	movlb	0	; select bank0
  7482  0600  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
  7483  0601  3903               	andlw	3
  7484  0602  00A2               	movwf	??_PWM1_LoadDutyValue
  7485  0603  3005               	movlw	5
  7486  0604                     u2005:	
  7487  0604  35A2               	lslf	??_PWM1_LoadDutyValue,f
  7488  0605  3EFF               	addlw	-1
  7489  0606  1D03               	skipz
  7490  0607  2E04               	goto	u2005
  7491  0608  3522               	lslf	??_PWM1_LoadDutyValue,w
  7492  0609  002C               	movlb	12	; select bank12
  7493  060A  0091               	movwf	17	;volatile
  7494  060B  0008               	return
  7495  060C                     __end_of_PWM1_LoadDutyValue:	
  7496                           
  7497                           	psect	intentry
  7498  0004                     __pintentry:	
  7499 ;; *************** function _INTERRUPT_InterruptManager *****************
  7500 ;; Defined at:
  7501 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7515 ;;      Params:         0       0       0       0       0       0       0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0
  7517 ;;      Temps:          1       0       0       0       0       0       0       0
  7518 ;;      Totals:         1       0       0       0       0       0       0       0
  7519 ;;Total ram usage:        1 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    2
  7522 ;; This function calls:
  7523 ;;		_TMR2_ISR
  7524 ;; This function is called by:
  7525 ;;		Interrupt level 1
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529  0004                     _INTERRUPT_InterruptManager:	
  7530                           
  7531                           ;incstack = 0
  7532  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7533                           
  7534                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7535  0005  3180               	pagesel	$
  7536  0006  0020               	movlb	0	; select bank0
  7537  0007  087F               	movf	127,w
  7538  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  7539                           
  7540                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  7541  0009  1F0B               	btfss	11,6	;volatile
  7542  000A  281D               	goto	i1l64
  7543                           
  7544                           ;interrupt_manager.c: 56: {
  7545                           ;interrupt_manager.c: 57: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  7546  000B  0021               	movlb	1	; select bank1
  7547  000C  1992               	btfsc	18,3	;volatile
  7548                           
  7549                           ;interrupt_manager.c: 58: {
  7550                           ;interrupt_manager.c: 59: i2c_driver_busCollisionISR();
  7551  000D  0020               	movlb	0	; select bank0
  7552  000E  1992               	btfsc	18,3	;volatile
  7553  000F  281D               	goto	i1l64
  7554                           
  7555                           ;interrupt_manager.c: 61: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  7556                           
  7557                           ;interrupt_manager.c: 60: }
  7558  0010  0021               	movlb	1	; select bank1
  7559  0011  1991               	btfsc	17,3	;volatile
  7560                           
  7561                           ;interrupt_manager.c: 62: {
  7562                           ;interrupt_manager.c: 63: i2c_driver_i2cISR();
  7563  0012  0020               	movlb	0	; select bank0
  7564  0013  1991               	btfsc	17,3	;volatile
  7565  0014  281D               	goto	i1l64
  7566                           
  7567                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  7568                           
  7569                           ;interrupt_manager.c: 64: }
  7570  0015  0021               	movlb	1	; select bank1
  7571  0016  1C91               	btfss	17,1	;volatile
  7572  0017  281D               	goto	i1l64
  7573  0018  0020               	movlb	0	; select bank0
  7574  0019  1C91               	btfss	17,1	;volatile
  7575  001A  281D               	goto	i1l64
  7576                           
  7577                           ;interrupt_manager.c: 66: {
  7578                           ;interrupt_manager.c: 67: TMR2_ISR();
  7579  001B  3186  26C0         	fcall	_TMR2_ISR
  7580  001D                     i1l64:	
  7581                           ;interrupt_manager.c: 74: else
  7582                           ;interrupt_manager.c: 75: {
  7583                           
  7584                           ;interrupt_manager.c: 72: }
  7585                           ;interrupt_manager.c: 73: }
  7586                           
  7587                           ;interrupt_manager.c: 69: else
  7588                           ;interrupt_manager.c: 70: {
  7589                           
  7590                           ;interrupt_manager.c: 68: }
  7591                           
  7592  001D  0870               	movf	??_INTERRUPT_InterruptManager,w
  7593  001E  0020               	movlb	0	; select bank0
  7594  001F  00FF               	movwf	127
  7595  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7596  0021  0009               	retfie
  7597  0022                     __end_of_INTERRUPT_InterruptManager:	
  7598                           
  7599                           	psect	text40
  7600  06C0                     __ptext40:	
  7601 ;; *************** function _TMR2_ISR *****************
  7602 ;; Defined at:
  7603 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1    wreg      void 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0, pclath, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7617 ;;      Params:         0       0       0       0       0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0
  7620 ;;      Totals:         0       0       0       0       0       0       0       0
  7621 ;;Total ram usage:        0 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    1
  7624 ;; This function calls:
  7625 ;;		Absolute function
  7626 ;;		_TMR2_DefaultInterruptHandler
  7627 ;; This function is called by:
  7628 ;;		_INTERRUPT_InterruptManager
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           
  7633                           ;psect for function _TMR2_ISR
  7634  06C0                     _TMR2_ISR:	
  7635                           
  7636                           ;tmr2.c: 123: PIR1bits.TMR2IF = 0;
  7637                           
  7638                           ;incstack = 0
  7639                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  7640  06C0  0020               	movlb	0	; select bank0
  7641  06C1  1091               	bcf	17,1	;volatile
  7642                           
  7643                           ;tmr2.c: 125: if(TMR2_InterruptHandler)
  7644  06C2  083E               	movf	_TMR2_InterruptHandler,w
  7645  06C3  043F               	iorwf	_TMR2_InterruptHandler+1,w
  7646  06C4  1903               	btfsc	3,2
  7647  06C5  0008               	return
  7648                           
  7649                           ;tmr2.c: 126: {
  7650                           ;tmr2.c: 127: TMR2_InterruptHandler();
  7651  06C6  083F               	movf	_TMR2_InterruptHandler+1,w
  7652  06C7  008A               	movwf	10
  7653  06C8  083E               	movf	_TMR2_InterruptHandler,w
  7654  06C9  000A               	callw
  7655  06CA  3186               	pagesel	$
  7656  06CB  0008               	return
  7657  06CC                     __end_of_TMR2_ISR:	
  7658                           
  7659                           	psect	text41
  7660  071B                     __ptext41:	
  7661 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7662 ;; Defined at:
  7663 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		None
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7677 ;;      Params:         0       0       0       0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0
  7680 ;;      Totals:         0       0       0       0       0       0       0       0
  7681 ;;Total ram usage:        0 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_TMR2_Initialize
  7687 ;;		_TMR2_ISR
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function _TMR2_DefaultInterruptHandler
  7693  071B                     _TMR2_DefaultInterruptHandler:	
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  7697  071B  0008               	return
  7698  071C                     __end_of_TMR2_DefaultInterruptHandler:	
  7699  007E                     btemp	set	126	;btemp
  7700  007E                     int$flags	set	126
  7701  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     30      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_printReglageH
    _readSec->_readI2C
    _printReglageH->_writeLCD
    _writeLCD->_writeInst
    _initRW1063->_writeInst
    _writeInst->_sendI2C
    _initRTC->_sendI2C
    _incrMin->_bitExtracted
    _readMin->_readI2C
    _changeMin->_sendI2C
    _incrHeure->_bitExtracted
    _readHr->_readI2C
    _changeHeure->_sendI2C
    _convertFromBcd->___bmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PWM3_LoadDutyValue->___awdiv
    _PWM1_LoadDutyValue->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printReglageH

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   17363
                                              6 BANK0     24    24      0
                                _FSM
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                       _bitExtracted
                     _convertFromBcd
                          _incrHeure
                            _incrMin
                            _initI2C
                            _initRTC
                         _initRW1063
                      _printReglageH
                             _readHr
                            _readMin
                            _readSec
                          _writeInst
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _readSec                                              2     2      0     102
                                              3 COMMON     2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _printReglageH                                        9     9      0    5181
                                              8 COMMON     3     3      0
                                              0 BANK0      6     6      0
                                _FSM
                       _bitExtracted
                             _readHr
                            _readMin
                          _writeInst
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             5     3      2    2696
                                              3 COMMON     5     3      2
                                _FSM (ARG)
                            _sendI2C
                           _startI2C
                            _stopI2C
                          _writeInst
 ---------------------------------------------------------------------------------
 (2) _FSM                                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initRW1063                                           0     0      0      62
                          _writeInst
 ---------------------------------------------------------------------------------
 (2) _writeInst                                            1     1      0      62
                                              2 COMMON     1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _initRTC                                              0     0      0      31
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              3     3      0      47
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _incrMin                                              6     6      0    2494
                                              6 COMMON     3     3      0
                                              0 BANK0      3     3      0
                       _bitExtracted
                          _changeMin
                            _readMin
 ---------------------------------------------------------------------------------
 (1) _readMin                                              2     2      0     102
                                              3 COMMON     2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _changeMin                                            1     1      0      62
                                              2 COMMON     1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _incrHeure                                            6     6      0    2556
                                              6 COMMON     3     3      0
                                              0 BANK0      3     3      0
                       _bitExtracted
                        _changeHeure
                             _readHr
 ---------------------------------------------------------------------------------
 (1) _readHr                                               2     2      0     102
                                              3 COMMON     2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _sendNoAckI2C                                         0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _readI2C                                              2     2      0      34
                                              1 COMMON     2     2      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _re_startI2C                                          0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _changeHeure                                          1     1      0      62
                                              2 COMMON     1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      31
                                              1 COMMON     1     1      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (4) _waitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bitExtracted                                         5     3      2    1913
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _convertFromBcd                                       5     5      0     237
                                              5 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     512
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      75
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      75
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     127
                                              0 BANK0      4     2      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM2_LoadDutyValue                                   4     2      2      97
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     127
                                              0 BANK0      4     2      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
   _PWM1_LoadDutyValue
     ___awdiv (ARG)
   _PWM2_LoadDutyValue
   _PWM3_LoadDutyValue
     ___awdiv (ARG)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   ___awdiv
   _bitExtracted
   _convertFromBcd
     ___bmul
   _incrHeure
     _bitExtracted
     _changeHeure
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readHr
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _incrMin
     _bitExtracted
     _changeMin
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readMin
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _initI2C
   _initRTC
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _initRW1063
     _writeInst
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _printReglageH
     _FSM
     _bitExtracted
     _readHr
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readMin
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _writeInst
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _writeLCD
       _FSM (ARG)
       _sendI2C (ARG)
         _waitI2C
       _startI2C (ARG)
         _waitI2C
       _stopI2C (ARG)
         _waitI2C
       _writeInst (ARG)
         _sendI2C
           _waitI2C
         _startI2C
           _waitI2C
         _stopI2C
           _waitI2C
   _readHr
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _readMin
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _readSec
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _writeInst
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _writeLCD
     _FSM (ARG)
     _sendI2C (ARG)
       _waitI2C
     _startI2C (ARG)
       _waitI2C
     _stopI2C (ARG)
       _waitI2C
     _writeInst (ARG)
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      30       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      23       6       43.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      30      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 14 13:16:16 2018

        __end_of_TMR2_SetInterruptHandler 0711                        printReglageH@heure 0025  
                                       pc 0002                            ___bmul@product 0073  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0077  
                     printReglageH@minute 0024                           _timer0ReloadVal 0040  
                     printReglageH@uniteH 0023                       printReglageH@uniteM 0021  
                             __CFG_LVP$ON 0000                                       l331 0456  
                                     l332 0468                                       l500 03E0  
                                     l342 06E5                                       l503 03E7  
                                     l431 055F                                       l336 06D2  
                                     l360 066B                                       l512 0574  
                                     l354 06BD                                       l530 059E  
                                     l506 03EE                                       l434 0566  
                                     l450 04AA                                       l282 019B  
                                     l515 057B                                       l348 06E2  
                                     l524 0590                                       l428 0558  
                                     l444 049C                                       l366 06DA  
                                     l518 0582                                       l542 04CD  
                                     l286 01C7                                       l527 0597  
                                     l551 04EC                                       l447 04A3  
                                     l560 050E                                       l536 04BC  
                                     l289 01C5                                       l554 04F6  
                                     l482 03AA                                       l563 0515  
                                     l491 03C5                                       l539 04C3  
                                     l548 04E5                                       l485 03B1  
                                     l566 051F                                       l494 03CC  
                                     l488 03B8                                       l497 03D3  
                                     _FSM 052F                                       _PR2 001B  
                         _TMR2_Initialize 0685                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                                    S2897 064F                     printReglageH@dizaineH 0022  
                   printReglageH@dizaineM 0020                                      ?_FSM 0070  
                             main@bufferH 0031                               main@bufferM 0030  
                             main@bufferS 002F                                      l2211 042F  
                                    l2203 0411                                      l2205 041D  
                                    l2215 0438                                      l2219 0440  
                                    l2193 0409                                      l2187 03FE  
                                    l2523 0488                                      l1901 053F  
                                    l2525 0495                                      l2517 0487  
                                    l1913 0543                                      l1921 0545  
                                    l1907 0541                                      l2661 0384  
                                    l2821 01CF                                      l1871 0535  
                                    l2665 038A                                      l1865 0533  
                                    l2809 01B9                                      l2691 0324  
                                    l1883 0539                                      l1859 0531  
                                    l2755 005F                                      l1965 0676  
                                    l1877 0537                                      l1895 053D  
                                    l1969 067C                                      l1889 053B  
                                    l2699 0332                                      l2795 0196  
                                    l2799 019D                   __end_of_PWM1_Initialize 0705  
                                    u2005 0604                                      u2015 05EB  
                                    u1225 0454                                      u1235 0466  
                                    u2205 033A                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u1505 0428                                      u1195 0633  
                                    u1515 0430                                      u1365 05AA  
                                    u2165 0392                                      u2317 0047  
                                    u2327 01A6                                      u2337 01E7  
                                    u1475 0414                                      u2347 01F7  
                                    u2357 0209                                      u1495 041E  
                                    u2367 021B                                      u2377 022D  
                                    u2387 023F                                      u2397 0251  
                                    u1874 0642                                      u1875 0641  
                                    u1884 0649                                      u1885 0648  
                                    i1l64 001D                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUB 020D                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 002D  
                                    fsr0l 0004                                      btemp 007E  
                    __end_of_bitExtracted 064F                             __CFG_BOREN$ON 0000  
                                    start 0022                         ___bmul@multiplier 0074  
                           __CFG_MCLRE$ON 0000                                     ??_FSM 0071  
                 __end_of_PWM2_Initialize 06FD                   __end_of_TMR0_Initialize 06B4  
                                   FSM@IN 0071            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 0717                              main@dizaineH 0037  
                            main@dizaineM 0035                              main@dizaineS 0033  
                         ??_printReglageH 0078                           changeMin@minute 0072  
                                   ?_main 0070                           __end_of___awdiv 0445  
                           __CFG_WDTE$OFF 0000                           ___awdiv@divisor 0071  
                                   _T2CON 001C                                     _LATB4 086C  
                                   _LATB6 086E                           ___awdiv@counter 0076  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                      __size_of_changeHeure 001C  
                        __end_of_TMR2_ISR 06CC                               readI2C@temp 0072  
                         __end_of_initI2C 047E                           __end_of_readI2C 0674  
                         __end_of_incrMin 03A3                           __end_of_initRTC 03F4  
                          _WDT_Initialize 0717                           __end_of_readMin 0506  
                         __end_of_readSec 04DD                           __end_of_sendI2C 06C0  
                                   main@i 003A                           __end_of_waitI2C 06ED  
                 __end_of_PWM3_Initialize 06F5                                     pclath 000A  
              _i2c_driver_busCollisionISR 007B                           __end_of_stopI2C 06E5  
                                   status 0003                                     wtemp0 007E  
                         __initialization 0024                              __end_of_main 01D9  
                            ?_re_startI2C 0070                            _convertFromBcd 05A4  
                 __end_of_TMR2_Initialize 0696                            __CFG_LPBOR$OFF 0000  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 070B  
                                  ??_main 0026                          changeHeure@heure 0072  
                  __end_of_WDT_Initialize 071B                          ___awdiv@dividend 0073  
                                  _APFCON 011D                               readHr@heure 0074  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                        ?_PWM1_Initialize 0070                                    _INTCON 000B  
                                  _OSCCON 0099                                    _WDTCON 0097  
                                  _TRISB4 046C                                    _TRISB6 046E  
                          __CFG_PWRTE$OFF 0000                                    ___bmul 0674  
                  __end_of_convertFromBcd 05C0               __size_of_PWM3_LoadDutyValue 0019  
                               ??___awdiv 0075                            __CFG_STVREN$ON 0000  
                                  _readHr 0506                          ?_TMR0_Initialize 0070  
                        ?_PWM2_Initialize 0070                          ___awdiv@quotient 0078  
                               ??_initI2C 0071                                 ??_readI2C 0071  
                               ??_incrMin 0076                                 ??_initRTC 0072  
                       incrHeure@dizaineH 0020                                 ??_readMin 0073  
                               ??_readSec 0073                                 ??_sendI2C 0071  
                               ??_waitI2C 0071                           ?_WDT_Initialize 0070  
                        __end_of_startI2C 06D5                                 ??_stopI2C 0071  
TMR2_SetInterruptHandler@InterruptHandler 0071                     __size_of_bitExtracted 0015  
                             sendI2C@data 0071                          __end_of_writeLCD 04B4  
                        ?_PWM3_Initialize 0070                         _SYSTEM_Initialize 060C  
                 __end_of__initialization 0029                        ?_SYSTEM_Initialize 0070  
              __end_of_PWM2_LoadDutyValue 063A               PWM1_LoadDutyValue@dutyValue 0020  
                     ___bmul@multiplicand 0071                            __pcstackCOMMON 0070  
                         ?_convertFromBcd 0070                       ??_SYSTEM_Initialize 0073  
                               ?_TMR2_ISR 0070                        __size_of_changeMin 001C  
                      _PWM1_LoadDutyValue 05F3                          ?_TMR2_Initialize 0070  
                           ?_sendNoAckI2C 0070                              _bitExtracted 063A  
                          _OPTION_REGbits 0095                       ?_PWM1_LoadDutyValue 0020  
               __end_of_SYSTEM_Initialize 0624                                __pbssBANK0 0041  
                      __size_of_incrHeure 0060                      ??_PWM1_LoadDutyValue 0022  
                              __pmaintext 002D                                   ?___bmul 0071  
                              ??_TMR2_ISR 0070                                __pintentry 0004  
                                 ?_readHr 0070                      __size_of_re_startI2C 0008  
                          ??_sendNoAckI2C 0071                                   _PWM1DCH 0612  
                                 _PWM1DCL 0611                                   _PWM2DCH 0615  
                                 _PWM2DCL 0614                                   _PWM3DCH 0618  
                                 _PWM3DCL 0617                                   _PWM1CON 0613  
                                 _PWM2CON 0616                                   _PWM3CON 0619  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                       __end_of_changeMin 0588                     convertFromBcd@byteBCD 0079  
                   convertFromBcd@byteLSB 0078                     convertFromBcd@byteMSB 0077  
                              _initRW1063 0696                        __size_of_writeInst 001C  
              ??_TMR2_SetInterruptHandler 0073                           __size_of___bmul 0011  
                                 ___awdiv 03F4                                 ?_startI2C 0070  
                       __end_of_incrHeure 034B                              writeLCD@data 0076  
                         __size_of_readHr 0029                                 ?_writeLCD 0073  
                                 __ptext1 04B4                                   __ptext2 01D9  
                                 __ptext3 047E                                   __ptext4 052F  
                                 __ptext5 0696                                   __ptext6 0550  
                                 __ptext7 03A3                                   __ptext8 0445  
                                 __ptext9 034B                             ??_changeHeure 0072  
                                 _initI2C 0445                              __size_of_FSM 0021  
                                 _readI2C 0663                                   _incrMin 034B  
                                 _initRTC 03A3                     _OSCILLATOR_Initialize 0711  
                   __end_of_printReglageH 02EB                                 _T2CONbits 001C  
                                 _readMin 04DD                                   _readSec 04B4  
                                 _sendI2C 06B4                                   _waitI2C 06E5  
                ??_PIN_MANAGER_Initialize 0071                             bitExtracted@k 0071  
                           bitExtracted@p 0072                                   _stopI2C 06DD  
              __size_of_SYSTEM_Initialize 0018                      end_of_initialization 0029  
                           incrMin@minute 0022                             incrMin@uniteM 0021  
                              ??_startI2C 0071                                ??_writeLCD 0075  
                        ??_WDT_Initialize 0071                                 _PORTCbits 000E  
                       __end_of_writeInst 056C                          __CFG_FOSC$INTOSC 0000  
                     __end_of_changeHeure 05A4                               ?_initRW1063 0070  
                    __end_of_sendNoAckI2C 070B                          ??_convertFromBcd 0075  
                              main@minute 003B                                main@second 003D  
                              main@select 0039                __end_of_PWM3_LoadDutyValue 05F3  
                              main@uniteH 0036                                main@uniteM 0034  
                              main@uniteS 0032                  __size_of_PWM1_Initialize 0008  
    __end_of_TMR2_DefaultInterruptHandler 071C     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 071B                            __end_of___bmul 0685  
                       __size_of_TMR2_ISR 000C                        _PWM2_LoadDutyValue 0624  
                          __end_of_readHr 052F                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 0024                               __end_of_FSM 0550  
                __size_of_PWM2_Initialize 0008                  __size_of_TMR0_Initialize 000E  
                     ?_PWM2_LoadDutyValue 0071           __size_of_PIN_MANAGER_Initialize 001A  
                    ??_PWM2_LoadDutyValue 0073                  __size_of_PWM3_Initialize 0008  
                                ??___bmul 0072               PWM2_LoadDutyValue@dutyValue 0071  
                                ??_readHr 0073             ?_TMR2_DefaultInterruptHandler 0070  
                       _i2c_driver_i2cISR 0041                               _changeHeure 0588  
                     __size_of_initRW1063 0010                               __pbssCOMMON 007B  
                               ___latbits 0002                             __pcstackBANK0 0020  
                __size_of_TMR2_Initialize 0011                                 _changeMin 056C  
                               __pnvBANK0 003E                            writeLCD@adress 0073  
             __size_of_PWM1_LoadDutyValue 0019                    _PIN_MANAGER_Initialize 05C0  
                           ??_re_startI2C 0071                                  ?___awdiv 0071  
                       ??_PWM1_Initialize 0071                         __size_of_startI2C 0009  
            ??_INTERRUPT_InterruptManager 0070                                 __pswtext1 064F  
                                ?_initI2C 0070                                  ?_readI2C 0070  
                                ?_incrMin 0070                                  ?_initRTC 0070  
                                ?_readMin 0070                                  ?_readSec 0070  
                               _incrHeure 02EB                         __size_of_writeLCD 0036  
                                ?_sendI2C 0070                                  ?_waitI2C 0070  
                                ?_stopI2C 0070                     __size_of_sendNoAckI2C 0006  
                       ??_TMR0_Initialize 0071                         ??_PWM2_Initialize 0071  
                              ?_changeMin 0070                                  _PIE1bits 0091  
                                _PIE2bits 0092       __size_of_INTERRUPT_InterruptManager 001E  
                                _PIR1bits 0011                                  _PIR2bits 0012  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _TMR2_ISR 06C0                                  _SSP1STAT 0214  
                       ??_PWM3_Initialize 0071                              _sendNoAckI2C 0705  
                     __end_of_re_startI2C 06DD                                ?_incrHeure 0070  
                               main@heure 003C            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                             readMin@minute 0074  
               ?_TMR2_SetInterruptHandler 0071                                 _writeInst 0550  
                           readSec@second 0074                         ??_TMR2_Initialize 0073  
                            ??_initRW1063 0073                    __size_of_printReglageH 0112  
                 ??_OSCILLATOR_Initialize 0071                          __size_of___awdiv 0051  
                         incrHeure@uniteH 0021                           incrMin@dizaineM 0020  
                      _PWM3_LoadDutyValue 05DA                             ?_bitExtracted 0071  
                        __size_of_initI2C 0039                          __size_of_readI2C 0011  
                        __size_of_incrMin 0058                        __end_of_initRW1063 06A6  
                        __size_of_initRTC 0051                          __size_of_readMin 0029  
                        __size_of_readSec 0029                          __size_of_sendI2C 000C  
                           writeLCD@ligne 0074                          __size_of_waitI2C 0008  
                                __ptext10 04DD                                  __ptext11 056C  
                                __ptext20 06B4                                  __ptext12 02EB  
                                __ptext21 06E5                                  __ptext13 0506  
                                __ptext30 06A6                                  __ptext22 063A  
                                __ptext14 0705                                  __ptext31 06ED  
                                __ptext23 05A4                                  __ptext15 0663  
                                __ptext40 06C0                                  __ptext32 06F5  
                                __ptext24 0674                                  __ptext16 06D5  
                                __ptext41 071B                                  __ptext33 06FD  
                                __ptext25 03F4                                  __ptext17 0588  
                                __ptext34 05C0                                  __ptext26 060C  
                                __ptext18 06DD                                  __ptext35 0711  
                                __ptext27 0717                                  __ptext19 06CC  
                                __ptext36 05DA                                  __ptext28 0685  
                                __ptext37 0624                                  __ptext29 070B  
                                __ptext38 05F3                       ?_PWM3_LoadDutyValue 0020  
                              ?_writeInst 0070                              _SSP1CON2bits 0216  
                        __size_of_stopI2C 0008                             __size_of_main 01AC  
                             ??_changeMin 0072                      ??_PWM3_LoadDutyValue 0022  
                                int$flags 007E                                  main@PWM1 0029  
                                main@PWM2 002B                                  main@PWM3 002D  
                                _startI2C 06CC                               _re_startI2C 06D5  
      __end_of_INTERRUPT_InterruptManager 0022                _INTERRUPT_InterruptManager 0004  
                                main@menu 0038                                  _writeLCD 047E  
                                initI2C@i 0072                            ??_bitExtracted 0073  
                            ?_changeHeure 0070                               ??_incrHeure 0076  
                              _INTCONbits 000B                             _printReglageH 01D9  
                          incrHeure@heure 0022                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                        bitExtracted@number 0075  
                               writeLCD@i 0077                           _PWM1_Initialize 06FD  
             __size_of_PWM2_LoadDutyValue 0016               PWM3_LoadDutyValue@dutyValue 0020  
                 __size_of_convertFromBcd 001C                                _OPTION_REG 0095  
                          ?_printReglageH 0070                           _TMR0_Initialize 06A6  
                         _PWM2_Initialize 06F5                               ??_writeInst 0072  
                           writeInst@Inst 0072            __end_of_PIN_MANAGER_Initialize 05DA  
              __end_of_PWM1_LoadDutyValue 060C                     _TMR2_InterruptHandler 003E  
                         _PWM3_Initialize 06ED  
