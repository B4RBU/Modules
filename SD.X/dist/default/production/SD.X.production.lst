

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 15:59:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1619 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011C                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0197                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  028C                     	;# 
   181  028D                     	;# 
   182  028E                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0298                     	;# 
   189  0298                     	;# 
   190  0299                     	;# 
   191  029A                     	;# 
   192  029B                     	;# 
   193  029E                     	;# 
   194  030C                     	;# 
   195  030D                     	;# 
   196  030E                     	;# 
   197  038C                     	;# 
   198  038D                     	;# 
   199  038E                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  0397                     	;# 
   207  0398                     	;# 
   208  0399                     	;# 
   209  040E                     	;# 
   210  0413                     	;# 
   211  0413                     	;# 
   212  0414                     	;# 
   213  0414                     	;# 
   214  0415                     	;# 
   215  0416                     	;# 
   216  0417                     	;# 
   217  0418                     	;# 
   218  041A                     	;# 
   219  041A                     	;# 
   220  041B                     	;# 
   221  041B                     	;# 
   222  041C                     	;# 
   223  041D                     	;# 
   224  041E                     	;# 
   225  041F                     	;# 
   226  0493                     	;# 
   227  0494                     	;# 
   228  0495                     	;# 
   229  0496                     	;# 
   230  049A                     	;# 
   231  049B                     	;# 
   232  049C                     	;# 
   233  049D                     	;# 
   234  058C                     	;# 
   235  058C                     	;# 
   236  058D                     	;# 
   237  058E                     	;# 
   238  058E                     	;# 
   239  058F                     	;# 
   240  0590                     	;# 
   241  0590                     	;# 
   242  0591                     	;# 
   243  0592                     	;# 
   244  0592                     	;# 
   245  0593                     	;# 
   246  0594                     	;# 
   247  0594                     	;# 
   248  0595                     	;# 
   249  0596                     	;# 
   250  0596                     	;# 
   251  0597                     	;# 
   252  0598                     	;# 
   253  0599                     	;# 
   254  059A                     	;# 
   255  059B                     	;# 
   256  059B                     	;# 
   257  059C                     	;# 
   258  059D                     	;# 
   259  060C                     	;# 
   260  060C                     	;# 
   261  060D                     	;# 
   262  060E                     	;# 
   263  060F                     	;# 
   264  060F                     	;# 
   265  0610                     	;# 
   266  0611                     	;# 
   267  0612                     	;# 
   268  0613                     	;# 
   269  0614                     	;# 
   270  0617                     	;# 
   271  0618                     	;# 
   272  0619                     	;# 
   273  061A                     	;# 
   274  061B                     	;# 
   275  061C                     	;# 
   276  0691                     	;# 
   277  0692                     	;# 
   278  0693                     	;# 
   279  0694                     	;# 
   280  0695                     	;# 
   281  0696                     	;# 
   282  0697                     	;# 
   283  0699                     	;# 
   284  069A                     	;# 
   285  0711                     	;# 
   286  0712                     	;# 
   287  0713                     	;# 
   288  0714                     	;# 
   289  0715                     	;# 
   290  0718                     	;# 
   291  0718                     	;# 
   292  0719                     	;# 
   293  071A                     	;# 
   294  071A                     	;# 
   295  071B                     	;# 
   296  071C                     	;# 
   297  071D                     	;# 
   298  0791                     	;# 
   299  0791                     	;# 
   300  0792                     	;# 
   301  0793                     	;# 
   302  0793                     	;# 
   303  0794                     	;# 
   304  0795                     	;# 
   305  0795                     	;# 
   306  0796                     	;# 
   307  0797                     	;# 
   308  0797                     	;# 
   309  0798                     	;# 
   310  0799                     	;# 
   311  079A                     	;# 
   312  080C                     	;# 
   313  080C                     	;# 
   314  080D                     	;# 
   315  080E                     	;# 
   316  080E                     	;# 
   317  080F                     	;# 
   318  0810                     	;# 
   319  0810                     	;# 
   320  0811                     	;# 
   321  0812                     	;# 
   322  0812                     	;# 
   323  0813                     	;# 
   324  0814                     	;# 
   325  0815                     	;# 
   326  0816                     	;# 
   327  0817                     	;# 
   328  0818                     	;# 
   329  0819                     	;# 
   330  081A                     	;# 
   331  081A                     	;# 
   332  081B                     	;# 
   333  081C                     	;# 
   334  081C                     	;# 
   335  081D                     	;# 
   336  088C                     	;# 
   337  088D                     	;# 
   338  088E                     	;# 
   339  088F                     	;# 
   340  088F                     	;# 
   341  0890                     	;# 
   342  0891                     	;# 
   343  0892                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0894                     	;# 
   347  0895                     	;# 
   348  0896                     	;# 
   349  0897                     	;# 
   350  0897                     	;# 
   351  0898                     	;# 
   352  0899                     	;# 
   353  0D8C                     	;# 
   354  0D8C                     	;# 
   355  0D8D                     	;# 
   356  0D8E                     	;# 
   357  0D8F                     	;# 
   358  0D8F                     	;# 
   359  0D90                     	;# 
   360  0D91                     	;# 
   361  0D92                     	;# 
   362  0D92                     	;# 
   363  0D93                     	;# 
   364  0D94                     	;# 
   365  0D95                     	;# 
   366  0D95                     	;# 
   367  0D96                     	;# 
   368  0D97                     	;# 
   369  0D98                     	;# 
   370  0D99                     	;# 
   371  0D9A                     	;# 
   372  0D9B                     	;# 
   373  0D9C                     	;# 
   374  0D9D                     	;# 
   375  0D9E                     	;# 
   376  0D9E                     	;# 
   377  0D9F                     	;# 
   378  0DA0                     	;# 
   379  0DA1                     	;# 
   380  0DA1                     	;# 
   381  0DA2                     	;# 
   382  0DA3                     	;# 
   383  0DA4                     	;# 
   384  0DA4                     	;# 
   385  0DA5                     	;# 
   386  0DA6                     	;# 
   387  0DA7                     	;# 
   388  0DA7                     	;# 
   389  0DA8                     	;# 
   390  0DA9                     	;# 
   391  0DAA                     	;# 
   392  0DAB                     	;# 
   393  0DAC                     	;# 
   394  0DAD                     	;# 
   395  0DAE                     	;# 
   396  0DAF                     	;# 
   397  0E0F                     	;# 
   398  0E10                     	;# 
   399  0E11                     	;# 
   400  0E12                     	;# 
   401  0E13                     	;# 
   402  0E14                     	;# 
   403  0E15                     	;# 
   404  0E16                     	;# 
   405  0E17                     	;# 
   406  0E18                     	;# 
   407  0E19                     	;# 
   408  0E1A                     	;# 
   409  0E1B                     	;# 
   410  0E1C                     	;# 
   411  0E1D                     	;# 
   412  0E1E                     	;# 
   413  0E1F                     	;# 
   414  0E20                     	;# 
   415  0E21                     	;# 
   416  0E22                     	;# 
   417  0E23                     	;# 
   418  0E24                     	;# 
   419  0E25                     	;# 
   420  0E26                     	;# 
   421  0E27                     	;# 
   422  0E28                     	;# 
   423  0E29                     	;# 
   424  0E2A                     	;# 
   425  0E2B                     	;# 
   426  0E2C                     	;# 
   427  0E2D                     	;# 
   428  0E2E                     	;# 
   429  0E90                     	;# 
   430  0E91                     	;# 
   431  0E92                     	;# 
   432  0E94                     	;# 
   433  0E95                     	;# 
   434  0E9C                     	;# 
   435  0E9D                     	;# 
   436  0E9E                     	;# 
   437  0E9F                     	;# 
   438  0EA0                     	;# 
   439  0EA1                     	;# 
   440  0EA2                     	;# 
   441  0EA3                     	;# 
   442  0EA4                     	;# 
   443  0EA5                     	;# 
   444  0EA6                     	;# 
   445  0EA7                     	;# 
   446  0F0F                     	;# 
   447  0F10                     	;# 
   448  0F11                     	;# 
   449  0F12                     	;# 
   450  0F13                     	;# 
   451  0F14                     	;# 
   452  0F15                     	;# 
   453  0F16                     	;# 
   454  0F17                     	;# 
   455  0F18                     	;# 
   456  0F19                     	;# 
   457  0F1A                     	;# 
   458  0F1B                     	;# 
   459  0F1C                     	;# 
   460  0F1D                     	;# 
   461  0F1E                     	;# 
   462  0F1F                     	;# 
   463  0F20                     	;# 
   464  0F21                     	;# 
   465  0F22                     	;# 
   466  0F23                     	;# 
   467  0F24                     	;# 
   468  0F25                     	;# 
   469  0F26                     	;# 
   470  0F27                     	;# 
   471  0F28                     	;# 
   472  0F29                     	;# 
   473  0F2A                     	;# 
   474  0F2B                     	;# 
   475  0F2C                     	;# 
   476  0F2D                     	;# 
   477  0F2E                     	;# 
   478  0F2F                     	;# 
   479  0F30                     	;# 
   480  0F31                     	;# 
   481  0F32                     	;# 
   482  0F33                     	;# 
   483  0F34                     	;# 
   484  0F35                     	;# 
   485  0F36                     	;# 
   486  0F37                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  0010                     	;# 
   514  0011                     	;# 
   515  0012                     	;# 
   516  0013                     	;# 
   517  0014                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  001D                     	;# 
   530  001E                     	;# 
   531  001F                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011C                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  018E                     	;# 
   567  0191                     	;# 
   568  0191                     	;# 
   569  0192                     	;# 
   570  0193                     	;# 
   571  0193                     	;# 
   572  0194                     	;# 
   573  0195                     	;# 
   574  0196                     	;# 
   575  0197                     	;# 
   576  0199                     	;# 
   577  0199                     	;# 
   578  0199                     	;# 
   579  019A                     	;# 
   580  019A                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019C                     	;# 
   590  019D                     	;# 
   591  019D                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019E                     	;# 
   595  019E                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  020C                     	;# 
   602  020D                     	;# 
   603  020E                     	;# 
   604  0211                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0212                     	;# 
   608  0213                     	;# 
   609  0213                     	;# 
   610  0214                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0216                     	;# 
   617  0216                     	;# 
   618  0217                     	;# 
   619  0217                     	;# 
   620  028C                     	;# 
   621  028D                     	;# 
   622  028E                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0294                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  029B                     	;# 
   633  029E                     	;# 
   634  030C                     	;# 
   635  030D                     	;# 
   636  030E                     	;# 
   637  038C                     	;# 
   638  038D                     	;# 
   639  038E                     	;# 
   640  0391                     	;# 
   641  0392                     	;# 
   642  0393                     	;# 
   643  0394                     	;# 
   644  0395                     	;# 
   645  0396                     	;# 
   646  0397                     	;# 
   647  0398                     	;# 
   648  0399                     	;# 
   649  040E                     	;# 
   650  0413                     	;# 
   651  0413                     	;# 
   652  0414                     	;# 
   653  0414                     	;# 
   654  0415                     	;# 
   655  0416                     	;# 
   656  0417                     	;# 
   657  0418                     	;# 
   658  041A                     	;# 
   659  041A                     	;# 
   660  041B                     	;# 
   661  041B                     	;# 
   662  041C                     	;# 
   663  041D                     	;# 
   664  041E                     	;# 
   665  041F                     	;# 
   666  0493                     	;# 
   667  0494                     	;# 
   668  0495                     	;# 
   669  0496                     	;# 
   670  049A                     	;# 
   671  049B                     	;# 
   672  049C                     	;# 
   673  049D                     	;# 
   674  058C                     	;# 
   675  058C                     	;# 
   676  058D                     	;# 
   677  058E                     	;# 
   678  058E                     	;# 
   679  058F                     	;# 
   680  0590                     	;# 
   681  0590                     	;# 
   682  0591                     	;# 
   683  0592                     	;# 
   684  0592                     	;# 
   685  0593                     	;# 
   686  0594                     	;# 
   687  0594                     	;# 
   688  0595                     	;# 
   689  0596                     	;# 
   690  0596                     	;# 
   691  0597                     	;# 
   692  0598                     	;# 
   693  0599                     	;# 
   694  059A                     	;# 
   695  059B                     	;# 
   696  059B                     	;# 
   697  059C                     	;# 
   698  059D                     	;# 
   699  060C                     	;# 
   700  060C                     	;# 
   701  060D                     	;# 
   702  060E                     	;# 
   703  060F                     	;# 
   704  060F                     	;# 
   705  0610                     	;# 
   706  0611                     	;# 
   707  0612                     	;# 
   708  0613                     	;# 
   709  0614                     	;# 
   710  0617                     	;# 
   711  0618                     	;# 
   712  0619                     	;# 
   713  061A                     	;# 
   714  061B                     	;# 
   715  061C                     	;# 
   716  0691                     	;# 
   717  0692                     	;# 
   718  0693                     	;# 
   719  0694                     	;# 
   720  0695                     	;# 
   721  0696                     	;# 
   722  0697                     	;# 
   723  0699                     	;# 
   724  069A                     	;# 
   725  0711                     	;# 
   726  0712                     	;# 
   727  0713                     	;# 
   728  0714                     	;# 
   729  0715                     	;# 
   730  0718                     	;# 
   731  0718                     	;# 
   732  0719                     	;# 
   733  071A                     	;# 
   734  071A                     	;# 
   735  071B                     	;# 
   736  071C                     	;# 
   737  071D                     	;# 
   738  0791                     	;# 
   739  0791                     	;# 
   740  0792                     	;# 
   741  0793                     	;# 
   742  0793                     	;# 
   743  0794                     	;# 
   744  0795                     	;# 
   745  0795                     	;# 
   746  0796                     	;# 
   747  0797                     	;# 
   748  0797                     	;# 
   749  0798                     	;# 
   750  0799                     	;# 
   751  079A                     	;# 
   752  080C                     	;# 
   753  080C                     	;# 
   754  080D                     	;# 
   755  080E                     	;# 
   756  080E                     	;# 
   757  080F                     	;# 
   758  0810                     	;# 
   759  0810                     	;# 
   760  0811                     	;# 
   761  0812                     	;# 
   762  0812                     	;# 
   763  0813                     	;# 
   764  0814                     	;# 
   765  0815                     	;# 
   766  0816                     	;# 
   767  0817                     	;# 
   768  0818                     	;# 
   769  0819                     	;# 
   770  081A                     	;# 
   771  081A                     	;# 
   772  081B                     	;# 
   773  081C                     	;# 
   774  081C                     	;# 
   775  081D                     	;# 
   776  088C                     	;# 
   777  088D                     	;# 
   778  088E                     	;# 
   779  088F                     	;# 
   780  088F                     	;# 
   781  0890                     	;# 
   782  0891                     	;# 
   783  0892                     	;# 
   784  0893                     	;# 
   785  0893                     	;# 
   786  0894                     	;# 
   787  0895                     	;# 
   788  0896                     	;# 
   789  0897                     	;# 
   790  0897                     	;# 
   791  0898                     	;# 
   792  0899                     	;# 
   793  0D8C                     	;# 
   794  0D8C                     	;# 
   795  0D8D                     	;# 
   796  0D8E                     	;# 
   797  0D8F                     	;# 
   798  0D8F                     	;# 
   799  0D90                     	;# 
   800  0D91                     	;# 
   801  0D92                     	;# 
   802  0D92                     	;# 
   803  0D93                     	;# 
   804  0D94                     	;# 
   805  0D95                     	;# 
   806  0D95                     	;# 
   807  0D96                     	;# 
   808  0D97                     	;# 
   809  0D98                     	;# 
   810  0D99                     	;# 
   811  0D9A                     	;# 
   812  0D9B                     	;# 
   813  0D9C                     	;# 
   814  0D9D                     	;# 
   815  0D9E                     	;# 
   816  0D9E                     	;# 
   817  0D9F                     	;# 
   818  0DA0                     	;# 
   819  0DA1                     	;# 
   820  0DA1                     	;# 
   821  0DA2                     	;# 
   822  0DA3                     	;# 
   823  0DA4                     	;# 
   824  0DA4                     	;# 
   825  0DA5                     	;# 
   826  0DA6                     	;# 
   827  0DA7                     	;# 
   828  0DA7                     	;# 
   829  0DA8                     	;# 
   830  0DA9                     	;# 
   831  0DAA                     	;# 
   832  0DAB                     	;# 
   833  0DAC                     	;# 
   834  0DAD                     	;# 
   835  0DAE                     	;# 
   836  0DAF                     	;# 
   837  0E0F                     	;# 
   838  0E10                     	;# 
   839  0E11                     	;# 
   840  0E12                     	;# 
   841  0E13                     	;# 
   842  0E14                     	;# 
   843  0E15                     	;# 
   844  0E16                     	;# 
   845  0E17                     	;# 
   846  0E18                     	;# 
   847  0E19                     	;# 
   848  0E1A                     	;# 
   849  0E1B                     	;# 
   850  0E1C                     	;# 
   851  0E1D                     	;# 
   852  0E1E                     	;# 
   853  0E1F                     	;# 
   854  0E20                     	;# 
   855  0E21                     	;# 
   856  0E22                     	;# 
   857  0E23                     	;# 
   858  0E24                     	;# 
   859  0E25                     	;# 
   860  0E26                     	;# 
   861  0E27                     	;# 
   862  0E28                     	;# 
   863  0E29                     	;# 
   864  0E2A                     	;# 
   865  0E2B                     	;# 
   866  0E2C                     	;# 
   867  0E2D                     	;# 
   868  0E2E                     	;# 
   869  0E90                     	;# 
   870  0E91                     	;# 
   871  0E92                     	;# 
   872  0E94                     	;# 
   873  0E95                     	;# 
   874  0E9C                     	;# 
   875  0E9D                     	;# 
   876  0E9E                     	;# 
   877  0E9F                     	;# 
   878  0EA0                     	;# 
   879  0EA1                     	;# 
   880  0EA2                     	;# 
   881  0EA3                     	;# 
   882  0EA4                     	;# 
   883  0EA5                     	;# 
   884  0EA6                     	;# 
   885  0EA7                     	;# 
   886  0F0F                     	;# 
   887  0F10                     	;# 
   888  0F11                     	;# 
   889  0F12                     	;# 
   890  0F13                     	;# 
   891  0F14                     	;# 
   892  0F15                     	;# 
   893  0F16                     	;# 
   894  0F17                     	;# 
   895  0F18                     	;# 
   896  0F19                     	;# 
   897  0F1A                     	;# 
   898  0F1B                     	;# 
   899  0F1C                     	;# 
   900  0F1D                     	;# 
   901  0F1E                     	;# 
   902  0F1F                     	;# 
   903  0F20                     	;# 
   904  0F21                     	;# 
   905  0F22                     	;# 
   906  0F23                     	;# 
   907  0F24                     	;# 
   908  0F25                     	;# 
   909  0F26                     	;# 
   910  0F27                     	;# 
   911  0F28                     	;# 
   912  0F29                     	;# 
   913  0F2A                     	;# 
   914  0F2B                     	;# 
   915  0F2C                     	;# 
   916  0F2D                     	;# 
   917  0F2E                     	;# 
   918  0F2F                     	;# 
   919  0F30                     	;# 
   920  0F31                     	;# 
   921  0F32                     	;# 
   922  0F33                     	;# 
   923  0F34                     	;# 
   924  0F35                     	;# 
   925  0F36                     	;# 
   926  0F37                     	;# 
   927  0FE4                     	;# 
   928  0FE5                     	;# 
   929  0FE6                     	;# 
   930  0FE7                     	;# 
   931  0FE8                     	;# 
   932  0FE9                     	;# 
   933  0FEA                     	;# 
   934  0FEB                     	;# 
   935  0FED                     	;# 
   936  0FEE                     	;# 
   937  0FEF                     	;# 
   938  0000                     	;# 
   939  0001                     	;# 
   940  0002                     	;# 
   941  0003                     	;# 
   942  0004                     	;# 
   943  0005                     	;# 
   944  0006                     	;# 
   945  0007                     	;# 
   946  0008                     	;# 
   947  0009                     	;# 
   948  000A                     	;# 
   949  000B                     	;# 
   950  000C                     	;# 
   951  000D                     	;# 
   952  000E                     	;# 
   953  0010                     	;# 
   954  0011                     	;# 
   955  0012                     	;# 
   956  0013                     	;# 
   957  0014                     	;# 
   958  0015                     	;# 
   959  0016                     	;# 
   960  0016                     	;# 
   961  0017                     	;# 
   962  0018                     	;# 
   963  0019                     	;# 
   964  001A                     	;# 
   965  001A                     	;# 
   966  001B                     	;# 
   967  001B                     	;# 
   968  001C                     	;# 
   969  001D                     	;# 
   970  001E                     	;# 
   971  001F                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  0090                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0093                     	;# 
   979  0094                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  009F                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011C                     	;# 
  1004  018C                     	;# 
  1005  018D                     	;# 
  1006  018E                     	;# 
  1007  0191                     	;# 
  1008  0191                     	;# 
  1009  0192                     	;# 
  1010  0193                     	;# 
  1011  0193                     	;# 
  1012  0194                     	;# 
  1013  0195                     	;# 
  1014  0196                     	;# 
  1015  0197                     	;# 
  1016  0199                     	;# 
  1017  0199                     	;# 
  1018  0199                     	;# 
  1019  019A                     	;# 
  1020  019A                     	;# 
  1021  019A                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019C                     	;# 
  1028  019C                     	;# 
  1029  019C                     	;# 
  1030  019D                     	;# 
  1031  019D                     	;# 
  1032  019D                     	;# 
  1033  019E                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  019F                     	;# 
  1038  019F                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  020C                     	;# 
  1042  020D                     	;# 
  1043  020E                     	;# 
  1044  0211                     	;# 
  1045  0211                     	;# 
  1046  0212                     	;# 
  1047  0212                     	;# 
  1048  0213                     	;# 
  1049  0213                     	;# 
  1050  0214                     	;# 
  1051  0214                     	;# 
  1052  0215                     	;# 
  1053  0215                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0216                     	;# 
  1057  0216                     	;# 
  1058  0217                     	;# 
  1059  0217                     	;# 
  1060  028C                     	;# 
  1061  028D                     	;# 
  1062  028E                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0298                     	;# 
  1069  0298                     	;# 
  1070  0299                     	;# 
  1071  029A                     	;# 
  1072  029B                     	;# 
  1073  029E                     	;# 
  1074  030C                     	;# 
  1075  030D                     	;# 
  1076  030E                     	;# 
  1077  038C                     	;# 
  1078  038D                     	;# 
  1079  038E                     	;# 
  1080  0391                     	;# 
  1081  0392                     	;# 
  1082  0393                     	;# 
  1083  0394                     	;# 
  1084  0395                     	;# 
  1085  0396                     	;# 
  1086  0397                     	;# 
  1087  0398                     	;# 
  1088  0399                     	;# 
  1089  040E                     	;# 
  1090  0413                     	;# 
  1091  0413                     	;# 
  1092  0414                     	;# 
  1093  0414                     	;# 
  1094  0415                     	;# 
  1095  0416                     	;# 
  1096  0417                     	;# 
  1097  0418                     	;# 
  1098  041A                     	;# 
  1099  041A                     	;# 
  1100  041B                     	;# 
  1101  041B                     	;# 
  1102  041C                     	;# 
  1103  041D                     	;# 
  1104  041E                     	;# 
  1105  041F                     	;# 
  1106  0493                     	;# 
  1107  0494                     	;# 
  1108  0495                     	;# 
  1109  0496                     	;# 
  1110  049A                     	;# 
  1111  049B                     	;# 
  1112  049C                     	;# 
  1113  049D                     	;# 
  1114  058C                     	;# 
  1115  058C                     	;# 
  1116  058D                     	;# 
  1117  058E                     	;# 
  1118  058E                     	;# 
  1119  058F                     	;# 
  1120  0590                     	;# 
  1121  0590                     	;# 
  1122  0591                     	;# 
  1123  0592                     	;# 
  1124  0592                     	;# 
  1125  0593                     	;# 
  1126  0594                     	;# 
  1127  0594                     	;# 
  1128  0595                     	;# 
  1129  0596                     	;# 
  1130  0596                     	;# 
  1131  0597                     	;# 
  1132  0598                     	;# 
  1133  0599                     	;# 
  1134  059A                     	;# 
  1135  059B                     	;# 
  1136  059B                     	;# 
  1137  059C                     	;# 
  1138  059D                     	;# 
  1139  060C                     	;# 
  1140  060C                     	;# 
  1141  060D                     	;# 
  1142  060E                     	;# 
  1143  060F                     	;# 
  1144  060F                     	;# 
  1145  0610                     	;# 
  1146  0611                     	;# 
  1147  0612                     	;# 
  1148  0613                     	;# 
  1149  0614                     	;# 
  1150  0617                     	;# 
  1151  0618                     	;# 
  1152  0619                     	;# 
  1153  061A                     	;# 
  1154  061B                     	;# 
  1155  061C                     	;# 
  1156  0691                     	;# 
  1157  0692                     	;# 
  1158  0693                     	;# 
  1159  0694                     	;# 
  1160  0695                     	;# 
  1161  0696                     	;# 
  1162  0697                     	;# 
  1163  0699                     	;# 
  1164  069A                     	;# 
  1165  0711                     	;# 
  1166  0712                     	;# 
  1167  0713                     	;# 
  1168  0714                     	;# 
  1169  0715                     	;# 
  1170  0718                     	;# 
  1171  0718                     	;# 
  1172  0719                     	;# 
  1173  071A                     	;# 
  1174  071A                     	;# 
  1175  071B                     	;# 
  1176  071C                     	;# 
  1177  071D                     	;# 
  1178  0791                     	;# 
  1179  0791                     	;# 
  1180  0792                     	;# 
  1181  0793                     	;# 
  1182  0793                     	;# 
  1183  0794                     	;# 
  1184  0795                     	;# 
  1185  0795                     	;# 
  1186  0796                     	;# 
  1187  0797                     	;# 
  1188  0797                     	;# 
  1189  0798                     	;# 
  1190  0799                     	;# 
  1191  079A                     	;# 
  1192  080C                     	;# 
  1193  080C                     	;# 
  1194  080D                     	;# 
  1195  080E                     	;# 
  1196  080E                     	;# 
  1197  080F                     	;# 
  1198  0810                     	;# 
  1199  0810                     	;# 
  1200  0811                     	;# 
  1201  0812                     	;# 
  1202  0812                     	;# 
  1203  0813                     	;# 
  1204  0814                     	;# 
  1205  0815                     	;# 
  1206  0816                     	;# 
  1207  0817                     	;# 
  1208  0818                     	;# 
  1209  0819                     	;# 
  1210  081A                     	;# 
  1211  081A                     	;# 
  1212  081B                     	;# 
  1213  081C                     	;# 
  1214  081C                     	;# 
  1215  081D                     	;# 
  1216  088C                     	;# 
  1217  088D                     	;# 
  1218  088E                     	;# 
  1219  088F                     	;# 
  1220  088F                     	;# 
  1221  0890                     	;# 
  1222  0891                     	;# 
  1223  0892                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0894                     	;# 
  1227  0895                     	;# 
  1228  0896                     	;# 
  1229  0897                     	;# 
  1230  0897                     	;# 
  1231  0898                     	;# 
  1232  0899                     	;# 
  1233  0D8C                     	;# 
  1234  0D8C                     	;# 
  1235  0D8D                     	;# 
  1236  0D8E                     	;# 
  1237  0D8F                     	;# 
  1238  0D8F                     	;# 
  1239  0D90                     	;# 
  1240  0D91                     	;# 
  1241  0D92                     	;# 
  1242  0D92                     	;# 
  1243  0D93                     	;# 
  1244  0D94                     	;# 
  1245  0D95                     	;# 
  1246  0D95                     	;# 
  1247  0D96                     	;# 
  1248  0D97                     	;# 
  1249  0D98                     	;# 
  1250  0D99                     	;# 
  1251  0D9A                     	;# 
  1252  0D9B                     	;# 
  1253  0D9C                     	;# 
  1254  0D9D                     	;# 
  1255  0D9E                     	;# 
  1256  0D9E                     	;# 
  1257  0D9F                     	;# 
  1258  0DA0                     	;# 
  1259  0DA1                     	;# 
  1260  0DA1                     	;# 
  1261  0DA2                     	;# 
  1262  0DA3                     	;# 
  1263  0DA4                     	;# 
  1264  0DA4                     	;# 
  1265  0DA5                     	;# 
  1266  0DA6                     	;# 
  1267  0DA7                     	;# 
  1268  0DA7                     	;# 
  1269  0DA8                     	;# 
  1270  0DA9                     	;# 
  1271  0DAA                     	;# 
  1272  0DAB                     	;# 
  1273  0DAC                     	;# 
  1274  0DAD                     	;# 
  1275  0DAE                     	;# 
  1276  0DAF                     	;# 
  1277  0E0F                     	;# 
  1278  0E10                     	;# 
  1279  0E11                     	;# 
  1280  0E12                     	;# 
  1281  0E13                     	;# 
  1282  0E14                     	;# 
  1283  0E15                     	;# 
  1284  0E16                     	;# 
  1285  0E17                     	;# 
  1286  0E18                     	;# 
  1287  0E19                     	;# 
  1288  0E1A                     	;# 
  1289  0E1B                     	;# 
  1290  0E1C                     	;# 
  1291  0E1D                     	;# 
  1292  0E1E                     	;# 
  1293  0E1F                     	;# 
  1294  0E20                     	;# 
  1295  0E21                     	;# 
  1296  0E22                     	;# 
  1297  0E23                     	;# 
  1298  0E24                     	;# 
  1299  0E25                     	;# 
  1300  0E26                     	;# 
  1301  0E27                     	;# 
  1302  0E28                     	;# 
  1303  0E29                     	;# 
  1304  0E2A                     	;# 
  1305  0E2B                     	;# 
  1306  0E2C                     	;# 
  1307  0E2D                     	;# 
  1308  0E2E                     	;# 
  1309  0E90                     	;# 
  1310  0E91                     	;# 
  1311  0E92                     	;# 
  1312  0E94                     	;# 
  1313  0E95                     	;# 
  1314  0E9C                     	;# 
  1315  0E9D                     	;# 
  1316  0E9E                     	;# 
  1317  0E9F                     	;# 
  1318  0EA0                     	;# 
  1319  0EA1                     	;# 
  1320  0EA2                     	;# 
  1321  0EA3                     	;# 
  1322  0EA4                     	;# 
  1323  0EA5                     	;# 
  1324  0EA6                     	;# 
  1325  0EA7                     	;# 
  1326  0F0F                     	;# 
  1327  0F10                     	;# 
  1328  0F11                     	;# 
  1329  0F12                     	;# 
  1330  0F13                     	;# 
  1331  0F14                     	;# 
  1332  0F15                     	;# 
  1333  0F16                     	;# 
  1334  0F17                     	;# 
  1335  0F18                     	;# 
  1336  0F19                     	;# 
  1337  0F1A                     	;# 
  1338  0F1B                     	;# 
  1339  0F1C                     	;# 
  1340  0F1D                     	;# 
  1341  0F1E                     	;# 
  1342  0F1F                     	;# 
  1343  0F20                     	;# 
  1344  0F21                     	;# 
  1345  0F22                     	;# 
  1346  0F23                     	;# 
  1347  0F24                     	;# 
  1348  0F25                     	;# 
  1349  0F26                     	;# 
  1350  0F27                     	;# 
  1351  0F28                     	;# 
  1352  0F29                     	;# 
  1353  0F2A                     	;# 
  1354  0F2B                     	;# 
  1355  0F2C                     	;# 
  1356  0F2D                     	;# 
  1357  0F2E                     	;# 
  1358  0F2F                     	;# 
  1359  0F30                     	;# 
  1360  0F31                     	;# 
  1361  0F32                     	;# 
  1362  0F33                     	;# 
  1363  0F34                     	;# 
  1364  0F35                     	;# 
  1365  0F36                     	;# 
  1366  0F37                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  000E                     	;# 
  1393  0010                     	;# 
  1394  0011                     	;# 
  1395  0012                     	;# 
  1396  0013                     	;# 
  1397  0014                     	;# 
  1398  0015                     	;# 
  1399  0016                     	;# 
  1400  0016                     	;# 
  1401  0017                     	;# 
  1402  0018                     	;# 
  1403  0019                     	;# 
  1404  001A                     	;# 
  1405  001A                     	;# 
  1406  001B                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  001D                     	;# 
  1410  001E                     	;# 
  1411  001F                     	;# 
  1412  008C                     	;# 
  1413  008D                     	;# 
  1414  008E                     	;# 
  1415  0090                     	;# 
  1416  0091                     	;# 
  1417  0092                     	;# 
  1418  0093                     	;# 
  1419  0094                     	;# 
  1420  0095                     	;# 
  1421  0096                     	;# 
  1422  0098                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  009F                     	;# 
  1431  010C                     	;# 
  1432  010D                     	;# 
  1433  010E                     	;# 
  1434  0111                     	;# 
  1435  0112                     	;# 
  1436  0113                     	;# 
  1437  0114                     	;# 
  1438  0115                     	;# 
  1439  0116                     	;# 
  1440  0117                     	;# 
  1441  0118                     	;# 
  1442  0119                     	;# 
  1443  011C                     	;# 
  1444  018C                     	;# 
  1445  018D                     	;# 
  1446  018E                     	;# 
  1447  0191                     	;# 
  1448  0191                     	;# 
  1449  0192                     	;# 
  1450  0193                     	;# 
  1451  0193                     	;# 
  1452  0194                     	;# 
  1453  0195                     	;# 
  1454  0196                     	;# 
  1455  0197                     	;# 
  1456  0199                     	;# 
  1457  0199                     	;# 
  1458  0199                     	;# 
  1459  019A                     	;# 
  1460  019A                     	;# 
  1461  019A                     	;# 
  1462  019B                     	;# 
  1463  019B                     	;# 
  1464  019B                     	;# 
  1465  019B                     	;# 
  1466  019B                     	;# 
  1467  019C                     	;# 
  1468  019C                     	;# 
  1469  019C                     	;# 
  1470  019D                     	;# 
  1471  019D                     	;# 
  1472  019D                     	;# 
  1473  019E                     	;# 
  1474  019E                     	;# 
  1475  019E                     	;# 
  1476  019F                     	;# 
  1477  019F                     	;# 
  1478  019F                     	;# 
  1479  019F                     	;# 
  1480  019F                     	;# 
  1481  020C                     	;# 
  1482  020D                     	;# 
  1483  020E                     	;# 
  1484  0211                     	;# 
  1485  0211                     	;# 
  1486  0212                     	;# 
  1487  0212                     	;# 
  1488  0213                     	;# 
  1489  0213                     	;# 
  1490  0214                     	;# 
  1491  0214                     	;# 
  1492  0215                     	;# 
  1493  0215                     	;# 
  1494  0215                     	;# 
  1495  0215                     	;# 
  1496  0216                     	;# 
  1497  0216                     	;# 
  1498  0217                     	;# 
  1499  0217                     	;# 
  1500  028C                     	;# 
  1501  028D                     	;# 
  1502  028E                     	;# 
  1503  0291                     	;# 
  1504  0291                     	;# 
  1505  0292                     	;# 
  1506  0293                     	;# 
  1507  0294                     	;# 
  1508  0298                     	;# 
  1509  0298                     	;# 
  1510  0299                     	;# 
  1511  029A                     	;# 
  1512  029B                     	;# 
  1513  029E                     	;# 
  1514  030C                     	;# 
  1515  030D                     	;# 
  1516  030E                     	;# 
  1517  038C                     	;# 
  1518  038D                     	;# 
  1519  038E                     	;# 
  1520  0391                     	;# 
  1521  0392                     	;# 
  1522  0393                     	;# 
  1523  0394                     	;# 
  1524  0395                     	;# 
  1525  0396                     	;# 
  1526  0397                     	;# 
  1527  0398                     	;# 
  1528  0399                     	;# 
  1529  040E                     	;# 
  1530  0413                     	;# 
  1531  0413                     	;# 
  1532  0414                     	;# 
  1533  0414                     	;# 
  1534  0415                     	;# 
  1535  0416                     	;# 
  1536  0417                     	;# 
  1537  0418                     	;# 
  1538  041A                     	;# 
  1539  041A                     	;# 
  1540  041B                     	;# 
  1541  041B                     	;# 
  1542  041C                     	;# 
  1543  041D                     	;# 
  1544  041E                     	;# 
  1545  041F                     	;# 
  1546  0493                     	;# 
  1547  0494                     	;# 
  1548  0495                     	;# 
  1549  0496                     	;# 
  1550  049A                     	;# 
  1551  049B                     	;# 
  1552  049C                     	;# 
  1553  049D                     	;# 
  1554  058C                     	;# 
  1555  058C                     	;# 
  1556  058D                     	;# 
  1557  058E                     	;# 
  1558  058E                     	;# 
  1559  058F                     	;# 
  1560  0590                     	;# 
  1561  0590                     	;# 
  1562  0591                     	;# 
  1563  0592                     	;# 
  1564  0592                     	;# 
  1565  0593                     	;# 
  1566  0594                     	;# 
  1567  0594                     	;# 
  1568  0595                     	;# 
  1569  0596                     	;# 
  1570  0596                     	;# 
  1571  0597                     	;# 
  1572  0598                     	;# 
  1573  0599                     	;# 
  1574  059A                     	;# 
  1575  059B                     	;# 
  1576  059B                     	;# 
  1577  059C                     	;# 
  1578  059D                     	;# 
  1579  060C                     	;# 
  1580  060C                     	;# 
  1581  060D                     	;# 
  1582  060E                     	;# 
  1583  060F                     	;# 
  1584  060F                     	;# 
  1585  0610                     	;# 
  1586  0611                     	;# 
  1587  0612                     	;# 
  1588  0613                     	;# 
  1589  0614                     	;# 
  1590  0617                     	;# 
  1591  0618                     	;# 
  1592  0619                     	;# 
  1593  061A                     	;# 
  1594  061B                     	;# 
  1595  061C                     	;# 
  1596  0691                     	;# 
  1597  0692                     	;# 
  1598  0693                     	;# 
  1599  0694                     	;# 
  1600  0695                     	;# 
  1601  0696                     	;# 
  1602  0697                     	;# 
  1603  0699                     	;# 
  1604  069A                     	;# 
  1605  0711                     	;# 
  1606  0712                     	;# 
  1607  0713                     	;# 
  1608  0714                     	;# 
  1609  0715                     	;# 
  1610  0718                     	;# 
  1611  0718                     	;# 
  1612  0719                     	;# 
  1613  071A                     	;# 
  1614  071A                     	;# 
  1615  071B                     	;# 
  1616  071C                     	;# 
  1617  071D                     	;# 
  1618  0791                     	;# 
  1619  0791                     	;# 
  1620  0792                     	;# 
  1621  0793                     	;# 
  1622  0793                     	;# 
  1623  0794                     	;# 
  1624  0795                     	;# 
  1625  0795                     	;# 
  1626  0796                     	;# 
  1627  0797                     	;# 
  1628  0797                     	;# 
  1629  0798                     	;# 
  1630  0799                     	;# 
  1631  079A                     	;# 
  1632  080C                     	;# 
  1633  080C                     	;# 
  1634  080D                     	;# 
  1635  080E                     	;# 
  1636  080E                     	;# 
  1637  080F                     	;# 
  1638  0810                     	;# 
  1639  0810                     	;# 
  1640  0811                     	;# 
  1641  0812                     	;# 
  1642  0812                     	;# 
  1643  0813                     	;# 
  1644  0814                     	;# 
  1645  0815                     	;# 
  1646  0816                     	;# 
  1647  0817                     	;# 
  1648  0818                     	;# 
  1649  0819                     	;# 
  1650  081A                     	;# 
  1651  081A                     	;# 
  1652  081B                     	;# 
  1653  081C                     	;# 
  1654  081C                     	;# 
  1655  081D                     	;# 
  1656  088C                     	;# 
  1657  088D                     	;# 
  1658  088E                     	;# 
  1659  088F                     	;# 
  1660  088F                     	;# 
  1661  0890                     	;# 
  1662  0891                     	;# 
  1663  0892                     	;# 
  1664  0893                     	;# 
  1665  0893                     	;# 
  1666  0894                     	;# 
  1667  0895                     	;# 
  1668  0896                     	;# 
  1669  0897                     	;# 
  1670  0897                     	;# 
  1671  0898                     	;# 
  1672  0899                     	;# 
  1673  0D8C                     	;# 
  1674  0D8C                     	;# 
  1675  0D8D                     	;# 
  1676  0D8E                     	;# 
  1677  0D8F                     	;# 
  1678  0D8F                     	;# 
  1679  0D90                     	;# 
  1680  0D91                     	;# 
  1681  0D92                     	;# 
  1682  0D92                     	;# 
  1683  0D93                     	;# 
  1684  0D94                     	;# 
  1685  0D95                     	;# 
  1686  0D95                     	;# 
  1687  0D96                     	;# 
  1688  0D97                     	;# 
  1689  0D98                     	;# 
  1690  0D99                     	;# 
  1691  0D9A                     	;# 
  1692  0D9B                     	;# 
  1693  0D9C                     	;# 
  1694  0D9D                     	;# 
  1695  0D9E                     	;# 
  1696  0D9E                     	;# 
  1697  0D9F                     	;# 
  1698  0DA0                     	;# 
  1699  0DA1                     	;# 
  1700  0DA1                     	;# 
  1701  0DA2                     	;# 
  1702  0DA3                     	;# 
  1703  0DA4                     	;# 
  1704  0DA4                     	;# 
  1705  0DA5                     	;# 
  1706  0DA6                     	;# 
  1707  0DA7                     	;# 
  1708  0DA7                     	;# 
  1709  0DA8                     	;# 
  1710  0DA9                     	;# 
  1711  0DAA                     	;# 
  1712  0DAB                     	;# 
  1713  0DAC                     	;# 
  1714  0DAD                     	;# 
  1715  0DAE                     	;# 
  1716  0DAF                     	;# 
  1717  0E0F                     	;# 
  1718  0E10                     	;# 
  1719  0E11                     	;# 
  1720  0E12                     	;# 
  1721  0E13                     	;# 
  1722  0E14                     	;# 
  1723  0E15                     	;# 
  1724  0E16                     	;# 
  1725  0E17                     	;# 
  1726  0E18                     	;# 
  1727  0E19                     	;# 
  1728  0E1A                     	;# 
  1729  0E1B                     	;# 
  1730  0E1C                     	;# 
  1731  0E1D                     	;# 
  1732  0E1E                     	;# 
  1733  0E1F                     	;# 
  1734  0E20                     	;# 
  1735  0E21                     	;# 
  1736  0E22                     	;# 
  1737  0E23                     	;# 
  1738  0E24                     	;# 
  1739  0E25                     	;# 
  1740  0E26                     	;# 
  1741  0E27                     	;# 
  1742  0E28                     	;# 
  1743  0E29                     	;# 
  1744  0E2A                     	;# 
  1745  0E2B                     	;# 
  1746  0E2C                     	;# 
  1747  0E2D                     	;# 
  1748  0E2E                     	;# 
  1749  0E90                     	;# 
  1750  0E91                     	;# 
  1751  0E92                     	;# 
  1752  0E94                     	;# 
  1753  0E95                     	;# 
  1754  0E9C                     	;# 
  1755  0E9D                     	;# 
  1756  0E9E                     	;# 
  1757  0E9F                     	;# 
  1758  0EA0                     	;# 
  1759  0EA1                     	;# 
  1760  0EA2                     	;# 
  1761  0EA3                     	;# 
  1762  0EA4                     	;# 
  1763  0EA5                     	;# 
  1764  0EA6                     	;# 
  1765  0EA7                     	;# 
  1766  0F0F                     	;# 
  1767  0F10                     	;# 
  1768  0F11                     	;# 
  1769  0F12                     	;# 
  1770  0F13                     	;# 
  1771  0F14                     	;# 
  1772  0F15                     	;# 
  1773  0F16                     	;# 
  1774  0F17                     	;# 
  1775  0F18                     	;# 
  1776  0F19                     	;# 
  1777  0F1A                     	;# 
  1778  0F1B                     	;# 
  1779  0F1C                     	;# 
  1780  0F1D                     	;# 
  1781  0F1E                     	;# 
  1782  0F1F                     	;# 
  1783  0F20                     	;# 
  1784  0F21                     	;# 
  1785  0F22                     	;# 
  1786  0F23                     	;# 
  1787  0F24                     	;# 
  1788  0F25                     	;# 
  1789  0F26                     	;# 
  1790  0F27                     	;# 
  1791  0F28                     	;# 
  1792  0F29                     	;# 
  1793  0F2A                     	;# 
  1794  0F2B                     	;# 
  1795  0F2C                     	;# 
  1796  0F2D                     	;# 
  1797  0F2E                     	;# 
  1798  0F2F                     	;# 
  1799  0F30                     	;# 
  1800  0F31                     	;# 
  1801  0F32                     	;# 
  1802  0F33                     	;# 
  1803  0F34                     	;# 
  1804  0F35                     	;# 
  1805  0F36                     	;# 
  1806  0F37                     	;# 
  1807  0FE4                     	;# 
  1808  0FE5                     	;# 
  1809  0FE6                     	;# 
  1810  0FE7                     	;# 
  1811  0FE8                     	;# 
  1812  0FE9                     	;# 
  1813  0FEA                     	;# 
  1814  0FEB                     	;# 
  1815  0FED                     	;# 
  1816  0FEE                     	;# 
  1817  0FEF                     	;# 
  1818  0015                     _TMR0	set	21
  1819  005A                     _T0IF	set	90
  1820  0095                     _OPTION_REGbits	set	149
  1821  008E                     _TRISC	set	142
  1822  008D                     _TRISB	set	141
  1823  008C                     _TRISA	set	140
  1824  0098                     _OSCTUNE	set	152
  1825  0099                     _OSCCON	set	153
  1826  010C                     _LATAbits	set	268
  1827  010E                     _LATCbits	set	270
  1828  010E                     _LATC	set	270
  1829  010D                     _LATB	set	269
  1830  010C                     _LATA	set	268
  1831  0116                     _BORCON	set	278
  1832  018C                     _ANSELA	set	396
  1833  018D                     _ANSELB	set	397
  1834  018E                     _ANSELC	set	398
  1835  020E                     _WPUC	set	526
  1836  020C                     _WPUA	set	524
  1837  020D                     _WPUB	set	525
  1838  0214                     _SSP1STATbits	set	532
  1839  0211                     _SSP1BUF	set	529
  1840  0215                     _SSP1CON1bits	set	533
  1841  0212                     _SSP1ADD	set	530
  1842  0215                     _SSP1CON1	set	533
  1843  0214                     _SSP1STAT	set	532
  1844  10A0                     _BF	set	4256
  1845  0291                     _CCPR1L	set	657
  1846  028E                     _ODCONC	set	654
  1847  028D                     _ODCONB	set	653
  1848  028C                     _ODCONA	set	652
  1849  0E20                     _SSPCLKPPS	set	3616
  1850  0E21                     _SSPDATPPS	set	3617
  1851  0E9D                     _RB5PPS	set	3741
  1852  0E9E                     _RB6PPS	set	3742
  1853                           
  1854                           ; #config settings
  1855  0000                     
  1856                           	psect	cinit
  1857  07EE                     start_initialization:	
  1858  07EE                     __initialization:	
  1859                           
  1860                           ; Clear objects allocated to BANK0
  1861  07EE  305E               	movlw	low __pbssBANK0
  1862  07EF  0084               	movwf	4
  1863  07F0  3000               	movlw	high __pbssBANK0
  1864  07F1  0085               	movwf	5
  1865  07F2  3011               	movlw	17
  1866  07F3  318F  27F2  3187   	fcall	clear_ram0
  1867                           
  1868                           ; Clear objects allocated to BANK1
  1869  07F6  30A0               	movlw	low __pbssBANK1
  1870  07F7  0084               	movwf	4
  1871  07F8  3000               	movlw	high __pbssBANK1
  1872  07F9  0085               	movwf	5
  1873  07FA  3018               	movlw	24
  1874  07FB  318F  27F2         	fcall	clear_ram0
  1875  07FD                     end_of_initialization:	
  1876                           ;End of C runtime variable initialization code
  1877                           
  1878  07FD                     __end_of__initialization:	
  1879  07FD  0020               	movlb	0
  1880  07FE  3180  28E2         	ljmp	_main	;jump to C main() function
  1881                           
  1882                           	psect	bssBANK0
  1883  005E                     __pbssBANK0:	
  1884  005E                     _DataSector:	
  1885  005E                     	ds	4
  1886  0062                     _BootSector:	
  1887  0062                     	ds	4
  1888  0066                     _ReservedSectors:	
  1889  0066                     	ds	2
  1890  0068                     _BytesPerSector:	
  1891  0068                     	ds	2
  1892  006A                     _Fats:	
  1893  006A                     	ds	1
  1894  006B                     _sdhc:	
  1895  006B                     	ds	1
  1896  006C                     _card:	
  1897  006C                     	ds	2
  1898  006E                     _SectorsPerCluster:	
  1899  006E                     	ds	1
  1900                           
  1901                           	psect	bssBANK1
  1902  00A0                     __pbssBANK1:	
  1903  00A0                     _FileSize:	
  1904  00A0                     	ds	4
  1905  00A4                     _FileCluster:	
  1906  00A4                     	ds	4
  1907  00A8                     _RootDirCluster:	
  1908  00A8                     	ds	4
  1909  00AC                     _SectorsPerFat:	
  1910  00AC                     	ds	4
  1911  00B0                     _RootDir:	
  1912  00B0                     	ds	4
  1913  00B4                     _loc:	
  1914  00B4                     	ds	4
  1915                           
  1916                           	psect	clrtext
  1917  0FF2                     clear_ram0:	
  1918                           ;	Called with FSR0 containing the base address, and
  1919                           ;	WREG with the size to clear
  1920                           
  1921  0FF2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1922  0FF3                     clrloop0:	
  1923  0FF3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1924  0FF4  3101               	addfsr 0,1
  1925  0FF5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1926  0FF6  2FF3               	goto	clrloop0	;have we reached the end yet?
  1927  0FF7  3400               	retlw	0	;all done for this memory range, return
  1928                           
  1929                           	psect	cstackCOMMON
  1930  0070                     __pcstackCOMMON:	
  1931  0070                     ?_PIN_MANAGER_Initialize:	
  1932  0070                     ??_PIN_MANAGER_Initialize:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935  0070                     ?_OSCILLATOR_Initialize:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938  0070                     ??_OSCILLATOR_Initialize:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941  0070                     ?_SPI:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944  0070                     ??_SPI:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947  0070                     ?_SPI_Initialize:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950  0070                     ??_SPI_Initialize:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953  0070                     ?_SYSTEM_Initialize:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956  0070                     ??_SYSTEM_Initialize:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959  0070                     ?_readSD:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962  0070                     ?_fat:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965  0070                     ?_initSD:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968  0070                     ?_main:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971  0070                     ?___lmul:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974  0070                     SPI@spidata:	
  1975                           ; 4 bytes @ 0x0
  1976                           
  1977  0070                     ___lmul@multiplier:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980                           
  1981                           ; 4 bytes @ 0x0
  1982  0070                     	ds	4
  1983  0074                     ___lmul@multiplicand:	
  1984                           
  1985                           ; 4 bytes @ 0x4
  1986  0074                     	ds	4
  1987  0078                     ??___lmul:	
  1988  0078                     ___lmul@product:	
  1989                           ; 1 bytes @ 0x8
  1990                           
  1991                           
  1992                           ; 4 bytes @ 0x8
  1993  0078                     	ds	4
  1994  007C                     ??_initSD:	
  1995                           
  1996                           ; 1 bytes @ 0xC
  1997  007C                     	ds	1
  1998                           
  1999                           	psect	cstackBANK0
  2000  0020                     __pcstackBANK0:	
  2001  0020                     ?_Command:	
  2002  0020                     Command@adrs:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005                           
  2006                           ; 4 bytes @ 0x0
  2007  0020                     	ds	4
  2008  0024                     Command@frame2:	
  2009                           
  2010                           ; 1 bytes @ 0x4
  2011  0024                     	ds	1
  2012  0025                     ??_Command:	
  2013                           
  2014                           ; 1 bytes @ 0x5
  2015  0025                     	ds	4
  2016  0029                     Command@frame1:	
  2017                           
  2018                           ; 1 bytes @ 0x9
  2019  0029                     	ds	1
  2020  002A                     Command@res:	
  2021                           
  2022                           ; 1 bytes @ 0xA
  2023  002A                     	ds	1
  2024  002B                     Command@i:	
  2025                           
  2026                           ; 1 bytes @ 0xB
  2027  002B                     	ds	1
  2028  002C                     ?_file:	
  2029  002C                     ??_readSD:	
  2030                           ; 1 bytes @ 0xC
  2031                           
  2032  002C                     ??_fat:	
  2033                           ; 1 bytes @ 0xC
  2034                           
  2035  002C                     file@offset:	
  2036                           ; 1 bytes @ 0xC
  2037                           
  2038  002C                     initSD@r:	
  2039                           ; 2 bytes @ 0xC
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0xC
  2043  002C                     	ds	2
  2044  002E                     file@sect:	
  2045                           
  2046                           ; 1 bytes @ 0xE
  2047  002E                     	ds	1
  2048  002F                     ??_file:	
  2049                           
  2050                           ; 1 bytes @ 0xF
  2051  002F                     	ds	1
  2052  0030                     initSD@i:	
  2053  0030                     readSD@r:	
  2054                           ; 1 bytes @ 0x10
  2055                           
  2056                           
  2057                           ; 2 bytes @ 0x10
  2058  0030                     	ds	2
  2059  0032                     readSD@data:	
  2060                           
  2061                           ; 1 bytes @ 0x12
  2062  0032                     	ds	1
  2063  0033                     readSD@i:	
  2064                           
  2065                           ; 2 bytes @ 0x13
  2066  0033                     	ds	9
  2067  003C                     fat@r:	
  2068                           
  2069                           ; 2 bytes @ 0x1C
  2070  003C                     	ds	2
  2071  003E                     fat@bps1:	
  2072                           
  2073                           ; 1 bytes @ 0x1E
  2074  003E                     	ds	1
  2075  003F                     fat@bps2:	
  2076  003F                     file@r:	
  2077                           ; 1 bytes @ 0x1F
  2078                           
  2079                           
  2080                           ; 2 bytes @ 0x1F
  2081  003F                     	ds	1
  2082  0040                     fat@rs1:	
  2083                           
  2084                           ; 1 bytes @ 0x20
  2085  0040                     	ds	1
  2086  0041                     fat@rs2:	
  2087  0041                     file@fc:	
  2088                           ; 1 bytes @ 0x21
  2089                           
  2090                           
  2091                           ; 4 bytes @ 0x21
  2092  0041                     	ds	1
  2093  0042                     fat@pfs:	
  2094                           
  2095                           ; 4 bytes @ 0x22
  2096  0042                     	ds	3
  2097  0045                     file@fs:	
  2098                           
  2099                           ; 4 bytes @ 0x25
  2100  0045                     	ds	1
  2101  0046                     fat@spf:	
  2102                           
  2103                           ; 4 bytes @ 0x26
  2104  0046                     	ds	3
  2105  0049                     file@i:	
  2106                           
  2107                           ; 2 bytes @ 0x29
  2108  0049                     	ds	1
  2109  004A                     fat@rdc:	
  2110                           
  2111                           ; 4 bytes @ 0x2A
  2112  004A                     	ds	4
  2113  004E                     fat@i:	
  2114                           
  2115                           ; 2 bytes @ 0x2E
  2116  004E                     	ds	2
  2117  0050                     ??_main:	
  2118                           
  2119                           ; 1 bytes @ 0x30
  2120  0050                     	ds	8
  2121  0058                     _main$610:	
  2122                           
  2123                           ; 4 bytes @ 0x38
  2124  0058                     	ds	4
  2125  005C                     main@fn:	
  2126                           
  2127                           ; 1 bytes @ 0x3C
  2128  005C                     	ds	1
  2129  005D                     main@sn:	
  2130                           
  2131                           ; 1 bytes @ 0x3D
  2132  005D                     	ds	1
  2133                           
  2134                           	psect	maintext
  2135  00E2                     __pmaintext:	
  2136 ;;
  2137 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  2138 ;;
  2139 ;; *************** function _main *****************
  2140 ;; Defined at:
  2141 ;;		line 208 in file "main.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  sn              1   61[BANK0 ] unsigned char 
  2146 ;;  fn              1   60[BANK0 ] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : B1F/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;Total ram usage:       14 bytes
  2161 ;; Hardware stack levels required when called:    3
  2162 ;; This function calls:
  2163 ;;		_SYSTEM_Initialize
  2164 ;;		___lmul
  2165 ;;		_fat
  2166 ;;		_file
  2167 ;;		_initSD
  2168 ;;		_readSD
  2169 ;; This function is called by:
  2170 ;;		Startup code after reset
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _main
  2176  00E2                     _main:	
  2177                           
  2178                           ;main.c: 210: unsigned char fn=1, sn=0;
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2182  00E2  0020               	movlb	0	; select bank0
  2183  00E3  01DC               	clrf	main@fn
  2184  00E4  0ADC               	incf	main@fn,f
  2185  00E5  01DD               	clrf	main@sn
  2186                           
  2187                           ;main.c: 211: SYSTEM_Initialize();
  2188  00E6  3180  2013  3180   	fcall	_SYSTEM_Initialize
  2189                           
  2190                           ;main.c: 212: initSD();
  2191  00E9  3182  2205  3180   	fcall	_initSD
  2192                           
  2193                           ;main.c: 213: fat();
  2194  00EC  3184  24D6  3180   	fcall	_fat
  2195                           
  2196                           ;main.c: 214: card=512;
  2197  00EF  3000               	movlw	0
  2198  00F0  0020               	movlb	0	; select bank0
  2199  00F1  00EC               	movwf	_card
  2200  00F2  3002               	movlw	2
  2201  00F3  00ED               	movwf	_card+1
  2202  00F4                     l1458:	
  2203                           ;main.c: 215: while (1)
  2204                           
  2205                           
  2206                           ;main.c: 216: {
  2207                           ;main.c: 217: file(fn*32+20,sn);
  2208  00F4  0020               	movlb	0	; select bank0
  2209  00F5  085C               	movf	main@fn,w
  2210  00F6  00D0               	movwf	??_main
  2211  00F7  01D1               	clrf	??_main+1
  2212  00F8  3005               	movlw	5
  2213  00F9                     u1685:	
  2214  00F9  35D0               	lslf	??_main,f
  2215  00FA  0DD1               	rlf	??_main+1,f
  2216  00FB  0B89               	decfsz	9,f
  2217  00FC  28F9               	goto	u1685
  2218  00FD  0850               	movf	??_main,w
  2219  00FE  3E14               	addlw	20
  2220  00FF  00AC               	movwf	file@offset
  2221  0100  3000               	movlw	0
  2222  0101  3D51               	addwfc	??_main+1,w
  2223  0102  00AD               	movwf	file@offset+1
  2224  0103  085D               	movf	main@sn,w
  2225  0104  00D2               	movwf	??_main+2
  2226  0105  0852               	movf	??_main+2,w
  2227  0106  00AE               	movwf	file@sect
  2228  0107  3182  22E7  3180   	fcall	_file
  2229                           
  2230                           ;main.c: 218: if(FileCluster){
  2231  010A  0021               	movlb	1	; select bank1
  2232  010B  0827               	movf	(_FileCluster+3)^(0+128),w
  2233  010C  0426               	iorwf	(_FileCluster+2)^(0+128),w
  2234  010D  0425               	iorwf	(_FileCluster+1)^(0+128),w
  2235  010E  0424               	iorwf	_FileCluster^(0+128),w
  2236  010F  1903               	skipnz
  2237  0110  28F4               	goto	l1458
  2238                           
  2239                           ;main.c: 219: loc=(1 + (DataSector) + (unsigned long)(FileCluster-2) * SectorsPerCluster
      +                          ) * card ;
  2240  0111  30FE               	movlw	254
  2241  0112  0724               	addwf	_FileCluster^(0+128),w
  2242  0113  00F0               	movwf	___lmul@multiplier
  2243  0114  30FF               	movlw	255
  2244  0115  3D25               	addwfc	(_FileCluster+1)^(0+128),w
  2245  0116  00F1               	movwf	___lmul@multiplier+1
  2246  0117  30FF               	movlw	255
  2247  0118  3D26               	addwfc	(_FileCluster+2)^(0+128),w
  2248  0119  00F2               	movwf	___lmul@multiplier+2
  2249  011A  30FF               	movlw	255
  2250  011B  3D27               	addwfc	(_FileCluster+3)^(0+128),w
  2251  011C  00F3               	movwf	___lmul@multiplier+3
  2252  011D  0020               	movlb	0	; select bank0
  2253  011E  086E               	movf	_SectorsPerCluster,w
  2254  011F  00D0               	movwf	??_main
  2255  0120  01D1               	clrf	??_main+1
  2256  0121  01D2               	clrf	??_main+2
  2257  0122  01D3               	clrf	??_main+3
  2258  0123  0853               	movf	??_main+3,w
  2259  0124  00F7               	movwf	___lmul@multiplicand+3
  2260  0125  0852               	movf	??_main+2,w
  2261  0126  00F6               	movwf	___lmul@multiplicand+2
  2262  0127  0851               	movf	??_main+1,w
  2263  0128  00F5               	movwf	___lmul@multiplicand+1
  2264  0129  0850               	movf	??_main,w
  2265  012A  00F4               	movwf	___lmul@multiplicand
  2266  012B  3180  2045  3180   	fcall	___lmul
  2267  012E  0870               	movf	?___lmul,w
  2268  012F  0020               	movlb	0	; select bank0
  2269  0130  075E               	addwf	_DataSector,w
  2270  0131  00D4               	movwf	??_main+4
  2271  0132  0871               	movf	?___lmul+1,w
  2272  0133  3D5F               	addwfc	_DataSector+1,w
  2273  0134  00D5               	movwf	??_main+5
  2274  0135  0872               	movf	?___lmul+2,w
  2275  0136  3D60               	addwfc	_DataSector+2,w
  2276  0137  00D6               	movwf	??_main+6
  2277  0138  0873               	movf	?___lmul+3,w
  2278  0139  3D61               	addwfc	_DataSector+3,w
  2279  013A  00D7               	movwf	??_main+7
  2280  013B  3001               	movlw	1
  2281  013C  0754               	addwf	??_main+4,w
  2282  013D  00D8               	movwf	_main$610
  2283  013E  3000               	movlw	0
  2284  013F  3D55               	addwfc	??_main+5,w
  2285  0140  00D9               	movwf	_main$610+1
  2286  0141  3000               	movlw	0
  2287  0142  3D56               	addwfc	??_main+6,w
  2288  0143  00DA               	movwf	_main$610+2
  2289  0144  3000               	movlw	0
  2290  0145  3D57               	addwfc	??_main+7,w
  2291  0146  00DB               	movwf	_main$610+3
  2292                           
  2293                           ;main.c: 219: loc=(1 + (DataSector) + (unsigned long)(FileCluster-2) * SectorsPerCluster
      +                          ) * card ;
  2294  0147  085B               	movf	_main$610+3,w
  2295  0148  00F3               	movwf	___lmul@multiplier+3
  2296  0149  085A               	movf	_main$610+2,w
  2297  014A  00F2               	movwf	___lmul@multiplier+2
  2298  014B  0859               	movf	_main$610+1,w
  2299  014C  00F1               	movwf	___lmul@multiplier+1
  2300  014D  0858               	movf	_main$610,w
  2301  014E  00F0               	movwf	___lmul@multiplier
  2302  014F  086C               	movf	_card,w
  2303  0150  00F4               	movwf	___lmul@multiplicand
  2304  0151  086D               	movf	_card+1,w
  2305  0152  00F5               	movwf	___lmul@multiplicand+1
  2306  0153  01F6               	clrf	___lmul@multiplicand+2
  2307  0154  01F7               	clrf	___lmul@multiplicand+3
  2308  0155  3180  2045  3180   	fcall	___lmul
  2309  0158  0873               	movf	?___lmul+3,w
  2310  0159  0021               	movlb	1	; select bank1
  2311  015A  00B7               	movwf	(_loc+3)^(0+128)
  2312  015B  0872               	movf	?___lmul+2,w
  2313  015C  00B6               	movwf	(_loc+2)^(0+128)
  2314  015D  0871               	movf	?___lmul+1,w
  2315  015E  00B5               	movwf	(_loc+1)^(0+128)
  2316  015F  0870               	movf	?___lmul,w
  2317  0160  00B4               	movwf	_loc^(0+128)
  2318                           
  2319                           ;main.c: 220: readSD();
  2320  0161  3181  2165  3180   	fcall	_readSD
  2321  0164  28F4               	goto	l1458
  2322  0165                     __end_of_main:	
  2323                           
  2324                           	psect	text1
  2325  0165                     __ptext1:	
  2326 ;; *************** function _readSD *****************
  2327 ;; Defined at:
  2328 ;;		line 41 in file "main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  i               2   19[BANK0 ] unsigned int 
  2333 ;;  r               2   16[BANK0 ] unsigned int 
  2334 ;;  data            1   18[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;Total ram usage:        9 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		_Command
  2353 ;;		_SPI
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _readSD
  2361  0165                     _readSD:	
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _readSD: [wreg+status,2+status,0+pclath+cstack]
  2365                           ;main.c: 43: unsigned int i,r;
  2366                           ;main.c: 44: unsigned char data;
  2367                           ;main.c: 46: do { LATCbits.LATC2 = 0; } while(0);
  2368  0165  0022               	movlb	2	; select bank2
  2369  0166  110E               	bcf	14,2	;volatile
  2370                           
  2371                           ;main.c: 47: r = Command(18,loc,0xFF);
  2372  0167  0021               	movlb	1	; select bank1
  2373  0168  0837               	movf	(_loc+3)^(0+128),w
  2374  0169  0020               	movlb	0	; select bank0
  2375  016A  00A3               	movwf	Command@adrs+3
  2376  016B  0021               	movlb	1	; select bank1
  2377  016C  0836               	movf	(_loc+2)^(0+128),w
  2378  016D  0020               	movlb	0	; select bank0
  2379  016E  00A2               	movwf	Command@adrs+2
  2380  016F  0021               	movlb	1	; select bank1
  2381  0170  0835               	movf	(_loc+1)^(0+128),w
  2382  0171  0020               	movlb	0	; select bank0
  2383  0172  00A1               	movwf	Command@adrs+1
  2384  0173  0021               	movlb	1	; select bank1
  2385  0174  0834               	movf	_loc^(0+128),w
  2386  0175  0020               	movlb	0	; select bank0
  2387  0176  00A0               	movwf	Command@adrs
  2388  0177  30FF               	movlw	255
  2389  0178  00AC               	movwf	??_readSD
  2390  0179  082C               	movf	??_readSD,w
  2391  017A  00A4               	movwf	Command@frame2
  2392  017B  3012               	movlw	18
  2393  017C  3180  2074  3181   	fcall	_Command
  2394  017F  0020               	movlb	0	; select bank0
  2395  0180  00AD               	movwf	??_readSD+1
  2396  0181  01AE               	clrf	??_readSD+2
  2397  0182  082D               	movf	??_readSD+1,w
  2398  0183  00B0               	movwf	readSD@r
  2399  0184  082E               	movf	??_readSD+2,w
  2400  0185  00B1               	movwf	readSD@r+1
  2401  0186                     l1278:	
  2402                           ;main.c: 50: while(FileSize--)
  2403                           
  2404  0186  3001               	movlw	1
  2405  0187  0020               	movlb	0	; select bank0
  2406  0188  00AC               	movwf	??_readSD
  2407  0189  3000               	movlw	0
  2408  018A  00AD               	movwf	??_readSD+1
  2409  018B  3000               	movlw	0
  2410  018C  00AE               	movwf	??_readSD+2
  2411  018D  3000               	movlw	0
  2412  018E  00AF               	movwf	??_readSD+3
  2413  018F  082C               	movf	??_readSD,w
  2414  0190  0021               	movlb	1	; select bank1
  2415  0191  02A0               	subwf	_FileSize^(0+128),f
  2416  0192  0020               	movlb	0	; select bank0
  2417  0193  082D               	movf	??_readSD+1,w
  2418  0194  0021               	movlb	1	; select bank1
  2419  0195  3BA1               	subwfb	(_FileSize+1)^(0+128),f
  2420  0196  0020               	movlb	0	; select bank0
  2421  0197  082E               	movf	??_readSD+2,w
  2422  0198  0021               	movlb	1	; select bank1
  2423  0199  3BA2               	subwfb	(_FileSize+2)^(0+128),f
  2424  019A  0020               	movlb	0	; select bank0
  2425  019B  082F               	movf	??_readSD+3,w
  2426  019C  0021               	movlb	1	; select bank1
  2427  019D  3BA3               	subwfb	(_FileSize+3)^(0+128),f
  2428  019E  0A20               	incf	_FileSize^(0+128),w
  2429  019F  1D03               	skipz
  2430  01A0  29A9               	goto	l1256
  2431  01A1  0A21               	incf	(_FileSize+1)^(0+128),w
  2432  01A2  1D03               	skipz
  2433  01A3  29A9               	goto	l1256
  2434  01A4  0A22               	incf	(_FileSize+2)^(0+128),w
  2435  01A5  1903               	btfsc	3,2
  2436  01A6  0A23               	incf	(_FileSize+3)^(0+128),w
  2437  01A7  1903               	btfsc	3,2
  2438  01A8  29E6               	goto	l1280
  2439  01A9                     l1256:	
  2440                           ;main.c: 51: {
  2441                           ;main.c: 52: while(SPI(0xFF) != 0xFE);
  2442                           
  2443  01A9  30FF               	movlw	255
  2444  01AA  3180  200B  3181   	fcall	_SPI
  2445  01AD  3AFE               	xorlw	254
  2446  01AE  1D03               	skipz
  2447  01AF  29A9               	goto	l1256
  2448                           
  2449                           ;main.c: 53: for(i=0;i<512;i++){
  2450  01B0  0020               	movlb	0	; select bank0
  2451  01B1  01B3               	clrf	readSD@i
  2452  01B2  01B4               	clrf	readSD@i+1
  2453  01B3  3002               	movlw	2
  2454  01B4  0234               	subwf	readSD@i+1,w
  2455  01B5  3000               	movlw	0
  2456  01B6  1903               	skipnz
  2457  01B7  0233               	subwf	readSD@i,w
  2458  01B8  1803               	btfsc	3,0
  2459  01B9  29DD               	goto	l1276
  2460  01BA                     l197:	
  2461                           ;main.c: 54: while(!T0IF){}
  2462                           
  2463  01BA  1D0B               	btfss	11,2	;volatile
  2464  01BB  29BA               	goto	l197
  2465                           
  2466                           ;main.c: 55: TMR0=165;
  2467  01BC  30A5               	movlw	165
  2468  01BD  0020               	movlb	0	; select bank0
  2469  01BE  0095               	movwf	21	;volatile
  2470                           
  2471                           ;main.c: 56: T0IF = 0;
  2472  01BF  110B               	bcf	11,2	;volatile
  2473                           
  2474                           ;main.c: 57: data = SPI(0xFF);
  2475  01C0  30FF               	movlw	255
  2476  01C1  3180  200B  3181   	fcall	_SPI
  2477  01C4  0020               	movlb	0	; select bank0
  2478  01C5  00AC               	movwf	??_readSD
  2479  01C6  082C               	movf	??_readSD,w
  2480  01C7  00B2               	movwf	readSD@data
  2481                           
  2482                           ;main.c: 59: CCPR1L = (data >> 2);
  2483  01C8  0832               	movf	readSD@data,w
  2484  01C9  00AC               	movwf	??_readSD
  2485  01CA  3002               	movlw	2
  2486  01CB                     u1215:	
  2487  01CB  36AC               	lsrf	??_readSD,f
  2488  01CC  0B89               	decfsz	9,f
  2489  01CD  29CB               	goto	u1215
  2490  01CE  082C               	movf	??_readSD,w
  2491  01CF  0025               	movlb	5	; select bank5
  2492  01D0  0091               	movwf	17	;volatile
  2493  01D1  3001               	movlw	1
  2494  01D2  0020               	movlb	0	; select bank0
  2495  01D3  07B3               	addwf	readSD@i,f
  2496  01D4  3000               	movlw	0
  2497  01D5  3DB4               	addwfc	readSD@i+1,f
  2498  01D6  3002               	movlw	2
  2499  01D7  0234               	subwf	readSD@i+1,w
  2500  01D8  3000               	movlw	0
  2501  01D9  1903               	skipnz
  2502  01DA  0233               	subwf	readSD@i,w
  2503  01DB  1C03               	skipc
  2504  01DC  29BA               	goto	l197
  2505  01DD                     l1276:	
  2506                           
  2507                           ;main.c: 60: }
  2508                           ;main.c: 61: SPI(0xFF);
  2509  01DD  30FF               	movlw	255
  2510  01DE  3180  200B  3181   	fcall	_SPI
  2511                           
  2512                           ;main.c: 62: SPI(0xFF);
  2513  01E1  30FF               	movlw	255
  2514  01E2  3180  200B  3181   	fcall	_SPI
  2515  01E5  2986               	goto	l1278
  2516  01E6                     l1280:	
  2517                           
  2518                           ;main.c: 63: }
  2519                           ;main.c: 64: Command(12,0x00,0xFF);
  2520  01E6  3000               	movlw	0
  2521  01E7  0020               	movlb	0	; select bank0
  2522  01E8  00A3               	movwf	Command@adrs+3
  2523  01E9  3000               	movlw	0
  2524  01EA  00A2               	movwf	Command@adrs+2
  2525  01EB  3000               	movlw	0
  2526  01EC  00A1               	movwf	Command@adrs+1
  2527  01ED  3000               	movlw	0
  2528  01EE  00A0               	movwf	Command@adrs
  2529  01EF  30FF               	movlw	255
  2530  01F0  00AC               	movwf	??_readSD
  2531  01F1  082C               	movf	??_readSD,w
  2532  01F2  00A4               	movwf	Command@frame2
  2533  01F3  300C               	movlw	12
  2534  01F4  3180  2074  3181   	fcall	_Command
  2535                           
  2536                           ;main.c: 65: SPI(0xFF);
  2537  01F7  30FF               	movlw	255
  2538  01F8  3180  200B  3181   	fcall	_SPI
  2539                           
  2540                           ;main.c: 66: SPI(0xFF);
  2541  01FB  30FF               	movlw	255
  2542  01FC  3180  200B  3181   	fcall	_SPI
  2543                           
  2544                           ;main.c: 67: do { LATCbits.LATC2 = 1; } while(0);SPI(0xFF);
  2545  01FF  0022               	movlb	2	; select bank2
  2546  0200  150E               	bsf	14,2	;volatile
  2547  0201  30FF               	movlw	255
  2548  0202  3180  200B         	fcall	_SPI
  2549  0204  0008               	return
  2550  0205                     __end_of_readSD:	
  2551                           
  2552                           	psect	text2
  2553  0205                     __ptext2:	
  2554 ;; *************** function _initSD *****************
  2555 ;; Defined at:
  2556 ;;		line 160 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  r               4   12[BANK0 ] unsigned char [4]
  2561 ;;  i               1   16[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;Total ram usage:        6 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    2
  2578 ;; This function calls:
  2579 ;;		_Command
  2580 ;;		_SPI
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _initSD
  2588  0205                     _initSD:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _initSD: [wreg+status,2+status,0+pclath+cstack]
  2592                           ;main.c: 162: unsigned char i,r[4];
  2593                           ;main.c: 164: do { LATCbits.LATC2 = 1; } while(0);
  2594  0205  0022               	movlb	2	; select bank2
  2595  0206  150E               	bsf	14,2	;volatile
  2596                           
  2597                           ;main.c: 165: for(i=0; i < 10; i++)SPI(0xFF);
  2598  0207  0020               	movlb	0	; select bank0
  2599  0208  01B0               	clrf	initSD@i
  2600  0209  300A               	movlw	10
  2601  020A  0230               	subwf	initSD@i,w
  2602  020B  1803               	btfsc	3,0
  2603  020C  2A1A               	goto	l278
  2604  020D                     l1410:	
  2605  020D  30FF               	movlw	255
  2606  020E  3180  200B  3182   	fcall	_SPI
  2607  0211  3001               	movlw	1
  2608  0212  00FC               	movwf	??_initSD
  2609  0213  087C               	movf	??_initSD,w
  2610  0214  0020               	movlb	0	; select bank0
  2611  0215  07B0               	addwf	initSD@i,f
  2612  0216  300A               	movlw	10
  2613  0217  0230               	subwf	initSD@i,w
  2614  0218  1C03               	skipc
  2615  0219  2A0D               	goto	l1410
  2616  021A                     l278:	
  2617                           ;main.c: 166: do { LATCbits.LATC2 = 0; } while(0);
  2618                           
  2619  021A  0022               	movlb	2	; select bank2
  2620  021B  110E               	bcf	14,2	;volatile
  2621                           
  2622                           ;main.c: 169: i=100;
  2623  021C  3064               	movlw	100
  2624  021D  00FC               	movwf	??_initSD
  2625  021E  087C               	movf	??_initSD,w
  2626  021F  0020               	movlb	0	; select bank0
  2627  0220  00B0               	movwf	initSD@i
  2628                           
  2629                           ;main.c: 170: while(Command(0x00,0,0x95) !=1 && i!=0)
  2630  0221  2A29               	goto	l1422
  2631  0222                     l1418:	
  2632                           
  2633                           ;main.c: 171: {
  2634                           ;main.c: 173: SPI(0xFF);
  2635  0222  30FF               	movlw	255
  2636  0223  3180  200B  3182   	fcall	_SPI
  2637                           
  2638                           ;main.c: 175: i--;
  2639  0226  3001               	movlw	1
  2640  0227  0020               	movlb	0	; select bank0
  2641  0228  02B0               	subwf	initSD@i,f
  2642  0229                     l1422:	
  2643  0229  3000               	movlw	0
  2644  022A  00A3               	movwf	Command@adrs+3
  2645  022B  3000               	movlw	0
  2646  022C  00A2               	movwf	Command@adrs+2
  2647  022D  3000               	movlw	0
  2648  022E  00A1               	movwf	Command@adrs+1
  2649  022F  3000               	movlw	0
  2650  0230  00A0               	movwf	Command@adrs
  2651  0231  3095               	movlw	149
  2652  0232  00FC               	movwf	??_initSD
  2653  0233  087C               	movf	??_initSD,w
  2654  0234  00A4               	movwf	Command@frame2
  2655  0235  3000               	movlw	0
  2656  0236  3180  2074  3182   	fcall	_Command
  2657  0239  3A01               	xorlw	1
  2658  023A  1903               	skipnz
  2659  023B  2A40               	goto	l1426
  2660  023C  0020               	movlb	0	; select bank0
  2661  023D  0830               	movf	initSD@i,w
  2662  023E  1D03               	btfss	3,2
  2663  023F  2A22               	goto	l1418
  2664  0240                     l1426:	
  2665                           
  2666                           ;main.c: 176: }
  2667                           ;main.c: 177: if(i==0)
  2668  0240  0020               	movlb	0	; select bank0
  2669  0241  0830               	movf	initSD@i,w
  2670  0242  1D03               	btfss	3,2
  2671  0243  2A48               	goto	l1428
  2672                           
  2673                           ;main.c: 178: { do { LATAbits.LATA1 = 1; } while(0);
  2674  0244  0022               	movlb	2	; select bank2
  2675  0245  148C               	bsf	12,1	;volatile
  2676                           
  2677                           ;main.c: 179: do { LATAbits.LATA2 = 1; } while(0);
  2678  0246  150C               	bsf	12,2	;volatile
  2679                           
  2680                           ;main.c: 180: do { LATAbits.LATA4 = 1; } while(0);
  2681  0247  160C               	bsf	12,4	;volatile
  2682  0248                     l1428:	
  2683                           
  2684                           ;main.c: 181: }
  2685                           ;main.c: 183: if (Command(8,0x01AA,0x87)==1){
  2686  0248  3000               	movlw	0
  2687  0249  0020               	movlb	0	; select bank0
  2688  024A  00A3               	movwf	Command@adrs+3
  2689  024B  3000               	movlw	0
  2690  024C  00A2               	movwf	Command@adrs+2
  2691  024D  3001               	movlw	1
  2692  024E  00A1               	movwf	Command@adrs+1
  2693  024F  30AA               	movlw	170
  2694  0250  00A0               	movwf	Command@adrs
  2695  0251  3087               	movlw	135
  2696  0252  00FC               	movwf	??_initSD
  2697  0253  087C               	movf	??_initSD,w
  2698  0254  00A4               	movwf	Command@frame2
  2699  0255  3008               	movlw	8
  2700  0256  3180  2074  3182   	fcall	_Command
  2701  0259  3A01               	xorlw	1
  2702  025A  1D03               	skipz
  2703  025B  2AAE               	goto	l1440
  2704                           
  2705                           ;main.c: 184: r[0]=SPI(0xFF); r[1]=SPI(0xFF); r[2]=SPI(0xFF); r[3]=SPI(0xFF);
  2706  025C  30FF               	movlw	255
  2707  025D  3180  200B  3182   	fcall	_SPI
  2708  0260  00FC               	movwf	??_initSD
  2709  0261  087C               	movf	??_initSD,w
  2710  0262  0020               	movlb	0	; select bank0
  2711  0263  00AC               	movwf	initSD@r
  2712  0264  30FF               	movlw	255
  2713  0265  3180  200B  3182   	fcall	_SPI
  2714  0268  00FC               	movwf	??_initSD
  2715  0269  087C               	movf	??_initSD,w
  2716  026A  0020               	movlb	0	; select bank0
  2717  026B  00AD               	movwf	initSD@r+1
  2718  026C  30FF               	movlw	255
  2719  026D  3180  200B  3182   	fcall	_SPI
  2720  0270  00FC               	movwf	??_initSD
  2721  0271  087C               	movf	??_initSD,w
  2722  0272  0020               	movlb	0	; select bank0
  2723  0273  00AE               	movwf	initSD@r+2
  2724  0274  30FF               	movlw	255
  2725  0275  3180  200B  3182   	fcall	_SPI
  2726  0278  00FC               	movwf	??_initSD
  2727  0279  087C               	movf	??_initSD,w
  2728  027A  0020               	movlb	0	; select bank0
  2729  027B  00AF               	movwf	initSD@r+3
  2730                           
  2731                           ;main.c: 185: if ( r[2] == 0x01 && r[3] == 0xAA ){
  2732  027C  032E               	decf	initSD@r+2,w
  2733  027D  1D03               	btfss	3,2
  2734  027E  2AAA               	goto	l298
  2735  027F  30AA               	movlw	170
  2736  0280  062F               	xorwf	initSD@r+3,w
  2737  0281  1D03               	btfss	3,2
  2738  0282  2AAA               	goto	l298
  2739                           
  2740                           ;main.c: 188: Command(55,0,0xFF);
  2741  0283  3000               	movlw	0
  2742  0284                     L1:	
  2743  0284  00A3               	movwf	Command@adrs+3
  2744  0285  3000               	movlw	0
  2745  0286  00A2               	movwf	Command@adrs+2
  2746  0287  3000               	movlw	0
  2747  0288  00A1               	movwf	Command@adrs+1
  2748  0289  3000               	movlw	0
  2749  028A  00A0               	movwf	Command@adrs
  2750  028B  30FF               	movlw	255
  2751  028C  00FC               	movwf	??_initSD
  2752  028D  087C               	movf	??_initSD,w
  2753  028E  00A4               	movwf	Command@frame2
  2754  028F  3037               	movlw	55
  2755  0290  3180  2074  3182   	fcall	_Command
  2756  0293  3040               	movlw	64
  2757  0294  0020               	movlb	0	; select bank0
  2758  0295  00A3               	movwf	Command@adrs+3
  2759  0296  3000               	movlw	0
  2760  0297  00A2               	movwf	Command@adrs+2
  2761  0298  3000               	movlw	0
  2762  0299  00A1               	movwf	Command@adrs+1
  2763  029A  3000               	movlw	0
  2764  029B  00A0               	movwf	Command@adrs
  2765  029C  30FF               	movlw	255
  2766  029D  00FC               	movwf	??_initSD
  2767  029E  087C               	movf	??_initSD,w
  2768  029F  00A4               	movwf	Command@frame2
  2769  02A0  3029               	movlw	41
  2770  02A1  3180  2074  3182   	fcall	_Command
  2771  02A4  3A00               	xorlw	0
  2772  02A5  1903               	btfsc	3,2
  2773  02A6  2AAE               	goto	l1440
  2774                           
  2775                           ;main.c: 189: while(Command(41,0x40000000,0xFF)){Command(55,0,0xFF);}
  2776  02A7  3000               	movlw	0
  2777  02A8  0020               	movlb	0	; select bank0
  2778  02A9  2A84               	goto	L1
  2779  02AA                     l298:	
  2780                           ;main.c: 190: }else{ do { LATAbits.LATA1 = 1; } while(0);
  2781                           
  2782  02AA  0022               	movlb	2	; select bank2
  2783  02AB  148C               	bsf	12,1	;volatile
  2784                           
  2785                           ;main.c: 191: do { LATAbits.LATA2 = 1; } while(0);
  2786  02AC  150C               	bsf	12,2	;volatile
  2787                           
  2788                           ;main.c: 192: do { LATAbits.LATA4 = 1; } while(0);}
  2789  02AD  160C               	bsf	12,4	;volatile
  2790  02AE                     l1440:	
  2791                           
  2792                           ;main.c: 193: }
  2793                           ;main.c: 195: if (Command(58,0,0xFF)==0)
  2794  02AE  3000               	movlw	0
  2795  02AF  0020               	movlb	0	; select bank0
  2796  02B0  00A3               	movwf	Command@adrs+3
  2797  02B1  3000               	movlw	0
  2798  02B2  00A2               	movwf	Command@adrs+2
  2799  02B3  3000               	movlw	0
  2800  02B4  00A1               	movwf	Command@adrs+1
  2801  02B5  3000               	movlw	0
  2802  02B6  00A0               	movwf	Command@adrs
  2803  02B7  30FF               	movlw	255
  2804  02B8  00FC               	movwf	??_initSD
  2805  02B9  087C               	movf	??_initSD,w
  2806  02BA  00A4               	movwf	Command@frame2
  2807  02BB  303A               	movlw	58
  2808  02BC  3180  2074  3182   	fcall	_Command
  2809  02BF  3A00               	xorlw	0
  2810  02C0  1D03               	skipz
  2811  02C1  0008               	return
  2812                           
  2813                           ;main.c: 196: {
  2814                           ;main.c: 197: r[0]=SPI(0xFF); r[1]=SPI(0xFF); r[2]=SPI(0xFF); r[3]=SPI(0xFF);
  2815  02C2  30FF               	movlw	255
  2816  02C3  3180  200B  3182   	fcall	_SPI
  2817  02C6  00FC               	movwf	??_initSD
  2818  02C7  087C               	movf	??_initSD,w
  2819  02C8  0020               	movlb	0	; select bank0
  2820  02C9  00AC               	movwf	initSD@r
  2821  02CA  30FF               	movlw	255
  2822  02CB  3180  200B  3182   	fcall	_SPI
  2823  02CE  00FC               	movwf	??_initSD
  2824  02CF  087C               	movf	??_initSD,w
  2825  02D0  0020               	movlb	0	; select bank0
  2826  02D1  00AD               	movwf	initSD@r+1
  2827  02D2  30FF               	movlw	255
  2828  02D3  3180  200B  3182   	fcall	_SPI
  2829  02D6  00FC               	movwf	??_initSD
  2830  02D7  087C               	movf	??_initSD,w
  2831  02D8  0020               	movlb	0	; select bank0
  2832  02D9  00AE               	movwf	initSD@r+2
  2833  02DA  30FF               	movlw	255
  2834  02DB  3180  200B         	fcall	_SPI
  2835  02DD  00FC               	movwf	??_initSD
  2836  02DE  087C               	movf	??_initSD,w
  2837  02DF  0020               	movlb	0	; select bank0
  2838  02E0  00AF               	movwf	initSD@r+3
  2839                           
  2840                           ;main.c: 198: sdhc=r[0] & 0x40;
  2841  02E1  082C               	movf	initSD@r,w
  2842  02E2  3940               	andlw	64
  2843  02E3  00FC               	movwf	??_initSD
  2844  02E4  087C               	movf	??_initSD,w
  2845  02E5  00EB               	movwf	_sdhc
  2846  02E6  0008               	return
  2847  02E7                     __end_of_initSD:	
  2848                           
  2849                           	psect	text3
  2850  02E7                     __ptext3:	
  2851 ;; *************** function _file *****************
  2852 ;; Defined at:
  2853 ;;		line 10 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  offset          2   12[BANK0 ] unsigned int 
  2856 ;;  sect            1   14[BANK0 ] unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  fs              4   37[BANK0 ] unsigned char [4]
  2859 ;;  fc              4   33[BANK0 ] unsigned char [4]
  2860 ;;  i               2   41[BANK0 ] unsigned int 
  2861 ;;  r               2   31[BANK0 ] unsigned int 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;Total ram usage:       31 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    2
  2878 ;; This function calls:
  2879 ;;		_Command
  2880 ;;		_SPI
  2881 ;;		___lmul
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _file
  2889  02E7                     _file:	
  2890                           
  2891                           ;main.c: 12: unsigned int r,i;
  2892                           ;main.c: 13: unsigned char fc[4], fs[4];
  2893                           ;main.c: 14: card=512;
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _file: [wreg+status,2+status,0+pclath+cstack]
  2897  02E7  3000               	movlw	0
  2898  02E8  0020               	movlb	0	; select bank0
  2899  02E9  00EC               	movwf	_card
  2900  02EA  3002               	movlw	2
  2901  02EB  00ED               	movwf	_card+1
  2902                           
  2903                           ;main.c: 15: do { LATCbits.LATC2 = 0; } while(0);
  2904  02EC  0022               	movlb	2	; select bank2
  2905  02ED  110E               	bcf	14,2	;volatile
  2906                           
  2907                           ;main.c: 16: r = Command(17,(RootDir+sect)*card,0xFF);
  2908  02EE  0020               	movlb	0	; select bank0
  2909  02EF  082E               	movf	file@sect,w
  2910  02F0  0021               	movlb	1	; select bank1
  2911  02F1  0730               	addwf	_RootDir^(0+128),w
  2912  02F2  00F0               	movwf	___lmul@multiplier
  2913  02F3  0831               	movf	(_RootDir+1)^(0+128),w
  2914  02F4  1803               	skipnc
  2915  02F5  0F31               	incfsz	(_RootDir+1)^(0+128),w
  2916  02F6  1003               	clrc
  2917  02F7  00F1               	movwf	___lmul@multiplier+1
  2918  02F8  0832               	movf	(_RootDir+2)^(0+128),w
  2919  02F9  1803               	skipnc
  2920  02FA  0F32               	incfsz	(_RootDir+2)^(0+128),w
  2921  02FB  1003               	clrc
  2922  02FC  00F2               	movwf	___lmul@multiplier+2
  2923  02FD  0833               	movf	(_RootDir+3)^(0+128),w
  2924  02FE  1803               	skipnc
  2925  02FF  0A33               	incf	(_RootDir+3)^(0+128),w
  2926  0300  00F3               	movwf	___lmul@multiplier+3
  2927  0301  0020               	movlb	0	; select bank0
  2928  0302  086C               	movf	_card,w
  2929  0303  00F4               	movwf	___lmul@multiplicand
  2930  0304  086D               	movf	_card+1,w
  2931  0305  00F5               	movwf	___lmul@multiplicand+1
  2932  0306  01F6               	clrf	___lmul@multiplicand+2
  2933  0307  01F7               	clrf	___lmul@multiplicand+3
  2934  0308  3180  2045  3182   	fcall	___lmul
  2935  030B  0873               	movf	?___lmul+3,w
  2936  030C  0020               	movlb	0	; select bank0
  2937  030D  00A3               	movwf	Command@adrs+3
  2938  030E  0872               	movf	?___lmul+2,w
  2939  030F  00A2               	movwf	Command@adrs+2
  2940  0310  0871               	movf	?___lmul+1,w
  2941  0311  00A1               	movwf	Command@adrs+1
  2942  0312  0870               	movf	?___lmul,w
  2943  0313  00A0               	movwf	Command@adrs
  2944  0314  30FF               	movlw	255
  2945  0315  00AF               	movwf	??_file
  2946  0316  082F               	movf	??_file,w
  2947  0317  00A4               	movwf	Command@frame2
  2948  0318  3011               	movlw	17
  2949  0319  3180  2074  3182   	fcall	_Command
  2950  031C  0020               	movlb	0	; select bank0
  2951  031D  00B0               	movwf	??_file+1
  2952  031E  01B1               	clrf	??_file+2
  2953  031F  0830               	movf	??_file+1,w
  2954  0320  00BF               	movwf	file@r
  2955  0321  0831               	movf	??_file+2,w
  2956  0322  00C0               	movwf	file@r+1
  2957  0323                     l1198:	
  2958                           ;main.c: 19: while(SPI(0xFF) != 0xFe);
  2959                           
  2960  0323  30FF               	movlw	255
  2961  0324  3180  200B  3182   	fcall	_SPI
  2962  0327  3AFE               	xorlw	254
  2963  0328  1D03               	skipz
  2964  0329  2B23               	goto	l1198
  2965                           
  2966                           ;main.c: 20: for(i=0;i<512;i++){
  2967  032A  0020               	movlb	0	; select bank0
  2968  032B  01C9               	clrf	file@i
  2969  032C  01CA               	clrf	file@i+1
  2970  032D  3002               	movlw	2
  2971  032E  024A               	subwf	file@i+1,w
  2972  032F  3000               	movlw	0
  2973  0330  1903               	skipnz
  2974  0331  0249               	subwf	file@i,w
  2975  0332  1803               	btfsc	3,0
  2976  0333  2BF6               	goto	l1244
  2977  0334                     l1206:	
  2978                           
  2979                           ;main.c: 21: if(i==offset){fc[2]=SPI(0xFF);}
  2980  0334  082D               	movf	file@offset+1,w
  2981  0335  064A               	xorwf	file@i+1,w
  2982  0336  1D03               	skipz
  2983  0337  2B3A               	goto	u1025
  2984  0338  082C               	movf	file@offset,w
  2985  0339  0649               	xorwf	file@i,w
  2986  033A                     u1025:	
  2987  033A  1D03               	skipz
  2988  033B  2B45               	goto	l1210
  2989  033C  30FF               	movlw	255
  2990  033D  3180  200B  3182   	fcall	_SPI
  2991  0340  0020               	movlb	0	; select bank0
  2992  0341  00AF               	movwf	??_file
  2993  0342  082F               	movf	??_file,w
  2994  0343  00C3               	movwf	file@fc+2
  2995  0344  2BEA               	goto	l1240
  2996  0345                     l1210:	
  2997                           
  2998                           ;main.c: 22: else if(i==offset+1){fc[3]=SPI(0xFF);}
  2999  0345  082C               	movf	file@offset,w
  3000  0346  3E01               	addlw	1
  3001  0347  00AF               	movwf	??_file
  3002  0348  3000               	movlw	0
  3003  0349  3D2D               	addwfc	file@offset+1,w
  3004  034A  00B0               	movwf	??_file+1
  3005  034B  084A               	movf	file@i+1,w
  3006  034C  0630               	xorwf	??_file+1,w
  3007  034D  1D03               	skipz
  3008  034E  2B51               	goto	u1035
  3009  034F  0849               	movf	file@i,w
  3010  0350  062F               	xorwf	??_file,w
  3011  0351                     u1035:	
  3012  0351  1D03               	skipz
  3013  0352  2B5C               	goto	l1214
  3014  0353  30FF               	movlw	255
  3015  0354  3180  200B  3182   	fcall	_SPI
  3016  0357  0020               	movlb	0	; select bank0
  3017  0358  00AF               	movwf	??_file
  3018  0359  082F               	movf	??_file,w
  3019  035A  00C4               	movwf	file@fc+3
  3020  035B  2BEA               	goto	l1240
  3021  035C                     l1214:	
  3022                           
  3023                           ;main.c: 23: else if(i==offset+6){fc[0]=SPI(0xFF);}
  3024  035C  082C               	movf	file@offset,w
  3025  035D  3E06               	addlw	6
  3026  035E  00AF               	movwf	??_file
  3027  035F  3000               	movlw	0
  3028  0360  3D2D               	addwfc	file@offset+1,w
  3029  0361  00B0               	movwf	??_file+1
  3030  0362  084A               	movf	file@i+1,w
  3031  0363  0630               	xorwf	??_file+1,w
  3032  0364  1D03               	skipz
  3033  0365  2B68               	goto	u1045
  3034  0366  0849               	movf	file@i,w
  3035  0367  062F               	xorwf	??_file,w
  3036  0368                     u1045:	
  3037  0368  1D03               	skipz
  3038  0369  2B73               	goto	l1218
  3039  036A  30FF               	movlw	255
  3040  036B  3180  200B  3182   	fcall	_SPI
  3041  036E  0020               	movlb	0	; select bank0
  3042  036F  00AF               	movwf	??_file
  3043  0370  082F               	movf	??_file,w
  3044  0371  00C1               	movwf	file@fc
  3045  0372  2BEA               	goto	l1240
  3046  0373                     l1218:	
  3047                           
  3048                           ;main.c: 24: else if(i==offset+7){fc[1]=SPI(0xFF);}
  3049  0373  082C               	movf	file@offset,w
  3050  0374  3E07               	addlw	7
  3051  0375  00AF               	movwf	??_file
  3052  0376  3000               	movlw	0
  3053  0377  3D2D               	addwfc	file@offset+1,w
  3054  0378  00B0               	movwf	??_file+1
  3055  0379  084A               	movf	file@i+1,w
  3056  037A  0630               	xorwf	??_file+1,w
  3057  037B  1D03               	skipz
  3058  037C  2B7F               	goto	u1055
  3059  037D  0849               	movf	file@i,w
  3060  037E  062F               	xorwf	??_file,w
  3061  037F                     u1055:	
  3062  037F  1D03               	skipz
  3063  0380  2B8A               	goto	l1222
  3064  0381  30FF               	movlw	255
  3065  0382  3180  200B  3182   	fcall	_SPI
  3066  0385  0020               	movlb	0	; select bank0
  3067  0386  00AF               	movwf	??_file
  3068  0387  082F               	movf	??_file,w
  3069  0388  00C2               	movwf	file@fc+1
  3070  0389  2BEA               	goto	l1240
  3071  038A                     l1222:	
  3072                           
  3073                           ;main.c: 26: else if(i==offset+8){fs[0]=SPI(0xFF);}
  3074  038A  082C               	movf	file@offset,w
  3075  038B  3E08               	addlw	8
  3076  038C  00AF               	movwf	??_file
  3077  038D  3000               	movlw	0
  3078  038E  3D2D               	addwfc	file@offset+1,w
  3079  038F  00B0               	movwf	??_file+1
  3080  0390  084A               	movf	file@i+1,w
  3081  0391  0630               	xorwf	??_file+1,w
  3082  0392  1D03               	skipz
  3083  0393  2B96               	goto	u1065
  3084  0394  0849               	movf	file@i,w
  3085  0395  062F               	xorwf	??_file,w
  3086  0396                     u1065:	
  3087  0396  1D03               	skipz
  3088  0397  2BA1               	goto	l1226
  3089  0398  30FF               	movlw	255
  3090  0399  3180  200B  3182   	fcall	_SPI
  3091  039C  0020               	movlb	0	; select bank0
  3092  039D  00AF               	movwf	??_file
  3093  039E  082F               	movf	??_file,w
  3094  039F  00C5               	movwf	file@fs
  3095  03A0  2BEA               	goto	l1240
  3096  03A1                     l1226:	
  3097                           
  3098                           ;main.c: 27: else if(i==offset+9){fs[1]=SPI(0xFF);}
  3099  03A1  082C               	movf	file@offset,w
  3100  03A2  3E09               	addlw	9
  3101  03A3  00AF               	movwf	??_file
  3102  03A4  3000               	movlw	0
  3103  03A5  3D2D               	addwfc	file@offset+1,w
  3104  03A6  00B0               	movwf	??_file+1
  3105  03A7  084A               	movf	file@i+1,w
  3106  03A8  0630               	xorwf	??_file+1,w
  3107  03A9  1D03               	skipz
  3108  03AA  2BAD               	goto	u1075
  3109  03AB  0849               	movf	file@i,w
  3110  03AC  062F               	xorwf	??_file,w
  3111  03AD                     u1075:	
  3112  03AD  1D03               	skipz
  3113  03AE  2BB8               	goto	l1230
  3114  03AF  30FF               	movlw	255
  3115  03B0  3180  200B  3182   	fcall	_SPI
  3116  03B3  0020               	movlb	0	; select bank0
  3117  03B4  00AF               	movwf	??_file
  3118  03B5  082F               	movf	??_file,w
  3119  03B6  00C6               	movwf	file@fs+1
  3120  03B7  2BEA               	goto	l1240
  3121  03B8                     l1230:	
  3122                           
  3123                           ;main.c: 28: else if(i==offset+10){fs[2]=SPI(0xFF);}
  3124  03B8  082C               	movf	file@offset,w
  3125  03B9  3E0A               	addlw	10
  3126  03BA  00AF               	movwf	??_file
  3127  03BB  3000               	movlw	0
  3128  03BC  3D2D               	addwfc	file@offset+1,w
  3129  03BD  00B0               	movwf	??_file+1
  3130  03BE  084A               	movf	file@i+1,w
  3131  03BF  0630               	xorwf	??_file+1,w
  3132  03C0  1D03               	skipz
  3133  03C1  2BC4               	goto	u1085
  3134  03C2  0849               	movf	file@i,w
  3135  03C3  062F               	xorwf	??_file,w
  3136  03C4                     u1085:	
  3137  03C4  1D03               	skipz
  3138  03C5  2BCF               	goto	l1234
  3139  03C6  30FF               	movlw	255
  3140  03C7  3180  200B  3182   	fcall	_SPI
  3141  03CA  0020               	movlb	0	; select bank0
  3142  03CB  00AF               	movwf	??_file
  3143  03CC  082F               	movf	??_file,w
  3144  03CD  00C7               	movwf	file@fs+2
  3145  03CE  2BEA               	goto	l1240
  3146  03CF                     l1234:	
  3147                           
  3148                           ;main.c: 29: else if(i==offset+11){fs[3]=SPI(0xFF);}
  3149  03CF  082C               	movf	file@offset,w
  3150  03D0  3E0B               	addlw	11
  3151  03D1  00AF               	movwf	??_file
  3152  03D2  3000               	movlw	0
  3153  03D3  3D2D               	addwfc	file@offset+1,w
  3154  03D4  00B0               	movwf	??_file+1
  3155  03D5  084A               	movf	file@i+1,w
  3156  03D6  0630               	xorwf	??_file+1,w
  3157  03D7  1D03               	skipz
  3158  03D8  2BDB               	goto	u1095
  3159  03D9  0849               	movf	file@i,w
  3160  03DA  062F               	xorwf	??_file,w
  3161  03DB                     u1095:	
  3162  03DB  1D03               	skipz
  3163  03DC  2BE6               	goto	l1238
  3164  03DD  30FF               	movlw	255
  3165  03DE  3180  200B  3182   	fcall	_SPI
  3166  03E1  0020               	movlb	0	; select bank0
  3167  03E2  00AF               	movwf	??_file
  3168  03E3  082F               	movf	??_file,w
  3169  03E4  00C8               	movwf	file@fs+3
  3170  03E5  2BEA               	goto	l1240
  3171  03E6                     l1238:	
  3172                           
  3173                           ;main.c: 30: else{SPI(0xFF);}
  3174  03E6  30FF               	movlw	255
  3175  03E7  3180  200B  3182   	fcall	_SPI
  3176  03EA                     l1240:	
  3177  03EA  3001               	movlw	1
  3178  03EB  0020               	movlb	0	; select bank0
  3179  03EC  07C9               	addwf	file@i,f
  3180  03ED  3000               	movlw	0
  3181  03EE  3DCA               	addwfc	file@i+1,f
  3182  03EF  3002               	movlw	2
  3183  03F0  024A               	subwf	file@i+1,w
  3184  03F1  3000               	movlw	0
  3185  03F2  1903               	skipnz
  3186  03F3  0249               	subwf	file@i,w
  3187  03F4  1C03               	skipc
  3188  03F5  2B34               	goto	l1206
  3189  03F6                     l1244:	
  3190                           
  3191                           ;main.c: 32: }
  3192                           ;main.c: 33: SPI(0xFF);
  3193  03F6  30FF               	movlw	255
  3194  03F7  3180  200B  3182   	fcall	_SPI
  3195                           
  3196                           ;main.c: 34: SPI(0xFF);
  3197  03FA  30FF               	movlw	255
  3198  03FB  3180  200B  3182   	fcall	_SPI
  3199                           
  3200                           ;main.c: 35: do { LATCbits.LATC2 = 1; } while(0); SPI(0xFF);
  3201  03FE  0022               	movlb	2	; select bank2
  3202  03FF  150E               	bsf	14,2	;volatile
  3203  0400  30FF               	movlw	255
  3204  0401  3180  200B  3182   	fcall	_SPI
  3205                           
  3206                           ;main.c: 36: FileCluster = fc[0] | ( (unsigned long)fc[1] << 8 ) | ( (unsigned long)fc[2
      +                          ] << 16 ) | ( (unsigned long)fc[3] << 24 );
  3207  0404  0020               	movlb	0	; select bank0
  3208  0405  0844               	movf	file@fc+3,w
  3209  0406  00AF               	movwf	??_file
  3210  0407  01B0               	clrf	??_file+1
  3211  0408  01B1               	clrf	??_file+2
  3212  0409  01B2               	clrf	??_file+3
  3213  040A  3018               	movlw	24
  3214  040B                     u1115:	
  3215  040B  35AF               	lslf	??_file,f
  3216  040C  0DB0               	rlf	??_file+1,f
  3217  040D  0DB1               	rlf	??_file+2,f
  3218  040E  0DB2               	rlf	??_file+3,f
  3219  040F  0B89               	decfsz	9,f
  3220  0410  2C0B               	goto	u1115
  3221  0411  0843               	movf	file@fc+2,w
  3222  0412  00B3               	movwf	??_file+4
  3223  0413  01B4               	clrf	??_file+5
  3224  0414  01B5               	clrf	??_file+6
  3225  0415  01B6               	clrf	??_file+7
  3226  0416  3010               	movlw	16
  3227  0417                     u1125:	
  3228  0417  35B3               	lslf	??_file+4,f
  3229  0418  0DB4               	rlf	??_file+5,f
  3230  0419  0DB5               	rlf	??_file+6,f
  3231  041A  0DB6               	rlf	??_file+7,f
  3232  041B  0B89               	decfsz	9,f
  3233  041C  2C17               	goto	u1125
  3234  041D  0842               	movf	file@fc+1,w
  3235  041E  00B7               	movwf	??_file+8
  3236  041F  01B8               	clrf	??_file+9
  3237  0420  01B9               	clrf	??_file+10
  3238  0421  01BA               	clrf	??_file+11
  3239  0422  3008               	movlw	8
  3240  0423                     u1135:	
  3241  0423  35B7               	lslf	??_file+8,f
  3242  0424  0DB8               	rlf	??_file+9,f
  3243  0425  0DB9               	rlf	??_file+10,f
  3244  0426  0DBA               	rlf	??_file+11,f
  3245  0427  0B89               	decfsz	9,f
  3246  0428  2C23               	goto	u1135
  3247  0429  0841               	movf	file@fc,w
  3248  042A  00BB               	movwf	??_file+12
  3249  042B  01BC               	clrf	??_file+13
  3250  042C  01BD               	clrf	??_file+14
  3251  042D  01BE               	clrf	??_file+15
  3252  042E  083B               	movf	??_file+12,w
  3253  042F  04B7               	iorwf	??_file+8,f
  3254  0430  083C               	movf	??_file+13,w
  3255  0431  04B8               	iorwf	??_file+9,f
  3256  0432  083D               	movf	??_file+14,w
  3257  0433  04B9               	iorwf	??_file+10,f
  3258  0434  083E               	movf	??_file+15,w
  3259  0435  04BA               	iorwf	??_file+11,f
  3260  0436  0837               	movf	??_file+8,w
  3261  0437  04B3               	iorwf	??_file+4,f
  3262  0438  0838               	movf	??_file+9,w
  3263  0439  04B4               	iorwf	??_file+5,f
  3264  043A  0839               	movf	??_file+10,w
  3265  043B  04B5               	iorwf	??_file+6,f
  3266  043C  083A               	movf	??_file+11,w
  3267  043D  04B6               	iorwf	??_file+7,f
  3268  043E  082F               	movf	??_file,w
  3269  043F  0433               	iorwf	??_file+4,w
  3270  0440  0021               	movlb	1	; select bank1
  3271  0441  00A4               	movwf	_FileCluster^(0+128)
  3272  0442  0020               	movlb	0	; select bank0
  3273  0443  0830               	movf	??_file+1,w
  3274  0444  0434               	iorwf	??_file+5,w
  3275  0445  0021               	movlb	1	; select bank1
  3276  0446  00A5               	movwf	(_FileCluster+1)^(0+128)
  3277  0447  0020               	movlb	0	; select bank0
  3278  0448  0831               	movf	??_file+2,w
  3279  0449  0435               	iorwf	??_file+6,w
  3280  044A  0021               	movlb	1	; select bank1
  3281  044B  00A6               	movwf	(_FileCluster+2)^(0+128)
  3282  044C  0020               	movlb	0	; select bank0
  3283  044D  0832               	movf	??_file+3,w
  3284  044E  0436               	iorwf	??_file+7,w
  3285  044F  0021               	movlb	1	; select bank1
  3286  0450  00A7               	movwf	(_FileCluster+3)^(0+128)
  3287                           
  3288                           ;main.c: 37: FileSize = fs[0] | ( (unsigned long)fs[1] << 8 ) | ( (unsigned long)fs[2] <
      +                          < 16 ) | ( (unsigned long)fs[3] << 24 );
  3289  0451  0020               	movlb	0	; select bank0
  3290  0452  0848               	movf	file@fs+3,w
  3291  0453  00AF               	movwf	??_file
  3292  0454  01B0               	clrf	??_file+1
  3293  0455  01B1               	clrf	??_file+2
  3294  0456  01B2               	clrf	??_file+3
  3295  0457  3018               	movlw	24
  3296  0458                     u1145:	
  3297  0458  35AF               	lslf	??_file,f
  3298  0459  0DB0               	rlf	??_file+1,f
  3299  045A  0DB1               	rlf	??_file+2,f
  3300  045B  0DB2               	rlf	??_file+3,f
  3301  045C  0B89               	decfsz	9,f
  3302  045D  2C58               	goto	u1145
  3303  045E  0847               	movf	file@fs+2,w
  3304  045F  00B3               	movwf	??_file+4
  3305  0460  01B4               	clrf	??_file+5
  3306  0461  01B5               	clrf	??_file+6
  3307  0462  01B6               	clrf	??_file+7
  3308  0463  3010               	movlw	16
  3309  0464                     u1155:	
  3310  0464  35B3               	lslf	??_file+4,f
  3311  0465  0DB4               	rlf	??_file+5,f
  3312  0466  0DB5               	rlf	??_file+6,f
  3313  0467  0DB6               	rlf	??_file+7,f
  3314  0468  0B89               	decfsz	9,f
  3315  0469  2C64               	goto	u1155
  3316  046A  0846               	movf	file@fs+1,w
  3317  046B  00B7               	movwf	??_file+8
  3318  046C  01B8               	clrf	??_file+9
  3319  046D  01B9               	clrf	??_file+10
  3320  046E  01BA               	clrf	??_file+11
  3321  046F  3008               	movlw	8
  3322  0470                     u1165:	
  3323  0470  35B7               	lslf	??_file+8,f
  3324  0471  0DB8               	rlf	??_file+9,f
  3325  0472  0DB9               	rlf	??_file+10,f
  3326  0473  0DBA               	rlf	??_file+11,f
  3327  0474  0B89               	decfsz	9,f
  3328  0475  2C70               	goto	u1165
  3329  0476  0845               	movf	file@fs,w
  3330  0477  00BB               	movwf	??_file+12
  3331  0478  01BC               	clrf	??_file+13
  3332  0479  01BD               	clrf	??_file+14
  3333  047A  01BE               	clrf	??_file+15
  3334  047B  083B               	movf	??_file+12,w
  3335  047C  04B7               	iorwf	??_file+8,f
  3336  047D  083C               	movf	??_file+13,w
  3337  047E  04B8               	iorwf	??_file+9,f
  3338  047F  083D               	movf	??_file+14,w
  3339  0480  04B9               	iorwf	??_file+10,f
  3340  0481  083E               	movf	??_file+15,w
  3341  0482  04BA               	iorwf	??_file+11,f
  3342  0483  0837               	movf	??_file+8,w
  3343  0484  04B3               	iorwf	??_file+4,f
  3344  0485  0838               	movf	??_file+9,w
  3345  0486  04B4               	iorwf	??_file+5,f
  3346  0487  0839               	movf	??_file+10,w
  3347  0488  04B5               	iorwf	??_file+6,f
  3348  0489  083A               	movf	??_file+11,w
  3349  048A  04B6               	iorwf	??_file+7,f
  3350  048B  082F               	movf	??_file,w
  3351  048C  0433               	iorwf	??_file+4,w
  3352  048D  0021               	movlb	1	; select bank1
  3353  048E  00A0               	movwf	_FileSize^(0+128)
  3354  048F  0020               	movlb	0	; select bank0
  3355  0490  0830               	movf	??_file+1,w
  3356  0491  0434               	iorwf	??_file+5,w
  3357  0492  0021               	movlb	1	; select bank1
  3358  0493  00A1               	movwf	(_FileSize+1)^(0+128)
  3359  0494  0020               	movlb	0	; select bank0
  3360  0495  0831               	movf	??_file+2,w
  3361  0496  0435               	iorwf	??_file+6,w
  3362  0497  0021               	movlb	1	; select bank1
  3363  0498  00A2               	movwf	(_FileSize+2)^(0+128)
  3364  0499  0020               	movlb	0	; select bank0
  3365  049A  0832               	movf	??_file+3,w
  3366  049B  0436               	iorwf	??_file+7,w
  3367  049C  0021               	movlb	1	; select bank1
  3368  049D  00A3               	movwf	(_FileSize+3)^(0+128)
  3369                           
  3370                           ;main.c: 38: FileSize = FileSize/512+1;
  3371  049E  3001               	movlw	1
  3372  049F  0020               	movlb	0	; select bank0
  3373  04A0  00AF               	movwf	??_file
  3374  04A1  3000               	movlw	0
  3375  04A2  00B0               	movwf	??_file+1
  3376  04A3  3000               	movlw	0
  3377  04A4  00B1               	movwf	??_file+2
  3378  04A5  3000               	movlw	0
  3379  04A6  00B2               	movwf	??_file+3
  3380  04A7  0021               	movlb	1	; select bank1
  3381  04A8  0820               	movf	_FileSize^(0+128),w
  3382  04A9  0020               	movlb	0	; select bank0
  3383  04AA  00B3               	movwf	??_file+4
  3384  04AB  0021               	movlb	1	; select bank1
  3385  04AC  0821               	movf	(_FileSize+1)^(0+128),w
  3386  04AD  0020               	movlb	0	; select bank0
  3387  04AE  00B4               	movwf	??_file+5
  3388  04AF  0021               	movlb	1	; select bank1
  3389  04B0  0822               	movf	(_FileSize+2)^(0+128),w
  3390  04B1  0020               	movlb	0	; select bank0
  3391  04B2  00B5               	movwf	??_file+6
  3392  04B3  0021               	movlb	1	; select bank1
  3393  04B4  0823               	movf	(_FileSize+3)^(0+128),w
  3394  04B5  0020               	movlb	0	; select bank0
  3395  04B6  00B6               	movwf	??_file+7
  3396  04B7  3009               	movlw	9
  3397  04B8                     u1175:	
  3398  04B8  36B6               	lsrf	??_file+7,f
  3399  04B9  0CB5               	rrf	??_file+6,f
  3400  04BA  0CB4               	rrf	??_file+5,f
  3401  04BB  0CB3               	rrf	??_file+4,f
  3402  04BC  0B89               	decfsz	9,f
  3403  04BD  2CB8               	goto	u1175
  3404  04BE  0833               	movf	??_file+4,w
  3405  04BF  07AF               	addwf	??_file,f
  3406  04C0  0834               	movf	??_file+5,w
  3407  04C1  3DB0               	addwfc	??_file+1,f
  3408  04C2  0835               	movf	??_file+6,w
  3409  04C3  3DB1               	addwfc	??_file+2,f
  3410  04C4  0836               	movf	??_file+7,w
  3411  04C5  3DB2               	addwfc	??_file+3,f
  3412  04C6  0832               	movf	??_file+3,w
  3413  04C7  0021               	movlb	1	; select bank1
  3414  04C8  00A3               	movwf	(_FileSize+3)^(0+128)
  3415  04C9  0020               	movlb	0	; select bank0
  3416  04CA  0831               	movf	??_file+2,w
  3417  04CB  0021               	movlb	1	; select bank1
  3418  04CC  00A2               	movwf	(_FileSize+2)^(0+128)
  3419  04CD  0020               	movlb	0	; select bank0
  3420  04CE  0830               	movf	??_file+1,w
  3421  04CF  0021               	movlb	1	; select bank1
  3422  04D0  00A1               	movwf	(_FileSize+1)^(0+128)
  3423  04D1  0020               	movlb	0	; select bank0
  3424  04D2  082F               	movf	??_file,w
  3425  04D3  0021               	movlb	1	; select bank1
  3426  04D4  00A0               	movwf	_FileSize^(0+128)
  3427  04D5  0008               	return
  3428  04D6                     __end_of_file:	
  3429                           
  3430                           	psect	text4
  3431  04D6                     __ptext4:	
  3432 ;; *************** function _fat *****************
  3433 ;; Defined at:
  3434 ;;		line 70 in file "main.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  rdc             4   42[BANK0 ] unsigned char [4]
  3439 ;;  spf             4   38[BANK0 ] unsigned char [4]
  3440 ;;  pfs             4   34[BANK0 ] unsigned char [4]
  3441 ;;  i               2   46[BANK0 ] unsigned int 
  3442 ;;  r               2   28[BANK0 ] unsigned int 
  3443 ;;  rs2             1   33[BANK0 ] unsigned char 
  3444 ;;  rs1             1   32[BANK0 ] unsigned char 
  3445 ;;  bps2            1   31[BANK0 ] unsigned char 
  3446 ;;  bps1            1   30[BANK0 ] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;Total ram usage:       36 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		_Command
  3465 ;;		_SPI
  3466 ;;		___lmul
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _fat
  3474  04D6                     _fat:	
  3475                           
  3476                           ;main.c: 72: unsigned int r,i;
  3477                           ;main.c: 73: unsigned char pfs[4],bps1,bps2,rs1,rs2,spf[4],rdc[4];
  3478                           ;main.c: 76: r = Command(17,0,0xFF);
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in _fat: [wreg+status,2+status,0+pclath+cstack]
  3482  04D6  3000               	movlw	0
  3483  04D7  0020               	movlb	0	; select bank0
  3484  04D8  00A3               	movwf	Command@adrs+3
  3485  04D9  3000               	movlw	0
  3486  04DA  00A2               	movwf	Command@adrs+2
  3487  04DB  3000               	movlw	0
  3488  04DC  00A1               	movwf	Command@adrs+1
  3489  04DD  3000               	movlw	0
  3490  04DE  00A0               	movwf	Command@adrs
  3491  04DF  30FF               	movlw	255
  3492  04E0  00AC               	movwf	??_fat
  3493  04E1  082C               	movf	??_fat,w
  3494  04E2  00A4               	movwf	Command@frame2
  3495  04E3  3011               	movlw	17
  3496  04E4  3180  2074  3184   	fcall	_Command
  3497  04E7  0020               	movlb	0	; select bank0
  3498  04E8  00AD               	movwf	??_fat+1
  3499  04E9  01AE               	clrf	??_fat+2
  3500  04EA  082D               	movf	??_fat+1,w
  3501  04EB  00BC               	movwf	fat@r
  3502  04EC  082E               	movf	??_fat+2,w
  3503  04ED  00BD               	movwf	fat@r+1
  3504                           
  3505                           ;main.c: 77: if(r != 0){do { LATAbits.LATA1 = 1; } while(0);
  3506  04EE  083C               	movf	fat@r,w
  3507  04EF  043D               	iorwf	fat@r+1,w
  3508  04F0  1903               	btfsc	3,2
  3509  04F1  2CF6               	goto	l1288
  3510  04F2  0022               	movlb	2	; select bank2
  3511  04F3  148C               	bsf	12,1	;volatile
  3512                           
  3513                           ;main.c: 78: do { LATAbits.LATA2 = 1; } while(0);
  3514  04F4  150C               	bsf	12,2	;volatile
  3515                           
  3516                           ;main.c: 79: do { LATAbits.LATA4 = 1; } while(0);}
  3517  04F5  160C               	bsf	12,4	;volatile
  3518  04F6                     l1288:	
  3519                           ;main.c: 82: while(SPI(0xFF) != 0xFe);
  3520                           
  3521  04F6  30FF               	movlw	255
  3522  04F7  3180  200B  3184   	fcall	_SPI
  3523  04FA  3AFE               	xorlw	254
  3524  04FB  1D03               	skipz
  3525  04FC  2CF6               	goto	l1288
  3526                           
  3527                           ;main.c: 83: for(i=0;i<512;i++){
  3528  04FD  0020               	movlb	0	; select bank0
  3529  04FE  01CE               	clrf	fat@i
  3530  04FF  01CF               	clrf	fat@i+1
  3531  0500  3002               	movlw	2
  3532  0501  024F               	subwf	fat@i+1,w
  3533  0502  3000               	movlw	0
  3534  0503  1903               	skipnz
  3535  0504  024E               	subwf	fat@i,w
  3536  0505  1803               	btfsc	3,0
  3537  0506  2D57               	goto	l1318
  3538  0507                     l1296:	
  3539                           
  3540                           ;main.c: 84: if(i==454){pfs[0]=SPI(0xFF);}
  3541  0507  30C6               	movlw	198
  3542  0508  064E               	xorwf	fat@i,w
  3543  0509  1D03               	skipz
  3544  050A  2D17               	goto	l1300
  3545  050B  034F               	decf	fat@i+1,w
  3546  050C  1D03               	btfss	3,2
  3547  050D  2D17               	goto	l1300
  3548  050E  30FF               	movlw	255
  3549  050F  3180  200B  3184   	fcall	_SPI
  3550  0512  0020               	movlb	0	; select bank0
  3551  0513  00AC               	movwf	??_fat
  3552  0514  082C               	movf	??_fat,w
  3553  0515  00C2               	movwf	fat@pfs
  3554  0516  2D4B               	goto	l1314
  3555  0517                     l1300:	
  3556                           
  3557                           ;main.c: 85: else if(i==455){pfs[1]=SPI(0xFF);}
  3558  0517  30C7               	movlw	199
  3559  0518  064E               	xorwf	fat@i,w
  3560  0519  1D03               	skipz
  3561  051A  2D27               	goto	l1304
  3562  051B  034F               	decf	fat@i+1,w
  3563  051C  1D03               	btfss	3,2
  3564  051D  2D27               	goto	l1304
  3565  051E  30FF               	movlw	255
  3566  051F  3180  200B  3184   	fcall	_SPI
  3567  0522  0020               	movlb	0	; select bank0
  3568  0523  00AC               	movwf	??_fat
  3569  0524  082C               	movf	??_fat,w
  3570  0525  00C3               	movwf	fat@pfs+1
  3571  0526  2D4B               	goto	l1314
  3572  0527                     l1304:	
  3573                           
  3574                           ;main.c: 86: else if(i==456){pfs[2]=SPI(0xFF);}
  3575  0527  30C8               	movlw	200
  3576  0528  064E               	xorwf	fat@i,w
  3577  0529  1D03               	skipz
  3578  052A  2D37               	goto	l1308
  3579  052B  034F               	decf	fat@i+1,w
  3580  052C  1D03               	btfss	3,2
  3581  052D  2D37               	goto	l1308
  3582  052E  30FF               	movlw	255
  3583  052F  3180  200B  3184   	fcall	_SPI
  3584  0532  0020               	movlb	0	; select bank0
  3585  0533  00AC               	movwf	??_fat
  3586  0534  082C               	movf	??_fat,w
  3587  0535  00C4               	movwf	fat@pfs+2
  3588  0536  2D4B               	goto	l1314
  3589  0537                     l1308:	
  3590                           
  3591                           ;main.c: 87: else if(i==457){pfs[3]=SPI(0xFF);}
  3592  0537  30C9               	movlw	201
  3593  0538  064E               	xorwf	fat@i,w
  3594  0539  1D03               	skipz
  3595  053A  2D47               	goto	l1312
  3596  053B  034F               	decf	fat@i+1,w
  3597  053C  1D03               	btfss	3,2
  3598  053D  2D47               	goto	l1312
  3599  053E  30FF               	movlw	255
  3600  053F  3180  200B  3184   	fcall	_SPI
  3601  0542  0020               	movlb	0	; select bank0
  3602  0543  00AC               	movwf	??_fat
  3603  0544  082C               	movf	??_fat,w
  3604  0545  00C5               	movwf	fat@pfs+3
  3605  0546  2D4B               	goto	l1314
  3606  0547                     l1312:	
  3607                           
  3608                           ;main.c: 88: else{SPI(0xFF);}
  3609  0547  30FF               	movlw	255
  3610  0548  3180  200B  3184   	fcall	_SPI
  3611  054B                     l1314:	
  3612  054B  3001               	movlw	1
  3613  054C  0020               	movlb	0	; select bank0
  3614  054D  07CE               	addwf	fat@i,f
  3615  054E  3000               	movlw	0
  3616  054F  3DCF               	addwfc	fat@i+1,f
  3617  0550  3002               	movlw	2
  3618  0551  024F               	subwf	fat@i+1,w
  3619  0552  3000               	movlw	0
  3620  0553  1903               	skipnz
  3621  0554  024E               	subwf	fat@i,w
  3622  0555  1C03               	skipc
  3623  0556  2D07               	goto	l1296
  3624  0557                     l1318:	
  3625                           
  3626                           ;main.c: 90: }
  3627                           ;main.c: 91: SPI(0xFF);
  3628  0557  30FF               	movlw	255
  3629  0558  3180  200B  3184   	fcall	_SPI
  3630                           
  3631                           ;main.c: 92: SPI(0xFF);
  3632  055B  30FF               	movlw	255
  3633  055C  3180  200B  3184   	fcall	_SPI
  3634                           
  3635                           ;main.c: 93: SPI(0xFF);
  3636  055F  30FF               	movlw	255
  3637  0560  3180  200B  3184   	fcall	_SPI
  3638                           
  3639                           ;main.c: 95: BootSector = pfs[0] | ( (unsigned long)pfs[1] << 8 ) | ( (unsigned long)pfs
      +                          [2] << 16 ) | ( (unsigned long)pfs[3] << 24 );
  3640  0563  0020               	movlb	0	; select bank0
  3641  0564  0845               	movf	fat@pfs+3,w
  3642  0565  00AC               	movwf	??_fat
  3643  0566  01AD               	clrf	??_fat+1
  3644  0567  01AE               	clrf	??_fat+2
  3645  0568  01AF               	clrf	??_fat+3
  3646  0569  3018               	movlw	24
  3647  056A                     u1325:	
  3648  056A  35AC               	lslf	??_fat,f
  3649  056B  0DAD               	rlf	??_fat+1,f
  3650  056C  0DAE               	rlf	??_fat+2,f
  3651  056D  0DAF               	rlf	??_fat+3,f
  3652  056E  0B89               	decfsz	9,f
  3653  056F  2D6A               	goto	u1325
  3654  0570  0844               	movf	fat@pfs+2,w
  3655  0571  00B0               	movwf	??_fat+4
  3656  0572  01B1               	clrf	??_fat+5
  3657  0573  01B2               	clrf	??_fat+6
  3658  0574  01B3               	clrf	??_fat+7
  3659  0575  3010               	movlw	16
  3660  0576                     u1335:	
  3661  0576  35B0               	lslf	??_fat+4,f
  3662  0577  0DB1               	rlf	??_fat+5,f
  3663  0578  0DB2               	rlf	??_fat+6,f
  3664  0579  0DB3               	rlf	??_fat+7,f
  3665  057A  0B89               	decfsz	9,f
  3666  057B  2D76               	goto	u1335
  3667  057C  0843               	movf	fat@pfs+1,w
  3668  057D  00B4               	movwf	??_fat+8
  3669  057E  01B5               	clrf	??_fat+9
  3670  057F  01B6               	clrf	??_fat+10
  3671  0580  01B7               	clrf	??_fat+11
  3672  0581  3008               	movlw	8
  3673  0582                     u1345:	
  3674  0582  35B4               	lslf	??_fat+8,f
  3675  0583  0DB5               	rlf	??_fat+9,f
  3676  0584  0DB6               	rlf	??_fat+10,f
  3677  0585  0DB7               	rlf	??_fat+11,f
  3678  0586  0B89               	decfsz	9,f
  3679  0587  2D82               	goto	u1345
  3680  0588  0842               	movf	fat@pfs,w
  3681  0589  00B8               	movwf	??_fat+12
  3682  058A  01B9               	clrf	??_fat+13
  3683  058B  01BA               	clrf	??_fat+14
  3684  058C  01BB               	clrf	??_fat+15
  3685  058D  0838               	movf	??_fat+12,w
  3686  058E  04B4               	iorwf	??_fat+8,f
  3687  058F  0839               	movf	??_fat+13,w
  3688  0590  04B5               	iorwf	??_fat+9,f
  3689  0591  083A               	movf	??_fat+14,w
  3690  0592  04B6               	iorwf	??_fat+10,f
  3691  0593  083B               	movf	??_fat+15,w
  3692  0594  04B7               	iorwf	??_fat+11,f
  3693  0595  0834               	movf	??_fat+8,w
  3694  0596  04B0               	iorwf	??_fat+4,f
  3695  0597  0835               	movf	??_fat+9,w
  3696  0598  04B1               	iorwf	??_fat+5,f
  3697  0599  0836               	movf	??_fat+10,w
  3698  059A  04B2               	iorwf	??_fat+6,f
  3699  059B  0837               	movf	??_fat+11,w
  3700  059C  04B3               	iorwf	??_fat+7,f
  3701  059D  082C               	movf	??_fat,w
  3702  059E  0430               	iorwf	??_fat+4,w
  3703  059F  00E2               	movwf	_BootSector
  3704  05A0  082D               	movf	??_fat+1,w
  3705  05A1  0431               	iorwf	??_fat+5,w
  3706  05A2  00E3               	movwf	_BootSector+1
  3707  05A3  082E               	movf	??_fat+2,w
  3708  05A4  0432               	iorwf	??_fat+6,w
  3709  05A5  00E4               	movwf	_BootSector+2
  3710  05A6  082F               	movf	??_fat+3,w
  3711  05A7  0433               	iorwf	??_fat+7,w
  3712  05A8  00E5               	movwf	_BootSector+3
  3713                           
  3714                           ;main.c: 98: r = Command(17,BootSector*card,0xFF);
  3715  05A9  086C               	movf	_card,w
  3716  05AA  00F0               	movwf	___lmul@multiplier
  3717  05AB  086D               	movf	_card+1,w
  3718  05AC  00F1               	movwf	___lmul@multiplier+1
  3719  05AD  01F2               	clrf	___lmul@multiplier+2
  3720  05AE  01F3               	clrf	___lmul@multiplier+3
  3721  05AF  0865               	movf	_BootSector+3,w
  3722  05B0  00F7               	movwf	___lmul@multiplicand+3
  3723  05B1  0864               	movf	_BootSector+2,w
  3724  05B2  00F6               	movwf	___lmul@multiplicand+2
  3725  05B3  0863               	movf	_BootSector+1,w
  3726  05B4  00F5               	movwf	___lmul@multiplicand+1
  3727  05B5  0862               	movf	_BootSector,w
  3728  05B6  00F4               	movwf	___lmul@multiplicand
  3729  05B7  3180  2045  3184   	fcall	___lmul
  3730  05BA  0873               	movf	?___lmul+3,w
  3731  05BB  0020               	movlb	0	; select bank0
  3732  05BC  00A3               	movwf	Command@adrs+3
  3733  05BD  0872               	movf	?___lmul+2,w
  3734  05BE  00A2               	movwf	Command@adrs+2
  3735  05BF  0871               	movf	?___lmul+1,w
  3736  05C0  00A1               	movwf	Command@adrs+1
  3737  05C1  0870               	movf	?___lmul,w
  3738  05C2  00A0               	movwf	Command@adrs
  3739  05C3  30FF               	movlw	255
  3740  05C4  00AC               	movwf	??_fat
  3741  05C5  082C               	movf	??_fat,w
  3742  05C6  00A4               	movwf	Command@frame2
  3743  05C7  3011               	movlw	17
  3744  05C8  3180  2074  3184   	fcall	_Command
  3745  05CB  0020               	movlb	0	; select bank0
  3746  05CC  00AD               	movwf	??_fat+1
  3747  05CD  01AE               	clrf	??_fat+2
  3748  05CE  082D               	movf	??_fat+1,w
  3749  05CF  00BC               	movwf	fat@r
  3750  05D0  082E               	movf	??_fat+2,w
  3751  05D1  00BD               	movwf	fat@r+1
  3752  05D2                     l1324:	
  3753                           ;main.c: 101: while(SPI(0xFF) != 0xFe);
  3754                           
  3755  05D2  30FF               	movlw	255
  3756  05D3  3180  200B  3184   	fcall	_SPI
  3757  05D6  3AFE               	xorlw	254
  3758  05D7  1D03               	skipz
  3759  05D8  2DD2               	goto	l1324
  3760                           
  3761                           ;main.c: 102: for(i=0;i<512;i++){
  3762  05D9  0020               	movlb	0	; select bank0
  3763  05DA  01CE               	clrf	fat@i
  3764  05DB  01CF               	clrf	fat@i+1
  3765  05DC  3002               	movlw	2
  3766  05DD  024F               	subwf	fat@i+1,w
  3767  05DE  3000               	movlw	0
  3768  05DF  1903               	skipnz
  3769  05E0  024E               	subwf	fat@i,w
  3770  05E1  1803               	btfsc	3,0
  3771  05E2  2EB7               	goto	l1394
  3772  05E3                     l1332:	
  3773                           
  3774                           ;main.c: 104: if(i==11){bps1=SPI(0xFF);}
  3775  05E3  300B               	movlw	11
  3776  05E4  064E               	xorwf	fat@i,w
  3777  05E5  044F               	iorwf	fat@i+1,w
  3778  05E6  1D03               	btfss	3,2
  3779  05E7  2DF1               	goto	l1336
  3780  05E8  30FF               	movlw	255
  3781  05E9  3180  200B  3184   	fcall	_SPI
  3782  05EC  0020               	movlb	0	; select bank0
  3783  05ED  00AC               	movwf	??_fat
  3784  05EE  082C               	movf	??_fat,w
  3785  05EF  00BE               	movwf	fat@bps1
  3786  05F0  2EAB               	goto	l1390
  3787  05F1                     l1336:	
  3788                           
  3789                           ;main.c: 105: else if(i==12){bps2=SPI(0xFF);}
  3790  05F1  300C               	movlw	12
  3791  05F2  064E               	xorwf	fat@i,w
  3792  05F3  044F               	iorwf	fat@i+1,w
  3793  05F4  1D03               	btfss	3,2
  3794  05F5  2DFF               	goto	l1340
  3795  05F6  30FF               	movlw	255
  3796  05F7  3180  200B  3184   	fcall	_SPI
  3797  05FA  0020               	movlb	0	; select bank0
  3798  05FB  00AC               	movwf	??_fat
  3799  05FC  082C               	movf	??_fat,w
  3800  05FD  00BF               	movwf	fat@bps2
  3801  05FE  2EAB               	goto	l1390
  3802  05FF                     l1340:	
  3803                           
  3804                           ;main.c: 106: else if(i==13){SectorsPerCluster=SPI(0xFF);}
  3805  05FF  300D               	movlw	13
  3806  0600  064E               	xorwf	fat@i,w
  3807  0601  044F               	iorwf	fat@i+1,w
  3808  0602  1D03               	btfss	3,2
  3809  0603  2E0D               	goto	l1344
  3810  0604  30FF               	movlw	255
  3811  0605  3180  200B  3184   	fcall	_SPI
  3812  0608  0020               	movlb	0	; select bank0
  3813  0609  00AC               	movwf	??_fat
  3814  060A  082C               	movf	??_fat,w
  3815  060B  00EE               	movwf	_SectorsPerCluster
  3816  060C  2EAB               	goto	l1390
  3817  060D                     l1344:	
  3818                           
  3819                           ;main.c: 107: else if(i==14){rs1=SPI(0xFF);}
  3820  060D  300E               	movlw	14
  3821  060E  064E               	xorwf	fat@i,w
  3822  060F  044F               	iorwf	fat@i+1,w
  3823  0610  1D03               	btfss	3,2
  3824  0611  2E1B               	goto	l1348
  3825  0612  30FF               	movlw	255
  3826  0613  3180  200B  3184   	fcall	_SPI
  3827  0616  0020               	movlb	0	; select bank0
  3828  0617  00AC               	movwf	??_fat
  3829  0618  082C               	movf	??_fat,w
  3830  0619  00C0               	movwf	fat@rs1
  3831  061A  2EAB               	goto	l1390
  3832  061B                     l1348:	
  3833                           
  3834                           ;main.c: 108: else if(i==15){rs2=SPI(0xFF);}
  3835  061B  300F               	movlw	15
  3836  061C  064E               	xorwf	fat@i,w
  3837  061D  044F               	iorwf	fat@i+1,w
  3838  061E  1D03               	btfss	3,2
  3839  061F  2E29               	goto	l1352
  3840  0620  30FF               	movlw	255
  3841  0621  3180  200B  3184   	fcall	_SPI
  3842  0624  0020               	movlb	0	; select bank0
  3843  0625  00AC               	movwf	??_fat
  3844  0626  082C               	movf	??_fat,w
  3845  0627  00C1               	movwf	fat@rs2
  3846  0628  2EAB               	goto	l1390
  3847  0629                     l1352:	
  3848                           
  3849                           ;main.c: 109: else if(i==16){Fats=SPI(0xFF);}
  3850  0629  3010               	movlw	16
  3851  062A  064E               	xorwf	fat@i,w
  3852  062B  044F               	iorwf	fat@i+1,w
  3853  062C  1D03               	btfss	3,2
  3854  062D  2E37               	goto	l1356
  3855  062E  30FF               	movlw	255
  3856  062F  3180  200B  3184   	fcall	_SPI
  3857  0632  0020               	movlb	0	; select bank0
  3858  0633  00AC               	movwf	??_fat
  3859  0634  082C               	movf	??_fat,w
  3860  0635  00EA               	movwf	_Fats
  3861  0636  2EAB               	goto	l1390
  3862  0637                     l1356:	
  3863                           
  3864                           ;main.c: 110: else if(i==36){spf[0]=SPI(0xFF);}
  3865  0637  3024               	movlw	36
  3866  0638  064E               	xorwf	fat@i,w
  3867  0639  044F               	iorwf	fat@i+1,w
  3868  063A  1D03               	btfss	3,2
  3869  063B  2E45               	goto	l1360
  3870  063C  30FF               	movlw	255
  3871  063D  3180  200B  3184   	fcall	_SPI
  3872  0640  0020               	movlb	0	; select bank0
  3873  0641  00AC               	movwf	??_fat
  3874  0642  082C               	movf	??_fat,w
  3875  0643  00C6               	movwf	fat@spf
  3876  0644  2EAB               	goto	l1390
  3877  0645                     l1360:	
  3878                           
  3879                           ;main.c: 111: else if(i==37){spf[1]=SPI(0xFF);}
  3880  0645  3025               	movlw	37
  3881  0646  064E               	xorwf	fat@i,w
  3882  0647  044F               	iorwf	fat@i+1,w
  3883  0648  1D03               	btfss	3,2
  3884  0649  2E53               	goto	l1364
  3885  064A  30FF               	movlw	255
  3886  064B  3180  200B  3184   	fcall	_SPI
  3887  064E  0020               	movlb	0	; select bank0
  3888  064F  00AC               	movwf	??_fat
  3889  0650  082C               	movf	??_fat,w
  3890  0651  00C7               	movwf	fat@spf+1
  3891  0652  2EAB               	goto	l1390
  3892  0653                     l1364:	
  3893                           
  3894                           ;main.c: 112: else if(i==38){spf[2]=SPI(0xFF);}
  3895  0653  3026               	movlw	38
  3896  0654  064E               	xorwf	fat@i,w
  3897  0655  044F               	iorwf	fat@i+1,w
  3898  0656  1D03               	btfss	3,2
  3899  0657  2E61               	goto	l1368
  3900  0658  30FF               	movlw	255
  3901  0659  3180  200B  3184   	fcall	_SPI
  3902  065C  0020               	movlb	0	; select bank0
  3903  065D  00AC               	movwf	??_fat
  3904  065E  082C               	movf	??_fat,w
  3905  065F  00C8               	movwf	fat@spf+2
  3906  0660  2EAB               	goto	l1390
  3907  0661                     l1368:	
  3908                           
  3909                           ;main.c: 113: else if(i==39){spf[3]=SPI(0xFF);}
  3910  0661  3027               	movlw	39
  3911  0662  064E               	xorwf	fat@i,w
  3912  0663  044F               	iorwf	fat@i+1,w
  3913  0664  1D03               	btfss	3,2
  3914  0665  2E6F               	goto	l1372
  3915  0666  30FF               	movlw	255
  3916  0667  3180  200B  3184   	fcall	_SPI
  3917  066A  0020               	movlb	0	; select bank0
  3918  066B  00AC               	movwf	??_fat
  3919  066C  082C               	movf	??_fat,w
  3920  066D  00C9               	movwf	fat@spf+3
  3921  066E  2EAB               	goto	l1390
  3922  066F                     l1372:	
  3923                           
  3924                           ;main.c: 114: else if(i==44){rdc[0]=SPI(0xFF);}
  3925  066F  302C               	movlw	44
  3926  0670  064E               	xorwf	fat@i,w
  3927  0671  044F               	iorwf	fat@i+1,w
  3928  0672  1D03               	btfss	3,2
  3929  0673  2E7D               	goto	l1376
  3930  0674  30FF               	movlw	255
  3931  0675  3180  200B  3184   	fcall	_SPI
  3932  0678  0020               	movlb	0	; select bank0
  3933  0679  00AC               	movwf	??_fat
  3934  067A  082C               	movf	??_fat,w
  3935  067B  00CA               	movwf	fat@rdc
  3936  067C  2EAB               	goto	l1390
  3937  067D                     l1376:	
  3938                           
  3939                           ;main.c: 115: else if(i==45){rdc[1]=SPI(0xFF);}
  3940  067D  302D               	movlw	45
  3941  067E  064E               	xorwf	fat@i,w
  3942  067F  044F               	iorwf	fat@i+1,w
  3943  0680  1D03               	btfss	3,2
  3944  0681  2E8B               	goto	l1380
  3945  0682  30FF               	movlw	255
  3946  0683  3180  200B  3184   	fcall	_SPI
  3947  0686  0020               	movlb	0	; select bank0
  3948  0687  00AC               	movwf	??_fat
  3949  0688  082C               	movf	??_fat,w
  3950  0689  00CB               	movwf	fat@rdc+1
  3951  068A  2EAB               	goto	l1390
  3952  068B                     l1380:	
  3953                           
  3954                           ;main.c: 116: else if(i==46){rdc[2]=SPI(0xFF);}
  3955  068B  302E               	movlw	46
  3956  068C  064E               	xorwf	fat@i,w
  3957  068D  044F               	iorwf	fat@i+1,w
  3958  068E  1D03               	btfss	3,2
  3959  068F  2E99               	goto	l1384
  3960  0690  30FF               	movlw	255
  3961  0691  3180  200B  3184   	fcall	_SPI
  3962  0694  0020               	movlb	0	; select bank0
  3963  0695  00AC               	movwf	??_fat
  3964  0696  082C               	movf	??_fat,w
  3965  0697  00CC               	movwf	fat@rdc+2
  3966  0698  2EAB               	goto	l1390
  3967  0699                     l1384:	
  3968                           
  3969                           ;main.c: 117: else if(i==47){rdc[3]=SPI(0xFF);}
  3970  0699  302F               	movlw	47
  3971  069A  064E               	xorwf	fat@i,w
  3972  069B  044F               	iorwf	fat@i+1,w
  3973  069C  1D03               	btfss	3,2
  3974  069D  2EA7               	goto	l1388
  3975  069E  30FF               	movlw	255
  3976  069F  3180  200B  3184   	fcall	_SPI
  3977  06A2  0020               	movlb	0	; select bank0
  3978  06A3  00AC               	movwf	??_fat
  3979  06A4  082C               	movf	??_fat,w
  3980  06A5  00CD               	movwf	fat@rdc+3
  3981  06A6  2EAB               	goto	l1390
  3982  06A7                     l1388:	
  3983                           
  3984                           ;main.c: 118: else{SPI(0xFF);}
  3985  06A7  30FF               	movlw	255
  3986  06A8  3180  200B  3184   	fcall	_SPI
  3987  06AB                     l1390:	
  3988  06AB  3001               	movlw	1
  3989  06AC  0020               	movlb	0	; select bank0
  3990  06AD  07CE               	addwf	fat@i,f
  3991  06AE  3000               	movlw	0
  3992  06AF  3DCF               	addwfc	fat@i+1,f
  3993  06B0  3002               	movlw	2
  3994  06B1  024F               	subwf	fat@i+1,w
  3995  06B2  3000               	movlw	0
  3996  06B3  1903               	skipnz
  3997  06B4  024E               	subwf	fat@i,w
  3998  06B5  1C03               	skipc
  3999  06B6  2DE3               	goto	l1332
  4000  06B7                     l1394:	
  4001                           
  4002                           ;main.c: 120: }
  4003                           ;main.c: 121: SPI(0xFF);
  4004  06B7  30FF               	movlw	255
  4005  06B8  3180  200B  3184   	fcall	_SPI
  4006                           
  4007                           ;main.c: 122: SPI(0xFF);
  4008  06BB  30FF               	movlw	255
  4009  06BC  3180  200B  3184   	fcall	_SPI
  4010                           
  4011                           ;main.c: 123: SPI(0xFF);
  4012  06BF  30FF               	movlw	255
  4013  06C0  3180  200B  3184   	fcall	_SPI
  4014                           
  4015                           ;main.c: 125: BytesPerSector = bps1 | ( (unsigned int)bps2 << 8 );
  4016  06C3  0020               	movlb	0	; select bank0
  4017  06C4  083F               	movf	fat@bps2,w
  4018  06C5  00AC               	movwf	??_fat
  4019  06C6  01AD               	clrf	??_fat+1
  4020  06C7  082C               	movf	??_fat,w
  4021  06C8  00AD               	movwf	??_fat+1
  4022  06C9  01AC               	clrf	??_fat
  4023  06CA  082C               	movf	??_fat,w
  4024  06CB  043E               	iorwf	fat@bps1,w
  4025  06CC  00E8               	movwf	_BytesPerSector
  4026  06CD  082D               	movf	??_fat+1,w
  4027  06CE  00E9               	movwf	_BytesPerSector+1
  4028                           
  4029                           ;main.c: 126: ReservedSectors = rs1 | ( (unsigned int)rs2 << 8 );
  4030  06CF  0841               	movf	fat@rs2,w
  4031  06D0  00AC               	movwf	??_fat
  4032  06D1  01AD               	clrf	??_fat+1
  4033  06D2  082C               	movf	??_fat,w
  4034  06D3  00AD               	movwf	??_fat+1
  4035  06D4  01AC               	clrf	??_fat
  4036  06D5  082C               	movf	??_fat,w
  4037  06D6  0440               	iorwf	fat@rs1,w
  4038  06D7  00E6               	movwf	_ReservedSectors
  4039  06D8  082D               	movf	??_fat+1,w
  4040  06D9  00E7               	movwf	_ReservedSectors+1
  4041                           
  4042                           ;main.c: 127: RootDirCluster = rdc[0] | ( (unsigned long)rdc[1] << 8 ) | ( (unsigned lon
      +                          g)rdc[2] << 16 ) | ( (unsigned long)rdc[3] << 24 );
  4043  06DA  084D               	movf	fat@rdc+3,w
  4044  06DB  00AC               	movwf	??_fat
  4045  06DC  01AD               	clrf	??_fat+1
  4046  06DD  01AE               	clrf	??_fat+2
  4047  06DE  01AF               	clrf	??_fat+3
  4048  06DF  3018               	movlw	24
  4049  06E0                     u1525:	
  4050  06E0  35AC               	lslf	??_fat,f
  4051  06E1  0DAD               	rlf	??_fat+1,f
  4052  06E2  0DAE               	rlf	??_fat+2,f
  4053  06E3  0DAF               	rlf	??_fat+3,f
  4054  06E4  0B89               	decfsz	9,f
  4055  06E5  2EE0               	goto	u1525
  4056  06E6  084C               	movf	fat@rdc+2,w
  4057  06E7  00B0               	movwf	??_fat+4
  4058  06E8  01B1               	clrf	??_fat+5
  4059  06E9  01B2               	clrf	??_fat+6
  4060  06EA  01B3               	clrf	??_fat+7
  4061  06EB  3010               	movlw	16
  4062  06EC                     u1535:	
  4063  06EC  35B0               	lslf	??_fat+4,f
  4064  06ED  0DB1               	rlf	??_fat+5,f
  4065  06EE  0DB2               	rlf	??_fat+6,f
  4066  06EF  0DB3               	rlf	??_fat+7,f
  4067  06F0  0B89               	decfsz	9,f
  4068  06F1  2EEC               	goto	u1535
  4069  06F2  084B               	movf	fat@rdc+1,w
  4070  06F3  00B4               	movwf	??_fat+8
  4071  06F4  01B5               	clrf	??_fat+9
  4072  06F5  01B6               	clrf	??_fat+10
  4073  06F6  01B7               	clrf	??_fat+11
  4074  06F7  3008               	movlw	8
  4075  06F8                     u1545:	
  4076  06F8  35B4               	lslf	??_fat+8,f
  4077  06F9  0DB5               	rlf	??_fat+9,f
  4078  06FA  0DB6               	rlf	??_fat+10,f
  4079  06FB  0DB7               	rlf	??_fat+11,f
  4080  06FC  0B89               	decfsz	9,f
  4081  06FD  2EF8               	goto	u1545
  4082  06FE  084A               	movf	fat@rdc,w
  4083  06FF  00B8               	movwf	??_fat+12
  4084  0700  01B9               	clrf	??_fat+13
  4085  0701  01BA               	clrf	??_fat+14
  4086  0702  01BB               	clrf	??_fat+15
  4087  0703  0838               	movf	??_fat+12,w
  4088  0704  04B4               	iorwf	??_fat+8,f
  4089  0705  0839               	movf	??_fat+13,w
  4090  0706  04B5               	iorwf	??_fat+9,f
  4091  0707  083A               	movf	??_fat+14,w
  4092  0708  04B6               	iorwf	??_fat+10,f
  4093  0709  083B               	movf	??_fat+15,w
  4094  070A  04B7               	iorwf	??_fat+11,f
  4095  070B  0834               	movf	??_fat+8,w
  4096  070C  04B0               	iorwf	??_fat+4,f
  4097  070D  0835               	movf	??_fat+9,w
  4098  070E  04B1               	iorwf	??_fat+5,f
  4099  070F  0836               	movf	??_fat+10,w
  4100  0710  04B2               	iorwf	??_fat+6,f
  4101  0711  0837               	movf	??_fat+11,w
  4102  0712  04B3               	iorwf	??_fat+7,f
  4103  0713  082C               	movf	??_fat,w
  4104  0714  0430               	iorwf	??_fat+4,w
  4105  0715  0021               	movlb	1	; select bank1
  4106  0716  00A8               	movwf	_RootDirCluster^(0+128)
  4107  0717  0020               	movlb	0	; select bank0
  4108  0718  082D               	movf	??_fat+1,w
  4109  0719  0431               	iorwf	??_fat+5,w
  4110  071A  0021               	movlb	1	; select bank1
  4111  071B  00A9               	movwf	(_RootDirCluster+1)^(0+128)
  4112  071C  0020               	movlb	0	; select bank0
  4113  071D  082E               	movf	??_fat+2,w
  4114  071E  0432               	iorwf	??_fat+6,w
  4115  071F  0021               	movlb	1	; select bank1
  4116  0720  00AA               	movwf	(_RootDirCluster+2)^(0+128)
  4117  0721  0020               	movlb	0	; select bank0
  4118  0722  082F               	movf	??_fat+3,w
  4119  0723  0433               	iorwf	??_fat+7,w
  4120  0724  0021               	movlb	1	; select bank1
  4121  0725  00AB               	movwf	(_RootDirCluster+3)^(0+128)
  4122                           
  4123                           ;main.c: 128: SectorsPerFat = spf[0] | ( (unsigned long)spf[1] << 8 ) | ( (unsigned long
      +                          )spf[2] << 16 ) | ( (unsigned long)spf[3] << 24 );
  4124  0726  0020               	movlb	0	; select bank0
  4125  0727  0849               	movf	fat@spf+3,w
  4126  0728  00AC               	movwf	??_fat
  4127  0729  01AD               	clrf	??_fat+1
  4128  072A  01AE               	clrf	??_fat+2
  4129  072B  01AF               	clrf	??_fat+3
  4130  072C  3018               	movlw	24
  4131  072D                     u1555:	
  4132  072D  35AC               	lslf	??_fat,f
  4133  072E  0DAD               	rlf	??_fat+1,f
  4134  072F  0DAE               	rlf	??_fat+2,f
  4135  0730  0DAF               	rlf	??_fat+3,f
  4136  0731  0B89               	decfsz	9,f
  4137  0732  2F2D               	goto	u1555
  4138  0733  0848               	movf	fat@spf+2,w
  4139  0734  00B0               	movwf	??_fat+4
  4140  0735  01B1               	clrf	??_fat+5
  4141  0736  01B2               	clrf	??_fat+6
  4142  0737  01B3               	clrf	??_fat+7
  4143  0738  3010               	movlw	16
  4144  0739                     u1565:	
  4145  0739  35B0               	lslf	??_fat+4,f
  4146  073A  0DB1               	rlf	??_fat+5,f
  4147  073B  0DB2               	rlf	??_fat+6,f
  4148  073C  0DB3               	rlf	??_fat+7,f
  4149  073D  0B89               	decfsz	9,f
  4150  073E  2F39               	goto	u1565
  4151  073F  0847               	movf	fat@spf+1,w
  4152  0740  00B4               	movwf	??_fat+8
  4153  0741  01B5               	clrf	??_fat+9
  4154  0742  01B6               	clrf	??_fat+10
  4155  0743  01B7               	clrf	??_fat+11
  4156  0744  3008               	movlw	8
  4157  0745                     u1575:	
  4158  0745  35B4               	lslf	??_fat+8,f
  4159  0746  0DB5               	rlf	??_fat+9,f
  4160  0747  0DB6               	rlf	??_fat+10,f
  4161  0748  0DB7               	rlf	??_fat+11,f
  4162  0749  0B89               	decfsz	9,f
  4163  074A  2F45               	goto	u1575
  4164  074B  0846               	movf	fat@spf,w
  4165  074C  00B8               	movwf	??_fat+12
  4166  074D  01B9               	clrf	??_fat+13
  4167  074E  01BA               	clrf	??_fat+14
  4168  074F  01BB               	clrf	??_fat+15
  4169  0750  0838               	movf	??_fat+12,w
  4170  0751  04B4               	iorwf	??_fat+8,f
  4171  0752  0839               	movf	??_fat+13,w
  4172  0753  04B5               	iorwf	??_fat+9,f
  4173  0754  083A               	movf	??_fat+14,w
  4174  0755  04B6               	iorwf	??_fat+10,f
  4175  0756  083B               	movf	??_fat+15,w
  4176  0757  04B7               	iorwf	??_fat+11,f
  4177  0758  0834               	movf	??_fat+8,w
  4178  0759  04B0               	iorwf	??_fat+4,f
  4179  075A  0835               	movf	??_fat+9,w
  4180  075B  04B1               	iorwf	??_fat+5,f
  4181  075C  0836               	movf	??_fat+10,w
  4182  075D  04B2               	iorwf	??_fat+6,f
  4183  075E  0837               	movf	??_fat+11,w
  4184  075F  04B3               	iorwf	??_fat+7,f
  4185  0760  082C               	movf	??_fat,w
  4186  0761  0430               	iorwf	??_fat+4,w
  4187  0762  0021               	movlb	1	; select bank1
  4188  0763  00AC               	movwf	_SectorsPerFat^(0+128)
  4189  0764  0020               	movlb	0	; select bank0
  4190  0765  082D               	movf	??_fat+1,w
  4191  0766  0431               	iorwf	??_fat+5,w
  4192  0767  0021               	movlb	1	; select bank1
  4193  0768  00AD               	movwf	(_SectorsPerFat+1)^(0+128)
  4194  0769  0020               	movlb	0	; select bank0
  4195  076A  082E               	movf	??_fat+2,w
  4196  076B  0432               	iorwf	??_fat+6,w
  4197  076C  0021               	movlb	1	; select bank1
  4198  076D  00AE               	movwf	(_SectorsPerFat+2)^(0+128)
  4199  076E  0020               	movlb	0	; select bank0
  4200  076F  082F               	movf	??_fat+3,w
  4201  0770  0433               	iorwf	??_fat+7,w
  4202  0771  0021               	movlb	1	; select bank1
  4203  0772  00AF               	movwf	(_SectorsPerFat+3)^(0+128)
  4204                           
  4205                           ;main.c: 129: DataSector = BootSector + (unsigned long)Fats * (unsigned long)SectorsPerF
      +                          at + (unsigned long)ReservedSectors;
  4206  0773  0020               	movlb	0	; select bank0
  4207  0774  0862               	movf	_BootSector,w
  4208  0775  00AC               	movwf	??_fat
  4209  0776  0863               	movf	_BootSector+1,w
  4210  0777  00AD               	movwf	??_fat+1
  4211  0778  0864               	movf	_BootSector+2,w
  4212  0779  00AE               	movwf	??_fat+2
  4213  077A  0865               	movf	_BootSector+3,w
  4214  077B  00AF               	movwf	??_fat+3
  4215  077C  0866               	movf	_ReservedSectors,w
  4216  077D  00B0               	movwf	??_fat+4
  4217  077E  0867               	movf	_ReservedSectors+1,w
  4218  077F  00B1               	movwf	??_fat+5
  4219  0780  01B2               	clrf	??_fat+6
  4220  0781  01B3               	clrf	??_fat+7
  4221  0782  086A               	movf	_Fats,w
  4222  0783  00B4               	movwf	??_fat+8
  4223  0784  01B5               	clrf	??_fat+9
  4224  0785  01B6               	clrf	??_fat+10
  4225  0786  01B7               	clrf	??_fat+11
  4226  0787  0837               	movf	??_fat+11,w
  4227  0788  00F3               	movwf	___lmul@multiplier+3
  4228  0789  0836               	movf	??_fat+10,w
  4229  078A  00F2               	movwf	___lmul@multiplier+2
  4230  078B  0835               	movf	??_fat+9,w
  4231  078C  00F1               	movwf	___lmul@multiplier+1
  4232  078D  0834               	movf	??_fat+8,w
  4233  078E  00F0               	movwf	___lmul@multiplier
  4234  078F  0021               	movlb	1	; select bank1
  4235  0790  082F               	movf	(_SectorsPerFat+3)^(0+128),w
  4236  0791  00F7               	movwf	___lmul@multiplicand+3
  4237  0792  082E               	movf	(_SectorsPerFat+2)^(0+128),w
  4238  0793  00F6               	movwf	___lmul@multiplicand+2
  4239  0794  082D               	movf	(_SectorsPerFat+1)^(0+128),w
  4240  0795  00F5               	movwf	___lmul@multiplicand+1
  4241  0796  082C               	movf	_SectorsPerFat^(0+128),w
  4242  0797  00F4               	movwf	___lmul@multiplicand
  4243  0798  3180  2045  3184   	fcall	___lmul
  4244  079B  0870               	movf	?___lmul,w
  4245  079C  0020               	movlb	0	; select bank0
  4246  079D  07B0               	addwf	??_fat+4,f
  4247  079E  0871               	movf	?___lmul+1,w
  4248  079F  3DB1               	addwfc	??_fat+5,f
  4249  07A0  0872               	movf	?___lmul+2,w
  4250  07A1  3DB2               	addwfc	??_fat+6,f
  4251  07A2  0873               	movf	?___lmul+3,w
  4252  07A3  3DB3               	addwfc	??_fat+7,f
  4253  07A4  0830               	movf	??_fat+4,w
  4254  07A5  07AC               	addwf	??_fat,f
  4255  07A6  0831               	movf	??_fat+5,w
  4256  07A7  3DAD               	addwfc	??_fat+1,f
  4257  07A8  0832               	movf	??_fat+6,w
  4258  07A9  3DAE               	addwfc	??_fat+2,f
  4259  07AA  0833               	movf	??_fat+7,w
  4260  07AB  3DAF               	addwfc	??_fat+3,f
  4261  07AC  082F               	movf	??_fat+3,w
  4262  07AD  00E1               	movwf	_DataSector+3
  4263  07AE  082E               	movf	??_fat+2,w
  4264  07AF  00E0               	movwf	_DataSector+2
  4265  07B0  082D               	movf	??_fat+1,w
  4266  07B1  00DF               	movwf	_DataSector+1
  4267  07B2  082C               	movf	??_fat,w
  4268  07B3  00DE               	movwf	_DataSector
  4269                           
  4270                           ;main.c: 130: RootDir = (RootDirCluster -2) * (unsigned long)SectorsPerCluster + DataSec
      +                          tor;
  4271  07B4  30FE               	movlw	254
  4272  07B5  0021               	movlb	1	; select bank1
  4273  07B6  0728               	addwf	_RootDirCluster^(0+128),w
  4274  07B7  00F0               	movwf	___lmul@multiplier
  4275  07B8  30FF               	movlw	255
  4276  07B9  3D29               	addwfc	(_RootDirCluster+1)^(0+128),w
  4277  07BA  00F1               	movwf	___lmul@multiplier+1
  4278  07BB  30FF               	movlw	255
  4279  07BC  3D2A               	addwfc	(_RootDirCluster+2)^(0+128),w
  4280  07BD  00F2               	movwf	___lmul@multiplier+2
  4281  07BE  30FF               	movlw	255
  4282  07BF  3D2B               	addwfc	(_RootDirCluster+3)^(0+128),w
  4283  07C0  00F3               	movwf	___lmul@multiplier+3
  4284  07C1  0020               	movlb	0	; select bank0
  4285  07C2  086E               	movf	_SectorsPerCluster,w
  4286  07C3  00AC               	movwf	??_fat
  4287  07C4  01AD               	clrf	??_fat+1
  4288  07C5  01AE               	clrf	??_fat+2
  4289  07C6  01AF               	clrf	??_fat+3
  4290  07C7  082F               	movf	??_fat+3,w
  4291  07C8  00F7               	movwf	___lmul@multiplicand+3
  4292  07C9  082E               	movf	??_fat+2,w
  4293  07CA  00F6               	movwf	___lmul@multiplicand+2
  4294  07CB  082D               	movf	??_fat+1,w
  4295  07CC  00F5               	movwf	___lmul@multiplicand+1
  4296  07CD  082C               	movf	??_fat,w
  4297  07CE  00F4               	movwf	___lmul@multiplicand
  4298  07CF  3180  2045         	fcall	___lmul
  4299  07D1  0870               	movf	?___lmul,w
  4300  07D2  0020               	movlb	0	; select bank0
  4301  07D3  075E               	addwf	_DataSector,w
  4302  07D4  00B0               	movwf	??_fat+4
  4303  07D5  0871               	movf	?___lmul+1,w
  4304  07D6  3D5F               	addwfc	_DataSector+1,w
  4305  07D7  00B1               	movwf	??_fat+5
  4306  07D8  0872               	movf	?___lmul+2,w
  4307  07D9  3D60               	addwfc	_DataSector+2,w
  4308  07DA  00B2               	movwf	??_fat+6
  4309  07DB  0873               	movf	?___lmul+3,w
  4310  07DC  3D61               	addwfc	_DataSector+3,w
  4311  07DD  00B3               	movwf	??_fat+7
  4312  07DE  0833               	movf	??_fat+7,w
  4313  07DF  0021               	movlb	1	; select bank1
  4314  07E0  00B3               	movwf	(_RootDir+3)^(0+128)
  4315  07E1  0020               	movlb	0	; select bank0
  4316  07E2  0832               	movf	??_fat+6,w
  4317  07E3  0021               	movlb	1	; select bank1
  4318  07E4  00B2               	movwf	(_RootDir+2)^(0+128)
  4319  07E5  0020               	movlb	0	; select bank0
  4320  07E6  0831               	movf	??_fat+5,w
  4321  07E7  0021               	movlb	1	; select bank1
  4322  07E8  00B1               	movwf	(_RootDir+1)^(0+128)
  4323  07E9  0020               	movlb	0	; select bank0
  4324  07EA  0830               	movf	??_fat+4,w
  4325  07EB  0021               	movlb	1	; select bank1
  4326  07EC  00B0               	movwf	_RootDir^(0+128)
  4327  07ED  0008               	return
  4328  07EE                     __end_of_fat:	
  4329                           
  4330                           	psect	text5
  4331  0045                     __ptext5:	
  4332 ;; *************** function ___lmul *****************
  4333 ;; Defined at:
  4334 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  multiplier      4    0[COMMON] unsigned long 
  4337 ;;  multiplicand    4    4[COMMON] unsigned long 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  product         4    8[COMMON] unsigned long 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  4    0[COMMON] unsigned long 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4349 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;Total ram usage:       12 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_file
  4359 ;;		_fat
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function ___lmul
  4366  0045                     ___lmul:	
  4367                           
  4368                           ;incstack = 0
  4369                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4370  0045  3000               	movlw	0
  4371  0046  00FB               	movwf	___lmul@product+3
  4372  0047  3000               	movlw	0
  4373  0048  00FA               	movwf	___lmul@product+2
  4374  0049  3000               	movlw	0
  4375  004A  00F9               	movwf	___lmul@product+1
  4376  004B  3000               	movlw	0
  4377  004C  00F8               	movwf	___lmul@product
  4378  004D                     l1178:	
  4379  004D  1C70               	btfss	___lmul@multiplier,0
  4380  004E  2857               	goto	l1182
  4381  004F  0874               	movf	___lmul@multiplicand,w
  4382  0050  07F8               	addwf	___lmul@product,f
  4383  0051  0875               	movf	___lmul@multiplicand+1,w
  4384  0052  3DF9               	addwfc	___lmul@product+1,f
  4385  0053  0876               	movf	___lmul@multiplicand+2,w
  4386  0054  3DFA               	addwfc	___lmul@product+2,f
  4387  0055  0877               	movf	___lmul@multiplicand+3,w
  4388  0056  3DFB               	addwfc	___lmul@product+3,f
  4389  0057                     l1182:	
  4390  0057  3001               	movlw	1
  4391  0058                     u975:	
  4392  0058  35F4               	lslf	___lmul@multiplicand,f
  4393  0059  0DF5               	rlf	___lmul@multiplicand+1,f
  4394  005A  0DF6               	rlf	___lmul@multiplicand+2,f
  4395  005B  0DF7               	rlf	___lmul@multiplicand+3,f
  4396  005C  0B89               	decfsz	9,f
  4397  005D  2858               	goto	u975
  4398  005E  3001               	movlw	1
  4399  005F                     u985:	
  4400  005F  36F3               	lsrf	___lmul@multiplier+3,f
  4401  0060  0CF2               	rrf	___lmul@multiplier+2,f
  4402  0061  0CF1               	rrf	___lmul@multiplier+1,f
  4403  0062  0CF0               	rrf	___lmul@multiplier,f
  4404  0063  0B89               	decfsz	9,f
  4405  0064  285F               	goto	u985
  4406  0065  0873               	movf	___lmul@multiplier+3,w
  4407  0066  0472               	iorwf	___lmul@multiplier+2,w
  4408  0067  0471               	iorwf	___lmul@multiplier+1,w
  4409  0068  0470               	iorwf	___lmul@multiplier,w
  4410  0069  1D03               	skipz
  4411  006A  284D               	goto	l1178
  4412  006B  087B               	movf	___lmul@product+3,w
  4413  006C  00F3               	movwf	?___lmul+3
  4414  006D  087A               	movf	___lmul@product+2,w
  4415  006E  00F2               	movwf	?___lmul+2
  4416  006F  0879               	movf	___lmul@product+1,w
  4417  0070  00F1               	movwf	?___lmul+1
  4418  0071  0878               	movf	___lmul@product,w
  4419  0072  00F0               	movwf	?___lmul
  4420  0073  0008               	return
  4421  0074                     __end_of___lmul:	
  4422                           
  4423                           	psect	text6
  4424  0074                     __ptext6:	
  4425 ;; *************** function _Command *****************
  4426 ;; Defined at:
  4427 ;;		line 140 in file "main.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  frame1          1    wreg     unsigned char 
  4430 ;;  adrs            4    0[BANK0 ] unsigned long 
  4431 ;;  frame2          1    4[BANK0 ] unsigned char 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  frame1          1    9[BANK0 ] unsigned char 
  4434 ;;  i               1   11[BANK0 ] unsigned char 
  4435 ;;  res             1   10[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:       12 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    1
  4452 ;; This function calls:
  4453 ;;		_SPI
  4454 ;; This function is called by:
  4455 ;;		_file
  4456 ;;		_readSD
  4457 ;;		_fat
  4458 ;;		_initSD
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _Command
  4464  0074                     _Command:	
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _Command: [wreg+status,2+status,0+pclath+cstack]
  4468                           ;Command@frame1 stored from wreg
  4469  0074  0020               	movlb	0	; select bank0
  4470  0075  00A9               	movwf	Command@frame1
  4471                           
  4472                           ;main.c: 142: unsigned char i, res;
  4473                           ;main.c: 145: SPI((frame1 | 0x40) & 0x7F);
  4474  0076  0829               	movf	Command@frame1,w
  4475  0077  3840               	iorlw	64
  4476  0078  397F               	andlw	127
  4477  0079  3180  200B  3180   	fcall	_SPI
  4478                           
  4479                           ;main.c: 146: SPI((adrs & 0xFF000000) >> 24);
  4480  007C  3000               	movlw	0
  4481  007D  0020               	movlb	0	; select bank0
  4482  007E  0520               	andwf	Command@adrs,w
  4483  007F  00A5               	movwf	??_Command
  4484  0080  3000               	movlw	0
  4485  0081  0521               	andwf	Command@adrs+1,w
  4486  0082  00A6               	movwf	??_Command+1
  4487  0083  3000               	movlw	0
  4488  0084  0522               	andwf	Command@adrs+2,w
  4489  0085  00A7               	movwf	??_Command+2
  4490  0086  30FF               	movlw	255
  4491  0087  0523               	andwf	Command@adrs+3,w
  4492  0088  00A8               	movwf	??_Command+3
  4493  0089  3018               	movlw	24
  4494  008A                     u905:	
  4495  008A  36A8               	lsrf	??_Command+3,f
  4496  008B  0CA7               	rrf	??_Command+2,f
  4497  008C  0CA6               	rrf	??_Command+1,f
  4498  008D  0CA5               	rrf	??_Command,f
  4499  008E  0B89               	decfsz	9,f
  4500  008F  288A               	goto	u905
  4501  0090  0825               	movf	??_Command,w
  4502  0091  3180  200B  3180   	fcall	_SPI
  4503                           
  4504                           ;main.c: 147: SPI((adrs & 0x00FF0000) >> 16);
  4505  0094  0020               	movlb	0	; select bank0
  4506  0095  0820               	movf	Command@adrs,w
  4507  0096  00A5               	movwf	??_Command
  4508  0097  0821               	movf	Command@adrs+1,w
  4509  0098  00A6               	movwf	??_Command+1
  4510  0099  0822               	movf	Command@adrs+2,w
  4511  009A  00A7               	movwf	??_Command+2
  4512  009B  0823               	movf	Command@adrs+3,w
  4513  009C  00A8               	movwf	??_Command+3
  4514  009D  3010               	movlw	16
  4515  009E                     u915:	
  4516  009E  36A8               	lsrf	??_Command+3,f
  4517  009F  0CA7               	rrf	??_Command+2,f
  4518  00A0  0CA6               	rrf	??_Command+1,f
  4519  00A1  0CA5               	rrf	??_Command,f
  4520  00A2  0B89               	decfsz	9,f
  4521  00A3  289E               	goto	u915
  4522  00A4  0825               	movf	??_Command,w
  4523  00A5  3180  200B  3180   	fcall	_SPI
  4524                           
  4525                           ;main.c: 148: SPI((adrs & 0x0000FF00) >> 8);
  4526  00A8  0020               	movlb	0	; select bank0
  4527  00A9  0820               	movf	Command@adrs,w
  4528  00AA  00A5               	movwf	??_Command
  4529  00AB  0821               	movf	Command@adrs+1,w
  4530  00AC  00A6               	movwf	??_Command+1
  4531  00AD  0822               	movf	Command@adrs+2,w
  4532  00AE  00A7               	movwf	??_Command+2
  4533  00AF  0823               	movf	Command@adrs+3,w
  4534  00B0  00A8               	movwf	??_Command+3
  4535  00B1  3008               	movlw	8
  4536  00B2                     u925:	
  4537  00B2  36A8               	lsrf	??_Command+3,f
  4538  00B3  0CA7               	rrf	??_Command+2,f
  4539  00B4  0CA6               	rrf	??_Command+1,f
  4540  00B5  0CA5               	rrf	??_Command,f
  4541  00B6  0B89               	decfsz	9,f
  4542  00B7  28B2               	goto	u925
  4543  00B8  0825               	movf	??_Command,w
  4544  00B9  3180  200B  3180   	fcall	_SPI
  4545                           
  4546                           ;main.c: 149: SPI(adrs & 0x000000FF);
  4547  00BC  0020               	movlb	0	; select bank0
  4548  00BD  0820               	movf	Command@adrs,w
  4549  00BE  3180  200B  3180   	fcall	_SPI
  4550                           
  4551                           ;main.c: 150: SPI(frame2 | 1);
  4552  00C1  0020               	movlb	0	; select bank0
  4553  00C2  0824               	movf	Command@frame2,w
  4554  00C3  3801               	iorlw	1
  4555  00C4  3180  200B  3180   	fcall	_SPI
  4556                           
  4557                           ;main.c: 152: for(i=0;i<10;i++)
  4558  00C7  0020               	movlb	0	; select bank0
  4559  00C8  01AB               	clrf	Command@i
  4560  00C9  300A               	movlw	10
  4561  00CA  022B               	subwf	Command@i,w
  4562  00CB  1803               	btfsc	3,0
  4563  00CC  28E0               	goto	l1172
  4564  00CD                     l1162:	
  4565                           
  4566                           ;main.c: 153: {
  4567                           ;main.c: 154: res = SPI(0xFF);
  4568  00CD  30FF               	movlw	255
  4569  00CE  3180  200B  3180   	fcall	_SPI
  4570  00D1  0020               	movlb	0	; select bank0
  4571  00D2  00A5               	movwf	??_Command
  4572  00D3  0825               	movf	??_Command,w
  4573  00D4  00AA               	movwf	Command@res
  4574                           
  4575                           ;main.c: 155: if(res != 0xFF)break;
  4576  00D5  0A2A               	incf	Command@res,w
  4577  00D6  1D03               	btfss	3,2
  4578  00D7  28E0               	goto	l1172
  4579  00D8  3001               	movlw	1
  4580  00D9  00A5               	movwf	??_Command
  4581  00DA  0825               	movf	??_Command,w
  4582  00DB  07AB               	addwf	Command@i,f
  4583  00DC  300A               	movlw	10
  4584  00DD  022B               	subwf	Command@i,w
  4585  00DE  1C03               	skipc
  4586  00DF  28CD               	goto	l1162
  4587  00E0                     l1172:	
  4588                           
  4589                           ;main.c: 156: }
  4590                           ;main.c: 157: return res;
  4591  00E0  082A               	movf	Command@res,w
  4592  00E1  0008               	return
  4593  00E2                     __end_of_Command:	
  4594                           
  4595                           	psect	text7
  4596  000B                     __ptext7:	
  4597 ;; *************** function _SPI *****************
  4598 ;; Defined at:
  4599 ;;		line 133 in file "main.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  spidata         1    wreg     unsigned char 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  spidata         1    0[COMMON] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;Total ram usage:        1 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_file
  4623 ;;		_readSD
  4624 ;;		_fat
  4625 ;;		_Command
  4626 ;;		_initSD
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           
  4631                           ;psect for function _SPI
  4632  000B                     _SPI:	
  4633                           
  4634                           ;incstack = 0
  4635                           ; Regs used in _SPI: [wreg]
  4636                           ;SPI@spidata stored from wreg
  4637  000B  00F0               	movwf	SPI@spidata
  4638                           
  4639                           ;main.c: 135: SSP1BUF = spidata;
  4640  000C  0870               	movf	SPI@spidata,w
  4641  000D  0024               	movlb	4	; select bank4
  4642  000E  0091               	movwf	17	;volatile
  4643  000F                     l262:	
  4644                           ;main.c: 136: while (!BF);
  4645                           
  4646  000F  1C14               	btfss	20,0	;volatile
  4647  0010  280F               	goto	l262
  4648                           
  4649                           ;main.c: 137: return SSP1BUF;
  4650  0011  0811               	movf	17,w	;volatile
  4651  0012  0008               	return
  4652  0013                     __end_of_SPI:	
  4653                           
  4654                           	psect	text8
  4655  0013                     __ptext8:	
  4656 ;; *************** function _SYSTEM_Initialize *****************
  4657 ;; Defined at:
  4658 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    1
  4679 ;; This function calls:
  4680 ;;		_OSCILLATOR_Initialize
  4681 ;;		_PIN_MANAGER_Initialize
  4682 ;;		_SPI_Initialize
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           
  4689                           ;psect for function _SYSTEM_Initialize
  4690  0013                     _SYSTEM_Initialize:	
  4691                           
  4692                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4696  0013  3180  201C  3180   	fcall	_PIN_MANAGER_Initialize
  4697                           
  4698                           ;mcc.c: 53: OSCILLATOR_Initialize();
  4699  0016  3180  2004  3180   	fcall	_OSCILLATOR_Initialize
  4700                           
  4701                           ;mcc.c: 54: SPI_Initialize();
  4702  0019  318F  27F8         	fcall	_SPI_Initialize
  4703  001B  0008               	return
  4704  001C                     __end_of_SYSTEM_Initialize:	
  4705                           
  4706                           	psect	text9
  4707  0FF8                     __ptext9:	
  4708 ;; *************** function _SPI_Initialize *****************
  4709 ;; Defined at:
  4710 ;;		line 65 in file "mcc_generated_files/spi.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;Total ram usage:        0 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_SYSTEM_Initialize
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           
  4738                           ;psect for function _SPI_Initialize
  4739  0FF8                     _SPI_Initialize:	
  4740                           
  4741                           ;spi.c: 70: SSP1STAT = 0x40;
  4742                           
  4743                           ;incstack = 0
  4744                           ; Regs used in _SPI_Initialize: [wreg]
  4745  0FF8  3040               	movlw	64
  4746  0FF9  0024               	movlb	4	; select bank4
  4747  0FFA  0094               	movwf	20	;volatile
  4748                           
  4749                           ;spi.c: 73: SSP1CON1 = 0x2A;
  4750  0FFB  302A               	movlw	42
  4751  0FFC  0095               	movwf	21	;volatile
  4752                           
  4753                           ;spi.c: 76: SSP1ADD = 0x13;
  4754  0FFD  3013               	movlw	19
  4755  0FFE  0092               	movwf	18	;volatile
  4756  0FFF  0008               	return
  4757  1000                     __end_of_SPI_Initialize:	
  4758                           
  4759                           	psect	text10
  4760  001C                     __ptext10:	
  4761 ;; *************** function _PIN_MANAGER_Initialize *****************
  4762 ;; Defined at:
  4763 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_SYSTEM_Initialize
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _PIN_MANAGER_Initialize
  4792  001C                     _PIN_MANAGER_Initialize:	
  4793                           
  4794                           ;pin_manager.c: 62: LATA = 0x00;
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4798  001C  0022               	movlb	2	; select bank2
  4799  001D  018C               	clrf	12	;volatile
  4800                           
  4801                           ;pin_manager.c: 63: LATB = 0x00;
  4802  001E  018D               	clrf	13	;volatile
  4803                           
  4804                           ;pin_manager.c: 64: LATC = 0x04;
  4805  001F  3004               	movlw	4
  4806  0020  008E               	movwf	14	;volatile
  4807                           
  4808                           ;pin_manager.c: 69: TRISA = 0x21;
  4809  0021  3021               	movlw	33
  4810  0022  0021               	movlb	1	; select bank1
  4811  0023  008C               	movwf	12	;volatile
  4812                           
  4813                           ;pin_manager.c: 70: TRISB = 0x90;
  4814  0024  3090               	movlw	144
  4815  0025  008D               	movwf	13	;volatile
  4816                           
  4817                           ;pin_manager.c: 71: TRISC = 0xFB;
  4818  0026  30FB               	movlw	251
  4819  0027  008E               	movwf	14	;volatile
  4820                           
  4821                           ;pin_manager.c: 76: ANSELC = 0xCB;
  4822  0028  30CB               	movlw	203
  4823  0029  0023               	movlb	3	; select bank3
  4824  002A  008E               	movwf	14	;volatile
  4825                           
  4826                           ;pin_manager.c: 77: ANSELB = 0x80;
  4827  002B  3080               	movlw	128
  4828  002C  008D               	movwf	13	;volatile
  4829                           
  4830                           ;pin_manager.c: 78: ANSELA = 0x13;
  4831  002D  3013               	movlw	19
  4832  002E  008C               	movwf	12	;volatile
  4833                           
  4834                           ;pin_manager.c: 83: WPUB = 0x00;
  4835  002F  0024               	movlb	4	; select bank4
  4836  0030  018D               	clrf	13	;volatile
  4837                           
  4838                           ;pin_manager.c: 84: WPUA = 0x00;
  4839  0031  018C               	clrf	12	;volatile
  4840                           
  4841                           ;pin_manager.c: 85: WPUC = 0x00;
  4842  0032  018E               	clrf	14	;volatile
  4843                           
  4844                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 0;
  4845  0033  0021               	movlb	1	; select bank1
  4846  0034  1395               	bcf	21,7	;volatile
  4847                           
  4848                           ;pin_manager.c: 91: ODCONA = 0x00;
  4849  0035  0025               	movlb	5	; select bank5
  4850  0036  018C               	clrf	12	;volatile
  4851                           
  4852                           ;pin_manager.c: 92: ODCONB = 0x00;
  4853  0037  018D               	clrf	13	;volatile
  4854                           
  4855                           ;pin_manager.c: 93: ODCONC = 0x00;
  4856  0038  018E               	clrf	14	;volatile
  4857                           
  4858                           ;pin_manager.c: 102: SSPDATPPS = 0x0C;
  4859  0039  300C               	movlw	12
  4860  003A  003C               	movlb	28	; select bank28
  4861  003B  00A1               	movwf	33	;volatile
  4862                           
  4863                           ;pin_manager.c: 103: RB6PPS = 0x10;
  4864  003C  3010               	movlw	16
  4865  003D  003D               	movlb	29	; select bank29
  4866  003E  009E               	movwf	30	;volatile
  4867                           
  4868                           ;pin_manager.c: 104: RB5PPS = 0x11;
  4869  003F  3011               	movlw	17
  4870  0040  009D               	movwf	29	;volatile
  4871                           
  4872                           ;pin_manager.c: 105: SSPCLKPPS = 0x0E;
  4873  0041  300E               	movlw	14
  4874  0042  003C               	movlb	28	; select bank28
  4875  0043  00A0               	movwf	32	;volatile
  4876  0044  0008               	return
  4877  0045                     __end_of_PIN_MANAGER_Initialize:	
  4878                           
  4879                           	psect	text11
  4880  0004                     __ptext11:	
  4881 ;; *************** function _OSCILLATOR_Initialize *****************
  4882 ;; Defined at:
  4883 ;;		line 57 in file "mcc_generated_files/mcc.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_SYSTEM_Initialize
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _OSCILLATOR_Initialize
  4912  0004                     _OSCILLATOR_Initialize:	
  4913                           
  4914                           ;mcc.c: 60: OSCCON = 0x70;
  4915                           
  4916                           ;incstack = 0
  4917                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4918  0004  3070               	movlw	112
  4919  0005  0021               	movlb	1	; select bank1
  4920  0006  0099               	movwf	25	;volatile
  4921                           
  4922                           ;mcc.c: 62: OSCTUNE = 0x00;
  4923  0007  0198               	clrf	24	;volatile
  4924                           
  4925                           ;mcc.c: 64: BORCON = 0x00;
  4926  0008  0022               	movlb	2	; select bank2
  4927  0009  0196               	clrf	22	;volatile
  4928  000A  0008               	return
  4929  000B                     __end_of_OSCILLATOR_Initialize:	
  4930  007E                     btemp	set	126	;btemp
  4931  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     62      79
    BANK1            80      0      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initSD
    _file->___lmul
    _fat->___lmul
    _Command->___lmul

Critical Paths under _main in BANK0

    _main->_fat
    _readSD->_Command
    _initSD->_Command
    _file->_Command
    _fat->_Command

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   10312
                                             48 BANK0     14    14      0
                  _SYSTEM_Initialize
                             ___lmul
                                _fat
                               _file
                             _initSD
                             _readSD
 ---------------------------------------------------------------------------------
 (1) _readSD                                               9     9      0    1503
                                             12 BANK0      9     9      0
                            _Command
                                _SPI
 ---------------------------------------------------------------------------------
 (1) _initSD                                               6     6      0    1739
                                             12 COMMON     1     1      0
                                             12 BANK0      5     5      0
                            _Command
                                _SPI
 ---------------------------------------------------------------------------------
 (1) _file                                                31    28      3    3016
                                             12 BANK0     31    28      3
                            _Command
                                _SPI
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _fat                                                 36    36      0    3257
                                             12 BANK0     36    36      0
                            _Command
                                _SPI
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     728
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Command                                             12     7      5    1411
                                              0 BANK0     12     7      5
                                _SPI
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI                                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   ___lmul
   _fat
     _Command
       _SPI
       ___lmul (ARG)
     _SPI
     ___lmul
   _file
     _Command
       _SPI
       ___lmul (ARG)
     _SPI
     ___lmul
   _initSD
     _Command
       _SPI
       ___lmul (ARG)
     _SPI
   _readSD
     _Command
       _SPI
       ___lmul (ARG)
     _SPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      18       7       30.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      74      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      74      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 15:59:20 2018

                 _SPI_Initialize 0FF8                      __CFG_CP$OFF 0000                               _BF 10A0  
                    __CFG_LVP$ON 0000                              l262 000F                              l197 01BA  
                            l278 021A                              l298 02AA                              u905 008A  
                            u915 009E                              u925 00B2                              _SPI 000B  
                            u975 0058                              u985 005F                              _fat 04D6  
                            _loc 00B4                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_IESO$ON 0000                             ?_SPI 0070                     __CFG_ZCD$OFF 0000  
                     _DataSector 005E                             l1210 0345                             l1300 0517  
                           l1230 03B8                             l1222 038A                             l1214 035C  
                           l1206 0334                             l1312 0547                             l1304 0527  
                           l1240 03EA                             l1162 00CD                             l1314 054B  
                           l1234 03CF                             l1226 03A1                             l1218 0373  
                           l1410 020D                             l1172 00E0                             l1340 05FF  
                           l1332 05E3                             l1324 05D2                             l1308 0537  
                           l1244 03F6                             l1182 0057                             l1318 0557  
                           l1238 03E6                             l1422 0229                             l1360 0645  
                           l1352 0629                             l1344 060D                             l1336 05F1  
                           l1440 02AE                             l1280 01E6                             l1256 01A9  
                           l1178 004D                             l1426 0240                             l1418 0222  
                           l1380 068B                             l1372 066F                             l1364 0653  
                           l1356 0637                             l1348 061B                             l1428 0248  
                           l1276 01DD                             l1390 06AB                             l1198 0323  
                           l1278 0186                             ?_fat 0070                             l1384 0699  
                           l1376 067D                             l1368 0661                             l1296 0507  
                           l1288 04F6                             l1394 06B7                             l1458 00F4  
                           l1388 06A7                             _T0IF 005A                             u1025 033A  
                           u1115 040B                             u1035 0351                             u1125 0417  
                           u1045 0368                             u1135 0423                             u1055 037F  
                           u1215 01CB                             u1145 0458                             u1065 0396  
                           u1155 0464                             u1075 03AD                             u1325 056A  
                           u1165 0470                             u1085 03C4                             _LATA 010C  
                           _LATB 010D                             u1335 0576                             u1175 04B8  
                           u1095 03DB                             _LATC 010E                             u1345 0582  
                           u1525 06E0                             u1535 06EC                             u1545 06F8  
                           u1555 072D                             u1565 0739                             u1575 0745  
                           u1685 00F9                             _TMR0 0015                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                             _Fats 006A  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             _card 006C  
                           _file 02E7                             _main 00E2                             fat@i 004E  
                           fat@r 003C                             _sdhc 006B                             fsr0h 0005  
                           indf0 0000                             fsr0l 0004                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0002           __end_of_SPI_Initialize 1000  
                  __CFG_MCLRE$ON 0000                  __end_of_Command 00E2                            ??_SPI 0070  
                          ??_fat 002C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 000B  
                          ?_file 002C                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                     _BootSector 0062                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E              ___lmul@multiplicand 0074                            file@i 0049  
                          file@r 003F                            status 0003                            wtemp0 007E  
                ?_SPI_Initialize 0070                  __initialization 07EE                     __end_of_file 04D6  
                   __end_of_main 0165                   __CFG_LPBOR$OFF 0000                      _FileCluster 00A4  
                         ??_file 002F                           ??_main 0050                   __CFG_PLLEN$OFF 0000  
                         _CCPR1L 0291                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _BORCON 0116                           _RB5PPS 0E9D  
                         _RB6PPS 0E9E                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                           _OSCCON 0099                        ??_Command 0025  
                 __CFG_PWRTE$OFF 0000                           ___lmul 0045                   __CFG_STVREN$ON 0000  
                         fat@rs1 0040                           fat@rs2 0041                           _initSD 0205  
                         _readSD 0165                           fat@rdc 004A                           fat@pfs 0042  
                         fat@spf 0046                           file@fc 0041                           file@fs 0045  
                         main@fn 005C                           main@sn 005D                   _BytesPerSector 0068  
              _SYSTEM_Initialize 0013          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 001C                       __pbssBANK0 005E                       __pbssBANK1 00A0  
                _ReservedSectors 0066                       __pmaintext 00E2                          ?___lmul 0070  
                __CFG_PPS1WAY$ON 0000                          ?_initSD 0070                          ?_readSD 0070  
                 ___lmul@product 0078                  __CFG_WDTCCS$SWC 0000                          _OSCTUNE 0098  
                        _SSP1ADD 0212                          _SSP1BUF 0211                 ??_SPI_Initialize 0070  
                        _Command 0074                          _RootDir 00B0                  __size_of___lmul 002F  
                __size_of_initSD 00E2                  __size_of_readSD 00A0                          __ptext1 0165  
                        __ptext2 0205                          __ptext3 02E7                          __ptext4 04D6  
                        __ptext5 0045                          __ptext6 0074                          __ptext7 000B  
                        __ptext8 0013                          __ptext9 0FF8                          fat@bps1 003E  
                        fat@bps2 003F                     __size_of_SPI 0008            _OSCILLATOR_Initialize 0004  
                   __size_of_fat 0318         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0009  
                        clrloop0 0FF3             end_of_initialization 07FD                          initSD@i 0030  
                        initSD@r 002C                          readSD@i 0033                          readSD@r 0030  
                     file@offset 002C                    _SectorsPerFat 00AC                        _SSPDATPPS 0E21  
                      _SSPCLKPPS 0E20                 __CFG_FOSC$INTOSC 0000                   _RootDirCluster 00A8  
                 __end_of___lmul 0074                   __end_of_initSD 02E7                   __end_of_readSD 0205  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07EE                      __end_of_SPI 0013  
__size_of_PIN_MANAGER_Initialize 0029                      __end_of_fat 07EE                       readSD@data 0032  
                       ??___lmul 0078                         ??_initSD 007C                         ??_readSD 002C  
                      ___latbits 0002                    __pcstackBANK0 0020                         ?_Command 0020  
         _PIN_MANAGER_Initialize 001C                         _LATAbits 010C                         _LATCbits 010E  
                      clear_ram0 0FF2             __CFG_WDTCPS$WDTCPS1F 0000                         _SSP1CON1 0215  
                       _SSP1STAT 0214                         Command@i 002B                       SPI@spidata 0070  
                       _FileSize 00A0                ___lmul@multiplier 0070                 __size_of_Command 006E  
                  Command@frame1 0029                    Command@frame2 0024          __size_of_SPI_Initialize 0008  
        ??_OSCILLATOR_Initialize 0070                         _main$610 0058                         __ptext10 001C  
                       __ptext11 0004                     _SSP1CON1bits 0215                _SectorsPerCluster 006E  
                  __size_of_file 01EF                    __size_of_main 0083             __CFG_WDTCWS$WDTCWSSW 0000  
                       file@sect 002E                     _SSP1STATbits 0214          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      Command@adrs 0020                       Command@res 002A  
 __end_of_PIN_MANAGER_Initialize 0045  
