

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul  4 11:24:28 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1509 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0391                     	;# 
   169  0392                     	;# 
   170  0393                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  0498                     	;# 
   175  0498                     	;# 
   176  0499                     	;# 
   177  049A                     	;# 
   178  049B                     	;# 
   179  049B                     	;# 
   180  049C                     	;# 
   181  049D                     	;# 
   182  049E                     	;# 
   183  049F                     	;# 
   184  0611                     	;# 
   185  0612                     	;# 
   186  0613                     	;# 
   187  0613                     	;# 
   188  0614                     	;# 
   189  0615                     	;# 
   190  0616                     	;# 
   191  0616                     	;# 
   192  0617                     	;# 
   193  0618                     	;# 
   194  0619                     	;# 
   195  0619                     	;# 
   196  061A                     	;# 
   197  061B                     	;# 
   198  061C                     	;# 
   199  061C                     	;# 
   200  0691                     	;# 
   201  0692                     	;# 
   202  0693                     	;# 
   203  0694                     	;# 
   204  0695                     	;# 
   205  0F0F                     	;# 
   206  0F10                     	;# 
   207  0F11                     	;# 
   208  0F12                     	;# 
   209  0F13                     	;# 
   210  0F14                     	;# 
   211  0F15                     	;# 
   212  0F16                     	;# 
   213  0F17                     	;# 
   214  0F18                     	;# 
   215  0F19                     	;# 
   216  0F1A                     	;# 
   217  0F1B                     	;# 
   218  0F1C                     	;# 
   219  0F1D                     	;# 
   220  0F1E                     	;# 
   221  0F1F                     	;# 
   222  0F20                     	;# 
   223  0F21                     	;# 
   224  0F22                     	;# 
   225  0F23                     	;# 
   226  0F24                     	;# 
   227  0F25                     	;# 
   228  0F26                     	;# 
   229  0F27                     	;# 
   230  0F28                     	;# 
   231  0F29                     	;# 
   232  0F2A                     	;# 
   233  0F2B                     	;# 
   234  0F2C                     	;# 
   235  0F2D                     	;# 
   236  0F2E                     	;# 
   237  0F2F                     	;# 
   238  0F8C                     	;# 
   239  0F8D                     	;# 
   240  0F91                     	;# 
   241  0F95                     	;# 
   242  0F96                     	;# 
   243  0F97                     	;# 
   244  0F9C                     	;# 
   245  0F9D                     	;# 
   246  0F9E                     	;# 
   247  0FE3                     	;# 
   248  0FE4                     	;# 
   249  0FE5                     	;# 
   250  0FE6                     	;# 
   251  0FE7                     	;# 
   252  0FE8                     	;# 
   253  0FE9                     	;# 
   254  0FEA                     	;# 
   255  0FEB                     	;# 
   256  0FED                     	;# 
   257  0FEE                     	;# 
   258  0FEF                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  0111                     	;# 
   307  0112                     	;# 
   308  0113                     	;# 
   309  0114                     	;# 
   310  0115                     	;# 
   311  0116                     	;# 
   312  0117                     	;# 
   313  0118                     	;# 
   314  0119                     	;# 
   315  011D                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  018E                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0194                     	;# 
   325  0195                     	;# 
   326  0196                     	;# 
   327  0197                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019C                     	;# 
   333  019D                     	;# 
   334  019E                     	;# 
   335  019F                     	;# 
   336  020C                     	;# 
   337  020D                     	;# 
   338  0211                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0212                     	;# 
   342  0213                     	;# 
   343  0213                     	;# 
   344  0214                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0216                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0217                     	;# 
   353  0391                     	;# 
   354  0392                     	;# 
   355  0393                     	;# 
   356  0394                     	;# 
   357  0395                     	;# 
   358  0396                     	;# 
   359  0498                     	;# 
   360  0498                     	;# 
   361  0499                     	;# 
   362  049A                     	;# 
   363  049B                     	;# 
   364  049B                     	;# 
   365  049C                     	;# 
   366  049D                     	;# 
   367  049E                     	;# 
   368  049F                     	;# 
   369  0611                     	;# 
   370  0612                     	;# 
   371  0613                     	;# 
   372  0613                     	;# 
   373  0614                     	;# 
   374  0615                     	;# 
   375  0616                     	;# 
   376  0616                     	;# 
   377  0617                     	;# 
   378  0618                     	;# 
   379  0619                     	;# 
   380  0619                     	;# 
   381  061A                     	;# 
   382  061B                     	;# 
   383  061C                     	;# 
   384  061C                     	;# 
   385  0691                     	;# 
   386  0692                     	;# 
   387  0693                     	;# 
   388  0694                     	;# 
   389  0695                     	;# 
   390  0F0F                     	;# 
   391  0F10                     	;# 
   392  0F11                     	;# 
   393  0F12                     	;# 
   394  0F13                     	;# 
   395  0F14                     	;# 
   396  0F15                     	;# 
   397  0F16                     	;# 
   398  0F17                     	;# 
   399  0F18                     	;# 
   400  0F19                     	;# 
   401  0F1A                     	;# 
   402  0F1B                     	;# 
   403  0F1C                     	;# 
   404  0F1D                     	;# 
   405  0F1E                     	;# 
   406  0F1F                     	;# 
   407  0F20                     	;# 
   408  0F21                     	;# 
   409  0F22                     	;# 
   410  0F23                     	;# 
   411  0F24                     	;# 
   412  0F25                     	;# 
   413  0F26                     	;# 
   414  0F27                     	;# 
   415  0F28                     	;# 
   416  0F29                     	;# 
   417  0F2A                     	;# 
   418  0F2B                     	;# 
   419  0F2C                     	;# 
   420  0F2D                     	;# 
   421  0F2E                     	;# 
   422  0F2F                     	;# 
   423  0F8C                     	;# 
   424  0F8D                     	;# 
   425  0F91                     	;# 
   426  0F95                     	;# 
   427  0F96                     	;# 
   428  0F97                     	;# 
   429  0F9C                     	;# 
   430  0F9D                     	;# 
   431  0F9E                     	;# 
   432  0FE3                     	;# 
   433  0FE4                     	;# 
   434  0FE5                     	;# 
   435  0FE6                     	;# 
   436  0FE7                     	;# 
   437  0FE8                     	;# 
   438  0FE9                     	;# 
   439  0FEA                     	;# 
   440  0FEB                     	;# 
   441  0FED                     	;# 
   442  0FEE                     	;# 
   443  0FEF                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  0011                     	;# 
   460  0012                     	;# 
   461  0013                     	;# 
   462  0015                     	;# 
   463  0016                     	;# 
   464  0016                     	;# 
   465  0017                     	;# 
   466  0018                     	;# 
   467  0019                     	;# 
   468  001A                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  008C                     	;# 
   472  008D                     	;# 
   473  008E                     	;# 
   474  0091                     	;# 
   475  0092                     	;# 
   476  0093                     	;# 
   477  0095                     	;# 
   478  0096                     	;# 
   479  0097                     	;# 
   480  0099                     	;# 
   481  009A                     	;# 
   482  009B                     	;# 
   483  009B                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  0111                     	;# 
   492  0112                     	;# 
   493  0113                     	;# 
   494  0114                     	;# 
   495  0115                     	;# 
   496  0116                     	;# 
   497  0117                     	;# 
   498  0118                     	;# 
   499  0119                     	;# 
   500  011D                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  018E                     	;# 
   504  0191                     	;# 
   505  0191                     	;# 
   506  0192                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0194                     	;# 
   510  0195                     	;# 
   511  0196                     	;# 
   512  0197                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019C                     	;# 
   518  019D                     	;# 
   519  019E                     	;# 
   520  019F                     	;# 
   521  020C                     	;# 
   522  020D                     	;# 
   523  0211                     	;# 
   524  0211                     	;# 
   525  0212                     	;# 
   526  0212                     	;# 
   527  0213                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0214                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0216                     	;# 
   535  0216                     	;# 
   536  0217                     	;# 
   537  0217                     	;# 
   538  0391                     	;# 
   539  0392                     	;# 
   540  0393                     	;# 
   541  0394                     	;# 
   542  0395                     	;# 
   543  0396                     	;# 
   544  0498                     	;# 
   545  0498                     	;# 
   546  0499                     	;# 
   547  049A                     	;# 
   548  049B                     	;# 
   549  049B                     	;# 
   550  049C                     	;# 
   551  049D                     	;# 
   552  049E                     	;# 
   553  049F                     	;# 
   554  0611                     	;# 
   555  0612                     	;# 
   556  0613                     	;# 
   557  0613                     	;# 
   558  0614                     	;# 
   559  0615                     	;# 
   560  0616                     	;# 
   561  0616                     	;# 
   562  0617                     	;# 
   563  0618                     	;# 
   564  0619                     	;# 
   565  0619                     	;# 
   566  061A                     	;# 
   567  061B                     	;# 
   568  061C                     	;# 
   569  061C                     	;# 
   570  0691                     	;# 
   571  0692                     	;# 
   572  0693                     	;# 
   573  0694                     	;# 
   574  0695                     	;# 
   575  0F0F                     	;# 
   576  0F10                     	;# 
   577  0F11                     	;# 
   578  0F12                     	;# 
   579  0F13                     	;# 
   580  0F14                     	;# 
   581  0F15                     	;# 
   582  0F16                     	;# 
   583  0F17                     	;# 
   584  0F18                     	;# 
   585  0F19                     	;# 
   586  0F1A                     	;# 
   587  0F1B                     	;# 
   588  0F1C                     	;# 
   589  0F1D                     	;# 
   590  0F1E                     	;# 
   591  0F1F                     	;# 
   592  0F20                     	;# 
   593  0F21                     	;# 
   594  0F22                     	;# 
   595  0F23                     	;# 
   596  0F24                     	;# 
   597  0F25                     	;# 
   598  0F26                     	;# 
   599  0F27                     	;# 
   600  0F28                     	;# 
   601  0F29                     	;# 
   602  0F2A                     	;# 
   603  0F2B                     	;# 
   604  0F2C                     	;# 
   605  0F2D                     	;# 
   606  0F2E                     	;# 
   607  0F2F                     	;# 
   608  0F8C                     	;# 
   609  0F8D                     	;# 
   610  0F91                     	;# 
   611  0F95                     	;# 
   612  0F96                     	;# 
   613  0F97                     	;# 
   614  0F9C                     	;# 
   615  0F9D                     	;# 
   616  0F9E                     	;# 
   617  0FE3                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0011                     	;# 
   645  0012                     	;# 
   646  0013                     	;# 
   647  0015                     	;# 
   648  0016                     	;# 
   649  0016                     	;# 
   650  0017                     	;# 
   651  0018                     	;# 
   652  0019                     	;# 
   653  001A                     	;# 
   654  001B                     	;# 
   655  001C                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  0091                     	;# 
   660  0092                     	;# 
   661  0093                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0099                     	;# 
   666  009A                     	;# 
   667  009B                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  009F                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  0111                     	;# 
   677  0112                     	;# 
   678  0113                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0117                     	;# 
   683  0118                     	;# 
   684  0119                     	;# 
   685  011D                     	;# 
   686  018C                     	;# 
   687  018D                     	;# 
   688  018E                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0194                     	;# 
   695  0195                     	;# 
   696  0196                     	;# 
   697  0197                     	;# 
   698  0199                     	;# 
   699  019A                     	;# 
   700  019B                     	;# 
   701  019B                     	;# 
   702  019C                     	;# 
   703  019D                     	;# 
   704  019E                     	;# 
   705  019F                     	;# 
   706  020C                     	;# 
   707  020D                     	;# 
   708  0211                     	;# 
   709  0211                     	;# 
   710  0212                     	;# 
   711  0212                     	;# 
   712  0213                     	;# 
   713  0213                     	;# 
   714  0214                     	;# 
   715  0214                     	;# 
   716  0215                     	;# 
   717  0215                     	;# 
   718  0215                     	;# 
   719  0216                     	;# 
   720  0216                     	;# 
   721  0217                     	;# 
   722  0217                     	;# 
   723  0391                     	;# 
   724  0392                     	;# 
   725  0393                     	;# 
   726  0394                     	;# 
   727  0395                     	;# 
   728  0396                     	;# 
   729  0498                     	;# 
   730  0498                     	;# 
   731  0499                     	;# 
   732  049A                     	;# 
   733  049B                     	;# 
   734  049B                     	;# 
   735  049C                     	;# 
   736  049D                     	;# 
   737  049E                     	;# 
   738  049F                     	;# 
   739  0611                     	;# 
   740  0612                     	;# 
   741  0613                     	;# 
   742  0613                     	;# 
   743  0614                     	;# 
   744  0615                     	;# 
   745  0616                     	;# 
   746  0616                     	;# 
   747  0617                     	;# 
   748  0618                     	;# 
   749  0619                     	;# 
   750  0619                     	;# 
   751  061A                     	;# 
   752  061B                     	;# 
   753  061C                     	;# 
   754  061C                     	;# 
   755  0691                     	;# 
   756  0692                     	;# 
   757  0693                     	;# 
   758  0694                     	;# 
   759  0695                     	;# 
   760  0F0F                     	;# 
   761  0F10                     	;# 
   762  0F11                     	;# 
   763  0F12                     	;# 
   764  0F13                     	;# 
   765  0F14                     	;# 
   766  0F15                     	;# 
   767  0F16                     	;# 
   768  0F17                     	;# 
   769  0F18                     	;# 
   770  0F19                     	;# 
   771  0F1A                     	;# 
   772  0F1B                     	;# 
   773  0F1C                     	;# 
   774  0F1D                     	;# 
   775  0F1E                     	;# 
   776  0F1F                     	;# 
   777  0F20                     	;# 
   778  0F21                     	;# 
   779  0F22                     	;# 
   780  0F23                     	;# 
   781  0F24                     	;# 
   782  0F25                     	;# 
   783  0F26                     	;# 
   784  0F27                     	;# 
   785  0F28                     	;# 
   786  0F29                     	;# 
   787  0F2A                     	;# 
   788  0F2B                     	;# 
   789  0F2C                     	;# 
   790  0F2D                     	;# 
   791  0F2E                     	;# 
   792  0F2F                     	;# 
   793  0F8C                     	;# 
   794  0F8D                     	;# 
   795  0F91                     	;# 
   796  0F95                     	;# 
   797  0F96                     	;# 
   798  0F97                     	;# 
   799  0F9C                     	;# 
   800  0F9D                     	;# 
   801  0F9E                     	;# 
   802  0FE3                     	;# 
   803  0FE4                     	;# 
   804  0FE5                     	;# 
   805  0FE6                     	;# 
   806  0FE7                     	;# 
   807  0FE8                     	;# 
   808  0FE9                     	;# 
   809  0FEA                     	;# 
   810  0FEB                     	;# 
   811  0FED                     	;# 
   812  0FEE                     	;# 
   813  0FEF                     	;# 
   814  0000                     	;# 
   815  0001                     	;# 
   816  0002                     	;# 
   817  0003                     	;# 
   818  0004                     	;# 
   819  0005                     	;# 
   820  0006                     	;# 
   821  0007                     	;# 
   822  0008                     	;# 
   823  0009                     	;# 
   824  000A                     	;# 
   825  000B                     	;# 
   826  000C                     	;# 
   827  000D                     	;# 
   828  000E                     	;# 
   829  0011                     	;# 
   830  0012                     	;# 
   831  0013                     	;# 
   832  0015                     	;# 
   833  0016                     	;# 
   834  0016                     	;# 
   835  0017                     	;# 
   836  0018                     	;# 
   837  0019                     	;# 
   838  001A                     	;# 
   839  001B                     	;# 
   840  001C                     	;# 
   841  008C                     	;# 
   842  008D                     	;# 
   843  008E                     	;# 
   844  0091                     	;# 
   845  0092                     	;# 
   846  0093                     	;# 
   847  0095                     	;# 
   848  0096                     	;# 
   849  0097                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  0111                     	;# 
   862  0112                     	;# 
   863  0113                     	;# 
   864  0114                     	;# 
   865  0115                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  0118                     	;# 
   869  0119                     	;# 
   870  011D                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  0191                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0193                     	;# 
   878  0193                     	;# 
   879  0194                     	;# 
   880  0195                     	;# 
   881  0196                     	;# 
   882  0197                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019E                     	;# 
   890  019F                     	;# 
   891  020C                     	;# 
   892  020D                     	;# 
   893  0211                     	;# 
   894  0211                     	;# 
   895  0212                     	;# 
   896  0212                     	;# 
   897  0213                     	;# 
   898  0213                     	;# 
   899  0214                     	;# 
   900  0214                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  0391                     	;# 
   909  0392                     	;# 
   910  0393                     	;# 
   911  0394                     	;# 
   912  0395                     	;# 
   913  0396                     	;# 
   914  0498                     	;# 
   915  0498                     	;# 
   916  0499                     	;# 
   917  049A                     	;# 
   918  049B                     	;# 
   919  049B                     	;# 
   920  049C                     	;# 
   921  049D                     	;# 
   922  049E                     	;# 
   923  049F                     	;# 
   924  0611                     	;# 
   925  0612                     	;# 
   926  0613                     	;# 
   927  0613                     	;# 
   928  0614                     	;# 
   929  0615                     	;# 
   930  0616                     	;# 
   931  0616                     	;# 
   932  0617                     	;# 
   933  0618                     	;# 
   934  0619                     	;# 
   935  0619                     	;# 
   936  061A                     	;# 
   937  061B                     	;# 
   938  061C                     	;# 
   939  061C                     	;# 
   940  0691                     	;# 
   941  0692                     	;# 
   942  0693                     	;# 
   943  0694                     	;# 
   944  0695                     	;# 
   945  0F0F                     	;# 
   946  0F10                     	;# 
   947  0F11                     	;# 
   948  0F12                     	;# 
   949  0F13                     	;# 
   950  0F14                     	;# 
   951  0F15                     	;# 
   952  0F16                     	;# 
   953  0F17                     	;# 
   954  0F18                     	;# 
   955  0F19                     	;# 
   956  0F1A                     	;# 
   957  0F1B                     	;# 
   958  0F1C                     	;# 
   959  0F1D                     	;# 
   960  0F1E                     	;# 
   961  0F1F                     	;# 
   962  0F20                     	;# 
   963  0F21                     	;# 
   964  0F22                     	;# 
   965  0F23                     	;# 
   966  0F24                     	;# 
   967  0F25                     	;# 
   968  0F26                     	;# 
   969  0F27                     	;# 
   970  0F28                     	;# 
   971  0F29                     	;# 
   972  0F2A                     	;# 
   973  0F2B                     	;# 
   974  0F2C                     	;# 
   975  0F2D                     	;# 
   976  0F2E                     	;# 
   977  0F2F                     	;# 
   978  0F8C                     	;# 
   979  0F8D                     	;# 
   980  0F91                     	;# 
   981  0F95                     	;# 
   982  0F96                     	;# 
   983  0F97                     	;# 
   984  0F9C                     	;# 
   985  0F9D                     	;# 
   986  0F9E                     	;# 
   987  0FE3                     	;# 
   988  0FE4                     	;# 
   989  0FE5                     	;# 
   990  0FE6                     	;# 
   991  0FE7                     	;# 
   992  0FE8                     	;# 
   993  0FE9                     	;# 
   994  0FEA                     	;# 
   995  0FEB                     	;# 
   996  0FED                     	;# 
   997  0FEE                     	;# 
   998  0FEF                     	;# 
   999  0000                     	;# 
  1000  0001                     	;# 
  1001  0002                     	;# 
  1002  0003                     	;# 
  1003  0004                     	;# 
  1004  0005                     	;# 
  1005  0006                     	;# 
  1006  0007                     	;# 
  1007  0008                     	;# 
  1008  0009                     	;# 
  1009  000A                     	;# 
  1010  000B                     	;# 
  1011  000C                     	;# 
  1012  000D                     	;# 
  1013  000E                     	;# 
  1014  0011                     	;# 
  1015  0012                     	;# 
  1016  0013                     	;# 
  1017  0015                     	;# 
  1018  0016                     	;# 
  1019  0016                     	;# 
  1020  0017                     	;# 
  1021  0018                     	;# 
  1022  0019                     	;# 
  1023  001A                     	;# 
  1024  001B                     	;# 
  1025  001C                     	;# 
  1026  008C                     	;# 
  1027  008D                     	;# 
  1028  008E                     	;# 
  1029  0091                     	;# 
  1030  0092                     	;# 
  1031  0093                     	;# 
  1032  0095                     	;# 
  1033  0096                     	;# 
  1034  0097                     	;# 
  1035  0099                     	;# 
  1036  009A                     	;# 
  1037  009B                     	;# 
  1038  009B                     	;# 
  1039  009C                     	;# 
  1040  009D                     	;# 
  1041  009E                     	;# 
  1042  009F                     	;# 
  1043  010C                     	;# 
  1044  010D                     	;# 
  1045  010E                     	;# 
  1046  0111                     	;# 
  1047  0112                     	;# 
  1048  0113                     	;# 
  1049  0114                     	;# 
  1050  0115                     	;# 
  1051  0116                     	;# 
  1052  0117                     	;# 
  1053  0118                     	;# 
  1054  0119                     	;# 
  1055  011D                     	;# 
  1056  018C                     	;# 
  1057  018D                     	;# 
  1058  018E                     	;# 
  1059  0191                     	;# 
  1060  0191                     	;# 
  1061  0192                     	;# 
  1062  0193                     	;# 
  1063  0193                     	;# 
  1064  0194                     	;# 
  1065  0195                     	;# 
  1066  0196                     	;# 
  1067  0197                     	;# 
  1068  0199                     	;# 
  1069  019A                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019C                     	;# 
  1073  019D                     	;# 
  1074  019E                     	;# 
  1075  019F                     	;# 
  1076  020C                     	;# 
  1077  020D                     	;# 
  1078  0211                     	;# 
  1079  0211                     	;# 
  1080  0212                     	;# 
  1081  0212                     	;# 
  1082  0213                     	;# 
  1083  0213                     	;# 
  1084  0214                     	;# 
  1085  0214                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0215                     	;# 
  1089  0216                     	;# 
  1090  0216                     	;# 
  1091  0217                     	;# 
  1092  0217                     	;# 
  1093  0391                     	;# 
  1094  0392                     	;# 
  1095  0393                     	;# 
  1096  0394                     	;# 
  1097  0395                     	;# 
  1098  0396                     	;# 
  1099  0498                     	;# 
  1100  0498                     	;# 
  1101  0499                     	;# 
  1102  049A                     	;# 
  1103  049B                     	;# 
  1104  049B                     	;# 
  1105  049C                     	;# 
  1106  049D                     	;# 
  1107  049E                     	;# 
  1108  049F                     	;# 
  1109  0611                     	;# 
  1110  0612                     	;# 
  1111  0613                     	;# 
  1112  0613                     	;# 
  1113  0614                     	;# 
  1114  0615                     	;# 
  1115  0616                     	;# 
  1116  0616                     	;# 
  1117  0617                     	;# 
  1118  0618                     	;# 
  1119  0619                     	;# 
  1120  0619                     	;# 
  1121  061A                     	;# 
  1122  061B                     	;# 
  1123  061C                     	;# 
  1124  061C                     	;# 
  1125  0691                     	;# 
  1126  0692                     	;# 
  1127  0693                     	;# 
  1128  0694                     	;# 
  1129  0695                     	;# 
  1130  0F0F                     	;# 
  1131  0F10                     	;# 
  1132  0F11                     	;# 
  1133  0F12                     	;# 
  1134  0F13                     	;# 
  1135  0F14                     	;# 
  1136  0F15                     	;# 
  1137  0F16                     	;# 
  1138  0F17                     	;# 
  1139  0F18                     	;# 
  1140  0F19                     	;# 
  1141  0F1A                     	;# 
  1142  0F1B                     	;# 
  1143  0F1C                     	;# 
  1144  0F1D                     	;# 
  1145  0F1E                     	;# 
  1146  0F1F                     	;# 
  1147  0F20                     	;# 
  1148  0F21                     	;# 
  1149  0F22                     	;# 
  1150  0F23                     	;# 
  1151  0F24                     	;# 
  1152  0F25                     	;# 
  1153  0F26                     	;# 
  1154  0F27                     	;# 
  1155  0F28                     	;# 
  1156  0F29                     	;# 
  1157  0F2A                     	;# 
  1158  0F2B                     	;# 
  1159  0F2C                     	;# 
  1160  0F2D                     	;# 
  1161  0F2E                     	;# 
  1162  0F2F                     	;# 
  1163  0F8C                     	;# 
  1164  0F8D                     	;# 
  1165  0F91                     	;# 
  1166  0F95                     	;# 
  1167  0F96                     	;# 
  1168  0F97                     	;# 
  1169  0F9C                     	;# 
  1170  0F9D                     	;# 
  1171  0F9E                     	;# 
  1172  0FE3                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  0011                     	;# 
  1200  0012                     	;# 
  1201  0013                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  008C                     	;# 
  1212  008D                     	;# 
  1213  008E                     	;# 
  1214  0091                     	;# 
  1215  0092                     	;# 
  1216  0093                     	;# 
  1217  0095                     	;# 
  1218  0096                     	;# 
  1219  0097                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  009F                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010E                     	;# 
  1231  0111                     	;# 
  1232  0112                     	;# 
  1233  0113                     	;# 
  1234  0114                     	;# 
  1235  0115                     	;# 
  1236  0116                     	;# 
  1237  0117                     	;# 
  1238  0118                     	;# 
  1239  0119                     	;# 
  1240  011D                     	;# 
  1241  018C                     	;# 
  1242  018D                     	;# 
  1243  018E                     	;# 
  1244  0191                     	;# 
  1245  0191                     	;# 
  1246  0192                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0194                     	;# 
  1250  0195                     	;# 
  1251  0196                     	;# 
  1252  0197                     	;# 
  1253  0199                     	;# 
  1254  019A                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019E                     	;# 
  1260  019F                     	;# 
  1261  020C                     	;# 
  1262  020D                     	;# 
  1263  0211                     	;# 
  1264  0211                     	;# 
  1265  0212                     	;# 
  1266  0212                     	;# 
  1267  0213                     	;# 
  1268  0213                     	;# 
  1269  0214                     	;# 
  1270  0214                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0216                     	;# 
  1275  0216                     	;# 
  1276  0217                     	;# 
  1277  0217                     	;# 
  1278  0391                     	;# 
  1279  0392                     	;# 
  1280  0393                     	;# 
  1281  0394                     	;# 
  1282  0395                     	;# 
  1283  0396                     	;# 
  1284  0498                     	;# 
  1285  0498                     	;# 
  1286  0499                     	;# 
  1287  049A                     	;# 
  1288  049B                     	;# 
  1289  049B                     	;# 
  1290  049C                     	;# 
  1291  049D                     	;# 
  1292  049E                     	;# 
  1293  049F                     	;# 
  1294  0611                     	;# 
  1295  0612                     	;# 
  1296  0613                     	;# 
  1297  0613                     	;# 
  1298  0614                     	;# 
  1299  0615                     	;# 
  1300  0616                     	;# 
  1301  0616                     	;# 
  1302  0617                     	;# 
  1303  0618                     	;# 
  1304  0619                     	;# 
  1305  0619                     	;# 
  1306  061A                     	;# 
  1307  061B                     	;# 
  1308  061C                     	;# 
  1309  061C                     	;# 
  1310  0691                     	;# 
  1311  0692                     	;# 
  1312  0693                     	;# 
  1313  0694                     	;# 
  1314  0695                     	;# 
  1315  0F0F                     	;# 
  1316  0F10                     	;# 
  1317  0F11                     	;# 
  1318  0F12                     	;# 
  1319  0F13                     	;# 
  1320  0F14                     	;# 
  1321  0F15                     	;# 
  1322  0F16                     	;# 
  1323  0F17                     	;# 
  1324  0F18                     	;# 
  1325  0F19                     	;# 
  1326  0F1A                     	;# 
  1327  0F1B                     	;# 
  1328  0F1C                     	;# 
  1329  0F1D                     	;# 
  1330  0F1E                     	;# 
  1331  0F1F                     	;# 
  1332  0F20                     	;# 
  1333  0F21                     	;# 
  1334  0F22                     	;# 
  1335  0F23                     	;# 
  1336  0F24                     	;# 
  1337  0F25                     	;# 
  1338  0F26                     	;# 
  1339  0F27                     	;# 
  1340  0F28                     	;# 
  1341  0F29                     	;# 
  1342  0F2A                     	;# 
  1343  0F2B                     	;# 
  1344  0F2C                     	;# 
  1345  0F2D                     	;# 
  1346  0F2E                     	;# 
  1347  0F2F                     	;# 
  1348  0F8C                     	;# 
  1349  0F8D                     	;# 
  1350  0F91                     	;# 
  1351  0F95                     	;# 
  1352  0F96                     	;# 
  1353  0F97                     	;# 
  1354  0F9C                     	;# 
  1355  0F9D                     	;# 
  1356  0F9E                     	;# 
  1357  0FE3                     	;# 
  1358  0FE4                     	;# 
  1359  0FE5                     	;# 
  1360  0FE6                     	;# 
  1361  0FE7                     	;# 
  1362  0FE8                     	;# 
  1363  0FE9                     	;# 
  1364  0FEA                     	;# 
  1365  0FEB                     	;# 
  1366  0FED                     	;# 
  1367  0FEE                     	;# 
  1368  0FEF                     	;# 
  1369  0000                     	;# 
  1370  0001                     	;# 
  1371  0002                     	;# 
  1372  0003                     	;# 
  1373  0004                     	;# 
  1374  0005                     	;# 
  1375  0006                     	;# 
  1376  0007                     	;# 
  1377  0008                     	;# 
  1378  0009                     	;# 
  1379  000A                     	;# 
  1380  000B                     	;# 
  1381  000C                     	;# 
  1382  000D                     	;# 
  1383  000E                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0013                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  001B                     	;# 
  1395  001C                     	;# 
  1396  008C                     	;# 
  1397  008D                     	;# 
  1398  008E                     	;# 
  1399  0091                     	;# 
  1400  0092                     	;# 
  1401  0093                     	;# 
  1402  0095                     	;# 
  1403  0096                     	;# 
  1404  0097                     	;# 
  1405  0099                     	;# 
  1406  009A                     	;# 
  1407  009B                     	;# 
  1408  009B                     	;# 
  1409  009C                     	;# 
  1410  009D                     	;# 
  1411  009E                     	;# 
  1412  009F                     	;# 
  1413  010C                     	;# 
  1414  010D                     	;# 
  1415  010E                     	;# 
  1416  0111                     	;# 
  1417  0112                     	;# 
  1418  0113                     	;# 
  1419  0114                     	;# 
  1420  0115                     	;# 
  1421  0116                     	;# 
  1422  0117                     	;# 
  1423  0118                     	;# 
  1424  0119                     	;# 
  1425  011D                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  0191                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  0193                     	;# 
  1433  0193                     	;# 
  1434  0194                     	;# 
  1435  0195                     	;# 
  1436  0196                     	;# 
  1437  0197                     	;# 
  1438  0199                     	;# 
  1439  019A                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020C                     	;# 
  1447  020D                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0391                     	;# 
  1464  0392                     	;# 
  1465  0393                     	;# 
  1466  0394                     	;# 
  1467  0395                     	;# 
  1468  0396                     	;# 
  1469  0498                     	;# 
  1470  0498                     	;# 
  1471  0499                     	;# 
  1472  049A                     	;# 
  1473  049B                     	;# 
  1474  049B                     	;# 
  1475  049C                     	;# 
  1476  049D                     	;# 
  1477  049E                     	;# 
  1478  049F                     	;# 
  1479  0611                     	;# 
  1480  0612                     	;# 
  1481  0613                     	;# 
  1482  0613                     	;# 
  1483  0614                     	;# 
  1484  0615                     	;# 
  1485  0616                     	;# 
  1486  0616                     	;# 
  1487  0617                     	;# 
  1488  0618                     	;# 
  1489  0619                     	;# 
  1490  0619                     	;# 
  1491  061A                     	;# 
  1492  061B                     	;# 
  1493  061C                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0F0F                     	;# 
  1501  0F10                     	;# 
  1502  0F11                     	;# 
  1503  0F12                     	;# 
  1504  0F13                     	;# 
  1505  0F14                     	;# 
  1506  0F15                     	;# 
  1507  0F16                     	;# 
  1508  0F17                     	;# 
  1509  0F18                     	;# 
  1510  0F19                     	;# 
  1511  0F1A                     	;# 
  1512  0F1B                     	;# 
  1513  0F1C                     	;# 
  1514  0F1D                     	;# 
  1515  0F1E                     	;# 
  1516  0F1F                     	;# 
  1517  0F20                     	;# 
  1518  0F21                     	;# 
  1519  0F22                     	;# 
  1520  0F23                     	;# 
  1521  0F24                     	;# 
  1522  0F25                     	;# 
  1523  0F26                     	;# 
  1524  0F27                     	;# 
  1525  0F28                     	;# 
  1526  0F29                     	;# 
  1527  0F2A                     	;# 
  1528  0F2B                     	;# 
  1529  0F2C                     	;# 
  1530  0F2D                     	;# 
  1531  0F2E                     	;# 
  1532  0F2F                     	;# 
  1533  0F8C                     	;# 
  1534  0F8D                     	;# 
  1535  0F91                     	;# 
  1536  0F95                     	;# 
  1537  0F96                     	;# 
  1538  0F97                     	;# 
  1539  0F9C                     	;# 
  1540  0F9D                     	;# 
  1541  0F9E                     	;# 
  1542  0FE3                     	;# 
  1543  0FE4                     	;# 
  1544  0FE5                     	;# 
  1545  0FE6                     	;# 
  1546  0FE7                     	;# 
  1547  0FE8                     	;# 
  1548  0FE9                     	;# 
  1549  0FEA                     	;# 
  1550  0FEB                     	;# 
  1551  0FED                     	;# 
  1552  0FEE                     	;# 
  1553  0FEF                     	;# 
  1554                           
  1555                           	psect	nvBANK1
  1556  00B0                     __pnvBANK1:	
  1557  00B0                     _timer1ReloadVal:	
  1558  00B0                     	ds	2
  1559  00B2                     _eusartTxBufferRemaining:	
  1560  00B2                     	ds	1
  1561  0019                     _T1GCONbits	set	25
  1562  0018                     _T1CONbits	set	24
  1563  0018                     _T1CON	set	24
  1564  0016                     _TMR1L	set	22
  1565  0017                     _TMR1H	set	23
  1566  0019                     _T1GCON	set	25
  1567  0011                     _PIR1bits	set	17
  1568  000B                     _INTCONbits	set	11
  1569  0088                     _TMR1IF	set	136
  1570  0065                     _RA5	set	101
  1571  0061                     _RA1	set	97
  1572  0062                     _RA2	set	98
  1573  0075                     _RC5	set	117
  1574  0099                     _OSCCON	set	153
  1575  0095                     _OPTION_REGbits	set	149
  1576  008E                     _TRISC	set	142
  1577  008D                     _TRISB	set	141
  1578  008C                     _TRISA	set	140
  1579  0091                     _PIE1bits	set	145
  1580  010E                     _LATCbits	set	270
  1581  0116                     _BORCON	set	278
  1582  011D                     _APFCON	set	285
  1583  010E                     _LATC	set	270
  1584  010D                     _LATB	set	269
  1585  010C                     _LATA	set	268
  1586  018C                     _ANSELA	set	396
  1587  018D                     _ANSELB	set	397
  1588  018E                     _ANSELC	set	398
  1589  0199                     _RCREG	set	409
  1590  019D                     _RCSTAbits	set	413
  1591  019A                     _TXREG	set	410
  1592  019C                     _SPBRGH	set	412
  1593  019B                     _SPBRGL	set	411
  1594  019E                     _TXSTA	set	414
  1595  019D                     _RCSTA	set	413
  1596  019F                     _BAUDCON	set	415
  1597  020C                     _WPUA	set	524
  1598  020D                     _WPUB	set	525
  1599                           
  1600                           ; #config settings
  1601  0000                     
  1602                           	psect	cinit
  1603  0024                     start_initialization:	
  1604  0024                     __initialization:	
  1605                           
  1606                           ; Clear objects allocated to COMMON
  1607  0024  01FA               	clrf	__pbssCOMMON& (0+127)
  1608  0025  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1609                           
  1610                           ; Clear objects allocated to BANK0
  1611  0026  0020               	movlb	0	; select bank0
  1612  0027  01EC               	clrf	__pbssBANK0& (0+127)
  1613  0028  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1614  0029  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1615                           
  1616                           ; Clear objects allocated to BANK1
  1617  002A  30A0               	movlw	low __pbssBANK1
  1618  002B  0084               	movwf	4
  1619  002C  3000               	movlw	high __pbssBANK1
  1620  002D  0085               	movwf	5
  1621  002E  3010               	movlw	16
  1622  002F  3182  22F8  3180   	fcall	clear_ram0
  1623                           
  1624                           ; Clear objects allocated to BANK2
  1625  0032  3020               	movlw	low __pbssBANK2
  1626  0033  0084               	movwf	4
  1627  0034  3001               	movlw	high __pbssBANK2
  1628  0035  0085               	movwf	5
  1629  0036  3040               	movlw	64
  1630  0037  3182  22F8         	fcall	clear_ram0
  1631  0039                     end_of_initialization:	
  1632                           ;End of C runtime variable initialization code
  1633                           
  1634  0039                     __end_of__initialization:	
  1635  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1636  003A  0020               	movlb	0
  1637  003B  3181  291C         	ljmp	_main	;jump to C main() function
  1638                           
  1639                           	psect	bssCOMMON
  1640  007A                     __pbssCOMMON:	
  1641  007A                     _eusartRxCount:	
  1642  007A                     	ds	1
  1643  007B                     _eusartTxHead:	
  1644  007B                     	ds	1
  1645                           
  1646                           	psect	bssBANK0
  1647  006C                     __pbssBANK0:	
  1648  006C                     _eusartRxTail:	
  1649  006C                     	ds	1
  1650  006D                     _eusartRxHead:	
  1651  006D                     	ds	1
  1652  006E                     _eusartTxTail:	
  1653  006E                     	ds	1
  1654                           
  1655                           	psect	bssBANK1
  1656  00A0                     __pbssBANK1:	
  1657  00A0                     _eusartRxBuffer:	
  1658  00A0                     	ds	8
  1659  00A8                     _eusartTxBuffer:	
  1660  00A8                     	ds	8
  1661                           
  1662                           	psect	bssBANK2
  1663  0120                     __pbssBANK2:	
  1664  0120                     init_B@F4487:	
  1665  0120                     	ds	64
  1666                           
  1667                           	psect	clrtext
  1668  02F8                     clear_ram0:	
  1669                           ;	Called with FSR0 containing the base address, and
  1670                           ;	WREG with the size to clear
  1671                           
  1672  02F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1673  02F9                     clrloop0:	
  1674  02F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1675  02FA  3101               	addfsr 0,1
  1676  02FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1677  02FC  2AF9               	goto	clrloop0	;have we reached the end yet?
  1678  02FD  3400               	retlw	0	;all done for this memory range, return
  1679                           
  1680                           	psect	cstackBANK1
  1681  00B3                     __pcstackBANK1:	
  1682  00B3                     main@Bt:	
  1683                           
  1684                           ; 1 bytes @ 0x0
  1685  00B3                     	ds	1
  1686  00B4                     main@k:	
  1687                           
  1688                           ; 2 bytes @ 0x1
  1689  00B4                     	ds	2
  1690                           
  1691                           	psect	cstackCOMMON
  1692  0070                     __pcstackCOMMON:	
  1693  0070                     ?_OSCILLATOR_Initialize:	
  1694  0070                     ?_TMR1_Initialize:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_init_B:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_ReturnReg:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ?_EUSART_Initialize:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ?_EUSART_Read:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ?_EUSART_Write:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ?_EUSART_Transmit_ISR:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ??_EUSART_Transmit_ISR:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?_EUSART_Receive_ISR:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ??_EUSART_Receive_ISR:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_PIN_MANAGER_Initialize:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ?_INTERRUPT_InterruptManager:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?_SYSTEM_Initialize:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ?_TMR1_StartTimer:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ?_TMR1_StopTimer:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0070                     ?_TMR1_Reload:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0070                     ?_main:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0070                     ?_Partiel_Reset:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0070                     ?_Set_Features:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0070                     ?_Set_Mode:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ?_Reboot:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757  0070                     ?_Turn_On:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760                           
  1761                           ; 1 bytes @ 0x0
  1762  0070                     	ds	1
  1763  0071                     ??_INTERRUPT_InterruptManager:	
  1764                           
  1765                           ; 1 bytes @ 0x1
  1766  0071                     	ds	1
  1767  0072                     ??_OSCILLATOR_Initialize:	
  1768  0072                     ??_TMR1_Initialize:	
  1769                           ; 1 bytes @ 0x2
  1770                           
  1771  0072                     ??_ReturnReg:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774  0072                     ??_EUSART_Initialize:	
  1775                           ; 1 bytes @ 0x2
  1776                           
  1777  0072                     ??_EUSART_Read:	
  1778                           ; 1 bytes @ 0x2
  1779                           
  1780  0072                     ??_EUSART_Write:	
  1781                           ; 1 bytes @ 0x2
  1782                           
  1783  0072                     ??_PIN_MANAGER_Initialize:	
  1784                           ; 1 bytes @ 0x2
  1785                           
  1786  0072                     ??_TMR1_StartTimer:	
  1787                           ; 1 bytes @ 0x2
  1788                           
  1789  0072                     ??_TMR1_StopTimer:	
  1790                           ; 1 bytes @ 0x2
  1791                           
  1792  0072                     ?_TMR1_WriteTimer:	
  1793                           ; 1 bytes @ 0x2
  1794                           
  1795  0072                     TMR1_WriteTimer@timerVal:	
  1796                           ; 1 bytes @ 0x2
  1797                           
  1798                           
  1799                           ; 2 bytes @ 0x2
  1800  0072                     	ds	1
  1801  0073                     ??_SYSTEM_Initialize:	
  1802  0073                     EUSART_Read@readValue:	
  1803                           ; 1 bytes @ 0x3
  1804                           
  1805  0073                     EUSART_Write@txData:	
  1806                           ; 1 bytes @ 0x3
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x3
  1810  0073                     	ds	1
  1811  0074                     ?_delay_ms:	
  1812  0074                     ??_TMR1_WriteTimer:	
  1813                           ; 1 bytes @ 0x4
  1814                           
  1815  0074                     ??_TMR1_Reload:	
  1816                           ; 1 bytes @ 0x4
  1817                           
  1818  0074                     ??_Partiel_Reset:	
  1819                           ; 1 bytes @ 0x4
  1820                           
  1821  0074                     ??_Set_Features:	
  1822                           ; 1 bytes @ 0x4
  1823                           
  1824  0074                     ??_Set_Mode:	
  1825                           ; 1 bytes @ 0x4
  1826                           
  1827  0074                     ??_Reboot:	
  1828                           ; 1 bytes @ 0x4
  1829                           
  1830  0074                     ??_Turn_On:	
  1831                           ; 1 bytes @ 0x4
  1832                           
  1833  0074                     delay_ms@msec:	
  1834                           ; 1 bytes @ 0x4
  1835                           
  1836                           
  1837                           ; 2 bytes @ 0x4
  1838  0074                     	ds	2
  1839  0076                     ??_delay_ms:	
  1840                           
  1841                           ; 1 bytes @ 0x6
  1842  0076                     	ds	1
  1843  0077                     delay_ms@x:	
  1844                           
  1845                           ; 2 bytes @ 0x7
  1846  0077                     	ds	2
  1847  0079                     ??_init_B:	
  1848                           
  1849                           ; 1 bytes @ 0x9
  1850  0079                     	ds	1
  1851                           
  1852                           	psect	cstackBANK0
  1853  0020                     __pcstackBANK0:	
  1854  0020                     ?_Verif_Erreur:	
  1855  0020                     Verif_Erreur@size:	
  1856                           ; 2 bytes @ 0x0
  1857                           
  1858                           
  1859                           ; 2 bytes @ 0x0
  1860  0020                     	ds	2
  1861  0022                     ??_Verif_Erreur:	
  1862                           
  1863                           ; 1 bytes @ 0x2
  1864  0022                     	ds	2
  1865  0024                     Verif_Erreur@i:	
  1866                           
  1867                           ; 2 bytes @ 0x4
  1868  0024                     	ds	2
  1869  0026                     Verif_Erreur@j:	
  1870                           
  1871                           ; 2 bytes @ 0x6
  1872  0026                     	ds	2
  1873  0028                     Verif_Erreur@buf:	
  1874                           
  1875                           ; 1 bytes @ 0x8
  1876  0028                     	ds	1
  1877  0029                     init_B@buf:	
  1878                           
  1879                           ; 64 bytes @ 0x9
  1880  0029                     	ds	64
  1881  0069                     init_B@error:	
  1882                           
  1883                           ; 1 bytes @ 0x49
  1884  0069                     	ds	1
  1885  006A                     ??_main:	
  1886                           
  1887                           ; 1 bytes @ 0x4A
  1888  006A                     	ds	2
  1889                           
  1890                           	psect	maintext
  1891  011C                     __pmaintext:	
  1892 ;;
  1893 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1894 ;;
  1895 ;; *************** function _main *****************
  1896 ;; Defined at:
  1897 ;;		line 14 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  k               2    1[BANK1 ] int 
  1902 ;;  Bt              1    0[BANK1 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : B1F/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1912 ;;      Params:         0       0       0       0       0       0       0       0
  1913 ;;      Locals:         0       0       3       0       0       0       0       0
  1914 ;;      Temps:          0       2       0       0       0       0       0       0
  1915 ;;      Totals:         0       2       3       0       0       0       0       0
  1916 ;;Total ram usage:        5 bytes
  1917 ;; Hardware stack levels required when called:    7
  1918 ;; This function calls:
  1919 ;;		_ReturnReg
  1920 ;;		_SYSTEM_Initialize
  1921 ;;		_delay_ms
  1922 ;;		_init_B
  1923 ;; This function is called by:
  1924 ;;		Startup code after reset
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _main
  1930  011C                     _main:	
  1931                           
  1932                           ;main.c: 16: SYSTEM_Initialize();
  1933                           
  1934                           ;incstack = 0
  1935                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1936  011C  3182  22E4  3181   	fcall	_SYSTEM_Initialize
  1937                           
  1938                           ;main.c: 17: (INTCONbits.GIE = 1);
  1939  011F  178B               	bsf	11,7	;volatile
  1940                           
  1941                           ;main.c: 18: (INTCONbits.PEIE = 1);
  1942  0120  170B               	bsf	11,6	;volatile
  1943                           
  1944                           ;main.c: 20: uint8_t Bt = 0;
  1945  0121  0021               	movlb	1	; select bank1
  1946  0122  01B3               	clrf	main@Bt^(0+128)
  1947                           
  1948                           ;main.c: 22: RC5 = 0;
  1949  0123  0020               	movlb	0	; select bank0
  1950  0124  128E               	bcf	14,5	;volatile
  1951                           
  1952                           ;main.c: 23: RA2 = 0;
  1953  0125  110C               	bcf	12,2	;volatile
  1954                           
  1955                           ;main.c: 24: RA1 = 0;
  1956  0126  108C               	bcf	12,1	;volatile
  1957                           
  1958                           ;main.c: 25: RA5 = 0;
  1959  0127  128C               	bcf	12,5	;volatile
  1960                           
  1961                           ;main.c: 26: int k =0 ;
  1962  0128  0021               	movlb	1	; select bank1
  1963  0129  01B4               	clrf	main@k^(0+128)
  1964  012A  01B5               	clrf	(main@k+1)^(0+128)
  1965                           
  1966                           ;main.c: 33: init_B();
  1967  012B  3180  203D  3181   	fcall	_init_B
  1968  012E                     l1470:	
  1969                           ;main.c: 34: while (1){
  1970                           
  1971                           
  1972                           ;main.c: 36: k = ReturnReg();
  1973  012E  3183  230A  3181   	fcall	_ReturnReg
  1974  0131  0020               	movlb	0	; select bank0
  1975  0132  00EA               	movwf	??_main
  1976  0133  01EB               	clrf	??_main+1
  1977  0134  086A               	movf	??_main,w
  1978  0135  0021               	movlb	1	; select bank1
  1979  0136  00B4               	movwf	main@k^(0+128)
  1980  0137  0020               	movlb	0	; select bank0
  1981  0138  086B               	movf	??_main+1,w
  1982  0139  0021               	movlb	1	; select bank1
  1983  013A  00B5               	movwf	(main@k+1)^(0+128)
  1984                           
  1985                           ;main.c: 38: if (k == '$'){
  1986  013B  3024               	movlw	36
  1987  013C  0634               	xorwf	main@k^(0+128),w
  1988  013D  0435               	iorwf	(main@k+1)^(0+128),w
  1989  013E  1D03               	btfss	3,2
  1990  013F  292E               	goto	l1470
  1991                           
  1992                           ;main.c: 39: RC5 = !RC5;
  1993  0140  3020               	movlw	32
  1994  0141  0020               	movlb	0	; select bank0
  1995  0142  068E               	xorwf	14,f
  1996                           
  1997                           ;main.c: 40: RA2 = !RA2;
  1998  0143  3004               	movlw	4
  1999  0144  068C               	xorwf	12,f
  2000                           
  2001                           ;main.c: 41: RA1 = !RA1;
  2002  0145  3002               	movlw	2
  2003  0146  068C               	xorwf	12,f
  2004                           
  2005                           ;main.c: 42: RA5 = !RA5;
  2006  0147  3020               	movlw	32
  2007  0148  068C               	xorwf	12,f
  2008                           
  2009                           ;main.c: 43: delay_ms(1000);
  2010  0149  30E8               	movlw	232
  2011  014A  00F4               	movwf	delay_ms@msec
  2012  014B  3003               	movlw	3
  2013  014C  00F5               	movwf	delay_ms@msec+1
  2014  014D  3181  21B9  3181   	fcall	_delay_ms
  2015  0150  292E               	goto	l1470
  2016  0151                     __end_of_main:	
  2017                           
  2018                           	psect	text1
  2019  003D                     __ptext1:	
  2020 ;; *************** function _init_B *****************
  2021 ;; Defined at:
  2022 ;;		line 106 in file "BLE_Receive.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  buf            64    9[BANK0 ] unsigned char [64]
  2027 ;;  error           1   73[BANK0 ] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2037 ;;      Params:         0       0       0       0       0       0       0       0
  2038 ;;      Locals:         0      65       0       0       0       0       0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0
  2040 ;;      Totals:         1      65       0       0       0       0       0       0
  2041 ;;Total ram usage:       66 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    6
  2044 ;; This function calls:
  2045 ;;		_Partiel_Reset
  2046 ;;		_Reboot
  2047 ;;		_Set_Features
  2048 ;;		_Set_Mode
  2049 ;;		_Turn_On
  2050 ;;		_Verif_Erreur
  2051 ;;		_delay_ms
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _init_B
  2059  003D                     _init_B:	
  2060                           
  2061                           ;BLE_Receive.c: 108: unsigned char error = 0;
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _init_B: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2065  003D  0020               	movlb	0	; select bank0
  2066  003E  01E9               	clrf	init_B@error
  2067                           
  2068                           ;BLE_Receive.c: 109: char buf [64] = {0};
  2069  003F  3020               	movlw	low init_B@F4487
  2070  0040  0086               	movwf	6
  2071  0041  3001               	movlw	high init_B@F4487
  2072  0042  0087               	movwf	7
  2073  0043  3029               	movlw	low init_B@buf
  2074  0044  0084               	movwf	4
  2075  0045  3000               	movlw	high init_B@buf
  2076  0046  0085               	movwf	5
  2077  0047  3040               	movlw	64
  2078  0048  00F9               	movwf	??_init_B
  2079  0049                     u680:	
  2080  0049  0016               	moviw fsr1++
  2081  004A  001A               	movwi fsr0++
  2082  004B  0BF9               	decfsz	??_init_B,f
  2083  004C  2849               	goto	u680
  2084                           
  2085                           ;BLE_Receive.c: 111: do { LATCbits.LATC0 = 1; } while(0);
  2086  004D  0022               	movlb	2	; select bank2
  2087  004E  140E               	bsf	14,0	;volatile
  2088                           
  2089                           ;BLE_Receive.c: 113: Turn_On();
  2090  004F  3182  22D8  3180   	fcall	_Turn_On
  2091                           
  2092                           ;BLE_Receive.c: 114: error = Verif_Erreur(buf,64);
  2093  0052  3040               	movlw	64
  2094  0053  0020               	movlb	0	; select bank0
  2095  0054  00A0               	movwf	Verif_Erreur@size
  2096  0055  3000               	movlw	0
  2097  0056  00A1               	movwf	Verif_Erreur@size+1
  2098  0057  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  2099  0058  3180  20B2  3180   	fcall	_Verif_Erreur
  2100  005B  0020               	movlb	0	; select bank0
  2101  005C  0820               	movf	?_Verif_Erreur,w
  2102  005D  00F9               	movwf	??_init_B
  2103  005E  0879               	movf	??_init_B,w
  2104  005F  00E9               	movwf	init_B@error
  2105                           
  2106                           ;BLE_Receive.c: 116: delay_ms(1000);
  2107  0060  30E8               	movlw	232
  2108  0061  00F4               	movwf	delay_ms@msec
  2109  0062  3003               	movlw	3
  2110  0063  00F5               	movwf	delay_ms@msec+1
  2111  0064  3181  21B9  3180   	fcall	_delay_ms
  2112                           
  2113                           ;BLE_Receive.c: 118: Partiel_Reset();
  2114  0067  3182  228B  3180   	fcall	_Partiel_Reset
  2115                           
  2116                           ;BLE_Receive.c: 119: error = Verif_Erreur(buf,64);
  2117  006A  3040               	movlw	64
  2118  006B  0020               	movlb	0	; select bank0
  2119  006C  00A0               	movwf	Verif_Erreur@size
  2120  006D  3000               	movlw	0
  2121  006E  00A1               	movwf	Verif_Erreur@size+1
  2122  006F  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  2123  0070  3180  20B2  3180   	fcall	_Verif_Erreur
  2124  0073  0020               	movlb	0	; select bank0
  2125  0074  0820               	movf	?_Verif_Erreur,w
  2126  0075  00F9               	movwf	??_init_B
  2127  0076  0879               	movf	??_init_B,w
  2128  0077  00E9               	movwf	init_B@error
  2129                           
  2130                           ;BLE_Receive.c: 121: Set_Mode();
  2131  0078  3181  2151  3180   	fcall	_Set_Mode
  2132                           
  2133                           ;BLE_Receive.c: 122: error = Verif_Erreur(buf,64);
  2134  007B  3040               	movlw	64
  2135  007C  0020               	movlb	0	; select bank0
  2136  007D  00A0               	movwf	Verif_Erreur@size
  2137  007E  3000               	movlw	0
  2138  007F  00A1               	movwf	Verif_Erreur@size+1
  2139  0080  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  2140  0081  3180  20B2  3180   	fcall	_Verif_Erreur
  2141  0084  0020               	movlb	0	; select bank0
  2142  0085  0820               	movf	?_Verif_Erreur,w
  2143  0086  00F9               	movwf	??_init_B
  2144  0087  0879               	movf	??_init_B,w
  2145  0088  00E9               	movwf	init_B@error
  2146                           
  2147                           ;BLE_Receive.c: 124: Set_Features();
  2148  0089  3181  2185  3180   	fcall	_Set_Features
  2149                           
  2150                           ;BLE_Receive.c: 125: error = Verif_Erreur(buf,64);
  2151  008C  3040               	movlw	64
  2152  008D  0020               	movlb	0	; select bank0
  2153  008E  00A0               	movwf	Verif_Erreur@size
  2154  008F  3000               	movlw	0
  2155  0090  00A1               	movwf	Verif_Erreur@size+1
  2156  0091  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  2157  0092  3180  20B2  3180   	fcall	_Verif_Erreur
  2158  0095  0020               	movlb	0	; select bank0
  2159  0096  0820               	movf	?_Verif_Erreur,w
  2160  0097  00F9               	movwf	??_init_B
  2161  0098  0879               	movf	??_init_B,w
  2162  0099  00E9               	movwf	init_B@error
  2163                           
  2164                           ;BLE_Receive.c: 127: Reboot();
  2165  009A  3182  22A3  3180   	fcall	_Reboot
  2166                           
  2167                           ;BLE_Receive.c: 128: error = Verif_Erreur(buf,64);
  2168  009D  3040               	movlw	64
  2169  009E  0020               	movlb	0	; select bank0
  2170  009F  00A0               	movwf	Verif_Erreur@size
  2171  00A0  3000               	movlw	0
  2172  00A1  00A1               	movwf	Verif_Erreur@size+1
  2173  00A2  3029               	movlw	(low (init_B@buf| 0))& (0+255)
  2174  00A3  3180  20B2  3180   	fcall	_Verif_Erreur
  2175  00A6  0020               	movlb	0	; select bank0
  2176  00A7  0820               	movf	?_Verif_Erreur,w
  2177  00A8  00F9               	movwf	??_init_B
  2178  00A9  0879               	movf	??_init_B,w
  2179  00AA  00E9               	movwf	init_B@error
  2180                           
  2181                           ;BLE_Receive.c: 130: delay_ms(1000);
  2182  00AB  30E8               	movlw	232
  2183  00AC  00F4               	movwf	delay_ms@msec
  2184  00AD  3003               	movlw	3
  2185  00AE  00F5               	movwf	delay_ms@msec+1
  2186  00AF  3181  21B9         	fcall	_delay_ms
  2187  00B1  0008               	return
  2188  00B2                     __end_of_init_B:	
  2189                           
  2190                           	psect	text2
  2191  00B2                     __ptext2:	
  2192 ;; *************** function _Verif_Erreur *****************
  2193 ;; Defined at:
  2194 ;;		line 78 in file "BLE_Receive.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  buf             1    wreg     PTR unsigned char 
  2197 ;;		 -> init_B@buf(64), 
  2198 ;;  size            2    0[BANK0 ] unsigned int 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  2201 ;;		 -> init_B@buf(64), 
  2202 ;;  j               2    6[BANK0 ] int 
  2203 ;;  i               2    4[BANK0 ] unsigned int 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2    0[BANK0 ] int 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2213 ;;      Params:         0       2       0       0       0       0       0       0
  2214 ;;      Locals:         0       5       0       0       0       0       0       0
  2215 ;;      Temps:          0       2       0       0       0       0       0       0
  2216 ;;      Totals:         0       9       0       0       0       0       0       0
  2217 ;;Total ram usage:        9 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    5
  2220 ;; This function calls:
  2221 ;;		_EUSART_Read
  2222 ;;		_delay_ms
  2223 ;; This function is called by:
  2224 ;;		_init_B
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _Verif_Erreur
  2230  00B2                     _Verif_Erreur:	
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _Verif_Erreur: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2234                           ;Verif_Erreur@buf stored from wreg
  2235  00B2  0020               	movlb	0	; select bank0
  2236  00B3  00A8               	movwf	Verif_Erreur@buf
  2237                           
  2238                           ;BLE_Receive.c: 81: unsigned int i = 0;
  2239  00B4  01A4               	clrf	Verif_Erreur@i
  2240  00B5  01A5               	clrf	Verif_Erreur@i+1
  2241                           
  2242                           ;BLE_Receive.c: 82: int j = 0;
  2243  00B6  01A6               	clrf	Verif_Erreur@j
  2244  00B7  01A7               	clrf	Verif_Erreur@j+1
  2245  00B8                     l1370:	
  2246                           ;BLE_Receive.c: 83: do{
  2247                           
  2248                           
  2249                           ;BLE_Receive.c: 84: delay_ms(5);
  2250  00B8  3005               	movlw	5
  2251  00B9  00F4               	movwf	delay_ms@msec
  2252  00BA  3000               	movlw	0
  2253  00BB  00F5               	movwf	delay_ms@msec+1
  2254  00BC  3181  21B9  3180   	fcall	_delay_ms
  2255                           
  2256                           ;BLE_Receive.c: 85: j++;
  2257  00BF  3001               	movlw	1
  2258  00C0  0020               	movlb	0	; select bank0
  2259  00C1  07A6               	addwf	Verif_Erreur@j,f
  2260  00C2  3000               	movlw	0
  2261  00C3  3DA7               	addwfc	Verif_Erreur@j+1,f
  2262                           
  2263                           ;BLE_Receive.c: 86: if (j == 10) return -1;
  2264  00C4  300A               	movlw	10
  2265  00C5  0626               	xorwf	Verif_Erreur@j,w
  2266  00C6  0427               	iorwf	Verif_Erreur@j+1,w
  2267  00C7  1D03               	btfss	3,2
  2268  00C8  28CE               	goto	l1380
  2269  00C9  30FF               	movlw	255
  2270  00CA  00A0               	movwf	?_Verif_Erreur
  2271  00CB  30FF               	movlw	255
  2272  00CC  00A1               	movwf	?_Verif_Erreur+1
  2273  00CD  0008               	return
  2274  00CE                     l1380:	
  2275                           
  2276                           ;BLE_Receive.c: 87: }while (eusartRxCount <= 0);
  2277  00CE  087A               	movf	_eusartRxCount,w	;volatile
  2278  00CF  1D03               	btfss	3,2
  2279  00D0  2913               	goto	l1408
  2280  00D1  28B8               	goto	l1370
  2281  00D2                     l1382:	
  2282                           ;BLE_Receive.c: 89: while (eusartRxCount > 0){
  2283                           
  2284                           
  2285                           ;BLE_Receive.c: 90: buf[i] = EUSART_Read();
  2286  00D2  3182  221E  3180   	fcall	_EUSART_Read
  2287  00D5  0020               	movlb	0	; select bank0
  2288  00D6  00A2               	movwf	??_Verif_Erreur
  2289  00D7  0824               	movf	Verif_Erreur@i,w
  2290  00D8  0728               	addwf	Verif_Erreur@buf,w
  2291  00D9  00A3               	movwf	??_Verif_Erreur+1
  2292  00DA  0823               	movf	??_Verif_Erreur+1,w
  2293  00DB  0086               	movwf	6
  2294  00DC  0187               	clrf	7
  2295  00DD  0822               	movf	??_Verif_Erreur,w
  2296  00DE  0081               	movwf	1
  2297                           
  2298                           ;BLE_Receive.c: 91: i++;
  2299  00DF  3001               	movlw	1
  2300  00E0  07A4               	addwf	Verif_Erreur@i,f
  2301  00E1  3000               	movlw	0
  2302  00E2  3DA5               	addwfc	Verif_Erreur@i+1,f
  2303                           
  2304                           ;BLE_Receive.c: 92: if (i == size){
  2305  00E3  0821               	movf	Verif_Erreur@size+1,w
  2306  00E4  0625               	xorwf	Verif_Erreur@i+1,w
  2307  00E5  1D03               	skipz
  2308  00E6  28E9               	goto	u635
  2309  00E7  0820               	movf	Verif_Erreur@size,w
  2310  00E8  0624               	xorwf	Verif_Erreur@i,w
  2311  00E9                     u635:	
  2312  00E9  1903               	btfsc	3,2
  2313  00EA  28F9               	goto	l1396
  2314  00EB  2902               	goto	l1402
  2315  00EC                     l1390:	
  2316                           ;BLE_Receive.c: 93: while (eusartRxCount > 0){
  2317                           
  2318                           
  2319                           ;BLE_Receive.c: 94: EUSART_Read();
  2320  00EC  3182  221E  3180   	fcall	_EUSART_Read
  2321                           
  2322                           ;BLE_Receive.c: 95: if (eusartRxCount == 0) delay_ms(5);
  2323  00EF  087A               	movf	_eusartRxCount,w	;volatile
  2324  00F0  1D03               	btfss	3,2
  2325  00F1  28F9               	goto	l1396
  2326  00F2  3005               	movlw	5
  2327  00F3  00F4               	movwf	delay_ms@msec
  2328  00F4  3000               	movlw	0
  2329  00F5  00F5               	movwf	delay_ms@msec+1
  2330  00F6  3181  21B9  3180   	fcall	_delay_ms
  2331  00F9                     l1396:	
  2332  00F9  087A               	movf	_eusartRxCount,w	;volatile
  2333  00FA  1D03               	btfss	3,2
  2334  00FB  28EC               	goto	l1390
  2335                           
  2336                           ;BLE_Receive.c: 96: }
  2337                           ;BLE_Receive.c: 97: return -2;
  2338  00FC  30FE               	movlw	254
  2339  00FD  0020               	movlb	0	; select bank0
  2340  00FE  00A0               	movwf	?_Verif_Erreur
  2341  00FF  30FF               	movlw	255
  2342  0100  00A1               	movwf	?_Verif_Erreur+1
  2343  0101  0008               	return
  2344  0102                     l1402:	
  2345                           
  2346                           ;BLE_Receive.c: 98: }
  2347                           ;BLE_Receive.c: 99: delay_ms(1);
  2348  0102  3001               	movlw	1
  2349  0103  00F4               	movwf	delay_ms@msec
  2350  0104  3000               	movlw	0
  2351  0105  00F5               	movwf	delay_ms@msec+1
  2352  0106  3181  21B9  3180   	fcall	_delay_ms
  2353                           
  2354                           ;BLE_Receive.c: 100: if (eusartRxCount == 0) delay_ms(4);
  2355  0109  087A               	movf	_eusartRxCount,w	;volatile
  2356  010A  1D03               	btfss	3,2
  2357  010B  2913               	goto	l1408
  2358  010C  3004               	movlw	4
  2359  010D  00F4               	movwf	delay_ms@msec
  2360  010E  3000               	movlw	0
  2361  010F  00F5               	movwf	delay_ms@msec+1
  2362  0110  3181  21B9  3180   	fcall	_delay_ms
  2363  0113                     l1408:	
  2364  0113  087A               	movf	_eusartRxCount,w	;volatile
  2365  0114  1D03               	btfss	3,2
  2366  0115  28D2               	goto	l1382
  2367                           
  2368                           ;BLE_Receive.c: 101: }
  2369                           ;BLE_Receive.c: 102: return j;
  2370  0116  0020               	movlb	0	; select bank0
  2371  0117  0827               	movf	Verif_Erreur@j+1,w
  2372  0118  00A1               	movwf	?_Verif_Erreur+1
  2373  0119  0826               	movf	Verif_Erreur@j,w
  2374  011A  00A0               	movwf	?_Verif_Erreur
  2375  011B  0008               	return
  2376  011C                     __end_of_Verif_Erreur:	
  2377                           
  2378                           	psect	text3
  2379  01B9                     __ptext3:	
  2380 ;; *************** function _delay_ms *****************
  2381 ;; Defined at:
  2382 ;;		line 7 in file "delay.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  msec            2    4[COMMON] int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  x               2    7[COMMON] int 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2396 ;;      Params:         2       0       0       0       0       0       0       0
  2397 ;;      Locals:         2       0       0       0       0       0       0       0
  2398 ;;      Temps:          1       0       0       0       0       0       0       0
  2399 ;;      Totals:         5       0       0       0       0       0       0       0
  2400 ;;Total ram usage:        5 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    4
  2403 ;; This function calls:
  2404 ;;		_TMR1_Reload
  2405 ;;		_TMR1_StartTimer
  2406 ;;		_TMR1_StopTimer
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;;		_Verif_Erreur
  2410 ;;		_init_B
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _delay_ms
  2416  01B9                     _delay_ms:	
  2417                           
  2418                           ;delay.c: 8: TMR1_StartTimer();
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  2422  01B9  3183  2307  3181   	fcall	_TMR1_StartTimer
  2423                           
  2424                           ;delay.c: 9: TMR1_Reload();
  2425  01BC  3182  22F0  3181   	fcall	_TMR1_Reload
  2426                           
  2427                           ;delay.c: 10: TMR1IF = 0;
  2428  01BF  0020               	movlb	0	; select bank0
  2429  01C0  1011               	bcf	17,0	;volatile
  2430                           
  2431                           ;delay.c: 11: for (int x = 0; x < msec; x++){
  2432  01C1  01F7               	clrf	delay_ms@x
  2433  01C2  01F8               	clrf	delay_ms@x+1
  2434  01C3                     l1308:	
  2435  01C3  0878               	movf	delay_ms@x+1,w
  2436  01C4  3A80               	xorlw	128
  2437  01C5  00F6               	movwf	??_delay_ms
  2438  01C6  0875               	movf	delay_ms@msec+1,w
  2439  01C7  3A80               	xorlw	128
  2440  01C8  0276               	subwf	??_delay_ms,w
  2441  01C9  1D03               	skipz
  2442  01CA  29CD               	goto	u605
  2443  01CB  0874               	movf	delay_ms@msec,w
  2444  01CC  0277               	subwf	delay_ms@x,w
  2445  01CD                     u605:	
  2446  01CD  1803               	btfsc	3,0
  2447  01CE  29DC               	goto	l1310
  2448  01CF                     l272:	
  2449                           ;delay.c: 12: while(!TMR1IF);
  2450                           
  2451  01CF  0020               	movlb	0	; select bank0
  2452  01D0  1C11               	btfss	17,0	;volatile
  2453  01D1  29CF               	goto	l272
  2454                           
  2455                           ;delay.c: 13: TMR1_Reload();
  2456  01D2  3182  22F0  3181   	fcall	_TMR1_Reload
  2457                           
  2458                           ;delay.c: 14: TMR1IF = 0;
  2459  01D5  0020               	movlb	0	; select bank0
  2460  01D6  1011               	bcf	17,0	;volatile
  2461  01D7  3001               	movlw	1
  2462  01D8  07F7               	addwf	delay_ms@x,f
  2463  01D9  3000               	movlw	0
  2464  01DA  3DF8               	addwfc	delay_ms@x+1,f
  2465  01DB  29C3               	goto	l1308
  2466  01DC                     l1310:	
  2467                           
  2468                           ;delay.c: 15: }
  2469                           ;delay.c: 16: TMR1_StopTimer();
  2470  01DC  3183  2304         	fcall	_TMR1_StopTimer
  2471  01DE  0008               	return
  2472  01DF                     __end_of_delay_ms:	
  2473                           
  2474                           	psect	text4
  2475  0304                     __ptext4:	
  2476 ;; *************** function _TMR1_StopTimer *****************
  2477 ;; Defined at:
  2478 ;;		line 91 in file "mcc_generated_files/tmr1.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		None
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2492 ;;      Params:         0       0       0       0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_delay_ms
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _TMR1_StopTimer
  2508  0304                     _TMR1_StopTimer:	
  2509                           
  2510                           ;tmr1.c: 94: T1CONbits.TMR1ON = 0;
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _TMR1_StopTimer: []
  2514  0304  0020               	movlb	0	; select bank0
  2515  0305  1018               	bcf	24,0	;volatile
  2516  0306  0008               	return
  2517  0307                     __end_of_TMR1_StopTimer:	
  2518                           
  2519                           	psect	text5
  2520  0307                     __ptext5:	
  2521 ;; *************** function _TMR1_StartTimer *****************
  2522 ;; Defined at:
  2523 ;;		line 85 in file "mcc_generated_files/tmr1.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		None
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2537 ;;      Params:         0       0       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_delay_ms
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _TMR1_StartTimer
  2553  0307                     _TMR1_StartTimer:	
  2554                           
  2555                           ;tmr1.c: 88: T1CONbits.TMR1ON = 1;
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _TMR1_StartTimer: []
  2559  0307  0020               	movlb	0	; select bank0
  2560  0308  1418               	bsf	24,0	;volatile
  2561  0309  0008               	return
  2562  030A                     __end_of_TMR1_StartTimer:	
  2563                           
  2564                           	psect	text6
  2565  02F0                     __ptext6:	
  2566 ;; *************** function _TMR1_Reload *****************
  2567 ;; Defined at:
  2568 ;;		line 134 in file "mcc_generated_files/tmr1.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, pclath, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2582 ;;      Params:         0       0       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    3
  2589 ;; This function calls:
  2590 ;;		_TMR1_WriteTimer
  2591 ;; This function is called by:
  2592 ;;		_delay_ms
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _TMR1_Reload
  2598  02F0                     _TMR1_Reload:	
  2599                           
  2600                           ;tmr1.c: 136: TMR1_WriteTimer(timer1ReloadVal);
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  2604  02F0  0021               	movlb	1	; select bank1
  2605  02F1  0831               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  2606  02F2  00F3               	movwf	TMR1_WriteTimer@timerVal+1
  2607  02F3  0830               	movf	_timer1ReloadVal^(0+128),w	;volatile
  2608  02F4  00F2               	movwf	TMR1_WriteTimer@timerVal
  2609  02F5  3182  22C9         	fcall	_TMR1_WriteTimer
  2610  02F7  0008               	return
  2611  02F8                     __end_of_TMR1_Reload:	
  2612                           
  2613                           	psect	text7
  2614  02C9                     __ptext7:	
  2615 ;; *************** function _TMR1_WriteTimer *****************
  2616 ;; Defined at:
  2617 ;;		line 112 in file "mcc_generated_files/tmr1.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  timerVal        2    2[COMMON] unsigned int 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2631 ;;      Params:         2       0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0
  2634 ;;      Totals:         2       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        2 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    2
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_TMR1_Reload
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _TMR1_WriteTimer
  2647  02C9                     _TMR1_WriteTimer:	
  2648                           
  2649                           ;tmr1.c: 114: if (T1CONbits.nT1SYNC == 1)
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2653  02C9  0020               	movlb	0	; select bank0
  2654  02CA  1D18               	btfss	24,2	;volatile
  2655  02CB  2AD3               	goto	l1244
  2656                           
  2657                           ;tmr1.c: 115: {
  2658                           ;tmr1.c: 117: T1CONbits.TMR1ON = 0;
  2659  02CC  1018               	bcf	24,0	;volatile
  2660                           
  2661                           ;tmr1.c: 120: TMR1H = (timerVal >> 8);
  2662  02CD  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  2663  02CE  0097               	movwf	23	;volatile
  2664                           
  2665                           ;tmr1.c: 121: TMR1L = timerVal;
  2666  02CF  0872               	movf	TMR1_WriteTimer@timerVal,w
  2667  02D0  0096               	movwf	22	;volatile
  2668                           
  2669                           ;tmr1.c: 124: T1CONbits.TMR1ON =1;
  2670  02D1  1418               	bsf	24,0	;volatile
  2671                           
  2672                           ;tmr1.c: 125: }
  2673  02D2  0008               	return
  2674  02D3                     l1244:	
  2675                           
  2676                           ;tmr1.c: 126: else
  2677                           ;tmr1.c: 127: {
  2678                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  2679  02D3  0873               	movf	TMR1_WriteTimer@timerVal+1,w
  2680  02D4  0097               	movwf	23	;volatile
  2681                           
  2682                           ;tmr1.c: 130: TMR1L = timerVal;
  2683  02D5  0872               	movf	TMR1_WriteTimer@timerVal,w
  2684  02D6  0096               	movwf	22	;volatile
  2685  02D7  0008               	return
  2686  02D8                     __end_of_TMR1_WriteTimer:	
  2687                           
  2688                           	psect	text8
  2689  021E                     __ptext8:	
  2690 ;; *************** function _EUSART_Read *****************
  2691 ;; Defined at:
  2692 ;;		line 108 in file "mcc_generated_files/eusart.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  readValue       1    3[COMMON] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      unsigned char 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2706 ;;      Params:         0       0       0       0       0       0       0       0
  2707 ;;      Locals:         1       0       0       0       0       0       0       0
  2708 ;;      Temps:          1       0       0       0       0       0       0       0
  2709 ;;      Totals:         2       0       0       0       0       0       0       0
  2710 ;;Total ram usage:        2 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    2
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_Verif_Erreur
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _EUSART_Read
  2722  021E                     _EUSART_Read:	
  2723                           
  2724                           ;eusart.c: 110: uint8_t readValue = 0;
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  2728  021E  01F3               	clrf	EUSART_Read@readValue
  2729  021F                     l1256:	
  2730                           ;eusart.c: 113: {
  2731                           
  2732                           ;eusart.c: 112: while(0 == eusartRxCount)
  2733                           
  2734  021F  087A               	movf	_eusartRxCount,w	;volatile
  2735  0220  1903               	btfsc	3,2
  2736  0221  2A1F               	goto	l1256
  2737                           
  2738                           ;eusart.c: 114: }
  2739                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
  2740  0222  0020               	movlb	0	; select bank0
  2741  0223  086C               	movf	_eusartRxTail,w
  2742  0224  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2743  0225  0086               	movwf	6
  2744  0226  0187               	clrf	7
  2745  0227  0801               	movf	1,w
  2746  0228  00F2               	movwf	??_EUSART_Read
  2747  0229  0872               	movf	??_EUSART_Read,w
  2748  022A  00F3               	movwf	EUSART_Read@readValue
  2749  022B  3001               	movlw	1
  2750  022C  00F2               	movwf	??_EUSART_Read
  2751  022D  0872               	movf	??_EUSART_Read,w
  2752  022E  07EC               	addwf	_eusartRxTail,f	;volatile
  2753                           
  2754                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2755  022F  3008               	movlw	8
  2756  0230  026C               	subwf	_eusartRxTail,w	;volatile
  2757  0231  1803               	btfsc	3,0
  2758                           
  2759                           ;eusart.c: 118: {
  2760                           ;eusart.c: 119: eusartRxTail = 0;
  2761  0232  01EC               	clrf	_eusartRxTail	;volatile
  2762                           
  2763                           ;eusart.c: 120: }
  2764                           ;eusart.c: 121: PIE1bits.RCIE = 0;
  2765  0233  0021               	movlb	1	; select bank1
  2766  0234  1291               	bcf	17,5	;volatile
  2767                           
  2768                           ;eusart.c: 122: eusartRxCount--;
  2769  0235  3001               	movlw	1
  2770  0236  02FA               	subwf	_eusartRxCount,f	;volatile
  2771                           
  2772                           ;eusart.c: 123: PIE1bits.RCIE = 1;
  2773  0237  1691               	bsf	17,5	;volatile
  2774                           
  2775                           ;eusart.c: 125: return readValue;
  2776  0238  0873               	movf	EUSART_Read@readValue,w
  2777  0239  0008               	return
  2778  023A                     __end_of_EUSART_Read:	
  2779                           
  2780                           	psect	text9
  2781  02D8                     __ptext9:	
  2782 ;; *************** function _Turn_On *****************
  2783 ;; Defined at:
  2784 ;;		line 70 in file "BLE_Receive.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2798 ;;      Params:         0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    3
  2805 ;; This function calls:
  2806 ;;		_EUSART_Write
  2807 ;; This function is called by:
  2808 ;;		_init_B
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _Turn_On
  2814  02D8                     _Turn_On:	
  2815                           
  2816                           ;BLE_Receive.c: 72: EUSART_Write('+');
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in _Turn_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2820  02D8  302B               	movlw	43
  2821  02D9  3181  21DF  3182   	fcall	_EUSART_Write
  2822                           
  2823                           ;BLE_Receive.c: 74: EUSART_Write(13);
  2824  02DC  300D               	movlw	13
  2825  02DD  3181  21DF  3182   	fcall	_EUSART_Write
  2826                           
  2827                           ;BLE_Receive.c: 75: EUSART_Write(10);
  2828  02E0  300A               	movlw	10
  2829  02E1  3181  21DF         	fcall	_EUSART_Write
  2830  02E3  0008               	return
  2831  02E4                     __end_of_Turn_On:	
  2832                           
  2833                           	psect	text10
  2834  0151                     __ptext10:	
  2835 ;; *************** function _Set_Mode *****************
  2836 ;; Defined at:
  2837 ;;		line 39 in file "BLE_Receive.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2851 ;;      Params:         0       0       0       0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    3
  2858 ;; This function calls:
  2859 ;;		_EUSART_Write
  2860 ;; This function is called by:
  2861 ;;		_init_B
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _Set_Mode
  2867  0151                     _Set_Mode:	
  2868                           
  2869                           ;BLE_Receive.c: 42: EUSART_Write('S');
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _Set_Mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2873  0151  3053               	movlw	83
  2874  0152  3181  21DF  3181   	fcall	_EUSART_Write
  2875                           
  2876                           ;BLE_Receive.c: 43: EUSART_Write('S');
  2877  0155  3053               	movlw	83
  2878  0156  3181  21DF  3181   	fcall	_EUSART_Write
  2879                           
  2880                           ;BLE_Receive.c: 44: EUSART_Write(',');
  2881  0159  302C               	movlw	44
  2882  015A  3181  21DF  3181   	fcall	_EUSART_Write
  2883                           
  2884                           ;BLE_Receive.c: 45: EUSART_Write('3');
  2885  015D  3033               	movlw	51
  2886  015E  3181  21DF  3181   	fcall	_EUSART_Write
  2887                           
  2888                           ;BLE_Receive.c: 46: EUSART_Write('0');
  2889  0161  3030               	movlw	48
  2890  0162  3181  21DF  3181   	fcall	_EUSART_Write
  2891                           
  2892                           ;BLE_Receive.c: 47: EUSART_Write('0');
  2893  0165  3030               	movlw	48
  2894  0166  3181  21DF  3181   	fcall	_EUSART_Write
  2895                           
  2896                           ;BLE_Receive.c: 48: EUSART_Write('0');
  2897  0169  3030               	movlw	48
  2898  016A  3181  21DF  3181   	fcall	_EUSART_Write
  2899                           
  2900                           ;BLE_Receive.c: 49: EUSART_Write('0');
  2901  016D  3030               	movlw	48
  2902  016E  3181  21DF  3181   	fcall	_EUSART_Write
  2903                           
  2904                           ;BLE_Receive.c: 50: EUSART_Write('0');
  2905  0171  3030               	movlw	48
  2906  0172  3181  21DF  3181   	fcall	_EUSART_Write
  2907                           
  2908                           ;BLE_Receive.c: 51: EUSART_Write('0');
  2909  0175  3030               	movlw	48
  2910  0176  3181  21DF  3181   	fcall	_EUSART_Write
  2911                           
  2912                           ;BLE_Receive.c: 52: EUSART_Write('0');
  2913  0179  3030               	movlw	48
  2914  017A  3181  21DF  3181   	fcall	_EUSART_Write
  2915                           
  2916                           ;BLE_Receive.c: 55: EUSART_Write(13);
  2917  017D  300D               	movlw	13
  2918  017E  3181  21DF  3181   	fcall	_EUSART_Write
  2919                           
  2920                           ;BLE_Receive.c: 56: EUSART_Write(10);
  2921  0181  300A               	movlw	10
  2922  0182  3181  21DF         	fcall	_EUSART_Write
  2923  0184  0008               	return
  2924  0185                     __end_of_Set_Mode:	
  2925                           
  2926                           	psect	text11
  2927  0185                     __ptext11:	
  2928 ;; *************** function _Set_Features *****************
  2929 ;; Defined at:
  2930 ;;		line 20 in file "BLE_Receive.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2944 ;;      Params:         0       0       0       0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0
  2947 ;;      Totals:         0       0       0       0       0       0       0       0
  2948 ;;Total ram usage:        0 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    3
  2951 ;; This function calls:
  2952 ;;		_EUSART_Write
  2953 ;; This function is called by:
  2954 ;;		_init_B
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function _Set_Features
  2960  0185                     _Set_Features:	
  2961                           
  2962                           ;BLE_Receive.c: 22: EUSART_Write('S');
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _Set_Features: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2966  0185  3053               	movlw	83
  2967  0186  3181  21DF  3181   	fcall	_EUSART_Write
  2968                           
  2969                           ;BLE_Receive.c: 23: EUSART_Write('R');
  2970  0189  3052               	movlw	82
  2971  018A  3181  21DF  3181   	fcall	_EUSART_Write
  2972                           
  2973                           ;BLE_Receive.c: 24: EUSART_Write(',');
  2974  018D  302C               	movlw	44
  2975  018E  3181  21DF  3181   	fcall	_EUSART_Write
  2976                           
  2977                           ;BLE_Receive.c: 26: EUSART_Write('3');
  2978  0191  3033               	movlw	51
  2979  0192  3181  21DF  3181   	fcall	_EUSART_Write
  2980                           
  2981                           ;BLE_Receive.c: 27: EUSART_Write('2');
  2982  0195  3032               	movlw	50
  2983  0196  3181  21DF  3181   	fcall	_EUSART_Write
  2984                           
  2985                           ;BLE_Receive.c: 28: EUSART_Write('0');
  2986  0199  3030               	movlw	48
  2987  019A  3181  21DF  3181   	fcall	_EUSART_Write
  2988                           
  2989                           ;BLE_Receive.c: 29: EUSART_Write('0');
  2990  019D  3030               	movlw	48
  2991  019E  3181  21DF  3181   	fcall	_EUSART_Write
  2992                           
  2993                           ;BLE_Receive.c: 30: EUSART_Write('0');
  2994  01A1  3030               	movlw	48
  2995  01A2  3181  21DF  3181   	fcall	_EUSART_Write
  2996                           
  2997                           ;BLE_Receive.c: 31: EUSART_Write('0');
  2998  01A5  3030               	movlw	48
  2999  01A6  3181  21DF  3181   	fcall	_EUSART_Write
  3000                           
  3001                           ;BLE_Receive.c: 32: EUSART_Write('0');
  3002  01A9  3030               	movlw	48
  3003  01AA  3181  21DF  3181   	fcall	_EUSART_Write
  3004                           
  3005                           ;BLE_Receive.c: 33: EUSART_Write('0');
  3006  01AD  3030               	movlw	48
  3007  01AE  3181  21DF  3181   	fcall	_EUSART_Write
  3008                           
  3009                           ;BLE_Receive.c: 35: EUSART_Write(13);
  3010  01B1  300D               	movlw	13
  3011  01B2  3181  21DF  3181   	fcall	_EUSART_Write
  3012                           
  3013                           ;BLE_Receive.c: 36: EUSART_Write(10);
  3014  01B5  300A               	movlw	10
  3015  01B6  3181  21DF         	fcall	_EUSART_Write
  3016  01B8  0008               	return
  3017  01B9                     __end_of_Set_Features:	
  3018                           
  3019                           	psect	text12
  3020  02A3                     __ptext12:	
  3021 ;; *************** function _Reboot *****************
  3022 ;; Defined at:
  3023 ;;		line 60 in file "BLE_Receive.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3037 ;;      Params:         0       0       0       0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    3
  3044 ;; This function calls:
  3045 ;;		_EUSART_Write
  3046 ;; This function is called by:
  3047 ;;		_init_B
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function _Reboot
  3053  02A3                     _Reboot:	
  3054                           
  3055                           ;BLE_Receive.c: 62: EUSART_Write('R');
  3056                           
  3057                           ;incstack = 0
  3058                           ; Regs used in _Reboot: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3059  02A3  3052               	movlw	82
  3060  02A4  3181  21DF  3182   	fcall	_EUSART_Write
  3061                           
  3062                           ;BLE_Receive.c: 63: EUSART_Write(',');
  3063  02A7  302C               	movlw	44
  3064  02A8  3181  21DF  3182   	fcall	_EUSART_Write
  3065                           
  3066                           ;BLE_Receive.c: 64: EUSART_Write('1');
  3067  02AB  3031               	movlw	49
  3068  02AC  3181  21DF  3182   	fcall	_EUSART_Write
  3069                           
  3070                           ;BLE_Receive.c: 66: EUSART_Write(13);
  3071  02AF  300D               	movlw	13
  3072  02B0  3181  21DF  3182   	fcall	_EUSART_Write
  3073                           
  3074                           ;BLE_Receive.c: 67: EUSART_Write(10);
  3075  02B3  300A               	movlw	10
  3076  02B4  3181  21DF         	fcall	_EUSART_Write
  3077  02B6  0008               	return
  3078  02B7                     __end_of_Reboot:	
  3079                           
  3080                           	psect	text13
  3081  028B                     __ptext13:	
  3082 ;; *************** function _Partiel_Reset *****************
  3083 ;; Defined at:
  3084 ;;		line 7 in file "BLE_Receive.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3098 ;;      Params:         0       0       0       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    3
  3105 ;; This function calls:
  3106 ;;		_EUSART_Write
  3107 ;; This function is called by:
  3108 ;;		_init_B
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _Partiel_Reset
  3114  028B                     _Partiel_Reset:	
  3115                           
  3116                           ;BLE_Receive.c: 10: EUSART_Write('S');
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in _Partiel_Reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3120  028B  3053               	movlw	83
  3121  028C  3181  21DF  3182   	fcall	_EUSART_Write
  3122                           
  3123                           ;BLE_Receive.c: 11: EUSART_Write('F');
  3124  028F  3046               	movlw	70
  3125  0290  3181  21DF  3182   	fcall	_EUSART_Write
  3126                           
  3127                           ;BLE_Receive.c: 12: EUSART_Write(',');
  3128  0293  302C               	movlw	44
  3129  0294  3181  21DF  3182   	fcall	_EUSART_Write
  3130                           
  3131                           ;BLE_Receive.c: 13: EUSART_Write('1');
  3132  0297  3031               	movlw	49
  3133  0298  3181  21DF  3182   	fcall	_EUSART_Write
  3134                           
  3135                           ;BLE_Receive.c: 15: EUSART_Write(13);
  3136  029B  300D               	movlw	13
  3137  029C  3181  21DF  3182   	fcall	_EUSART_Write
  3138                           
  3139                           ;BLE_Receive.c: 16: EUSART_Write(10);
  3140  029F  300A               	movlw	10
  3141  02A0  3181  21DF         	fcall	_EUSART_Write
  3142  02A2  0008               	return
  3143  02A3                     __end_of_Partiel_Reset:	
  3144                           
  3145                           	psect	text14
  3146  01DF                     __ptext14:	
  3147 ;; *************** function _EUSART_Write *****************
  3148 ;; Defined at:
  3149 ;;		line 128 in file "mcc_generated_files/eusart.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  txData          1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  txData          1    3[COMMON] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3163 ;;      Params:         0       0       0       0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0
  3165 ;;      Temps:          1       0       0       0       0       0       0       0
  3166 ;;      Totals:         2       0       0       0       0       0       0       0
  3167 ;;Total ram usage:        2 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    2
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_Partiel_Reset
  3174 ;;		_Set_Features
  3175 ;;		_Set_Mode
  3176 ;;		_Reboot
  3177 ;;		_Turn_On
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _EUSART_Write
  3183  01DF                     _EUSART_Write:	
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3187                           ;EUSART_Write@txData stored from wreg
  3188  01DF  00F3               	movwf	EUSART_Write@txData
  3189  01E0                     l1278:	
  3190                           ;eusart.c: 131: {
  3191                           
  3192                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
  3193                           
  3194  01E0  0021               	movlb	1	; select bank1
  3195  01E1  0832               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  3196  01E2  1903               	btfsc	3,2
  3197  01E3  29E0               	goto	l1278
  3198                           
  3199                           ;eusart.c: 132: }
  3200                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
  3201  01E4  1A11               	btfsc	17,4	;volatile
  3202  01E5  29EA               	goto	l50
  3203                           
  3204                           ;eusart.c: 135: {
  3205                           ;eusart.c: 136: TXREG = txData;
  3206  01E6  0873               	movf	EUSART_Write@txData,w
  3207  01E7  0023               	movlb	3	; select bank3
  3208  01E8  009A               	movwf	26	;volatile
  3209                           
  3210                           ;eusart.c: 137: }
  3211  01E9  29FD               	goto	l1292
  3212  01EA                     l50:	
  3213                           
  3214                           ;eusart.c: 138: else
  3215                           ;eusart.c: 139: {
  3216                           ;eusart.c: 140: PIE1bits.TXIE = 0;
  3217  01EA  1211               	bcf	17,4	;volatile
  3218                           
  3219                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
  3220  01EB  0873               	movf	EUSART_Write@txData,w
  3221  01EC  00F2               	movwf	??_EUSART_Write
  3222  01ED  087B               	movf	_eusartTxHead,w
  3223  01EE  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3224  01EF  0086               	movwf	6
  3225  01F0  0187               	clrf	7
  3226  01F1  0872               	movf	??_EUSART_Write,w
  3227  01F2  0081               	movwf	1
  3228  01F3  3001               	movlw	1
  3229  01F4  00F2               	movwf	??_EUSART_Write
  3230  01F5  0872               	movf	??_EUSART_Write,w
  3231  01F6  07FB               	addwf	_eusartTxHead,f	;volatile
  3232                           
  3233                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3234  01F7  3008               	movlw	8
  3235  01F8  027B               	subwf	_eusartTxHead,w	;volatile
  3236  01F9  1803               	btfsc	3,0
  3237                           
  3238                           ;eusart.c: 143: {
  3239                           ;eusart.c: 144: eusartTxHead = 0;
  3240  01FA  01FB               	clrf	_eusartTxHead	;volatile
  3241                           
  3242                           ;eusart.c: 145: }
  3243                           ;eusart.c: 146: eusartTxBufferRemaining--;
  3244  01FB  3001               	movlw	1
  3245  01FC  02B2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  3246  01FD                     l1292:	
  3247                           
  3248                           ;eusart.c: 147: }
  3249                           ;eusart.c: 148: PIE1bits.TXIE = 1;
  3250  01FD  0021               	movlb	1	; select bank1
  3251  01FE  1611               	bsf	17,4	;volatile
  3252  01FF  0008               	return
  3253  0200                     __end_of_EUSART_Write:	
  3254                           
  3255                           	psect	text15
  3256  02E4                     __ptext15:	
  3257 ;; *************** function _SYSTEM_Initialize *****************
  3258 ;; Defined at:
  3259 ;;		line 77 in file "mcc_generated_files/mcc.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3273 ;;      Params:         0       0       0       0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		_EUSART_Initialize
  3282 ;;		_OSCILLATOR_Initialize
  3283 ;;		_PIN_MANAGER_Initialize
  3284 ;;		_TMR1_Initialize
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _SYSTEM_Initialize
  3292  02E4                     _SYSTEM_Initialize:	
  3293                           
  3294                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3298  02E4  3182  2271  3182   	fcall	_PIN_MANAGER_Initialize
  3299                           
  3300                           ;mcc.c: 80: OSCILLATOR_Initialize();
  3301  02E7  3182  22FE  3182   	fcall	_OSCILLATOR_Initialize
  3302                           
  3303                           ;mcc.c: 81: TMR1_Initialize();
  3304  02EA  3182  22B7  3182   	fcall	_TMR1_Initialize
  3305                           
  3306                           ;mcc.c: 82: EUSART_Initialize();
  3307  02ED  3182  223A         	fcall	_EUSART_Initialize
  3308  02EF  0008               	return
  3309  02F0                     __end_of_SYSTEM_Initialize:	
  3310                           
  3311                           	psect	text16
  3312  02B7                     __ptext16:	
  3313 ;; *************** function _TMR1_Initialize *****************
  3314 ;; Defined at:
  3315 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3329 ;;      Params:         0       0       0       0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0
  3332 ;;      Totals:         0       0       0       0       0       0       0       0
  3333 ;;Total ram usage:        0 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    2
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_SYSTEM_Initialize
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _TMR1_Initialize
  3345  02B7                     _TMR1_Initialize:	
  3346                           
  3347                           ;tmr1.c: 67: T1GCON = 0x00;
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  3351  02B7  0020               	movlb	0	; select bank0
  3352  02B8  0199               	clrf	25	;volatile
  3353                           
  3354                           ;tmr1.c: 70: TMR1H = 0xF0;
  3355  02B9  30F0               	movlw	240
  3356  02BA  0097               	movwf	23	;volatile
  3357                           
  3358                           ;tmr1.c: 73: TMR1L = 0x60;
  3359  02BB  3060               	movlw	96
  3360  02BC  0096               	movwf	22	;volatile
  3361                           
  3362                           ;tmr1.c: 76: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3363  02BD  0817               	movf	23,w	;volatile
  3364  02BE  0021               	movlb	1	; select bank1
  3365  02BF  00B1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  3366  02C0  0020               	movlb	0	; select bank0
  3367  02C1  0816               	movf	22,w	;volatile
  3368  02C2  0021               	movlb	1	; select bank1
  3369  02C3  00B0               	movwf	_timer1ReloadVal^(0+128)	;volatile
  3370                           
  3371                           ;tmr1.c: 79: PIR1bits.TMR1IF = 0;
  3372  02C4  0020               	movlb	0	; select bank0
  3373  02C5  1011               	bcf	17,0	;volatile
  3374                           
  3375                           ;tmr1.c: 82: T1CON = 0x01;
  3376  02C6  3001               	movlw	1
  3377  02C7  0098               	movwf	24	;volatile
  3378  02C8  0008               	return
  3379  02C9                     __end_of_TMR1_Initialize:	
  3380                           
  3381                           	psect	text17
  3382  0271                     __ptext17:	
  3383 ;; *************** function _PIN_MANAGER_Initialize *****************
  3384 ;; Defined at:
  3385 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3399 ;;      Params:         0       0       0       0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    2
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_SYSTEM_Initialize
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _PIN_MANAGER_Initialize
  3415  0271                     _PIN_MANAGER_Initialize:	
  3416                           
  3417                           ;pin_manager.c: 57: LATA = 0x00;
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3421  0271  0022               	movlb	2	; select bank2
  3422  0272  018C               	clrf	12	;volatile
  3423                           
  3424                           ;pin_manager.c: 58: LATB = 0x00;
  3425  0273  018D               	clrf	13	;volatile
  3426                           
  3427                           ;pin_manager.c: 59: LATC = 0x00;
  3428  0274  018E               	clrf	14	;volatile
  3429                           
  3430                           ;pin_manager.c: 64: TRISA = 0x11;
  3431  0275  3011               	movlw	17
  3432  0276  0021               	movlb	1	; select bank1
  3433  0277  008C               	movwf	12	;volatile
  3434                           
  3435                           ;pin_manager.c: 65: TRISB = 0x70;
  3436  0278  3070               	movlw	112
  3437  0279  008D               	movwf	13	;volatile
  3438                           
  3439                           ;pin_manager.c: 66: TRISC = 0xDE;
  3440  027A  30DE               	movlw	222
  3441  027B  008E               	movwf	14	;volatile
  3442                           
  3443                           ;pin_manager.c: 71: ANSELC = 0xCF;
  3444  027C  30CF               	movlw	207
  3445  027D  0023               	movlb	3	; select bank3
  3446  027E  008E               	movwf	14	;volatile
  3447                           
  3448                           ;pin_manager.c: 72: ANSELB = 0xD0;
  3449  027F  30D0               	movlw	208
  3450  0280  008D               	movwf	13	;volatile
  3451                           
  3452                           ;pin_manager.c: 73: ANSELA = 0x17;
  3453  0281  3017               	movlw	23
  3454  0282  008C               	movwf	12	;volatile
  3455                           
  3456                           ;pin_manager.c: 78: WPUB = 0x00;
  3457  0283  0024               	movlb	4	; select bank4
  3458  0284  018D               	clrf	13	;volatile
  3459                           
  3460                           ;pin_manager.c: 79: WPUA = 0x00;
  3461  0285  018C               	clrf	12	;volatile
  3462                           
  3463                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  3464  0286  0021               	movlb	1	; select bank1
  3465  0287  1795               	bsf	21,7	;volatile
  3466                           
  3467                           ;pin_manager.c: 86: APFCON = 0x00;
  3468  0288  0022               	movlb	2	; select bank2
  3469  0289  019D               	clrf	29	;volatile
  3470  028A  0008               	return
  3471  028B                     __end_of_PIN_MANAGER_Initialize:	
  3472                           
  3473                           	psect	text18
  3474  02FE                     __ptext18:	
  3475 ;; *************** function _OSCILLATOR_Initialize *****************
  3476 ;; Defined at:
  3477 ;;		line 85 in file "mcc_generated_files/mcc.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3491 ;;      Params:         0       0       0       0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_SYSTEM_Initialize
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _OSCILLATOR_Initialize
  3507  02FE                     _OSCILLATOR_Initialize:	
  3508                           
  3509                           ;mcc.c: 88: OSCCON = 0x78;
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3513  02FE  3078               	movlw	120
  3514  02FF  0021               	movlb	1	; select bank1
  3515  0300  0099               	movwf	25	;volatile
  3516                           
  3517                           ;mcc.c: 92: BORCON = 0x00;
  3518  0301  0022               	movlb	2	; select bank2
  3519  0302  0196               	clrf	22	;volatile
  3520  0303  0008               	return
  3521  0304                     __end_of_OSCILLATOR_Initialize:	
  3522                           
  3523                           	psect	text19
  3524  023A                     __ptext19:	
  3525 ;; *************** function _EUSART_Initialize *****************
  3526 ;; Defined at:
  3527 ;;		line 72 in file "mcc_generated_files/eusart.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3541 ;;      Params:         0       0       0       0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0
  3543 ;;      Temps:          1       0       0       0       0       0       0       0
  3544 ;;      Totals:         1       0       0       0       0       0       0       0
  3545 ;;Total ram usage:        1 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    2
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_SYSTEM_Initialize
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           
  3556                           ;psect for function _EUSART_Initialize
  3557  023A                     _EUSART_Initialize:	
  3558                           
  3559                           ;eusart.c: 75: PIE1bits.RCIE = 0;
  3560                           
  3561                           ;incstack = 0
  3562                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3563  023A  0021               	movlb	1	; select bank1
  3564  023B  1291               	bcf	17,5	;volatile
  3565                           
  3566                           ;eusart.c: 76: PIE1bits.TXIE = 0;
  3567  023C  1211               	bcf	17,4	;volatile
  3568                           
  3569                           ;eusart.c: 80: BAUDCON = 0x08;
  3570  023D  3008               	movlw	8
  3571  023E  0023               	movlb	3	; select bank3
  3572  023F  009F               	movwf	31	;volatile
  3573                           
  3574                           ;eusart.c: 83: RCSTA = 0x90;
  3575  0240  3090               	movlw	144
  3576  0241  009D               	movwf	29	;volatile
  3577                           
  3578                           ;eusart.c: 86: TXSTA = 0x24;
  3579  0242  3024               	movlw	36
  3580  0243  009E               	movwf	30	;volatile
  3581                           
  3582                           ;eusart.c: 89: SPBRGL = 0x22;
  3583  0244  3022               	movlw	34
  3584  0245  009B               	movwf	27	;volatile
  3585                           
  3586                           ;eusart.c: 92: SPBRGH = 0x00;
  3587  0246  019C               	clrf	28	;volatile
  3588                           
  3589                           ;eusart.c: 96: eusartTxHead = 0;
  3590  0247  01FB               	clrf	_eusartTxHead	;volatile
  3591                           
  3592                           ;eusart.c: 97: eusartTxTail = 0;
  3593  0248  0020               	movlb	0	; select bank0
  3594  0249  01EE               	clrf	_eusartTxTail	;volatile
  3595                           
  3596                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3597  024A  3008               	movlw	8
  3598  024B  00F2               	movwf	??_EUSART_Initialize
  3599  024C  0872               	movf	??_EUSART_Initialize,w
  3600  024D  0021               	movlb	1	; select bank1
  3601  024E  00B2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  3602                           
  3603                           ;eusart.c: 100: eusartRxHead = 0;
  3604  024F  0020               	movlb	0	; select bank0
  3605  0250  01ED               	clrf	_eusartRxHead	;volatile
  3606                           
  3607                           ;eusart.c: 101: eusartRxTail = 0;
  3608  0251  01EC               	clrf	_eusartRxTail	;volatile
  3609                           
  3610                           ;eusart.c: 102: eusartRxCount = 0;
  3611  0252  01FA               	clrf	_eusartRxCount	;volatile
  3612                           
  3613                           ;eusart.c: 105: PIE1bits.RCIE = 1;
  3614  0253  0021               	movlb	1	; select bank1
  3615  0254  1691               	bsf	17,5	;volatile
  3616  0255  0008               	return
  3617  0256                     __end_of_EUSART_Initialize:	
  3618                           
  3619                           	psect	text20
  3620  030A                     __ptext20:	
  3621 ;; *************** function _ReturnReg *****************
  3622 ;; Defined at:
  3623 ;;		line 134 in file "BLE_Receive.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      unsigned char 
  3630 ;; Registers used:
  3631 ;;		wreg
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3637 ;;      Params:         0       0       0       0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0
  3640 ;;      Totals:         0       0       0       0       0       0       0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    2
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function _ReturnReg
  3653  030A                     _ReturnReg:	
  3654                           
  3655                           ;BLE_Receive.c: 135: return RCREG;
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _ReturnReg: [wreg]
  3659  030A  0023               	movlb	3	; select bank3
  3660  030B  0819               	movf	25,w	;volatile
  3661  030C  0008               	return
  3662  030D                     __end_of_ReturnReg:	
  3663                           
  3664                           	psect	intentry
  3665  0004                     __pintentry:	
  3666 ;; *************** function _INTERRUPT_InterruptManager *****************
  3667 ;; Defined at:
  3668 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3682 ;;      Params:         0       0       0       0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0
  3684 ;;      Temps:          1       0       0       0       0       0       0       0
  3685 ;;      Totals:         1       0       0       0       0       0       0       0
  3686 ;;Total ram usage:        1 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    1
  3689 ;; This function calls:
  3690 ;;		_EUSART_Receive_ISR
  3691 ;;		_EUSART_Transmit_ISR
  3692 ;; This function is called by:
  3693 ;;		Interrupt level 1
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697  0004                     _INTERRUPT_InterruptManager:	
  3698                           
  3699                           ;incstack = 0
  3700  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3701                           
  3702                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3703  0005  3180               	pagesel	$
  3704  0006  0020               	movlb	0	; select bank0
  3705  0007  087F               	movf	127,w
  3706  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3707                           
  3708                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  3709  0009  1F0B               	btfss	11,6	;volatile
  3710  000A  281D               	goto	i1l117
  3711                           
  3712                           ;interrupt_manager.c: 55: {
  3713                           ;interrupt_manager.c: 56: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3714  000B  0021               	movlb	1	; select bank1
  3715  000C  1E11               	btfss	17,4	;volatile
  3716  000D  2815               	goto	i1l112
  3717  000E  0020               	movlb	0	; select bank0
  3718  000F  1E11               	btfss	17,4	;volatile
  3719  0010  2815               	goto	i1l112
  3720                           
  3721                           ;interrupt_manager.c: 57: {
  3722                           ;interrupt_manager.c: 58: EUSART_Transmit_ISR();
  3723  0011  3182  2200  3180   	fcall	_EUSART_Transmit_ISR
  3724                           
  3725                           ;interrupt_manager.c: 59: }
  3726  0014  281D               	goto	i1l117
  3727  0015                     i1l112:	
  3728                           
  3729                           ;interrupt_manager.c: 60: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3730  0015  0021               	movlb	1	; select bank1
  3731  0016  1E91               	btfss	17,5	;volatile
  3732  0017  281D               	goto	i1l117
  3733  0018  0020               	movlb	0	; select bank0
  3734  0019  1E91               	btfss	17,5	;volatile
  3735  001A  281D               	goto	i1l117
  3736                           
  3737                           ;interrupt_manager.c: 61: {
  3738                           ;interrupt_manager.c: 62: EUSART_Receive_ISR();
  3739  001B  3182  2256         	fcall	_EUSART_Receive_ISR
  3740  001D                     i1l117:	
  3741                           ;interrupt_manager.c: 69: else
  3742                           ;interrupt_manager.c: 70: {
  3743                           
  3744                           ;interrupt_manager.c: 67: }
  3745                           ;interrupt_manager.c: 68: }
  3746                           
  3747                           ;interrupt_manager.c: 64: else
  3748                           ;interrupt_manager.c: 65: {
  3749                           
  3750                           ;interrupt_manager.c: 63: }
  3751                           
  3752  001D  0871               	movf	??_INTERRUPT_InterruptManager,w
  3753  001E  0020               	movlb	0	; select bank0
  3754  001F  00FF               	movwf	127
  3755  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3756  0021  0009               	retfie
  3757  0022                     __end_of_INTERRUPT_InterruptManager:	
  3758                           
  3759                           	psect	text22
  3760  0200                     __ptext22:	
  3761 ;; *************** function _EUSART_Transmit_ISR *****************
  3762 ;; Defined at:
  3763 ;;		line 152 in file "mcc_generated_files/eusart.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3777 ;;      Params:         0       0       0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0
  3779 ;;      Temps:          1       0       0       0       0       0       0       0
  3780 ;;      Totals:         1       0       0       0       0       0       0       0
  3781 ;;Total ram usage:        1 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_INTERRUPT_InterruptManager
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _EUSART_Transmit_ISR
  3792  0200                     _EUSART_Transmit_ISR:	
  3793                           
  3794                           ;eusart.c: 156: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  3795                           
  3796                           ;incstack = 0
  3797                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3798  0200  3008               	movlw	8
  3799  0201  0021               	movlb	1	; select bank1
  3800  0202  0232               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
  3801  0203  1803               	skipnc
  3802  0204  2A1C               	goto	i1l56
  3803                           
  3804                           ;eusart.c: 157: {
  3805                           ;eusart.c: 158: TXREG = eusartTxBuffer[eusartTxTail++];
  3806  0205  0020               	movlb	0	; select bank0
  3807  0206  086E               	movf	_eusartTxTail,w
  3808  0207  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3809  0208  0086               	movwf	6
  3810  0209  0187               	clrf	7
  3811  020A  0801               	movf	1,w
  3812  020B  0023               	movlb	3	; select bank3
  3813  020C  009A               	movwf	26	;volatile
  3814  020D  3001               	movlw	1
  3815  020E  00F0               	movwf	??_EUSART_Transmit_ISR
  3816  020F  0870               	movf	??_EUSART_Transmit_ISR,w
  3817  0210  0020               	movlb	0	; select bank0
  3818  0211  07EE               	addwf	_eusartTxTail,f	;volatile
  3819                           
  3820                           ;eusart.c: 159: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3821  0212  3008               	movlw	8
  3822  0213  026E               	subwf	_eusartTxTail,w	;volatile
  3823  0214  1803               	btfsc	3,0
  3824                           
  3825                           ;eusart.c: 160: {
  3826                           ;eusart.c: 161: eusartTxTail = 0;
  3827  0215  01EE               	clrf	_eusartTxTail	;volatile
  3828                           
  3829                           ;eusart.c: 162: }
  3830                           ;eusart.c: 163: eusartTxBufferRemaining++;
  3831  0216  3001               	movlw	1
  3832  0217  00F0               	movwf	??_EUSART_Transmit_ISR
  3833  0218  0870               	movf	??_EUSART_Transmit_ISR,w
  3834  0219  0021               	movlb	1	; select bank1
  3835  021A  07B2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  3836                           
  3837                           ;eusart.c: 164: }
  3838  021B  0008               	return
  3839  021C                     i1l56:	
  3840                           
  3841                           ;eusart.c: 165: else
  3842                           ;eusart.c: 166: {
  3843                           ;eusart.c: 167: PIE1bits.TXIE = 0;
  3844  021C  1211               	bcf	17,4	;volatile
  3845  021D  0008               	return
  3846  021E                     __end_of_EUSART_Transmit_ISR:	
  3847                           
  3848                           	psect	text23
  3849  0256                     __ptext23:	
  3850 ;; *************** function _EUSART_Receive_ISR *****************
  3851 ;; Defined at:
  3852 ;;		line 171 in file "mcc_generated_files/eusart.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3866 ;;      Params:         0       0       0       0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0
  3868 ;;      Temps:          1       0       0       0       0       0       0       0
  3869 ;;      Totals:         1       0       0       0       0       0       0       0
  3870 ;;Total ram usage:        1 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_INTERRUPT_InterruptManager
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _EUSART_Receive_ISR
  3881  0256                     _EUSART_Receive_ISR:	
  3882                           
  3883                           ;eusart.c: 174: if(1 == RCSTAbits.OERR)
  3884                           
  3885                           ;incstack = 0
  3886                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3887  0256  0023               	movlb	3	; select bank3
  3888  0257  1C9D               	btfss	29,1	;volatile
  3889  0258  2A5B               	goto	i1l1148
  3890                           
  3891                           ;eusart.c: 175: {
  3892                           ;eusart.c: 178: RCSTAbits.CREN = 0;
  3893  0259  121D               	bcf	29,4	;volatile
  3894                           
  3895                           ;eusart.c: 179: RCSTAbits.CREN = 1;
  3896  025A  161D               	bsf	29,4	;volatile
  3897  025B                     i1l1148:	
  3898                           
  3899                           ;eusart.c: 180: }
  3900                           ;eusart.c: 183: eusartRxBuffer[eusartRxHead++] = RCREG;
  3901  025B  0819               	movf	25,w	;volatile
  3902  025C  00F0               	movwf	??_EUSART_Receive_ISR
  3903  025D  0020               	movlb	0	; select bank0
  3904  025E  086D               	movf	_eusartRxHead,w
  3905  025F  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3906  0260  0086               	movwf	6
  3907  0261  0187               	clrf	7
  3908  0262  0870               	movf	??_EUSART_Receive_ISR,w
  3909  0263  0081               	movwf	1
  3910  0264  3001               	movlw	1
  3911  0265  00F0               	movwf	??_EUSART_Receive_ISR
  3912  0266  0870               	movf	??_EUSART_Receive_ISR,w
  3913  0267  07ED               	addwf	_eusartRxHead,f	;volatile
  3914                           
  3915                           ;eusart.c: 184: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3916  0268  3008               	movlw	8
  3917  0269  026D               	subwf	_eusartRxHead,w	;volatile
  3918  026A  1803               	btfsc	3,0
  3919                           
  3920                           ;eusart.c: 185: {
  3921                           ;eusart.c: 186: eusartRxHead = 0;
  3922  026B  01ED               	clrf	_eusartRxHead	;volatile
  3923                           
  3924                           ;eusart.c: 187: }
  3925                           ;eusart.c: 188: eusartRxCount++;
  3926  026C  3001               	movlw	1
  3927  026D  00F0               	movwf	??_EUSART_Receive_ISR
  3928  026E  0870               	movf	??_EUSART_Receive_ISR,w
  3929  026F  07FA               	addwf	_eusartRxCount,f	;volatile
  3930  0270  0008               	return
  3931  0271                     __end_of_EUSART_Receive_ISR:	
  3932  007E                     btemp	set	126	;btemp
  3933  007E                     int$flags	set	126
  3934  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         85
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     76      79
    BANK1            80      3      22
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Verif_Erreur@buf	PTR unsigned char  size(1) Largest target is 64
		 -> init_B@buf(BANK0[64]), 


Critical Paths under _main in COMMON

    _main->_init_B
    _init_B->_delay_ms
    _Verif_Erreur->_delay_ms
    _TMR1_Reload->_TMR1_WriteTimer
    _Turn_On->_EUSART_Write
    _Set_Mode->_EUSART_Write
    _Set_Features->_EUSART_Write
    _Reboot->_EUSART_Write
    _Partiel_Reset->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_init_B
    _init_B->_Verif_Erreur

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3378
                                             74 BANK0      2     2      0
                                              0 BANK1      3     3      0
                          _ReturnReg
                  _SYSTEM_Initialize
                           _delay_ms
                             _init_B
 ---------------------------------------------------------------------------------
 (1) _init_B                                              66    66      0    2626
                                              9 COMMON     1     1      0
                                              9 BANK0     65    65      0
                      _Partiel_Reset
                             _Reboot
                       _Set_Features
                           _Set_Mode
                            _Turn_On
                       _Verif_Erreur
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Verif_Erreur                                         9     7      2    1422
                                              0 BANK0      9     7      2
                        _EUSART_Read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     712
                                              4 COMMON     5     3      2
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Reload                                          0     0      0     189
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_WriteTimer                                      2     0      2     189
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Turn_On                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Set_Mode                                             0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Set_Features                                         0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Reboot                                               0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Partiel_Reset                                        0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReturnReg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReturnReg
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
   _delay_ms
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _init_B
     _Partiel_Reset
       _EUSART_Write
     _Reboot
       _EUSART_Write
     _Set_Features
       _EUSART_Write
     _Set_Mode
       _EUSART_Write
     _Turn_On
       _EUSART_Write
     _Verif_Erreur
       _EUSART_Read
       _delay_ms
         _TMR1_Reload
           _TMR1_WriteTimer
         _TMR1_StartTimer
         _TMR1_StopTimer
     _delay_ms
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StartTimer
       _TMR1_StopTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      16       8       27.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul  4 11:24:28 2018

                        __CFG_CP$OFF 0000                                   l50 01EA  
                        __CFG_LVP$ON 0000                                  l272 01CF  
                                _RA1 0061                                  _RA2 0062  
                                _RA5 0065                                  _RC5 0075  
                                u605 01CD                                  u635 00E9  
                                u680 0049                      _timer1ReloadVal 00B0  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         ?_EUSART_Read 0070  
                               l1310 01DC                                 l1402 0102  
                               l1244 02D3                                 l1308 01C3  
                               l1256 021F                                 l1408 0113  
                               l1370 00B8                                 l1292 01FD  
                               l1380 00CE                                 l1278 01E0  
                               l1390 00EC                                 l1382 00D2  
                               l1470 012E                                 l1396 00F9  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 i1l56 021C  
                               _WPUA 020C                                 _WPUB 020D  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 011C                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0022  
                      __CFG_MCLRE$ON 0000                      Verif_Erreur@buf 0028  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 0304                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      _TMR1_StartTimer 0307  
                              _T1CON 0018                      __end_of_Turn_On 02E4  
                              i1l112 0015                                i1l117 001D  
                              _RCREG 0199                                _RCSTA 019D  
                              _TMR1H 0017                                _TMR1L 0016  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TXREG 019A  
                              _TXSTA 019E                                main@k 00B4  
            __end_of_TMR1_Initialize 02C9                                status 0003  
                              wtemp0 007E                      _TMR1_WriteTimer 02C9  
                    __initialization 0024                          init_B@F4487 0120  
                       __end_of_main 0151                       ??_EUSART_Write 0072  
                     __CFG_LPBOR$OFF 0000          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 006A                     __end_of_Set_Mode 0185  
                   Verif_Erreur@size 0020                          init_B@error 0069  
                             _APFCON 011D                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _BORCON 0116                               _T1GCON 0019  
            TMR1_WriteTimer@timerVal 0072                               i1l1148 025B  
                             _OSCCON 0099                               _TMR1IF 0088  
                             _SPBRGH 019C                               _SPBRGL 019B  
                   __end_of_delay_ms 01DF                       __CFG_PWRTE$OFF 0000  
                             _Reboot 02A3              __end_of_TMR1_StartTimer 030A  
                       ?_TMR1_Reload 0070                       __CFG_STVREN$ON 0000  
                          ??_Turn_On 0074                  _EUSART_Transmit_ISR 0200  
                             _init_B 003D                               main@Bt 00B3  
                 __size_of_ReturnReg 0003                        ?_Set_Features 0070  
            __end_of_TMR1_WriteTimer 02D8                 ?_EUSART_Transmit_ISR 0070  
                   ?_TMR1_Initialize 0070                 __size_of_EUSART_Read 001C  
                  _SYSTEM_Initialize 02E4               __size_of_Partiel_Reset 0018  
            __end_of__initialization 0039                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
                     _OPTION_REGbits 0095                       ??_Set_Features 0074  
          __end_of_SYSTEM_Initialize 02F0                ??_EUSART_Transmit_ISR 0070  
                         __pbssBANK0 006C                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                 __end_of_EUSART_Write 0200  
        __size_of_EUSART_Receive_ISR 001B                    __end_of_ReturnReg 030D  
                          ?_Set_Mode 0070                              ?_Reboot 0070  
                         __pmaintext 011C                     ?_TMR1_StartTimer 0070  
                         __pintentry 0004                              ?_init_B 0070  
                            _BAUDCON 019F                        _Partiel_Reset 028B  
            __size_of_TMR1_StopTimer 0003                        _eusartRxCount 007A  
                          ?_delay_ms 0074                     ?_TMR1_WriteTimer 0072  
                         ??_Set_Mode 0074                      __size_of_Reboot 0014  
                      ?_Verif_Erreur 0020                              _Turn_On 02D8  
                     ?_Partiel_Reset 0070                 __size_of_TMR1_Reload 0008  
                    __size_of_init_B 0075                              __ptext1 003D  
                            __ptext2 00B2                              __ptext3 01B9  
                            __ptext4 0304                              __ptext5 0307  
                            __ptext6 02F0                              __ptext7 02C9  
                            __ptext8 021E                              __ptext9 02D8  
                          _T1CONbits 0018                _OSCILLATOR_Initialize 02FE  
           ??_PIN_MANAGER_Initialize 0072                           ??_delay_ms 0076  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 02F9  
               end_of_initialization 0039                    _EUSART_Initialize 023A  
                 ?_EUSART_Initialize 0070                 __end_of_Set_Features 01B9  
                     ??_Verif_Erreur 0022                            _RCSTAbits 019D  
                ??_EUSART_Initialize 0072                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0021            __end_of_EUSART_Initialize 0256  
                     __end_of_Reboot 02B7                      ??_Partiel_Reset 0074  
                       _EUSART_Write 01DF                       _TMR1_StopTimer 0304  
                     __end_of_init_B 00B2               ?_OSCILLATOR_Initialize 0070  
                start_initialization 0024      __size_of_PIN_MANAGER_Initialize 001A  
                      ??_EUSART_Read 0072                             ??_Reboot 0074  
           __size_of_TMR1_Initialize 0012                    __size_of_Set_Mode 0034  
                          _ReturnReg 030A               __end_of_TMR1_StopTimer 0307  
                           ??_init_B 0079          __end_of_EUSART_Transmit_ISR 021E  
                        __pbssCOMMON 007A                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00B3  
               __end_of_Verif_Erreur 011C                    __size_of_delay_ms 0026  
         __end_of_EUSART_Receive_ISR 0271           __size_of_EUSART_Initialize 001C  
              __size_of_Set_Features 0034                  __end_of_EUSART_Read 023A  
                          __pnvBANK1 00B0               _PIN_MANAGER_Initialize 0271  
               EUSART_Read@readValue 0073                           ?_ReturnReg 0070  
                           ?_Turn_On 0070                         _eusartRxHead 006D  
                    ?_TMR1_StopTimer 0070                         _eusartTxHead 007B  
                       _eusartRxTail 006C                         _eusartTxTail 006E  
       ??_INTERRUPT_InterruptManager 0071              _eusartTxBufferRemaining 00B2  
           __size_of_TMR1_StartTimer 0003                         _Set_Features 0185  
                     _eusartRxBuffer 00A0                       _eusartTxBuffer 00A8  
                           _LATCbits 010E                            delay_ms@x 0077  
                          clear_ram0 02F8                             _PIE1bits 0091  
           __size_of_TMR1_WriteTimer 000F  __size_of_INTERRUPT_InterruptManager 001E  
                           _PIR1bits 0011                        ??_TMR1_Reload 0074  
                  ??_TMR1_Initialize 0072                        Verif_Erreur@i 0024  
                      Verif_Erreur@j 0026                          _EUSART_Read 021E  
                       delay_ms@msec 0074                            init_B@buf 0029  
                           _Set_Mode 0151                          ??_ReturnReg 0072  
            ??_OSCILLATOR_Initialize 0072                     __size_of_Turn_On 000C  
                __end_of_TMR1_Reload 02F8                __size_of_Verif_Erreur 006A  
                           _delay_ms 01B9                             __ptext10 0151  
                           __ptext11 0185                             __ptext20 030A  
                           __ptext12 02A3                             __ptext13 028B  
                         _T1GCONbits 0019                             __ptext22 0200  
                           __ptext14 01DF                             __ptext23 0256  
                           __ptext15 02E4                             __ptext16 02B7  
                           __ptext17 0271                             __ptext18 02FE  
                           __ptext19 023A                    ??_TMR1_StartTimer 0072  
                      __size_of_main 0035                             int$flags 007E  
                       _Verif_Erreur 00B2   __end_of_INTERRUPT_InterruptManager 0022  
         _INTERRUPT_InterruptManager 0004                __end_of_Partiel_Reset 02A3  
                  ??_TMR1_WriteTimer 0074                           _INTCONbits 000B  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                     ??_TMR1_StopTimer 0072  
                        _TMR1_Reload 02F0                   _EUSART_Receive_ISR 0256  
                ?_EUSART_Receive_ISR 0070                   EUSART_Write@txData 0073  
       __size_of_EUSART_Transmit_ISR 001E       __end_of_PIN_MANAGER_Initialize 028B  
               ??_EUSART_Receive_ISR 0070                      _TMR1_Initialize 02B7  
