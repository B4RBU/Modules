

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 13 13:19:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	swtext2,local,class=CONST,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1619 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011C                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029B                     	;# 
   215  029E                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  040E                     	;# 
   232  0413                     	;# 
   233  0413                     	;# 
   234  0414                     	;# 
   235  0414                     	;# 
   236  0415                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  0418                     	;# 
   240  041A                     	;# 
   241  041A                     	;# 
   242  041B                     	;# 
   243  041B                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  041F                     	;# 
   248  0493                     	;# 
   249  0494                     	;# 
   250  0495                     	;# 
   251  0496                     	;# 
   252  049A                     	;# 
   253  049B                     	;# 
   254  049C                     	;# 
   255  049D                     	;# 
   256  058C                     	;# 
   257  058C                     	;# 
   258  058D                     	;# 
   259  058E                     	;# 
   260  058E                     	;# 
   261  058F                     	;# 
   262  0590                     	;# 
   263  0590                     	;# 
   264  0591                     	;# 
   265  0592                     	;# 
   266  0592                     	;# 
   267  0593                     	;# 
   268  0594                     	;# 
   269  0594                     	;# 
   270  0595                     	;# 
   271  0596                     	;# 
   272  0596                     	;# 
   273  0597                     	;# 
   274  0598                     	;# 
   275  0599                     	;# 
   276  059A                     	;# 
   277  059B                     	;# 
   278  059B                     	;# 
   279  059C                     	;# 
   280  059D                     	;# 
   281  060C                     	;# 
   282  060C                     	;# 
   283  060D                     	;# 
   284  060E                     	;# 
   285  060F                     	;# 
   286  060F                     	;# 
   287  0610                     	;# 
   288  0611                     	;# 
   289  0612                     	;# 
   290  0613                     	;# 
   291  0614                     	;# 
   292  0617                     	;# 
   293  0618                     	;# 
   294  0619                     	;# 
   295  061A                     	;# 
   296  061B                     	;# 
   297  061C                     	;# 
   298  0691                     	;# 
   299  0692                     	;# 
   300  0693                     	;# 
   301  0694                     	;# 
   302  0695                     	;# 
   303  0696                     	;# 
   304  0697                     	;# 
   305  0699                     	;# 
   306  069A                     	;# 
   307  0711                     	;# 
   308  0712                     	;# 
   309  0713                     	;# 
   310  0714                     	;# 
   311  0715                     	;# 
   312  0718                     	;# 
   313  0718                     	;# 
   314  0719                     	;# 
   315  071A                     	;# 
   316  071A                     	;# 
   317  071B                     	;# 
   318  071C                     	;# 
   319  071D                     	;# 
   320  0791                     	;# 
   321  0791                     	;# 
   322  0792                     	;# 
   323  0793                     	;# 
   324  0793                     	;# 
   325  0794                     	;# 
   326  0795                     	;# 
   327  0795                     	;# 
   328  0796                     	;# 
   329  0797                     	;# 
   330  0797                     	;# 
   331  0798                     	;# 
   332  0799                     	;# 
   333  079A                     	;# 
   334  080C                     	;# 
   335  080C                     	;# 
   336  080D                     	;# 
   337  080E                     	;# 
   338  080E                     	;# 
   339  080F                     	;# 
   340  0810                     	;# 
   341  0810                     	;# 
   342  0811                     	;# 
   343  0812                     	;# 
   344  0812                     	;# 
   345  0813                     	;# 
   346  0814                     	;# 
   347  0815                     	;# 
   348  0816                     	;# 
   349  0817                     	;# 
   350  0818                     	;# 
   351  0819                     	;# 
   352  081A                     	;# 
   353  081A                     	;# 
   354  081B                     	;# 
   355  081C                     	;# 
   356  081C                     	;# 
   357  081D                     	;# 
   358  088C                     	;# 
   359  088D                     	;# 
   360  088E                     	;# 
   361  088F                     	;# 
   362  088F                     	;# 
   363  0890                     	;# 
   364  0891                     	;# 
   365  0892                     	;# 
   366  0893                     	;# 
   367  0893                     	;# 
   368  0894                     	;# 
   369  0895                     	;# 
   370  0896                     	;# 
   371  0897                     	;# 
   372  0897                     	;# 
   373  0898                     	;# 
   374  0899                     	;# 
   375  0D8C                     	;# 
   376  0D8C                     	;# 
   377  0D8D                     	;# 
   378  0D8E                     	;# 
   379  0D8F                     	;# 
   380  0D8F                     	;# 
   381  0D90                     	;# 
   382  0D91                     	;# 
   383  0D92                     	;# 
   384  0D92                     	;# 
   385  0D93                     	;# 
   386  0D94                     	;# 
   387  0D95                     	;# 
   388  0D95                     	;# 
   389  0D96                     	;# 
   390  0D97                     	;# 
   391  0D98                     	;# 
   392  0D99                     	;# 
   393  0D9A                     	;# 
   394  0D9B                     	;# 
   395  0D9C                     	;# 
   396  0D9D                     	;# 
   397  0D9E                     	;# 
   398  0D9E                     	;# 
   399  0D9F                     	;# 
   400  0DA0                     	;# 
   401  0DA1                     	;# 
   402  0DA1                     	;# 
   403  0DA2                     	;# 
   404  0DA3                     	;# 
   405  0DA4                     	;# 
   406  0DA4                     	;# 
   407  0DA5                     	;# 
   408  0DA6                     	;# 
   409  0DA7                     	;# 
   410  0DA7                     	;# 
   411  0DA8                     	;# 
   412  0DA9                     	;# 
   413  0DAA                     	;# 
   414  0DAB                     	;# 
   415  0DAC                     	;# 
   416  0DAD                     	;# 
   417  0DAE                     	;# 
   418  0DAF                     	;# 
   419  0E0F                     	;# 
   420  0E10                     	;# 
   421  0E11                     	;# 
   422  0E12                     	;# 
   423  0E13                     	;# 
   424  0E14                     	;# 
   425  0E15                     	;# 
   426  0E16                     	;# 
   427  0E17                     	;# 
   428  0E18                     	;# 
   429  0E19                     	;# 
   430  0E1A                     	;# 
   431  0E1B                     	;# 
   432  0E1C                     	;# 
   433  0E1D                     	;# 
   434  0E1E                     	;# 
   435  0E1F                     	;# 
   436  0E20                     	;# 
   437  0E21                     	;# 
   438  0E22                     	;# 
   439  0E23                     	;# 
   440  0E24                     	;# 
   441  0E25                     	;# 
   442  0E26                     	;# 
   443  0E27                     	;# 
   444  0E28                     	;# 
   445  0E29                     	;# 
   446  0E2A                     	;# 
   447  0E2B                     	;# 
   448  0E2C                     	;# 
   449  0E2D                     	;# 
   450  0E2E                     	;# 
   451  0E90                     	;# 
   452  0E91                     	;# 
   453  0E92                     	;# 
   454  0E94                     	;# 
   455  0E95                     	;# 
   456  0E9C                     	;# 
   457  0E9D                     	;# 
   458  0E9E                     	;# 
   459  0E9F                     	;# 
   460  0EA0                     	;# 
   461  0EA1                     	;# 
   462  0EA2                     	;# 
   463  0EA3                     	;# 
   464  0EA4                     	;# 
   465  0EA5                     	;# 
   466  0EA6                     	;# 
   467  0EA7                     	;# 
   468  0F0F                     	;# 
   469  0F10                     	;# 
   470  0F11                     	;# 
   471  0F12                     	;# 
   472  0F13                     	;# 
   473  0F14                     	;# 
   474  0F15                     	;# 
   475  0F16                     	;# 
   476  0F17                     	;# 
   477  0F18                     	;# 
   478  0F19                     	;# 
   479  0F1A                     	;# 
   480  0F1B                     	;# 
   481  0F1C                     	;# 
   482  0F1D                     	;# 
   483  0F1E                     	;# 
   484  0F1F                     	;# 
   485  0F20                     	;# 
   486  0F21                     	;# 
   487  0F22                     	;# 
   488  0F23                     	;# 
   489  0F24                     	;# 
   490  0F25                     	;# 
   491  0F26                     	;# 
   492  0F27                     	;# 
   493  0F28                     	;# 
   494  0F29                     	;# 
   495  0F2A                     	;# 
   496  0F2B                     	;# 
   497  0F2C                     	;# 
   498  0F2D                     	;# 
   499  0F2E                     	;# 
   500  0F2F                     	;# 
   501  0F30                     	;# 
   502  0F31                     	;# 
   503  0F32                     	;# 
   504  0F33                     	;# 
   505  0F34                     	;# 
   506  0F35                     	;# 
   507  0F36                     	;# 
   508  0F37                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0014                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001A                     	;# 
   548  001B                     	;# 
   549  001B                     	;# 
   550  001C                     	;# 
   551  001D                     	;# 
   552  001E                     	;# 
   553  001F                     	;# 
   554  008C                     	;# 
   555  008D                     	;# 
   556  008E                     	;# 
   557  0090                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0093                     	;# 
   561  0094                     	;# 
   562  0095                     	;# 
   563  0096                     	;# 
   564  0098                     	;# 
   565  0099                     	;# 
   566  009A                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  009F                     	;# 
   573  010C                     	;# 
   574  010D                     	;# 
   575  010E                     	;# 
   576  0111                     	;# 
   577  0112                     	;# 
   578  0113                     	;# 
   579  0114                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  011C                     	;# 
   586  018C                     	;# 
   587  018D                     	;# 
   588  018E                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  0197                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  020E                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0212                     	;# 
   630  0213                     	;# 
   631  0213                     	;# 
   632  0214                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  028C                     	;# 
   643  028D                     	;# 
   644  028E                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0294                     	;# 
   650  0298                     	;# 
   651  0298                     	;# 
   652  0299                     	;# 
   653  029A                     	;# 
   654  029B                     	;# 
   655  029E                     	;# 
   656  030C                     	;# 
   657  030D                     	;# 
   658  030E                     	;# 
   659  038C                     	;# 
   660  038D                     	;# 
   661  038E                     	;# 
   662  0391                     	;# 
   663  0392                     	;# 
   664  0393                     	;# 
   665  0394                     	;# 
   666  0395                     	;# 
   667  0396                     	;# 
   668  0397                     	;# 
   669  0398                     	;# 
   670  0399                     	;# 
   671  040E                     	;# 
   672  0413                     	;# 
   673  0413                     	;# 
   674  0414                     	;# 
   675  0414                     	;# 
   676  0415                     	;# 
   677  0416                     	;# 
   678  0417                     	;# 
   679  0418                     	;# 
   680  041A                     	;# 
   681  041A                     	;# 
   682  041B                     	;# 
   683  041B                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  041F                     	;# 
   688  0493                     	;# 
   689  0494                     	;# 
   690  0495                     	;# 
   691  0496                     	;# 
   692  049A                     	;# 
   693  049B                     	;# 
   694  049C                     	;# 
   695  049D                     	;# 
   696  058C                     	;# 
   697  058C                     	;# 
   698  058D                     	;# 
   699  058E                     	;# 
   700  058E                     	;# 
   701  058F                     	;# 
   702  0590                     	;# 
   703  0590                     	;# 
   704  0591                     	;# 
   705  0592                     	;# 
   706  0592                     	;# 
   707  0593                     	;# 
   708  0594                     	;# 
   709  0594                     	;# 
   710  0595                     	;# 
   711  0596                     	;# 
   712  0596                     	;# 
   713  0597                     	;# 
   714  0598                     	;# 
   715  0599                     	;# 
   716  059A                     	;# 
   717  059B                     	;# 
   718  059B                     	;# 
   719  059C                     	;# 
   720  059D                     	;# 
   721  060C                     	;# 
   722  060C                     	;# 
   723  060D                     	;# 
   724  060E                     	;# 
   725  060F                     	;# 
   726  060F                     	;# 
   727  0610                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0614                     	;# 
   732  0617                     	;# 
   733  0618                     	;# 
   734  0619                     	;# 
   735  061A                     	;# 
   736  061B                     	;# 
   737  061C                     	;# 
   738  0691                     	;# 
   739  0692                     	;# 
   740  0693                     	;# 
   741  0694                     	;# 
   742  0695                     	;# 
   743  0696                     	;# 
   744  0697                     	;# 
   745  0699                     	;# 
   746  069A                     	;# 
   747  0711                     	;# 
   748  0712                     	;# 
   749  0713                     	;# 
   750  0714                     	;# 
   751  0715                     	;# 
   752  0718                     	;# 
   753  0718                     	;# 
   754  0719                     	;# 
   755  071A                     	;# 
   756  071A                     	;# 
   757  071B                     	;# 
   758  071C                     	;# 
   759  071D                     	;# 
   760  0791                     	;# 
   761  0791                     	;# 
   762  0792                     	;# 
   763  0793                     	;# 
   764  0793                     	;# 
   765  0794                     	;# 
   766  0795                     	;# 
   767  0795                     	;# 
   768  0796                     	;# 
   769  0797                     	;# 
   770  0797                     	;# 
   771  0798                     	;# 
   772  0799                     	;# 
   773  079A                     	;# 
   774  080C                     	;# 
   775  080C                     	;# 
   776  080D                     	;# 
   777  080E                     	;# 
   778  080E                     	;# 
   779  080F                     	;# 
   780  0810                     	;# 
   781  0810                     	;# 
   782  0811                     	;# 
   783  0812                     	;# 
   784  0812                     	;# 
   785  0813                     	;# 
   786  0814                     	;# 
   787  0815                     	;# 
   788  0816                     	;# 
   789  0817                     	;# 
   790  0818                     	;# 
   791  0819                     	;# 
   792  081A                     	;# 
   793  081A                     	;# 
   794  081B                     	;# 
   795  081C                     	;# 
   796  081C                     	;# 
   797  081D                     	;# 
   798  088C                     	;# 
   799  088D                     	;# 
   800  088E                     	;# 
   801  088F                     	;# 
   802  088F                     	;# 
   803  0890                     	;# 
   804  0891                     	;# 
   805  0892                     	;# 
   806  0893                     	;# 
   807  0893                     	;# 
   808  0894                     	;# 
   809  0895                     	;# 
   810  0896                     	;# 
   811  0897                     	;# 
   812  0897                     	;# 
   813  0898                     	;# 
   814  0899                     	;# 
   815  0D8C                     	;# 
   816  0D8C                     	;# 
   817  0D8D                     	;# 
   818  0D8E                     	;# 
   819  0D8F                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D92                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D94                     	;# 
   827  0D95                     	;# 
   828  0D95                     	;# 
   829  0D96                     	;# 
   830  0D97                     	;# 
   831  0D98                     	;# 
   832  0D99                     	;# 
   833  0D9A                     	;# 
   834  0D9B                     	;# 
   835  0D9C                     	;# 
   836  0D9D                     	;# 
   837  0D9E                     	;# 
   838  0D9E                     	;# 
   839  0D9F                     	;# 
   840  0DA0                     	;# 
   841  0DA1                     	;# 
   842  0DA1                     	;# 
   843  0DA2                     	;# 
   844  0DA3                     	;# 
   845  0DA4                     	;# 
   846  0DA4                     	;# 
   847  0DA5                     	;# 
   848  0DA6                     	;# 
   849  0DA7                     	;# 
   850  0DA7                     	;# 
   851  0DA8                     	;# 
   852  0DA9                     	;# 
   853  0DAA                     	;# 
   854  0DAB                     	;# 
   855  0DAC                     	;# 
   856  0DAD                     	;# 
   857  0DAE                     	;# 
   858  0DAF                     	;# 
   859  0E0F                     	;# 
   860  0E10                     	;# 
   861  0E11                     	;# 
   862  0E12                     	;# 
   863  0E13                     	;# 
   864  0E14                     	;# 
   865  0E15                     	;# 
   866  0E16                     	;# 
   867  0E17                     	;# 
   868  0E18                     	;# 
   869  0E19                     	;# 
   870  0E1A                     	;# 
   871  0E1B                     	;# 
   872  0E1C                     	;# 
   873  0E1D                     	;# 
   874  0E1E                     	;# 
   875  0E1F                     	;# 
   876  0E20                     	;# 
   877  0E21                     	;# 
   878  0E22                     	;# 
   879  0E23                     	;# 
   880  0E24                     	;# 
   881  0E25                     	;# 
   882  0E26                     	;# 
   883  0E27                     	;# 
   884  0E28                     	;# 
   885  0E29                     	;# 
   886  0E2A                     	;# 
   887  0E2B                     	;# 
   888  0E2C                     	;# 
   889  0E2D                     	;# 
   890  0E2E                     	;# 
   891  0E90                     	;# 
   892  0E91                     	;# 
   893  0E92                     	;# 
   894  0E94                     	;# 
   895  0E95                     	;# 
   896  0E9C                     	;# 
   897  0E9D                     	;# 
   898  0E9E                     	;# 
   899  0E9F                     	;# 
   900  0EA0                     	;# 
   901  0EA1                     	;# 
   902  0EA2                     	;# 
   903  0EA3                     	;# 
   904  0EA4                     	;# 
   905  0EA5                     	;# 
   906  0EA6                     	;# 
   907  0EA7                     	;# 
   908  0F0F                     	;# 
   909  0F10                     	;# 
   910  0F11                     	;# 
   911  0F12                     	;# 
   912  0F13                     	;# 
   913  0F14                     	;# 
   914  0F15                     	;# 
   915  0F16                     	;# 
   916  0F17                     	;# 
   917  0F18                     	;# 
   918  0F19                     	;# 
   919  0F1A                     	;# 
   920  0F1B                     	;# 
   921  0F1C                     	;# 
   922  0F1D                     	;# 
   923  0F1E                     	;# 
   924  0F1F                     	;# 
   925  0F20                     	;# 
   926  0F21                     	;# 
   927  0F22                     	;# 
   928  0F23                     	;# 
   929  0F24                     	;# 
   930  0F25                     	;# 
   931  0F26                     	;# 
   932  0F27                     	;# 
   933  0F28                     	;# 
   934  0F29                     	;# 
   935  0F2A                     	;# 
   936  0F2B                     	;# 
   937  0F2C                     	;# 
   938  0F2D                     	;# 
   939  0F2E                     	;# 
   940  0F2F                     	;# 
   941  0F30                     	;# 
   942  0F31                     	;# 
   943  0F32                     	;# 
   944  0F33                     	;# 
   945  0F34                     	;# 
   946  0F35                     	;# 
   947  0F36                     	;# 
   948  0F37                     	;# 
   949  0FE4                     	;# 
   950  0FE5                     	;# 
   951  0FE6                     	;# 
   952  0FE7                     	;# 
   953  0FE8                     	;# 
   954  0FE9                     	;# 
   955  0FEA                     	;# 
   956  0FEB                     	;# 
   957  0FED                     	;# 
   958  0FEE                     	;# 
   959  0FEF                     	;# 
   960  0000                     	;# 
   961  0001                     	;# 
   962  0002                     	;# 
   963  0003                     	;# 
   964  0004                     	;# 
   965  0005                     	;# 
   966  0006                     	;# 
   967  0007                     	;# 
   968  0008                     	;# 
   969  0009                     	;# 
   970  000A                     	;# 
   971  000B                     	;# 
   972  000C                     	;# 
   973  000D                     	;# 
   974  000E                     	;# 
   975  0010                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0013                     	;# 
   979  0014                     	;# 
   980  0015                     	;# 
   981  0016                     	;# 
   982  0016                     	;# 
   983  0017                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  001A                     	;# 
   988  001B                     	;# 
   989  001B                     	;# 
   990  001C                     	;# 
   991  001D                     	;# 
   992  001E                     	;# 
   993  001F                     	;# 
   994  008C                     	;# 
   995  008D                     	;# 
   996  008E                     	;# 
   997  0090                     	;# 
   998  0091                     	;# 
   999  0092                     	;# 
  1000  0093                     	;# 
  1001  0094                     	;# 
  1002  0095                     	;# 
  1003  0096                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009B                     	;# 
  1009  009C                     	;# 
  1010  009D                     	;# 
  1011  009E                     	;# 
  1012  009F                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  0111                     	;# 
  1017  0112                     	;# 
  1018  0113                     	;# 
  1019  0114                     	;# 
  1020  0115                     	;# 
  1021  0116                     	;# 
  1022  0117                     	;# 
  1023  0118                     	;# 
  1024  0119                     	;# 
  1025  011C                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0194                     	;# 
  1035  0195                     	;# 
  1036  0196                     	;# 
  1037  0197                     	;# 
  1038  0199                     	;# 
  1039  0199                     	;# 
  1040  0199                     	;# 
  1041  019A                     	;# 
  1042  019A                     	;# 
  1043  019A                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019C                     	;# 
  1050  019C                     	;# 
  1051  019C                     	;# 
  1052  019D                     	;# 
  1053  019D                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019E                     	;# 
  1057  019E                     	;# 
  1058  019F                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  020C                     	;# 
  1064  020D                     	;# 
  1065  020E                     	;# 
  1066  0211                     	;# 
  1067  0211                     	;# 
  1068  0212                     	;# 
  1069  0212                     	;# 
  1070  0213                     	;# 
  1071  0213                     	;# 
  1072  0214                     	;# 
  1073  0214                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0216                     	;# 
  1079  0216                     	;# 
  1080  0217                     	;# 
  1081  0217                     	;# 
  1082  028C                     	;# 
  1083  028D                     	;# 
  1084  028E                     	;# 
  1085  0291                     	;# 
  1086  0291                     	;# 
  1087  0292                     	;# 
  1088  0293                     	;# 
  1089  0294                     	;# 
  1090  0298                     	;# 
  1091  0298                     	;# 
  1092  0299                     	;# 
  1093  029A                     	;# 
  1094  029B                     	;# 
  1095  029E                     	;# 
  1096  030C                     	;# 
  1097  030D                     	;# 
  1098  030E                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  038E                     	;# 
  1102  0391                     	;# 
  1103  0392                     	;# 
  1104  0393                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  0397                     	;# 
  1109  0398                     	;# 
  1110  0399                     	;# 
  1111  040E                     	;# 
  1112  0413                     	;# 
  1113  0413                     	;# 
  1114  0414                     	;# 
  1115  0414                     	;# 
  1116  0415                     	;# 
  1117  0416                     	;# 
  1118  0417                     	;# 
  1119  0418                     	;# 
  1120  041A                     	;# 
  1121  041A                     	;# 
  1122  041B                     	;# 
  1123  041B                     	;# 
  1124  041C                     	;# 
  1125  041D                     	;# 
  1126  041E                     	;# 
  1127  041F                     	;# 
  1128  0493                     	;# 
  1129  0494                     	;# 
  1130  0495                     	;# 
  1131  0496                     	;# 
  1132  049A                     	;# 
  1133  049B                     	;# 
  1134  049C                     	;# 
  1135  049D                     	;# 
  1136  058C                     	;# 
  1137  058C                     	;# 
  1138  058D                     	;# 
  1139  058E                     	;# 
  1140  058E                     	;# 
  1141  058F                     	;# 
  1142  0590                     	;# 
  1143  0590                     	;# 
  1144  0591                     	;# 
  1145  0592                     	;# 
  1146  0592                     	;# 
  1147  0593                     	;# 
  1148  0594                     	;# 
  1149  0594                     	;# 
  1150  0595                     	;# 
  1151  0596                     	;# 
  1152  0596                     	;# 
  1153  0597                     	;# 
  1154  0598                     	;# 
  1155  0599                     	;# 
  1156  059A                     	;# 
  1157  059B                     	;# 
  1158  059B                     	;# 
  1159  059C                     	;# 
  1160  059D                     	;# 
  1161  060C                     	;# 
  1162  060C                     	;# 
  1163  060D                     	;# 
  1164  060E                     	;# 
  1165  060F                     	;# 
  1166  060F                     	;# 
  1167  0610                     	;# 
  1168  0611                     	;# 
  1169  0612                     	;# 
  1170  0613                     	;# 
  1171  0614                     	;# 
  1172  0617                     	;# 
  1173  0618                     	;# 
  1174  0619                     	;# 
  1175  061A                     	;# 
  1176  061B                     	;# 
  1177  061C                     	;# 
  1178  0691                     	;# 
  1179  0692                     	;# 
  1180  0693                     	;# 
  1181  0694                     	;# 
  1182  0695                     	;# 
  1183  0696                     	;# 
  1184  0697                     	;# 
  1185  0699                     	;# 
  1186  069A                     	;# 
  1187  0711                     	;# 
  1188  0712                     	;# 
  1189  0713                     	;# 
  1190  0714                     	;# 
  1191  0715                     	;# 
  1192  0718                     	;# 
  1193  0718                     	;# 
  1194  0719                     	;# 
  1195  071A                     	;# 
  1196  071A                     	;# 
  1197  071B                     	;# 
  1198  071C                     	;# 
  1199  071D                     	;# 
  1200  0791                     	;# 
  1201  0791                     	;# 
  1202  0792                     	;# 
  1203  0793                     	;# 
  1204  0793                     	;# 
  1205  0794                     	;# 
  1206  0795                     	;# 
  1207  0795                     	;# 
  1208  0796                     	;# 
  1209  0797                     	;# 
  1210  0797                     	;# 
  1211  0798                     	;# 
  1212  0799                     	;# 
  1213  079A                     	;# 
  1214  080C                     	;# 
  1215  080C                     	;# 
  1216  080D                     	;# 
  1217  080E                     	;# 
  1218  080E                     	;# 
  1219  080F                     	;# 
  1220  0810                     	;# 
  1221  0810                     	;# 
  1222  0811                     	;# 
  1223  0812                     	;# 
  1224  0812                     	;# 
  1225  0813                     	;# 
  1226  0814                     	;# 
  1227  0815                     	;# 
  1228  0816                     	;# 
  1229  0817                     	;# 
  1230  0818                     	;# 
  1231  0819                     	;# 
  1232  081A                     	;# 
  1233  081A                     	;# 
  1234  081B                     	;# 
  1235  081C                     	;# 
  1236  081C                     	;# 
  1237  081D                     	;# 
  1238  088C                     	;# 
  1239  088D                     	;# 
  1240  088E                     	;# 
  1241  088F                     	;# 
  1242  088F                     	;# 
  1243  0890                     	;# 
  1244  0891                     	;# 
  1245  0892                     	;# 
  1246  0893                     	;# 
  1247  0893                     	;# 
  1248  0894                     	;# 
  1249  0895                     	;# 
  1250  0896                     	;# 
  1251  0897                     	;# 
  1252  0897                     	;# 
  1253  0898                     	;# 
  1254  0899                     	;# 
  1255  0D8C                     	;# 
  1256  0D8C                     	;# 
  1257  0D8D                     	;# 
  1258  0D8E                     	;# 
  1259  0D8F                     	;# 
  1260  0D8F                     	;# 
  1261  0D90                     	;# 
  1262  0D91                     	;# 
  1263  0D92                     	;# 
  1264  0D92                     	;# 
  1265  0D93                     	;# 
  1266  0D94                     	;# 
  1267  0D95                     	;# 
  1268  0D95                     	;# 
  1269  0D96                     	;# 
  1270  0D97                     	;# 
  1271  0D98                     	;# 
  1272  0D99                     	;# 
  1273  0D9A                     	;# 
  1274  0D9B                     	;# 
  1275  0D9C                     	;# 
  1276  0D9D                     	;# 
  1277  0D9E                     	;# 
  1278  0D9E                     	;# 
  1279  0D9F                     	;# 
  1280  0DA0                     	;# 
  1281  0DA1                     	;# 
  1282  0DA1                     	;# 
  1283  0DA2                     	;# 
  1284  0DA3                     	;# 
  1285  0DA4                     	;# 
  1286  0DA4                     	;# 
  1287  0DA5                     	;# 
  1288  0DA6                     	;# 
  1289  0DA7                     	;# 
  1290  0DA7                     	;# 
  1291  0DA8                     	;# 
  1292  0DA9                     	;# 
  1293  0DAA                     	;# 
  1294  0DAB                     	;# 
  1295  0DAC                     	;# 
  1296  0DAD                     	;# 
  1297  0DAE                     	;# 
  1298  0DAF                     	;# 
  1299  0E0F                     	;# 
  1300  0E10                     	;# 
  1301  0E11                     	;# 
  1302  0E12                     	;# 
  1303  0E13                     	;# 
  1304  0E14                     	;# 
  1305  0E15                     	;# 
  1306  0E16                     	;# 
  1307  0E17                     	;# 
  1308  0E18                     	;# 
  1309  0E19                     	;# 
  1310  0E1A                     	;# 
  1311  0E1B                     	;# 
  1312  0E1C                     	;# 
  1313  0E1D                     	;# 
  1314  0E1E                     	;# 
  1315  0E1F                     	;# 
  1316  0E20                     	;# 
  1317  0E21                     	;# 
  1318  0E22                     	;# 
  1319  0E23                     	;# 
  1320  0E24                     	;# 
  1321  0E25                     	;# 
  1322  0E26                     	;# 
  1323  0E27                     	;# 
  1324  0E28                     	;# 
  1325  0E29                     	;# 
  1326  0E2A                     	;# 
  1327  0E2B                     	;# 
  1328  0E2C                     	;# 
  1329  0E2D                     	;# 
  1330  0E2E                     	;# 
  1331  0E90                     	;# 
  1332  0E91                     	;# 
  1333  0E92                     	;# 
  1334  0E94                     	;# 
  1335  0E95                     	;# 
  1336  0E9C                     	;# 
  1337  0E9D                     	;# 
  1338  0E9E                     	;# 
  1339  0E9F                     	;# 
  1340  0EA0                     	;# 
  1341  0EA1                     	;# 
  1342  0EA2                     	;# 
  1343  0EA3                     	;# 
  1344  0EA4                     	;# 
  1345  0EA5                     	;# 
  1346  0EA6                     	;# 
  1347  0EA7                     	;# 
  1348  0F0F                     	;# 
  1349  0F10                     	;# 
  1350  0F11                     	;# 
  1351  0F12                     	;# 
  1352  0F13                     	;# 
  1353  0F14                     	;# 
  1354  0F15                     	;# 
  1355  0F16                     	;# 
  1356  0F17                     	;# 
  1357  0F18                     	;# 
  1358  0F19                     	;# 
  1359  0F1A                     	;# 
  1360  0F1B                     	;# 
  1361  0F1C                     	;# 
  1362  0F1D                     	;# 
  1363  0F1E                     	;# 
  1364  0F1F                     	;# 
  1365  0F20                     	;# 
  1366  0F21                     	;# 
  1367  0F22                     	;# 
  1368  0F23                     	;# 
  1369  0F24                     	;# 
  1370  0F25                     	;# 
  1371  0F26                     	;# 
  1372  0F27                     	;# 
  1373  0F28                     	;# 
  1374  0F29                     	;# 
  1375  0F2A                     	;# 
  1376  0F2B                     	;# 
  1377  0F2C                     	;# 
  1378  0F2D                     	;# 
  1379  0F2E                     	;# 
  1380  0F2F                     	;# 
  1381  0F30                     	;# 
  1382  0F31                     	;# 
  1383  0F32                     	;# 
  1384  0F33                     	;# 
  1385  0F34                     	;# 
  1386  0F35                     	;# 
  1387  0F36                     	;# 
  1388  0F37                     	;# 
  1389  0FE4                     	;# 
  1390  0FE5                     	;# 
  1391  0FE6                     	;# 
  1392  0FE7                     	;# 
  1393  0FE8                     	;# 
  1394  0FE9                     	;# 
  1395  0FEA                     	;# 
  1396  0FEB                     	;# 
  1397  0FED                     	;# 
  1398  0FEE                     	;# 
  1399  0FEF                     	;# 
  1400  0000                     	;# 
  1401  0001                     	;# 
  1402  0002                     	;# 
  1403  0003                     	;# 
  1404  0004                     	;# 
  1405  0005                     	;# 
  1406  0006                     	;# 
  1407  0007                     	;# 
  1408  0008                     	;# 
  1409  0009                     	;# 
  1410  000A                     	;# 
  1411  000B                     	;# 
  1412  000C                     	;# 
  1413  000D                     	;# 
  1414  000E                     	;# 
  1415  0010                     	;# 
  1416  0011                     	;# 
  1417  0012                     	;# 
  1418  0013                     	;# 
  1419  0014                     	;# 
  1420  0015                     	;# 
  1421  0016                     	;# 
  1422  0016                     	;# 
  1423  0017                     	;# 
  1424  0018                     	;# 
  1425  0019                     	;# 
  1426  001A                     	;# 
  1427  001A                     	;# 
  1428  001B                     	;# 
  1429  001B                     	;# 
  1430  001C                     	;# 
  1431  001D                     	;# 
  1432  001E                     	;# 
  1433  001F                     	;# 
  1434  008C                     	;# 
  1435  008D                     	;# 
  1436  008E                     	;# 
  1437  0090                     	;# 
  1438  0091                     	;# 
  1439  0092                     	;# 
  1440  0093                     	;# 
  1441  0094                     	;# 
  1442  0095                     	;# 
  1443  0096                     	;# 
  1444  0098                     	;# 
  1445  0099                     	;# 
  1446  009A                     	;# 
  1447  009B                     	;# 
  1448  009B                     	;# 
  1449  009C                     	;# 
  1450  009D                     	;# 
  1451  009E                     	;# 
  1452  009F                     	;# 
  1453  010C                     	;# 
  1454  010D                     	;# 
  1455  010E                     	;# 
  1456  0111                     	;# 
  1457  0112                     	;# 
  1458  0113                     	;# 
  1459  0114                     	;# 
  1460  0115                     	;# 
  1461  0116                     	;# 
  1462  0117                     	;# 
  1463  0118                     	;# 
  1464  0119                     	;# 
  1465  011C                     	;# 
  1466  018C                     	;# 
  1467  018D                     	;# 
  1468  018E                     	;# 
  1469  0191                     	;# 
  1470  0191                     	;# 
  1471  0192                     	;# 
  1472  0193                     	;# 
  1473  0193                     	;# 
  1474  0194                     	;# 
  1475  0195                     	;# 
  1476  0196                     	;# 
  1477  0197                     	;# 
  1478  0199                     	;# 
  1479  0199                     	;# 
  1480  0199                     	;# 
  1481  019A                     	;# 
  1482  019A                     	;# 
  1483  019A                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019C                     	;# 
  1490  019C                     	;# 
  1491  019C                     	;# 
  1492  019D                     	;# 
  1493  019D                     	;# 
  1494  019D                     	;# 
  1495  019E                     	;# 
  1496  019E                     	;# 
  1497  019E                     	;# 
  1498  019F                     	;# 
  1499  019F                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  020C                     	;# 
  1504  020D                     	;# 
  1505  020E                     	;# 
  1506  0211                     	;# 
  1507  0211                     	;# 
  1508  0212                     	;# 
  1509  0212                     	;# 
  1510  0213                     	;# 
  1511  0213                     	;# 
  1512  0214                     	;# 
  1513  0214                     	;# 
  1514  0215                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0216                     	;# 
  1519  0216                     	;# 
  1520  0217                     	;# 
  1521  0217                     	;# 
  1522  028C                     	;# 
  1523  028D                     	;# 
  1524  028E                     	;# 
  1525  0291                     	;# 
  1526  0291                     	;# 
  1527  0292                     	;# 
  1528  0293                     	;# 
  1529  0294                     	;# 
  1530  0298                     	;# 
  1531  0298                     	;# 
  1532  0299                     	;# 
  1533  029A                     	;# 
  1534  029B                     	;# 
  1535  029E                     	;# 
  1536  030C                     	;# 
  1537  030D                     	;# 
  1538  030E                     	;# 
  1539  038C                     	;# 
  1540  038D                     	;# 
  1541  038E                     	;# 
  1542  0391                     	;# 
  1543  0392                     	;# 
  1544  0393                     	;# 
  1545  0394                     	;# 
  1546  0395                     	;# 
  1547  0396                     	;# 
  1548  0397                     	;# 
  1549  0398                     	;# 
  1550  0399                     	;# 
  1551  040E                     	;# 
  1552  0413                     	;# 
  1553  0413                     	;# 
  1554  0414                     	;# 
  1555  0414                     	;# 
  1556  0415                     	;# 
  1557  0416                     	;# 
  1558  0417                     	;# 
  1559  0418                     	;# 
  1560  041A                     	;# 
  1561  041A                     	;# 
  1562  041B                     	;# 
  1563  041B                     	;# 
  1564  041C                     	;# 
  1565  041D                     	;# 
  1566  041E                     	;# 
  1567  041F                     	;# 
  1568  0493                     	;# 
  1569  0494                     	;# 
  1570  0495                     	;# 
  1571  0496                     	;# 
  1572  049A                     	;# 
  1573  049B                     	;# 
  1574  049C                     	;# 
  1575  049D                     	;# 
  1576  058C                     	;# 
  1577  058C                     	;# 
  1578  058D                     	;# 
  1579  058E                     	;# 
  1580  058E                     	;# 
  1581  058F                     	;# 
  1582  0590                     	;# 
  1583  0590                     	;# 
  1584  0591                     	;# 
  1585  0592                     	;# 
  1586  0592                     	;# 
  1587  0593                     	;# 
  1588  0594                     	;# 
  1589  0594                     	;# 
  1590  0595                     	;# 
  1591  0596                     	;# 
  1592  0596                     	;# 
  1593  0597                     	;# 
  1594  0598                     	;# 
  1595  0599                     	;# 
  1596  059A                     	;# 
  1597  059B                     	;# 
  1598  059B                     	;# 
  1599  059C                     	;# 
  1600  059D                     	;# 
  1601  060C                     	;# 
  1602  060C                     	;# 
  1603  060D                     	;# 
  1604  060E                     	;# 
  1605  060F                     	;# 
  1606  060F                     	;# 
  1607  0610                     	;# 
  1608  0611                     	;# 
  1609  0612                     	;# 
  1610  0613                     	;# 
  1611  0614                     	;# 
  1612  0617                     	;# 
  1613  0618                     	;# 
  1614  0619                     	;# 
  1615  061A                     	;# 
  1616  061B                     	;# 
  1617  061C                     	;# 
  1618  0691                     	;# 
  1619  0692                     	;# 
  1620  0693                     	;# 
  1621  0694                     	;# 
  1622  0695                     	;# 
  1623  0696                     	;# 
  1624  0697                     	;# 
  1625  0699                     	;# 
  1626  069A                     	;# 
  1627  0711                     	;# 
  1628  0712                     	;# 
  1629  0713                     	;# 
  1630  0714                     	;# 
  1631  0715                     	;# 
  1632  0718                     	;# 
  1633  0718                     	;# 
  1634  0719                     	;# 
  1635  071A                     	;# 
  1636  071A                     	;# 
  1637  071B                     	;# 
  1638  071C                     	;# 
  1639  071D                     	;# 
  1640  0791                     	;# 
  1641  0791                     	;# 
  1642  0792                     	;# 
  1643  0793                     	;# 
  1644  0793                     	;# 
  1645  0794                     	;# 
  1646  0795                     	;# 
  1647  0795                     	;# 
  1648  0796                     	;# 
  1649  0797                     	;# 
  1650  0797                     	;# 
  1651  0798                     	;# 
  1652  0799                     	;# 
  1653  079A                     	;# 
  1654  080C                     	;# 
  1655  080C                     	;# 
  1656  080D                     	;# 
  1657  080E                     	;# 
  1658  080E                     	;# 
  1659  080F                     	;# 
  1660  0810                     	;# 
  1661  0810                     	;# 
  1662  0811                     	;# 
  1663  0812                     	;# 
  1664  0812                     	;# 
  1665  0813                     	;# 
  1666  0814                     	;# 
  1667  0815                     	;# 
  1668  0816                     	;# 
  1669  0817                     	;# 
  1670  0818                     	;# 
  1671  0819                     	;# 
  1672  081A                     	;# 
  1673  081A                     	;# 
  1674  081B                     	;# 
  1675  081C                     	;# 
  1676  081C                     	;# 
  1677  081D                     	;# 
  1678  088C                     	;# 
  1679  088D                     	;# 
  1680  088E                     	;# 
  1681  088F                     	;# 
  1682  088F                     	;# 
  1683  0890                     	;# 
  1684  0891                     	;# 
  1685  0892                     	;# 
  1686  0893                     	;# 
  1687  0893                     	;# 
  1688  0894                     	;# 
  1689  0895                     	;# 
  1690  0896                     	;# 
  1691  0897                     	;# 
  1692  0897                     	;# 
  1693  0898                     	;# 
  1694  0899                     	;# 
  1695  0D8C                     	;# 
  1696  0D8C                     	;# 
  1697  0D8D                     	;# 
  1698  0D8E                     	;# 
  1699  0D8F                     	;# 
  1700  0D8F                     	;# 
  1701  0D90                     	;# 
  1702  0D91                     	;# 
  1703  0D92                     	;# 
  1704  0D92                     	;# 
  1705  0D93                     	;# 
  1706  0D94                     	;# 
  1707  0D95                     	;# 
  1708  0D95                     	;# 
  1709  0D96                     	;# 
  1710  0D97                     	;# 
  1711  0D98                     	;# 
  1712  0D99                     	;# 
  1713  0D9A                     	;# 
  1714  0D9B                     	;# 
  1715  0D9C                     	;# 
  1716  0D9D                     	;# 
  1717  0D9E                     	;# 
  1718  0D9E                     	;# 
  1719  0D9F                     	;# 
  1720  0DA0                     	;# 
  1721  0DA1                     	;# 
  1722  0DA1                     	;# 
  1723  0DA2                     	;# 
  1724  0DA3                     	;# 
  1725  0DA4                     	;# 
  1726  0DA4                     	;# 
  1727  0DA5                     	;# 
  1728  0DA6                     	;# 
  1729  0DA7                     	;# 
  1730  0DA7                     	;# 
  1731  0DA8                     	;# 
  1732  0DA9                     	;# 
  1733  0DAA                     	;# 
  1734  0DAB                     	;# 
  1735  0DAC                     	;# 
  1736  0DAD                     	;# 
  1737  0DAE                     	;# 
  1738  0DAF                     	;# 
  1739  0E0F                     	;# 
  1740  0E10                     	;# 
  1741  0E11                     	;# 
  1742  0E12                     	;# 
  1743  0E13                     	;# 
  1744  0E14                     	;# 
  1745  0E15                     	;# 
  1746  0E16                     	;# 
  1747  0E17                     	;# 
  1748  0E18                     	;# 
  1749  0E19                     	;# 
  1750  0E1A                     	;# 
  1751  0E1B                     	;# 
  1752  0E1C                     	;# 
  1753  0E1D                     	;# 
  1754  0E1E                     	;# 
  1755  0E1F                     	;# 
  1756  0E20                     	;# 
  1757  0E21                     	;# 
  1758  0E22                     	;# 
  1759  0E23                     	;# 
  1760  0E24                     	;# 
  1761  0E25                     	;# 
  1762  0E26                     	;# 
  1763  0E27                     	;# 
  1764  0E28                     	;# 
  1765  0E29                     	;# 
  1766  0E2A                     	;# 
  1767  0E2B                     	;# 
  1768  0E2C                     	;# 
  1769  0E2D                     	;# 
  1770  0E2E                     	;# 
  1771  0E90                     	;# 
  1772  0E91                     	;# 
  1773  0E92                     	;# 
  1774  0E94                     	;# 
  1775  0E95                     	;# 
  1776  0E9C                     	;# 
  1777  0E9D                     	;# 
  1778  0E9E                     	;# 
  1779  0E9F                     	;# 
  1780  0EA0                     	;# 
  1781  0EA1                     	;# 
  1782  0EA2                     	;# 
  1783  0EA3                     	;# 
  1784  0EA4                     	;# 
  1785  0EA5                     	;# 
  1786  0EA6                     	;# 
  1787  0EA7                     	;# 
  1788  0F0F                     	;# 
  1789  0F10                     	;# 
  1790  0F11                     	;# 
  1791  0F12                     	;# 
  1792  0F13                     	;# 
  1793  0F14                     	;# 
  1794  0F15                     	;# 
  1795  0F16                     	;# 
  1796  0F17                     	;# 
  1797  0F18                     	;# 
  1798  0F19                     	;# 
  1799  0F1A                     	;# 
  1800  0F1B                     	;# 
  1801  0F1C                     	;# 
  1802  0F1D                     	;# 
  1803  0F1E                     	;# 
  1804  0F1F                     	;# 
  1805  0F20                     	;# 
  1806  0F21                     	;# 
  1807  0F22                     	;# 
  1808  0F23                     	;# 
  1809  0F24                     	;# 
  1810  0F25                     	;# 
  1811  0F26                     	;# 
  1812  0F27                     	;# 
  1813  0F28                     	;# 
  1814  0F29                     	;# 
  1815  0F2A                     	;# 
  1816  0F2B                     	;# 
  1817  0F2C                     	;# 
  1818  0F2D                     	;# 
  1819  0F2E                     	;# 
  1820  0F2F                     	;# 
  1821  0F30                     	;# 
  1822  0F31                     	;# 
  1823  0F32                     	;# 
  1824  0F33                     	;# 
  1825  0F34                     	;# 
  1826  0F35                     	;# 
  1827  0F36                     	;# 
  1828  0F37                     	;# 
  1829  0FE4                     	;# 
  1830  0FE5                     	;# 
  1831  0FE6                     	;# 
  1832  0FE7                     	;# 
  1833  0FE8                     	;# 
  1834  0FE9                     	;# 
  1835  0FEA                     	;# 
  1836  0FEB                     	;# 
  1837  0FED                     	;# 
  1838  0FEE                     	;# 
  1839  0FEF                     	;# 
  1840  0000                     	;# 
  1841  0001                     	;# 
  1842  0002                     	;# 
  1843  0003                     	;# 
  1844  0004                     	;# 
  1845  0005                     	;# 
  1846  0006                     	;# 
  1847  0007                     	;# 
  1848  0008                     	;# 
  1849  0009                     	;# 
  1850  000A                     	;# 
  1851  000B                     	;# 
  1852  000C                     	;# 
  1853  000D                     	;# 
  1854  000E                     	;# 
  1855  0010                     	;# 
  1856  0011                     	;# 
  1857  0012                     	;# 
  1858  0013                     	;# 
  1859  0014                     	;# 
  1860  0015                     	;# 
  1861  0016                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0019                     	;# 
  1866  001A                     	;# 
  1867  001A                     	;# 
  1868  001B                     	;# 
  1869  001B                     	;# 
  1870  001C                     	;# 
  1871  001D                     	;# 
  1872  001E                     	;# 
  1873  001F                     	;# 
  1874  008C                     	;# 
  1875  008D                     	;# 
  1876  008E                     	;# 
  1877  0090                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0095                     	;# 
  1883  0096                     	;# 
  1884  0098                     	;# 
  1885  0099                     	;# 
  1886  009A                     	;# 
  1887  009B                     	;# 
  1888  009B                     	;# 
  1889  009C                     	;# 
  1890  009D                     	;# 
  1891  009E                     	;# 
  1892  009F                     	;# 
  1893  010C                     	;# 
  1894  010D                     	;# 
  1895  010E                     	;# 
  1896  0111                     	;# 
  1897  0112                     	;# 
  1898  0113                     	;# 
  1899  0114                     	;# 
  1900  0115                     	;# 
  1901  0116                     	;# 
  1902  0117                     	;# 
  1903  0118                     	;# 
  1904  0119                     	;# 
  1905  011C                     	;# 
  1906  018C                     	;# 
  1907  018D                     	;# 
  1908  018E                     	;# 
  1909  0191                     	;# 
  1910  0191                     	;# 
  1911  0192                     	;# 
  1912  0193                     	;# 
  1913  0193                     	;# 
  1914  0194                     	;# 
  1915  0195                     	;# 
  1916  0196                     	;# 
  1917  0197                     	;# 
  1918  0199                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  019A                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019C                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019E                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  020C                     	;# 
  1944  020D                     	;# 
  1945  020E                     	;# 
  1946  0211                     	;# 
  1947  0211                     	;# 
  1948  0212                     	;# 
  1949  0212                     	;# 
  1950  0213                     	;# 
  1951  0213                     	;# 
  1952  0214                     	;# 
  1953  0214                     	;# 
  1954  0215                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0216                     	;# 
  1959  0216                     	;# 
  1960  0217                     	;# 
  1961  0217                     	;# 
  1962  028C                     	;# 
  1963  028D                     	;# 
  1964  028E                     	;# 
  1965  0291                     	;# 
  1966  0291                     	;# 
  1967  0292                     	;# 
  1968  0293                     	;# 
  1969  0294                     	;# 
  1970  0298                     	;# 
  1971  0298                     	;# 
  1972  0299                     	;# 
  1973  029A                     	;# 
  1974  029B                     	;# 
  1975  029E                     	;# 
  1976  030C                     	;# 
  1977  030D                     	;# 
  1978  030E                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0391                     	;# 
  1983  0392                     	;# 
  1984  0393                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  0397                     	;# 
  1989  0398                     	;# 
  1990  0399                     	;# 
  1991  040E                     	;# 
  1992  0413                     	;# 
  1993  0413                     	;# 
  1994  0414                     	;# 
  1995  0414                     	;# 
  1996  0415                     	;# 
  1997  0416                     	;# 
  1998  0417                     	;# 
  1999  0418                     	;# 
  2000  041A                     	;# 
  2001  041A                     	;# 
  2002  041B                     	;# 
  2003  041B                     	;# 
  2004  041C                     	;# 
  2005  041D                     	;# 
  2006  041E                     	;# 
  2007  041F                     	;# 
  2008  0493                     	;# 
  2009  0494                     	;# 
  2010  0495                     	;# 
  2011  0496                     	;# 
  2012  049A                     	;# 
  2013  049B                     	;# 
  2014  049C                     	;# 
  2015  049D                     	;# 
  2016  058C                     	;# 
  2017  058C                     	;# 
  2018  058D                     	;# 
  2019  058E                     	;# 
  2020  058E                     	;# 
  2021  058F                     	;# 
  2022  0590                     	;# 
  2023  0590                     	;# 
  2024  0591                     	;# 
  2025  0592                     	;# 
  2026  0592                     	;# 
  2027  0593                     	;# 
  2028  0594                     	;# 
  2029  0594                     	;# 
  2030  0595                     	;# 
  2031  0596                     	;# 
  2032  0596                     	;# 
  2033  0597                     	;# 
  2034  0598                     	;# 
  2035  0599                     	;# 
  2036  059A                     	;# 
  2037  059B                     	;# 
  2038  059B                     	;# 
  2039  059C                     	;# 
  2040  059D                     	;# 
  2041  060C                     	;# 
  2042  060C                     	;# 
  2043  060D                     	;# 
  2044  060E                     	;# 
  2045  060F                     	;# 
  2046  060F                     	;# 
  2047  0610                     	;# 
  2048  0611                     	;# 
  2049  0612                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  0617                     	;# 
  2053  0618                     	;# 
  2054  0619                     	;# 
  2055  061A                     	;# 
  2056  061B                     	;# 
  2057  061C                     	;# 
  2058  0691                     	;# 
  2059  0692                     	;# 
  2060  0693                     	;# 
  2061  0694                     	;# 
  2062  0695                     	;# 
  2063  0696                     	;# 
  2064  0697                     	;# 
  2065  0699                     	;# 
  2066  069A                     	;# 
  2067  0711                     	;# 
  2068  0712                     	;# 
  2069  0713                     	;# 
  2070  0714                     	;# 
  2071  0715                     	;# 
  2072  0718                     	;# 
  2073  0718                     	;# 
  2074  0719                     	;# 
  2075  071A                     	;# 
  2076  071A                     	;# 
  2077  071B                     	;# 
  2078  071C                     	;# 
  2079  071D                     	;# 
  2080  0791                     	;# 
  2081  0791                     	;# 
  2082  0792                     	;# 
  2083  0793                     	;# 
  2084  0793                     	;# 
  2085  0794                     	;# 
  2086  0795                     	;# 
  2087  0795                     	;# 
  2088  0796                     	;# 
  2089  0797                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  080C                     	;# 
  2095  080C                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080E                     	;# 
  2099  080F                     	;# 
  2100  0810                     	;# 
  2101  0810                     	;# 
  2102  0811                     	;# 
  2103  0812                     	;# 
  2104  0812                     	;# 
  2105  0813                     	;# 
  2106  0814                     	;# 
  2107  0815                     	;# 
  2108  0816                     	;# 
  2109  0817                     	;# 
  2110  0818                     	;# 
  2111  0819                     	;# 
  2112  081A                     	;# 
  2113  081A                     	;# 
  2114  081B                     	;# 
  2115  081C                     	;# 
  2116  081C                     	;# 
  2117  081D                     	;# 
  2118  088C                     	;# 
  2119  088D                     	;# 
  2120  088E                     	;# 
  2121  088F                     	;# 
  2122  088F                     	;# 
  2123  0890                     	;# 
  2124  0891                     	;# 
  2125  0892                     	;# 
  2126  0893                     	;# 
  2127  0893                     	;# 
  2128  0894                     	;# 
  2129  0895                     	;# 
  2130  0896                     	;# 
  2131  0897                     	;# 
  2132  0897                     	;# 
  2133  0898                     	;# 
  2134  0899                     	;# 
  2135  0D8C                     	;# 
  2136  0D8C                     	;# 
  2137  0D8D                     	;# 
  2138  0D8E                     	;# 
  2139  0D8F                     	;# 
  2140  0D8F                     	;# 
  2141  0D90                     	;# 
  2142  0D91                     	;# 
  2143  0D92                     	;# 
  2144  0D92                     	;# 
  2145  0D93                     	;# 
  2146  0D94                     	;# 
  2147  0D95                     	;# 
  2148  0D95                     	;# 
  2149  0D96                     	;# 
  2150  0D97                     	;# 
  2151  0D98                     	;# 
  2152  0D99                     	;# 
  2153  0D9A                     	;# 
  2154  0D9B                     	;# 
  2155  0D9C                     	;# 
  2156  0D9D                     	;# 
  2157  0D9E                     	;# 
  2158  0D9E                     	;# 
  2159  0D9F                     	;# 
  2160  0DA0                     	;# 
  2161  0DA1                     	;# 
  2162  0DA1                     	;# 
  2163  0DA2                     	;# 
  2164  0DA3                     	;# 
  2165  0DA4                     	;# 
  2166  0DA4                     	;# 
  2167  0DA5                     	;# 
  2168  0DA6                     	;# 
  2169  0DA7                     	;# 
  2170  0DA7                     	;# 
  2171  0DA8                     	;# 
  2172  0DA9                     	;# 
  2173  0DAA                     	;# 
  2174  0DAB                     	;# 
  2175  0DAC                     	;# 
  2176  0DAD                     	;# 
  2177  0DAE                     	;# 
  2178  0DAF                     	;# 
  2179  0E0F                     	;# 
  2180  0E10                     	;# 
  2181  0E11                     	;# 
  2182  0E12                     	;# 
  2183  0E13                     	;# 
  2184  0E14                     	;# 
  2185  0E15                     	;# 
  2186  0E16                     	;# 
  2187  0E17                     	;# 
  2188  0E18                     	;# 
  2189  0E19                     	;# 
  2190  0E1A                     	;# 
  2191  0E1B                     	;# 
  2192  0E1C                     	;# 
  2193  0E1D                     	;# 
  2194  0E1E                     	;# 
  2195  0E1F                     	;# 
  2196  0E20                     	;# 
  2197  0E21                     	;# 
  2198  0E22                     	;# 
  2199  0E23                     	;# 
  2200  0E24                     	;# 
  2201  0E25                     	;# 
  2202  0E26                     	;# 
  2203  0E27                     	;# 
  2204  0E28                     	;# 
  2205  0E29                     	;# 
  2206  0E2A                     	;# 
  2207  0E2B                     	;# 
  2208  0E2C                     	;# 
  2209  0E2D                     	;# 
  2210  0E2E                     	;# 
  2211  0E90                     	;# 
  2212  0E91                     	;# 
  2213  0E92                     	;# 
  2214  0E94                     	;# 
  2215  0E95                     	;# 
  2216  0E9C                     	;# 
  2217  0E9D                     	;# 
  2218  0E9E                     	;# 
  2219  0E9F                     	;# 
  2220  0EA0                     	;# 
  2221  0EA1                     	;# 
  2222  0EA2                     	;# 
  2223  0EA3                     	;# 
  2224  0EA4                     	;# 
  2225  0EA5                     	;# 
  2226  0EA6                     	;# 
  2227  0EA7                     	;# 
  2228  0F0F                     	;# 
  2229  0F10                     	;# 
  2230  0F11                     	;# 
  2231  0F12                     	;# 
  2232  0F13                     	;# 
  2233  0F14                     	;# 
  2234  0F15                     	;# 
  2235  0F16                     	;# 
  2236  0F17                     	;# 
  2237  0F18                     	;# 
  2238  0F19                     	;# 
  2239  0F1A                     	;# 
  2240  0F1B                     	;# 
  2241  0F1C                     	;# 
  2242  0F1D                     	;# 
  2243  0F1E                     	;# 
  2244  0F1F                     	;# 
  2245  0F20                     	;# 
  2246  0F21                     	;# 
  2247  0F22                     	;# 
  2248  0F23                     	;# 
  2249  0F24                     	;# 
  2250  0F25                     	;# 
  2251  0F26                     	;# 
  2252  0F27                     	;# 
  2253  0F28                     	;# 
  2254  0F29                     	;# 
  2255  0F2A                     	;# 
  2256  0F2B                     	;# 
  2257  0F2C                     	;# 
  2258  0F2D                     	;# 
  2259  0F2E                     	;# 
  2260  0F2F                     	;# 
  2261  0F30                     	;# 
  2262  0F31                     	;# 
  2263  0F32                     	;# 
  2264  0F33                     	;# 
  2265  0F34                     	;# 
  2266  0F35                     	;# 
  2267  0F36                     	;# 
  2268  0F37                     	;# 
  2269  0FE4                     	;# 
  2270  0FE5                     	;# 
  2271  0FE6                     	;# 
  2272  0FE7                     	;# 
  2273  0FE8                     	;# 
  2274  0FE9                     	;# 
  2275  0FEA                     	;# 
  2276  0FEB                     	;# 
  2277  0FED                     	;# 
  2278  0FEE                     	;# 
  2279  0FEF                     	;# 
  2280  0000                     	;# 
  2281  0001                     	;# 
  2282  0002                     	;# 
  2283  0003                     	;# 
  2284  0004                     	;# 
  2285  0005                     	;# 
  2286  0006                     	;# 
  2287  0007                     	;# 
  2288  0008                     	;# 
  2289  0009                     	;# 
  2290  000A                     	;# 
  2291  000B                     	;# 
  2292  000C                     	;# 
  2293  000D                     	;# 
  2294  000E                     	;# 
  2295  0010                     	;# 
  2296  0011                     	;# 
  2297  0012                     	;# 
  2298  0013                     	;# 
  2299  0014                     	;# 
  2300  0015                     	;# 
  2301  0016                     	;# 
  2302  0016                     	;# 
  2303  0017                     	;# 
  2304  0018                     	;# 
  2305  0019                     	;# 
  2306  001A                     	;# 
  2307  001A                     	;# 
  2308  001B                     	;# 
  2309  001B                     	;# 
  2310  001C                     	;# 
  2311  001D                     	;# 
  2312  001E                     	;# 
  2313  001F                     	;# 
  2314  008C                     	;# 
  2315  008D                     	;# 
  2316  008E                     	;# 
  2317  0090                     	;# 
  2318  0091                     	;# 
  2319  0092                     	;# 
  2320  0093                     	;# 
  2321  0094                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0098                     	;# 
  2325  0099                     	;# 
  2326  009A                     	;# 
  2327  009B                     	;# 
  2328  009B                     	;# 
  2329  009C                     	;# 
  2330  009D                     	;# 
  2331  009E                     	;# 
  2332  009F                     	;# 
  2333  010C                     	;# 
  2334  010D                     	;# 
  2335  010E                     	;# 
  2336  0111                     	;# 
  2337  0112                     	;# 
  2338  0113                     	;# 
  2339  0114                     	;# 
  2340  0115                     	;# 
  2341  0116                     	;# 
  2342  0117                     	;# 
  2343  0118                     	;# 
  2344  0119                     	;# 
  2345  011C                     	;# 
  2346  018C                     	;# 
  2347  018D                     	;# 
  2348  018E                     	;# 
  2349  0191                     	;# 
  2350  0191                     	;# 
  2351  0192                     	;# 
  2352  0193                     	;# 
  2353  0193                     	;# 
  2354  0194                     	;# 
  2355  0195                     	;# 
  2356  0196                     	;# 
  2357  0197                     	;# 
  2358  0199                     	;# 
  2359  0199                     	;# 
  2360  0199                     	;# 
  2361  019A                     	;# 
  2362  019A                     	;# 
  2363  019A                     	;# 
  2364  019B                     	;# 
  2365  019B                     	;# 
  2366  019B                     	;# 
  2367  019B                     	;# 
  2368  019B                     	;# 
  2369  019C                     	;# 
  2370  019C                     	;# 
  2371  019C                     	;# 
  2372  019D                     	;# 
  2373  019D                     	;# 
  2374  019D                     	;# 
  2375  019E                     	;# 
  2376  019E                     	;# 
  2377  019E                     	;# 
  2378  019F                     	;# 
  2379  019F                     	;# 
  2380  019F                     	;# 
  2381  019F                     	;# 
  2382  019F                     	;# 
  2383  020C                     	;# 
  2384  020D                     	;# 
  2385  020E                     	;# 
  2386  0211                     	;# 
  2387  0211                     	;# 
  2388  0212                     	;# 
  2389  0212                     	;# 
  2390  0213                     	;# 
  2391  0213                     	;# 
  2392  0214                     	;# 
  2393  0214                     	;# 
  2394  0215                     	;# 
  2395  0215                     	;# 
  2396  0215                     	;# 
  2397  0215                     	;# 
  2398  0216                     	;# 
  2399  0216                     	;# 
  2400  0217                     	;# 
  2401  0217                     	;# 
  2402  028C                     	;# 
  2403  028D                     	;# 
  2404  028E                     	;# 
  2405  0291                     	;# 
  2406  0291                     	;# 
  2407  0292                     	;# 
  2408  0293                     	;# 
  2409  0294                     	;# 
  2410  0298                     	;# 
  2411  0298                     	;# 
  2412  0299                     	;# 
  2413  029A                     	;# 
  2414  029B                     	;# 
  2415  029E                     	;# 
  2416  030C                     	;# 
  2417  030D                     	;# 
  2418  030E                     	;# 
  2419  038C                     	;# 
  2420  038D                     	;# 
  2421  038E                     	;# 
  2422  0391                     	;# 
  2423  0392                     	;# 
  2424  0393                     	;# 
  2425  0394                     	;# 
  2426  0395                     	;# 
  2427  0396                     	;# 
  2428  0397                     	;# 
  2429  0398                     	;# 
  2430  0399                     	;# 
  2431  040E                     	;# 
  2432  0413                     	;# 
  2433  0413                     	;# 
  2434  0414                     	;# 
  2435  0414                     	;# 
  2436  0415                     	;# 
  2437  0416                     	;# 
  2438  0417                     	;# 
  2439  0418                     	;# 
  2440  041A                     	;# 
  2441  041A                     	;# 
  2442  041B                     	;# 
  2443  041B                     	;# 
  2444  041C                     	;# 
  2445  041D                     	;# 
  2446  041E                     	;# 
  2447  041F                     	;# 
  2448  0493                     	;# 
  2449  0494                     	;# 
  2450  0495                     	;# 
  2451  0496                     	;# 
  2452  049A                     	;# 
  2453  049B                     	;# 
  2454  049C                     	;# 
  2455  049D                     	;# 
  2456  058C                     	;# 
  2457  058C                     	;# 
  2458  058D                     	;# 
  2459  058E                     	;# 
  2460  058E                     	;# 
  2461  058F                     	;# 
  2462  0590                     	;# 
  2463  0590                     	;# 
  2464  0591                     	;# 
  2465  0592                     	;# 
  2466  0592                     	;# 
  2467  0593                     	;# 
  2468  0594                     	;# 
  2469  0594                     	;# 
  2470  0595                     	;# 
  2471  0596                     	;# 
  2472  0596                     	;# 
  2473  0597                     	;# 
  2474  0598                     	;# 
  2475  0599                     	;# 
  2476  059A                     	;# 
  2477  059B                     	;# 
  2478  059B                     	;# 
  2479  059C                     	;# 
  2480  059D                     	;# 
  2481  060C                     	;# 
  2482  060C                     	;# 
  2483  060D                     	;# 
  2484  060E                     	;# 
  2485  060F                     	;# 
  2486  060F                     	;# 
  2487  0610                     	;# 
  2488  0611                     	;# 
  2489  0612                     	;# 
  2490  0613                     	;# 
  2491  0614                     	;# 
  2492  0617                     	;# 
  2493  0618                     	;# 
  2494  0619                     	;# 
  2495  061A                     	;# 
  2496  061B                     	;# 
  2497  061C                     	;# 
  2498  0691                     	;# 
  2499  0692                     	;# 
  2500  0693                     	;# 
  2501  0694                     	;# 
  2502  0695                     	;# 
  2503  0696                     	;# 
  2504  0697                     	;# 
  2505  0699                     	;# 
  2506  069A                     	;# 
  2507  0711                     	;# 
  2508  0712                     	;# 
  2509  0713                     	;# 
  2510  0714                     	;# 
  2511  0715                     	;# 
  2512  0718                     	;# 
  2513  0718                     	;# 
  2514  0719                     	;# 
  2515  071A                     	;# 
  2516  071A                     	;# 
  2517  071B                     	;# 
  2518  071C                     	;# 
  2519  071D                     	;# 
  2520  0791                     	;# 
  2521  0791                     	;# 
  2522  0792                     	;# 
  2523  0793                     	;# 
  2524  0793                     	;# 
  2525  0794                     	;# 
  2526  0795                     	;# 
  2527  0795                     	;# 
  2528  0796                     	;# 
  2529  0797                     	;# 
  2530  0797                     	;# 
  2531  0798                     	;# 
  2532  0799                     	;# 
  2533  079A                     	;# 
  2534  080C                     	;# 
  2535  080C                     	;# 
  2536  080D                     	;# 
  2537  080E                     	;# 
  2538  080E                     	;# 
  2539  080F                     	;# 
  2540  0810                     	;# 
  2541  0810                     	;# 
  2542  0811                     	;# 
  2543  0812                     	;# 
  2544  0812                     	;# 
  2545  0813                     	;# 
  2546  0814                     	;# 
  2547  0815                     	;# 
  2548  0816                     	;# 
  2549  0817                     	;# 
  2550  0818                     	;# 
  2551  0819                     	;# 
  2552  081A                     	;# 
  2553  081A                     	;# 
  2554  081B                     	;# 
  2555  081C                     	;# 
  2556  081C                     	;# 
  2557  081D                     	;# 
  2558  088C                     	;# 
  2559  088D                     	;# 
  2560  088E                     	;# 
  2561  088F                     	;# 
  2562  088F                     	;# 
  2563  0890                     	;# 
  2564  0891                     	;# 
  2565  0892                     	;# 
  2566  0893                     	;# 
  2567  0893                     	;# 
  2568  0894                     	;# 
  2569  0895                     	;# 
  2570  0896                     	;# 
  2571  0897                     	;# 
  2572  0897                     	;# 
  2573  0898                     	;# 
  2574  0899                     	;# 
  2575  0D8C                     	;# 
  2576  0D8C                     	;# 
  2577  0D8D                     	;# 
  2578  0D8E                     	;# 
  2579  0D8F                     	;# 
  2580  0D8F                     	;# 
  2581  0D90                     	;# 
  2582  0D91                     	;# 
  2583  0D92                     	;# 
  2584  0D92                     	;# 
  2585  0D93                     	;# 
  2586  0D94                     	;# 
  2587  0D95                     	;# 
  2588  0D95                     	;# 
  2589  0D96                     	;# 
  2590  0D97                     	;# 
  2591  0D98                     	;# 
  2592  0D99                     	;# 
  2593  0D9A                     	;# 
  2594  0D9B                     	;# 
  2595  0D9C                     	;# 
  2596  0D9D                     	;# 
  2597  0D9E                     	;# 
  2598  0D9E                     	;# 
  2599  0D9F                     	;# 
  2600  0DA0                     	;# 
  2601  0DA1                     	;# 
  2602  0DA1                     	;# 
  2603  0DA2                     	;# 
  2604  0DA3                     	;# 
  2605  0DA4                     	;# 
  2606  0DA4                     	;# 
  2607  0DA5                     	;# 
  2608  0DA6                     	;# 
  2609  0DA7                     	;# 
  2610  0DA7                     	;# 
  2611  0DA8                     	;# 
  2612  0DA9                     	;# 
  2613  0DAA                     	;# 
  2614  0DAB                     	;# 
  2615  0DAC                     	;# 
  2616  0DAD                     	;# 
  2617  0DAE                     	;# 
  2618  0DAF                     	;# 
  2619  0E0F                     	;# 
  2620  0E10                     	;# 
  2621  0E11                     	;# 
  2622  0E12                     	;# 
  2623  0E13                     	;# 
  2624  0E14                     	;# 
  2625  0E15                     	;# 
  2626  0E16                     	;# 
  2627  0E17                     	;# 
  2628  0E18                     	;# 
  2629  0E19                     	;# 
  2630  0E1A                     	;# 
  2631  0E1B                     	;# 
  2632  0E1C                     	;# 
  2633  0E1D                     	;# 
  2634  0E1E                     	;# 
  2635  0E1F                     	;# 
  2636  0E20                     	;# 
  2637  0E21                     	;# 
  2638  0E22                     	;# 
  2639  0E23                     	;# 
  2640  0E24                     	;# 
  2641  0E25                     	;# 
  2642  0E26                     	;# 
  2643  0E27                     	;# 
  2644  0E28                     	;# 
  2645  0E29                     	;# 
  2646  0E2A                     	;# 
  2647  0E2B                     	;# 
  2648  0E2C                     	;# 
  2649  0E2D                     	;# 
  2650  0E2E                     	;# 
  2651  0E90                     	;# 
  2652  0E91                     	;# 
  2653  0E92                     	;# 
  2654  0E94                     	;# 
  2655  0E95                     	;# 
  2656  0E9C                     	;# 
  2657  0E9D                     	;# 
  2658  0E9E                     	;# 
  2659  0E9F                     	;# 
  2660  0EA0                     	;# 
  2661  0EA1                     	;# 
  2662  0EA2                     	;# 
  2663  0EA3                     	;# 
  2664  0EA4                     	;# 
  2665  0EA5                     	;# 
  2666  0EA6                     	;# 
  2667  0EA7                     	;# 
  2668  0F0F                     	;# 
  2669  0F10                     	;# 
  2670  0F11                     	;# 
  2671  0F12                     	;# 
  2672  0F13                     	;# 
  2673  0F14                     	;# 
  2674  0F15                     	;# 
  2675  0F16                     	;# 
  2676  0F17                     	;# 
  2677  0F18                     	;# 
  2678  0F19                     	;# 
  2679  0F1A                     	;# 
  2680  0F1B                     	;# 
  2681  0F1C                     	;# 
  2682  0F1D                     	;# 
  2683  0F1E                     	;# 
  2684  0F1F                     	;# 
  2685  0F20                     	;# 
  2686  0F21                     	;# 
  2687  0F22                     	;# 
  2688  0F23                     	;# 
  2689  0F24                     	;# 
  2690  0F25                     	;# 
  2691  0F26                     	;# 
  2692  0F27                     	;# 
  2693  0F28                     	;# 
  2694  0F29                     	;# 
  2695  0F2A                     	;# 
  2696  0F2B                     	;# 
  2697  0F2C                     	;# 
  2698  0F2D                     	;# 
  2699  0F2E                     	;# 
  2700  0F2F                     	;# 
  2701  0F30                     	;# 
  2702  0F31                     	;# 
  2703  0F32                     	;# 
  2704  0F33                     	;# 
  2705  0F34                     	;# 
  2706  0F35                     	;# 
  2707  0F36                     	;# 
  2708  0F37                     	;# 
  2709  0FE4                     	;# 
  2710  0FE5                     	;# 
  2711  0FE6                     	;# 
  2712  0FE7                     	;# 
  2713  0FE8                     	;# 
  2714  0FE9                     	;# 
  2715  0FEA                     	;# 
  2716  0FEB                     	;# 
  2717  0FED                     	;# 
  2718  0FEE                     	;# 
  2719  0FEF                     	;# 
  2720  0000                     	;# 
  2721  0001                     	;# 
  2722  0002                     	;# 
  2723  0003                     	;# 
  2724  0004                     	;# 
  2725  0005                     	;# 
  2726  0006                     	;# 
  2727  0007                     	;# 
  2728  0008                     	;# 
  2729  0009                     	;# 
  2730  000A                     	;# 
  2731  000B                     	;# 
  2732  000C                     	;# 
  2733  000D                     	;# 
  2734  000E                     	;# 
  2735  0010                     	;# 
  2736  0011                     	;# 
  2737  0012                     	;# 
  2738  0013                     	;# 
  2739  0014                     	;# 
  2740  0015                     	;# 
  2741  0016                     	;# 
  2742  0016                     	;# 
  2743  0017                     	;# 
  2744  0018                     	;# 
  2745  0019                     	;# 
  2746  001A                     	;# 
  2747  001A                     	;# 
  2748  001B                     	;# 
  2749  001B                     	;# 
  2750  001C                     	;# 
  2751  001D                     	;# 
  2752  001E                     	;# 
  2753  001F                     	;# 
  2754  008C                     	;# 
  2755  008D                     	;# 
  2756  008E                     	;# 
  2757  0090                     	;# 
  2758  0091                     	;# 
  2759  0092                     	;# 
  2760  0093                     	;# 
  2761  0094                     	;# 
  2762  0095                     	;# 
  2763  0096                     	;# 
  2764  0098                     	;# 
  2765  0099                     	;# 
  2766  009A                     	;# 
  2767  009B                     	;# 
  2768  009B                     	;# 
  2769  009C                     	;# 
  2770  009D                     	;# 
  2771  009E                     	;# 
  2772  009F                     	;# 
  2773  010C                     	;# 
  2774  010D                     	;# 
  2775  010E                     	;# 
  2776  0111                     	;# 
  2777  0112                     	;# 
  2778  0113                     	;# 
  2779  0114                     	;# 
  2780  0115                     	;# 
  2781  0116                     	;# 
  2782  0117                     	;# 
  2783  0118                     	;# 
  2784  0119                     	;# 
  2785  011C                     	;# 
  2786  018C                     	;# 
  2787  018D                     	;# 
  2788  018E                     	;# 
  2789  0191                     	;# 
  2790  0191                     	;# 
  2791  0192                     	;# 
  2792  0193                     	;# 
  2793  0193                     	;# 
  2794  0194                     	;# 
  2795  0195                     	;# 
  2796  0196                     	;# 
  2797  0197                     	;# 
  2798  0199                     	;# 
  2799  0199                     	;# 
  2800  0199                     	;# 
  2801  019A                     	;# 
  2802  019A                     	;# 
  2803  019A                     	;# 
  2804  019B                     	;# 
  2805  019B                     	;# 
  2806  019B                     	;# 
  2807  019B                     	;# 
  2808  019B                     	;# 
  2809  019C                     	;# 
  2810  019C                     	;# 
  2811  019C                     	;# 
  2812  019D                     	;# 
  2813  019D                     	;# 
  2814  019D                     	;# 
  2815  019E                     	;# 
  2816  019E                     	;# 
  2817  019E                     	;# 
  2818  019F                     	;# 
  2819  019F                     	;# 
  2820  019F                     	;# 
  2821  019F                     	;# 
  2822  019F                     	;# 
  2823  020C                     	;# 
  2824  020D                     	;# 
  2825  020E                     	;# 
  2826  0211                     	;# 
  2827  0211                     	;# 
  2828  0212                     	;# 
  2829  0212                     	;# 
  2830  0213                     	;# 
  2831  0213                     	;# 
  2832  0214                     	;# 
  2833  0214                     	;# 
  2834  0215                     	;# 
  2835  0215                     	;# 
  2836  0215                     	;# 
  2837  0215                     	;# 
  2838  0216                     	;# 
  2839  0216                     	;# 
  2840  0217                     	;# 
  2841  0217                     	;# 
  2842  028C                     	;# 
  2843  028D                     	;# 
  2844  028E                     	;# 
  2845  0291                     	;# 
  2846  0291                     	;# 
  2847  0292                     	;# 
  2848  0293                     	;# 
  2849  0294                     	;# 
  2850  0298                     	;# 
  2851  0298                     	;# 
  2852  0299                     	;# 
  2853  029A                     	;# 
  2854  029B                     	;# 
  2855  029E                     	;# 
  2856  030C                     	;# 
  2857  030D                     	;# 
  2858  030E                     	;# 
  2859  038C                     	;# 
  2860  038D                     	;# 
  2861  038E                     	;# 
  2862  0391                     	;# 
  2863  0392                     	;# 
  2864  0393                     	;# 
  2865  0394                     	;# 
  2866  0395                     	;# 
  2867  0396                     	;# 
  2868  0397                     	;# 
  2869  0398                     	;# 
  2870  0399                     	;# 
  2871  040E                     	;# 
  2872  0413                     	;# 
  2873  0413                     	;# 
  2874  0414                     	;# 
  2875  0414                     	;# 
  2876  0415                     	;# 
  2877  0416                     	;# 
  2878  0417                     	;# 
  2879  0418                     	;# 
  2880  041A                     	;# 
  2881  041A                     	;# 
  2882  041B                     	;# 
  2883  041B                     	;# 
  2884  041C                     	;# 
  2885  041D                     	;# 
  2886  041E                     	;# 
  2887  041F                     	;# 
  2888  0493                     	;# 
  2889  0494                     	;# 
  2890  0495                     	;# 
  2891  0496                     	;# 
  2892  049A                     	;# 
  2893  049B                     	;# 
  2894  049C                     	;# 
  2895  049D                     	;# 
  2896  058C                     	;# 
  2897  058C                     	;# 
  2898  058D                     	;# 
  2899  058E                     	;# 
  2900  058E                     	;# 
  2901  058F                     	;# 
  2902  0590                     	;# 
  2903  0590                     	;# 
  2904  0591                     	;# 
  2905  0592                     	;# 
  2906  0592                     	;# 
  2907  0593                     	;# 
  2908  0594                     	;# 
  2909  0594                     	;# 
  2910  0595                     	;# 
  2911  0596                     	;# 
  2912  0596                     	;# 
  2913  0597                     	;# 
  2914  0598                     	;# 
  2915  0599                     	;# 
  2916  059A                     	;# 
  2917  059B                     	;# 
  2918  059B                     	;# 
  2919  059C                     	;# 
  2920  059D                     	;# 
  2921  060C                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  060F                     	;# 
  2927  0610                     	;# 
  2928  0611                     	;# 
  2929  0612                     	;# 
  2930  0613                     	;# 
  2931  0614                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  0691                     	;# 
  2939  0692                     	;# 
  2940  0693                     	;# 
  2941  0694                     	;# 
  2942  0695                     	;# 
  2943  0696                     	;# 
  2944  0697                     	;# 
  2945  0699                     	;# 
  2946  069A                     	;# 
  2947  0711                     	;# 
  2948  0712                     	;# 
  2949  0713                     	;# 
  2950  0714                     	;# 
  2951  0715                     	;# 
  2952  0718                     	;# 
  2953  0718                     	;# 
  2954  0719                     	;# 
  2955  071A                     	;# 
  2956  071A                     	;# 
  2957  071B                     	;# 
  2958  071C                     	;# 
  2959  071D                     	;# 
  2960  0791                     	;# 
  2961  0791                     	;# 
  2962  0792                     	;# 
  2963  0793                     	;# 
  2964  0793                     	;# 
  2965  0794                     	;# 
  2966  0795                     	;# 
  2967  0795                     	;# 
  2968  0796                     	;# 
  2969  0797                     	;# 
  2970  0797                     	;# 
  2971  0798                     	;# 
  2972  0799                     	;# 
  2973  079A                     	;# 
  2974  080C                     	;# 
  2975  080C                     	;# 
  2976  080D                     	;# 
  2977  080E                     	;# 
  2978  080E                     	;# 
  2979  080F                     	;# 
  2980  0810                     	;# 
  2981  0810                     	;# 
  2982  0811                     	;# 
  2983  0812                     	;# 
  2984  0812                     	;# 
  2985  0813                     	;# 
  2986  0814                     	;# 
  2987  0815                     	;# 
  2988  0816                     	;# 
  2989  0817                     	;# 
  2990  0818                     	;# 
  2991  0819                     	;# 
  2992  081A                     	;# 
  2993  081A                     	;# 
  2994  081B                     	;# 
  2995  081C                     	;# 
  2996  081C                     	;# 
  2997  081D                     	;# 
  2998  088C                     	;# 
  2999  088D                     	;# 
  3000  088E                     	;# 
  3001  088F                     	;# 
  3002  088F                     	;# 
  3003  0890                     	;# 
  3004  0891                     	;# 
  3005  0892                     	;# 
  3006  0893                     	;# 
  3007  0893                     	;# 
  3008  0894                     	;# 
  3009  0895                     	;# 
  3010  0896                     	;# 
  3011  0897                     	;# 
  3012  0897                     	;# 
  3013  0898                     	;# 
  3014  0899                     	;# 
  3015  0D8C                     	;# 
  3016  0D8C                     	;# 
  3017  0D8D                     	;# 
  3018  0D8E                     	;# 
  3019  0D8F                     	;# 
  3020  0D8F                     	;# 
  3021  0D90                     	;# 
  3022  0D91                     	;# 
  3023  0D92                     	;# 
  3024  0D92                     	;# 
  3025  0D93                     	;# 
  3026  0D94                     	;# 
  3027  0D95                     	;# 
  3028  0D95                     	;# 
  3029  0D96                     	;# 
  3030  0D97                     	;# 
  3031  0D98                     	;# 
  3032  0D99                     	;# 
  3033  0D9A                     	;# 
  3034  0D9B                     	;# 
  3035  0D9C                     	;# 
  3036  0D9D                     	;# 
  3037  0D9E                     	;# 
  3038  0D9E                     	;# 
  3039  0D9F                     	;# 
  3040  0DA0                     	;# 
  3041  0DA1                     	;# 
  3042  0DA1                     	;# 
  3043  0DA2                     	;# 
  3044  0DA3                     	;# 
  3045  0DA4                     	;# 
  3046  0DA4                     	;# 
  3047  0DA5                     	;# 
  3048  0DA6                     	;# 
  3049  0DA7                     	;# 
  3050  0DA7                     	;# 
  3051  0DA8                     	;# 
  3052  0DA9                     	;# 
  3053  0DAA                     	;# 
  3054  0DAB                     	;# 
  3055  0DAC                     	;# 
  3056  0DAD                     	;# 
  3057  0DAE                     	;# 
  3058  0DAF                     	;# 
  3059  0E0F                     	;# 
  3060  0E10                     	;# 
  3061  0E11                     	;# 
  3062  0E12                     	;# 
  3063  0E13                     	;# 
  3064  0E14                     	;# 
  3065  0E15                     	;# 
  3066  0E16                     	;# 
  3067  0E17                     	;# 
  3068  0E18                     	;# 
  3069  0E19                     	;# 
  3070  0E1A                     	;# 
  3071  0E1B                     	;# 
  3072  0E1C                     	;# 
  3073  0E1D                     	;# 
  3074  0E1E                     	;# 
  3075  0E1F                     	;# 
  3076  0E20                     	;# 
  3077  0E21                     	;# 
  3078  0E22                     	;# 
  3079  0E23                     	;# 
  3080  0E24                     	;# 
  3081  0E25                     	;# 
  3082  0E26                     	;# 
  3083  0E27                     	;# 
  3084  0E28                     	;# 
  3085  0E29                     	;# 
  3086  0E2A                     	;# 
  3087  0E2B                     	;# 
  3088  0E2C                     	;# 
  3089  0E2D                     	;# 
  3090  0E2E                     	;# 
  3091  0E90                     	;# 
  3092  0E91                     	;# 
  3093  0E92                     	;# 
  3094  0E94                     	;# 
  3095  0E95                     	;# 
  3096  0E9C                     	;# 
  3097  0E9D                     	;# 
  3098  0E9E                     	;# 
  3099  0E9F                     	;# 
  3100  0EA0                     	;# 
  3101  0EA1                     	;# 
  3102  0EA2                     	;# 
  3103  0EA3                     	;# 
  3104  0EA4                     	;# 
  3105  0EA5                     	;# 
  3106  0EA6                     	;# 
  3107  0EA7                     	;# 
  3108  0F0F                     	;# 
  3109  0F10                     	;# 
  3110  0F11                     	;# 
  3111  0F12                     	;# 
  3112  0F13                     	;# 
  3113  0F14                     	;# 
  3114  0F15                     	;# 
  3115  0F16                     	;# 
  3116  0F17                     	;# 
  3117  0F18                     	;# 
  3118  0F19                     	;# 
  3119  0F1A                     	;# 
  3120  0F1B                     	;# 
  3121  0F1C                     	;# 
  3122  0F1D                     	;# 
  3123  0F1E                     	;# 
  3124  0F1F                     	;# 
  3125  0F20                     	;# 
  3126  0F21                     	;# 
  3127  0F22                     	;# 
  3128  0F23                     	;# 
  3129  0F24                     	;# 
  3130  0F25                     	;# 
  3131  0F26                     	;# 
  3132  0F27                     	;# 
  3133  0F28                     	;# 
  3134  0F29                     	;# 
  3135  0F2A                     	;# 
  3136  0F2B                     	;# 
  3137  0F2C                     	;# 
  3138  0F2D                     	;# 
  3139  0F2E                     	;# 
  3140  0F2F                     	;# 
  3141  0F30                     	;# 
  3142  0F31                     	;# 
  3143  0F32                     	;# 
  3144  0F33                     	;# 
  3145  0F34                     	;# 
  3146  0F35                     	;# 
  3147  0F36                     	;# 
  3148  0F37                     	;# 
  3149  0FE4                     	;# 
  3150  0FE5                     	;# 
  3151  0FE6                     	;# 
  3152  0FE7                     	;# 
  3153  0FE8                     	;# 
  3154  0FE9                     	;# 
  3155  0FEA                     	;# 
  3156  0FEB                     	;# 
  3157  0FED                     	;# 
  3158  0FEE                     	;# 
  3159  0FEF                     	;# 
  3160  0000                     	;# 
  3161  0001                     	;# 
  3162  0002                     	;# 
  3163  0003                     	;# 
  3164  0004                     	;# 
  3165  0005                     	;# 
  3166  0006                     	;# 
  3167  0007                     	;# 
  3168  0008                     	;# 
  3169  0009                     	;# 
  3170  000A                     	;# 
  3171  000B                     	;# 
  3172  000C                     	;# 
  3173  000D                     	;# 
  3174  000E                     	;# 
  3175  0010                     	;# 
  3176  0011                     	;# 
  3177  0012                     	;# 
  3178  0013                     	;# 
  3179  0014                     	;# 
  3180  0015                     	;# 
  3181  0016                     	;# 
  3182  0016                     	;# 
  3183  0017                     	;# 
  3184  0018                     	;# 
  3185  0019                     	;# 
  3186  001A                     	;# 
  3187  001A                     	;# 
  3188  001B                     	;# 
  3189  001B                     	;# 
  3190  001C                     	;# 
  3191  001D                     	;# 
  3192  001E                     	;# 
  3193  001F                     	;# 
  3194  008C                     	;# 
  3195  008D                     	;# 
  3196  008E                     	;# 
  3197  0090                     	;# 
  3198  0091                     	;# 
  3199  0092                     	;# 
  3200  0093                     	;# 
  3201  0094                     	;# 
  3202  0095                     	;# 
  3203  0096                     	;# 
  3204  0098                     	;# 
  3205  0099                     	;# 
  3206  009A                     	;# 
  3207  009B                     	;# 
  3208  009B                     	;# 
  3209  009C                     	;# 
  3210  009D                     	;# 
  3211  009E                     	;# 
  3212  009F                     	;# 
  3213  010C                     	;# 
  3214  010D                     	;# 
  3215  010E                     	;# 
  3216  0111                     	;# 
  3217  0112                     	;# 
  3218  0113                     	;# 
  3219  0114                     	;# 
  3220  0115                     	;# 
  3221  0116                     	;# 
  3222  0117                     	;# 
  3223  0118                     	;# 
  3224  0119                     	;# 
  3225  011C                     	;# 
  3226  018C                     	;# 
  3227  018D                     	;# 
  3228  018E                     	;# 
  3229  0191                     	;# 
  3230  0191                     	;# 
  3231  0192                     	;# 
  3232  0193                     	;# 
  3233  0193                     	;# 
  3234  0194                     	;# 
  3235  0195                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0199                     	;# 
  3239  0199                     	;# 
  3240  0199                     	;# 
  3241  019A                     	;# 
  3242  019A                     	;# 
  3243  019A                     	;# 
  3244  019B                     	;# 
  3245  019B                     	;# 
  3246  019B                     	;# 
  3247  019B                     	;# 
  3248  019B                     	;# 
  3249  019C                     	;# 
  3250  019C                     	;# 
  3251  019C                     	;# 
  3252  019D                     	;# 
  3253  019D                     	;# 
  3254  019D                     	;# 
  3255  019E                     	;# 
  3256  019E                     	;# 
  3257  019E                     	;# 
  3258  019F                     	;# 
  3259  019F                     	;# 
  3260  019F                     	;# 
  3261  019F                     	;# 
  3262  019F                     	;# 
  3263  020C                     	;# 
  3264  020D                     	;# 
  3265  020E                     	;# 
  3266  0211                     	;# 
  3267  0211                     	;# 
  3268  0212                     	;# 
  3269  0212                     	;# 
  3270  0213                     	;# 
  3271  0213                     	;# 
  3272  0214                     	;# 
  3273  0214                     	;# 
  3274  0215                     	;# 
  3275  0215                     	;# 
  3276  0215                     	;# 
  3277  0215                     	;# 
  3278  0216                     	;# 
  3279  0216                     	;# 
  3280  0217                     	;# 
  3281  0217                     	;# 
  3282  028C                     	;# 
  3283  028D                     	;# 
  3284  028E                     	;# 
  3285  0291                     	;# 
  3286  0291                     	;# 
  3287  0292                     	;# 
  3288  0293                     	;# 
  3289  0294                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  029A                     	;# 
  3294  029B                     	;# 
  3295  029E                     	;# 
  3296  030C                     	;# 
  3297  030D                     	;# 
  3298  030E                     	;# 
  3299  038C                     	;# 
  3300  038D                     	;# 
  3301  038E                     	;# 
  3302  0391                     	;# 
  3303  0392                     	;# 
  3304  0393                     	;# 
  3305  0394                     	;# 
  3306  0395                     	;# 
  3307  0396                     	;# 
  3308  0397                     	;# 
  3309  0398                     	;# 
  3310  0399                     	;# 
  3311  040E                     	;# 
  3312  0413                     	;# 
  3313  0413                     	;# 
  3314  0414                     	;# 
  3315  0414                     	;# 
  3316  0415                     	;# 
  3317  0416                     	;# 
  3318  0417                     	;# 
  3319  0418                     	;# 
  3320  041A                     	;# 
  3321  041A                     	;# 
  3322  041B                     	;# 
  3323  041B                     	;# 
  3324  041C                     	;# 
  3325  041D                     	;# 
  3326  041E                     	;# 
  3327  041F                     	;# 
  3328  0493                     	;# 
  3329  0494                     	;# 
  3330  0495                     	;# 
  3331  0496                     	;# 
  3332  049A                     	;# 
  3333  049B                     	;# 
  3334  049C                     	;# 
  3335  049D                     	;# 
  3336  058C                     	;# 
  3337  058C                     	;# 
  3338  058D                     	;# 
  3339  058E                     	;# 
  3340  058E                     	;# 
  3341  058F                     	;# 
  3342  0590                     	;# 
  3343  0590                     	;# 
  3344  0591                     	;# 
  3345  0592                     	;# 
  3346  0592                     	;# 
  3347  0593                     	;# 
  3348  0594                     	;# 
  3349  0594                     	;# 
  3350  0595                     	;# 
  3351  0596                     	;# 
  3352  0596                     	;# 
  3353  0597                     	;# 
  3354  0598                     	;# 
  3355  0599                     	;# 
  3356  059A                     	;# 
  3357  059B                     	;# 
  3358  059B                     	;# 
  3359  059C                     	;# 
  3360  059D                     	;# 
  3361  060C                     	;# 
  3362  060C                     	;# 
  3363  060D                     	;# 
  3364  060E                     	;# 
  3365  060F                     	;# 
  3366  060F                     	;# 
  3367  0610                     	;# 
  3368  0611                     	;# 
  3369  0612                     	;# 
  3370  0613                     	;# 
  3371  0614                     	;# 
  3372  0617                     	;# 
  3373  0618                     	;# 
  3374  0619                     	;# 
  3375  061A                     	;# 
  3376  061B                     	;# 
  3377  061C                     	;# 
  3378  0691                     	;# 
  3379  0692                     	;# 
  3380  0693                     	;# 
  3381  0694                     	;# 
  3382  0695                     	;# 
  3383  0696                     	;# 
  3384  0697                     	;# 
  3385  0699                     	;# 
  3386  069A                     	;# 
  3387  0711                     	;# 
  3388  0712                     	;# 
  3389  0713                     	;# 
  3390  0714                     	;# 
  3391  0715                     	;# 
  3392  0718                     	;# 
  3393  0718                     	;# 
  3394  0719                     	;# 
  3395  071A                     	;# 
  3396  071A                     	;# 
  3397  071B                     	;# 
  3398  071C                     	;# 
  3399  071D                     	;# 
  3400  0791                     	;# 
  3401  0791                     	;# 
  3402  0792                     	;# 
  3403  0793                     	;# 
  3404  0793                     	;# 
  3405  0794                     	;# 
  3406  0795                     	;# 
  3407  0795                     	;# 
  3408  0796                     	;# 
  3409  0797                     	;# 
  3410  0797                     	;# 
  3411  0798                     	;# 
  3412  0799                     	;# 
  3413  079A                     	;# 
  3414  080C                     	;# 
  3415  080C                     	;# 
  3416  080D                     	;# 
  3417  080E                     	;# 
  3418  080E                     	;# 
  3419  080F                     	;# 
  3420  0810                     	;# 
  3421  0810                     	;# 
  3422  0811                     	;# 
  3423  0812                     	;# 
  3424  0812                     	;# 
  3425  0813                     	;# 
  3426  0814                     	;# 
  3427  0815                     	;# 
  3428  0816                     	;# 
  3429  0817                     	;# 
  3430  0818                     	;# 
  3431  0819                     	;# 
  3432  081A                     	;# 
  3433  081A                     	;# 
  3434  081B                     	;# 
  3435  081C                     	;# 
  3436  081C                     	;# 
  3437  081D                     	;# 
  3438  088C                     	;# 
  3439  088D                     	;# 
  3440  088E                     	;# 
  3441  088F                     	;# 
  3442  088F                     	;# 
  3443  0890                     	;# 
  3444  0891                     	;# 
  3445  0892                     	;# 
  3446  0893                     	;# 
  3447  0893                     	;# 
  3448  0894                     	;# 
  3449  0895                     	;# 
  3450  0896                     	;# 
  3451  0897                     	;# 
  3452  0897                     	;# 
  3453  0898                     	;# 
  3454  0899                     	;# 
  3455  0D8C                     	;# 
  3456  0D8C                     	;# 
  3457  0D8D                     	;# 
  3458  0D8E                     	;# 
  3459  0D8F                     	;# 
  3460  0D8F                     	;# 
  3461  0D90                     	;# 
  3462  0D91                     	;# 
  3463  0D92                     	;# 
  3464  0D92                     	;# 
  3465  0D93                     	;# 
  3466  0D94                     	;# 
  3467  0D95                     	;# 
  3468  0D95                     	;# 
  3469  0D96                     	;# 
  3470  0D97                     	;# 
  3471  0D98                     	;# 
  3472  0D99                     	;# 
  3473  0D9A                     	;# 
  3474  0D9B                     	;# 
  3475  0D9C                     	;# 
  3476  0D9D                     	;# 
  3477  0D9E                     	;# 
  3478  0D9E                     	;# 
  3479  0D9F                     	;# 
  3480  0DA0                     	;# 
  3481  0DA1                     	;# 
  3482  0DA1                     	;# 
  3483  0DA2                     	;# 
  3484  0DA3                     	;# 
  3485  0DA4                     	;# 
  3486  0DA4                     	;# 
  3487  0DA5                     	;# 
  3488  0DA6                     	;# 
  3489  0DA7                     	;# 
  3490  0DA7                     	;# 
  3491  0DA8                     	;# 
  3492  0DA9                     	;# 
  3493  0DAA                     	;# 
  3494  0DAB                     	;# 
  3495  0DAC                     	;# 
  3496  0DAD                     	;# 
  3497  0DAE                     	;# 
  3498  0DAF                     	;# 
  3499  0E0F                     	;# 
  3500  0E10                     	;# 
  3501  0E11                     	;# 
  3502  0E12                     	;# 
  3503  0E13                     	;# 
  3504  0E14                     	;# 
  3505  0E15                     	;# 
  3506  0E16                     	;# 
  3507  0E17                     	;# 
  3508  0E18                     	;# 
  3509  0E19                     	;# 
  3510  0E1A                     	;# 
  3511  0E1B                     	;# 
  3512  0E1C                     	;# 
  3513  0E1D                     	;# 
  3514  0E1E                     	;# 
  3515  0E1F                     	;# 
  3516  0E20                     	;# 
  3517  0E21                     	;# 
  3518  0E22                     	;# 
  3519  0E23                     	;# 
  3520  0E24                     	;# 
  3521  0E25                     	;# 
  3522  0E26                     	;# 
  3523  0E27                     	;# 
  3524  0E28                     	;# 
  3525  0E29                     	;# 
  3526  0E2A                     	;# 
  3527  0E2B                     	;# 
  3528  0E2C                     	;# 
  3529  0E2D                     	;# 
  3530  0E2E                     	;# 
  3531  0E90                     	;# 
  3532  0E91                     	;# 
  3533  0E92                     	;# 
  3534  0E94                     	;# 
  3535  0E95                     	;# 
  3536  0E9C                     	;# 
  3537  0E9D                     	;# 
  3538  0E9E                     	;# 
  3539  0E9F                     	;# 
  3540  0EA0                     	;# 
  3541  0EA1                     	;# 
  3542  0EA2                     	;# 
  3543  0EA3                     	;# 
  3544  0EA4                     	;# 
  3545  0EA5                     	;# 
  3546  0EA6                     	;# 
  3547  0EA7                     	;# 
  3548  0F0F                     	;# 
  3549  0F10                     	;# 
  3550  0F11                     	;# 
  3551  0F12                     	;# 
  3552  0F13                     	;# 
  3553  0F14                     	;# 
  3554  0F15                     	;# 
  3555  0F16                     	;# 
  3556  0F17                     	;# 
  3557  0F18                     	;# 
  3558  0F19                     	;# 
  3559  0F1A                     	;# 
  3560  0F1B                     	;# 
  3561  0F1C                     	;# 
  3562  0F1D                     	;# 
  3563  0F1E                     	;# 
  3564  0F1F                     	;# 
  3565  0F20                     	;# 
  3566  0F21                     	;# 
  3567  0F22                     	;# 
  3568  0F23                     	;# 
  3569  0F24                     	;# 
  3570  0F25                     	;# 
  3571  0F26                     	;# 
  3572  0F27                     	;# 
  3573  0F28                     	;# 
  3574  0F29                     	;# 
  3575  0F2A                     	;# 
  3576  0F2B                     	;# 
  3577  0F2C                     	;# 
  3578  0F2D                     	;# 
  3579  0F2E                     	;# 
  3580  0F2F                     	;# 
  3581  0F30                     	;# 
  3582  0F31                     	;# 
  3583  0F32                     	;# 
  3584  0F33                     	;# 
  3585  0F34                     	;# 
  3586  0F35                     	;# 
  3587  0F36                     	;# 
  3588  0F37                     	;# 
  3589  0FE4                     	;# 
  3590  0FE5                     	;# 
  3591  0FE6                     	;# 
  3592  0FE7                     	;# 
  3593  0FE8                     	;# 
  3594  0FE9                     	;# 
  3595  0FEA                     	;# 
  3596  0FEB                     	;# 
  3597  0FED                     	;# 
  3598  0FEE                     	;# 
  3599  0FEF                     	;# 
  3600  0000                     	;# 
  3601  0001                     	;# 
  3602  0002                     	;# 
  3603  0003                     	;# 
  3604  0004                     	;# 
  3605  0005                     	;# 
  3606  0006                     	;# 
  3607  0007                     	;# 
  3608  0008                     	;# 
  3609  0009                     	;# 
  3610  000A                     	;# 
  3611  000B                     	;# 
  3612  000C                     	;# 
  3613  000D                     	;# 
  3614  000E                     	;# 
  3615  0010                     	;# 
  3616  0011                     	;# 
  3617  0012                     	;# 
  3618  0013                     	;# 
  3619  0014                     	;# 
  3620  0015                     	;# 
  3621  0016                     	;# 
  3622  0016                     	;# 
  3623  0017                     	;# 
  3624  0018                     	;# 
  3625  0019                     	;# 
  3626  001A                     	;# 
  3627  001A                     	;# 
  3628  001B                     	;# 
  3629  001B                     	;# 
  3630  001C                     	;# 
  3631  001D                     	;# 
  3632  001E                     	;# 
  3633  001F                     	;# 
  3634  008C                     	;# 
  3635  008D                     	;# 
  3636  008E                     	;# 
  3637  0090                     	;# 
  3638  0091                     	;# 
  3639  0092                     	;# 
  3640  0093                     	;# 
  3641  0094                     	;# 
  3642  0095                     	;# 
  3643  0096                     	;# 
  3644  0098                     	;# 
  3645  0099                     	;# 
  3646  009A                     	;# 
  3647  009B                     	;# 
  3648  009B                     	;# 
  3649  009C                     	;# 
  3650  009D                     	;# 
  3651  009E                     	;# 
  3652  009F                     	;# 
  3653  010C                     	;# 
  3654  010D                     	;# 
  3655  010E                     	;# 
  3656  0111                     	;# 
  3657  0112                     	;# 
  3658  0113                     	;# 
  3659  0114                     	;# 
  3660  0115                     	;# 
  3661  0116                     	;# 
  3662  0117                     	;# 
  3663  0118                     	;# 
  3664  0119                     	;# 
  3665  011C                     	;# 
  3666  018C                     	;# 
  3667  018D                     	;# 
  3668  018E                     	;# 
  3669  0191                     	;# 
  3670  0191                     	;# 
  3671  0192                     	;# 
  3672  0193                     	;# 
  3673  0193                     	;# 
  3674  0194                     	;# 
  3675  0195                     	;# 
  3676  0196                     	;# 
  3677  0197                     	;# 
  3678  0199                     	;# 
  3679  0199                     	;# 
  3680  0199                     	;# 
  3681  019A                     	;# 
  3682  019A                     	;# 
  3683  019A                     	;# 
  3684  019B                     	;# 
  3685  019B                     	;# 
  3686  019B                     	;# 
  3687  019B                     	;# 
  3688  019B                     	;# 
  3689  019C                     	;# 
  3690  019C                     	;# 
  3691  019C                     	;# 
  3692  019D                     	;# 
  3693  019D                     	;# 
  3694  019D                     	;# 
  3695  019E                     	;# 
  3696  019E                     	;# 
  3697  019E                     	;# 
  3698  019F                     	;# 
  3699  019F                     	;# 
  3700  019F                     	;# 
  3701  019F                     	;# 
  3702  019F                     	;# 
  3703  020C                     	;# 
  3704  020D                     	;# 
  3705  020E                     	;# 
  3706  0211                     	;# 
  3707  0211                     	;# 
  3708  0212                     	;# 
  3709  0212                     	;# 
  3710  0213                     	;# 
  3711  0213                     	;# 
  3712  0214                     	;# 
  3713  0214                     	;# 
  3714  0215                     	;# 
  3715  0215                     	;# 
  3716  0215                     	;# 
  3717  0215                     	;# 
  3718  0216                     	;# 
  3719  0216                     	;# 
  3720  0217                     	;# 
  3721  0217                     	;# 
  3722  028C                     	;# 
  3723  028D                     	;# 
  3724  028E                     	;# 
  3725  0291                     	;# 
  3726  0291                     	;# 
  3727  0292                     	;# 
  3728  0293                     	;# 
  3729  0294                     	;# 
  3730  0298                     	;# 
  3731  0298                     	;# 
  3732  0299                     	;# 
  3733  029A                     	;# 
  3734  029B                     	;# 
  3735  029E                     	;# 
  3736  030C                     	;# 
  3737  030D                     	;# 
  3738  030E                     	;# 
  3739  038C                     	;# 
  3740  038D                     	;# 
  3741  038E                     	;# 
  3742  0391                     	;# 
  3743  0392                     	;# 
  3744  0393                     	;# 
  3745  0394                     	;# 
  3746  0395                     	;# 
  3747  0396                     	;# 
  3748  0397                     	;# 
  3749  0398                     	;# 
  3750  0399                     	;# 
  3751  040E                     	;# 
  3752  0413                     	;# 
  3753  0413                     	;# 
  3754  0414                     	;# 
  3755  0414                     	;# 
  3756  0415                     	;# 
  3757  0416                     	;# 
  3758  0417                     	;# 
  3759  0418                     	;# 
  3760  041A                     	;# 
  3761  041A                     	;# 
  3762  041B                     	;# 
  3763  041B                     	;# 
  3764  041C                     	;# 
  3765  041D                     	;# 
  3766  041E                     	;# 
  3767  041F                     	;# 
  3768  0493                     	;# 
  3769  0494                     	;# 
  3770  0495                     	;# 
  3771  0496                     	;# 
  3772  049A                     	;# 
  3773  049B                     	;# 
  3774  049C                     	;# 
  3775  049D                     	;# 
  3776  058C                     	;# 
  3777  058C                     	;# 
  3778  058D                     	;# 
  3779  058E                     	;# 
  3780  058E                     	;# 
  3781  058F                     	;# 
  3782  0590                     	;# 
  3783  0590                     	;# 
  3784  0591                     	;# 
  3785  0592                     	;# 
  3786  0592                     	;# 
  3787  0593                     	;# 
  3788  0594                     	;# 
  3789  0594                     	;# 
  3790  0595                     	;# 
  3791  0596                     	;# 
  3792  0596                     	;# 
  3793  0597                     	;# 
  3794  0598                     	;# 
  3795  0599                     	;# 
  3796  059A                     	;# 
  3797  059B                     	;# 
  3798  059B                     	;# 
  3799  059C                     	;# 
  3800  059D                     	;# 
  3801  060C                     	;# 
  3802  060C                     	;# 
  3803  060D                     	;# 
  3804  060E                     	;# 
  3805  060F                     	;# 
  3806  060F                     	;# 
  3807  0610                     	;# 
  3808  0611                     	;# 
  3809  0612                     	;# 
  3810  0613                     	;# 
  3811  0614                     	;# 
  3812  0617                     	;# 
  3813  0618                     	;# 
  3814  0619                     	;# 
  3815  061A                     	;# 
  3816  061B                     	;# 
  3817  061C                     	;# 
  3818  0691                     	;# 
  3819  0692                     	;# 
  3820  0693                     	;# 
  3821  0694                     	;# 
  3822  0695                     	;# 
  3823  0696                     	;# 
  3824  0697                     	;# 
  3825  0699                     	;# 
  3826  069A                     	;# 
  3827  0711                     	;# 
  3828  0712                     	;# 
  3829  0713                     	;# 
  3830  0714                     	;# 
  3831  0715                     	;# 
  3832  0718                     	;# 
  3833  0718                     	;# 
  3834  0719                     	;# 
  3835  071A                     	;# 
  3836  071A                     	;# 
  3837  071B                     	;# 
  3838  071C                     	;# 
  3839  071D                     	;# 
  3840  0791                     	;# 
  3841  0791                     	;# 
  3842  0792                     	;# 
  3843  0793                     	;# 
  3844  0793                     	;# 
  3845  0794                     	;# 
  3846  0795                     	;# 
  3847  0795                     	;# 
  3848  0796                     	;# 
  3849  0797                     	;# 
  3850  0797                     	;# 
  3851  0798                     	;# 
  3852  0799                     	;# 
  3853  079A                     	;# 
  3854  080C                     	;# 
  3855  080C                     	;# 
  3856  080D                     	;# 
  3857  080E                     	;# 
  3858  080E                     	;# 
  3859  080F                     	;# 
  3860  0810                     	;# 
  3861  0810                     	;# 
  3862  0811                     	;# 
  3863  0812                     	;# 
  3864  0812                     	;# 
  3865  0813                     	;# 
  3866  0814                     	;# 
  3867  0815                     	;# 
  3868  0816                     	;# 
  3869  0817                     	;# 
  3870  0818                     	;# 
  3871  0819                     	;# 
  3872  081A                     	;# 
  3873  081A                     	;# 
  3874  081B                     	;# 
  3875  081C                     	;# 
  3876  081C                     	;# 
  3877  081D                     	;# 
  3878  088C                     	;# 
  3879  088D                     	;# 
  3880  088E                     	;# 
  3881  088F                     	;# 
  3882  088F                     	;# 
  3883  0890                     	;# 
  3884  0891                     	;# 
  3885  0892                     	;# 
  3886  0893                     	;# 
  3887  0893                     	;# 
  3888  0894                     	;# 
  3889  0895                     	;# 
  3890  0896                     	;# 
  3891  0897                     	;# 
  3892  0897                     	;# 
  3893  0898                     	;# 
  3894  0899                     	;# 
  3895  0D8C                     	;# 
  3896  0D8C                     	;# 
  3897  0D8D                     	;# 
  3898  0D8E                     	;# 
  3899  0D8F                     	;# 
  3900  0D8F                     	;# 
  3901  0D90                     	;# 
  3902  0D91                     	;# 
  3903  0D92                     	;# 
  3904  0D92                     	;# 
  3905  0D93                     	;# 
  3906  0D94                     	;# 
  3907  0D95                     	;# 
  3908  0D95                     	;# 
  3909  0D96                     	;# 
  3910  0D97                     	;# 
  3911  0D98                     	;# 
  3912  0D99                     	;# 
  3913  0D9A                     	;# 
  3914  0D9B                     	;# 
  3915  0D9C                     	;# 
  3916  0D9D                     	;# 
  3917  0D9E                     	;# 
  3918  0D9E                     	;# 
  3919  0D9F                     	;# 
  3920  0DA0                     	;# 
  3921  0DA1                     	;# 
  3922  0DA1                     	;# 
  3923  0DA2                     	;# 
  3924  0DA3                     	;# 
  3925  0DA4                     	;# 
  3926  0DA4                     	;# 
  3927  0DA5                     	;# 
  3928  0DA6                     	;# 
  3929  0DA7                     	;# 
  3930  0DA7                     	;# 
  3931  0DA8                     	;# 
  3932  0DA9                     	;# 
  3933  0DAA                     	;# 
  3934  0DAB                     	;# 
  3935  0DAC                     	;# 
  3936  0DAD                     	;# 
  3937  0DAE                     	;# 
  3938  0DAF                     	;# 
  3939  0E0F                     	;# 
  3940  0E10                     	;# 
  3941  0E11                     	;# 
  3942  0E12                     	;# 
  3943  0E13                     	;# 
  3944  0E14                     	;# 
  3945  0E15                     	;# 
  3946  0E16                     	;# 
  3947  0E17                     	;# 
  3948  0E18                     	;# 
  3949  0E19                     	;# 
  3950  0E1A                     	;# 
  3951  0E1B                     	;# 
  3952  0E1C                     	;# 
  3953  0E1D                     	;# 
  3954  0E1E                     	;# 
  3955  0E1F                     	;# 
  3956  0E20                     	;# 
  3957  0E21                     	;# 
  3958  0E22                     	;# 
  3959  0E23                     	;# 
  3960  0E24                     	;# 
  3961  0E25                     	;# 
  3962  0E26                     	;# 
  3963  0E27                     	;# 
  3964  0E28                     	;# 
  3965  0E29                     	;# 
  3966  0E2A                     	;# 
  3967  0E2B                     	;# 
  3968  0E2C                     	;# 
  3969  0E2D                     	;# 
  3970  0E2E                     	;# 
  3971  0E90                     	;# 
  3972  0E91                     	;# 
  3973  0E92                     	;# 
  3974  0E94                     	;# 
  3975  0E95                     	;# 
  3976  0E9C                     	;# 
  3977  0E9D                     	;# 
  3978  0E9E                     	;# 
  3979  0E9F                     	;# 
  3980  0EA0                     	;# 
  3981  0EA1                     	;# 
  3982  0EA2                     	;# 
  3983  0EA3                     	;# 
  3984  0EA4                     	;# 
  3985  0EA5                     	;# 
  3986  0EA6                     	;# 
  3987  0EA7                     	;# 
  3988  0F0F                     	;# 
  3989  0F10                     	;# 
  3990  0F11                     	;# 
  3991  0F12                     	;# 
  3992  0F13                     	;# 
  3993  0F14                     	;# 
  3994  0F15                     	;# 
  3995  0F16                     	;# 
  3996  0F17                     	;# 
  3997  0F18                     	;# 
  3998  0F19                     	;# 
  3999  0F1A                     	;# 
  4000  0F1B                     	;# 
  4001  0F1C                     	;# 
  4002  0F1D                     	;# 
  4003  0F1E                     	;# 
  4004  0F1F                     	;# 
  4005  0F20                     	;# 
  4006  0F21                     	;# 
  4007  0F22                     	;# 
  4008  0F23                     	;# 
  4009  0F24                     	;# 
  4010  0F25                     	;# 
  4011  0F26                     	;# 
  4012  0F27                     	;# 
  4013  0F28                     	;# 
  4014  0F29                     	;# 
  4015  0F2A                     	;# 
  4016  0F2B                     	;# 
  4017  0F2C                     	;# 
  4018  0F2D                     	;# 
  4019  0F2E                     	;# 
  4020  0F2F                     	;# 
  4021  0F30                     	;# 
  4022  0F31                     	;# 
  4023  0F32                     	;# 
  4024  0F33                     	;# 
  4025  0F34                     	;# 
  4026  0F35                     	;# 
  4027  0F36                     	;# 
  4028  0F37                     	;# 
  4029  0FE4                     	;# 
  4030  0FE5                     	;# 
  4031  0FE6                     	;# 
  4032  0FE7                     	;# 
  4033  0FE8                     	;# 
  4034  0FE9                     	;# 
  4035  0FEA                     	;# 
  4036  0FEB                     	;# 
  4037  0FED                     	;# 
  4038  0FEE                     	;# 
  4039  0FEF                     	;# 
  4040  000E                     _PORTCbits	set	14
  4041  000B                     _INTCONbits	set	11
  4042  0011                     _PIR2bits	set	17
  4043  0010                     _PIR1bits	set	16
  4044  0095                     _OPTION_REG	set	149
  4045  0095                     _OPTION_REGbits	set	149
  4046  008E                     _TRISC	set	142
  4047  008D                     _TRISB	set	141
  4048  008C                     _TRISA	set	140
  4049  0098                     _OSCTUNE	set	152
  4050  0099                     _OSCCON	set	153
  4051  0091                     _PIE2bits	set	145
  4052  0090                     _PIE1bits	set	144
  4053  046C                     _TRISB4	set	1132
  4054  046E                     _TRISB6	set	1134
  4055  010E                     _LATC	set	270
  4056  010D                     _LATB	set	269
  4057  010C                     _LATA	set	268
  4058  0116                     _BORCON	set	278
  4059  086C                     _LATB4	set	2156
  4060  086E                     _LATB6	set	2158
  4061  018C                     _ANSELA	set	396
  4062  018D                     _ANSELB	set	397
  4063  018E                     _ANSELC	set	398
  4064  0216                     _SSP1CON2	set	534
  4065  020E                     _WPUC	set	526
  4066  020C                     _WPUA	set	524
  4067  020D                     _WPUB	set	525
  4068  0211                     _SSP1BUF	set	529
  4069  0216                     _SSP1CON2bits	set	534
  4070  0215                     _SSP1CON1bits	set	533
  4071  0212                     _SSP1ADD	set	530
  4072  0217                     _SSP1CON3	set	535
  4073  0215                     _SSP1CON1	set	533
  4074  0214                     _SSP1STAT	set	532
  4075  028E                     _ODCONC	set	654
  4076  028D                     _ODCONB	set	653
  4077  028C                     _ODCONA	set	652
  4078  0E20                     _SSPCLKPPS	set	3616
  4079  0E21                     _SSPDATPPS	set	3617
  4080  0E9C                     _RB4PPS	set	3740
  4081  0E9E                     _RB6PPS	set	3742
  4082                           
  4083                           ; #config settings
  4084  0000                     
  4085                           	psect	cinit
  4086  0024                     start_initialization:	
  4087  0024                     __initialization:	
  4088                           
  4089                           ; Clear objects allocated to COMMON
  4090  0024  01F0               	clrf	__pbssCOMMON& (0+127)
  4091  0025  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4092  0026  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4093  0027  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4094  0028  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4095  0029  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4096                           
  4097                           ; Clear objects allocated to BANK0
  4098  002A  3040               	movlw	low __pbssBANK0
  4099  002B  0084               	movwf	4
  4100  002C  3000               	movlw	high __pbssBANK0
  4101  002D  0085               	movwf	5
  4102  002E  3013               	movlw	19
  4103  002F  3187  2705         	fcall	clear_ram0
  4104  0031                     end_of_initialization:	
  4105                           ;End of C runtime variable initialization code
  4106                           
  4107  0031                     __end_of__initialization:	
  4108  0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4109  0032  0020               	movlb	0
  4110  0033  3180  2835         	ljmp	_main	;jump to C main() function
  4111                           
  4112                           	psect	bssCOMMON
  4113  0070                     __pbssCOMMON:	
  4114  0070                     I2C_ISR@pi2c_buf_ptr:	
  4115  0070                     	ds	1
  4116  0071                     _p_i2c_trb_current:	
  4117  0071                     	ds	1
  4118  0072                     _i2c_trb_count:	
  4119  0072                     	ds	1
  4120  0073                     _i2c_state:	
  4121  0073                     	ds	1
  4122  0074                     I2C_ISR@i2c_address:	
  4123  0074                     	ds	2
  4124                           
  4125                           	psect	bssBANK0
  4126  0040                     __pbssBANK0:	
  4127  0040                     _i2c_object:	
  4128  0040                     	ds	5
  4129  0045                     I2C_ISR@i2c_10bit_address_restart:	
  4130  0045                     	ds	1
  4131  0046                     I2C_ISR@i2c_bytes_left:	
  4132  0046                     	ds	1
  4133  0047                     _p_i2c_current:	
  4134  0047                     	ds	1
  4135  0048                     I2C_MasterRead@trBlock:	
  4136  0048                     	ds	4
  4137  004C                     I2C_MasterWrite@trBlock:	
  4138  004C                     	ds	4
  4139  0050                     _i2c_tr_queue:	
  4140  0050                     	ds	3
  4141                           
  4142                           	psect	clrtext
  4143  0705                     clear_ram0:	
  4144                           ;	Called with FSR0 containing the base address, and
  4145                           ;	WREG with the size to clear
  4146                           
  4147  0705  0064               	clrwdt	;clear the watchdog before getting into this loop
  4148  0706                     clrloop0:	
  4149  0706  0180               	clrf	0	;clear RAM location pointed to by FSR
  4150  0707  3101               	addfsr 0,1
  4151  0708  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4152  0709  2F06               	goto	clrloop0	;have we reached the end yet?
  4153  070A  3400               	retlw	0	;all done for this memory range, return
  4154                           
  4155                           	psect	cstackCOMMON
  4156  0076                     __pcstackCOMMON:	
  4157  0076                     ?_I2C_Stop:	
  4158  0076                     ??_I2C_Stop:	
  4159                           ; 1 bytes @ 0x0
  4160                           
  4161  0076                     ?_I2C_FunctionComplete:	
  4162                           ; 1 bytes @ 0x0
  4163                           
  4164  0076                     ??_I2C_FunctionComplete:	
  4165                           ; 1 bytes @ 0x0
  4166                           
  4167  0076                     ?_PIN_MANAGER_Initialize:	
  4168                           ; 1 bytes @ 0x0
  4169                           
  4170  0076                     ?_OSCILLATOR_Initialize:	
  4171                           ; 1 bytes @ 0x0
  4172                           
  4173  0076                     ?_waitI2C:	
  4174                           ; 1 bytes @ 0x0
  4175                           
  4176  0076                     ?_initRW1063:	
  4177                           ; 1 bytes @ 0x0
  4178                           
  4179  0076                     ?_writeInst:	
  4180                           ; 1 bytes @ 0x0
  4181                           
  4182  0076                     ?_readSec:	
  4183                           ; 1 bytes @ 0x0
  4184                           
  4185  0076                     ?_readMin:	
  4186                           ; 1 bytes @ 0x0
  4187                           
  4188  0076                     ?_readHr:	
  4189                           ; 1 bytes @ 0x0
  4190                           
  4191  0076                     ?_convertFromBcd:	
  4192                           ; 1 bytes @ 0x0
  4193                           
  4194  0076                     ?_FSM:	
  4195                           ; 1 bytes @ 0x0
  4196                           
  4197  0076                     ?_printReglageH:	
  4198                           ; 1 bytes @ 0x0
  4199                           
  4200  0076                     ?_incrMin:	
  4201                           ; 1 bytes @ 0x0
  4202                           
  4203  0076                     ?_incrHeure:	
  4204                           ; 1 bytes @ 0x0
  4205                           
  4206  0076                     ?_I2C_ISR:	
  4207                           ; 1 bytes @ 0x0
  4208                           
  4209  0076                     ?_I2C_BusCollisionISR:	
  4210                           ; 1 bytes @ 0x0
  4211                           
  4212  0076                     ??_I2C_BusCollisionISR:	
  4213                           ; 1 bytes @ 0x0
  4214                           
  4215  0076                     ?_INTERRUPT_InterruptManager:	
  4216                           ; 1 bytes @ 0x0
  4217                           
  4218  0076                     ?_SYSTEM_Initialize:	
  4219                           ; 1 bytes @ 0x0
  4220                           
  4221  0076                     ?_initI2C:	
  4222                           ; 1 bytes @ 0x0
  4223                           
  4224  0076                     ?_startI2C:	
  4225                           ; 1 bytes @ 0x0
  4226                           
  4227  0076                     ?_stopI2C:	
  4228                           ; 1 bytes @ 0x0
  4229                           
  4230  0076                     ?_sendI2C:	
  4231                           ; 1 bytes @ 0x0
  4232                           
  4233  0076                     ?_readI2C:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0076                     ?_re_startI2C:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0076                     ?_sendNoAckI2C:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0076                     ?_main:	
  4243                           ; 1 bytes @ 0x0
  4244                           
  4245  0076                     ?_changeMin:	
  4246                           ; 1 bytes @ 0x0
  4247                           
  4248  0076                     ?_changeHeure:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251  0076                     I2C_Stop@completion_code:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254                           
  4255                           ; 1 bytes @ 0x0
  4256  0076                     	ds	1
  4257  0077                     ??_I2C_ISR:	
  4258                           
  4259                           ; 1 bytes @ 0x1
  4260  0077                     	ds	4
  4261  007B                     ??_INTERRUPT_InterruptManager:	
  4262                           
  4263                           ; 1 bytes @ 0x5
  4264  007B                     	ds	1
  4265                           
  4266                           	psect	cstackBANK0
  4267  0020                     __pcstackBANK0:	
  4268  0020                     ??_PIN_MANAGER_Initialize:	
  4269  0020                     ??_OSCILLATOR_Initialize:	
  4270                           ; 1 bytes @ 0x0
  4271                           
  4272  0020                     ??_waitI2C:	
  4273                           ; 1 bytes @ 0x0
  4274                           
  4275  0020                     ?_bitExtracted:	
  4276                           ; 1 bytes @ 0x0
  4277                           
  4278  0020                     ??_FSM:	
  4279                           ; 1 bytes @ 0x0
  4280                           
  4281  0020                     ??_SYSTEM_Initialize:	
  4282                           ; 1 bytes @ 0x0
  4283                           
  4284  0020                     ??_initI2C:	
  4285                           ; 1 bytes @ 0x0
  4286                           
  4287  0020                     ??_startI2C:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0020                     ??_stopI2C:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0020                     ??_sendI2C:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0020                     ??_readI2C:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0020                     ??_re_startI2C:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0020                     ??_sendNoAckI2C:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0020                     ?___bmul:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0020                     sendI2C@data:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0020                     bitExtracted@k:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0020                     FSM@IN:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0020                     ___bmul@multiplicand:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320                           
  4321                           ; 1 bytes @ 0x0
  4322  0020                     	ds	1
  4323  0021                     ??_writeInst:	
  4324  0021                     ??_changeMin:	
  4325                           ; 1 bytes @ 0x1
  4326                           
  4327  0021                     ??_changeHeure:	
  4328                           ; 1 bytes @ 0x1
  4329                           
  4330  0021                     ??___bmul:	
  4331                           ; 1 bytes @ 0x1
  4332                           
  4333  0021                     readI2C@temp:	
  4334                           ; 1 bytes @ 0x1
  4335                           
  4336  0021                     changeMin@minute:	
  4337                           ; 1 bytes @ 0x1
  4338                           
  4339  0021                     changeHeure@heure:	
  4340                           ; 1 bytes @ 0x1
  4341                           
  4342  0021                     bitExtracted@p:	
  4343                           ; 1 bytes @ 0x1
  4344                           
  4345  0021                     initI2C@i:	
  4346                           ; 1 bytes @ 0x1
  4347                           
  4348                           
  4349                           ; 2 bytes @ 0x1
  4350  0021                     	ds	1
  4351  0022                     ??_readSec:	
  4352  0022                     ??_readMin:	
  4353                           ; 1 bytes @ 0x2
  4354                           
  4355  0022                     ??_readHr:	
  4356                           ; 1 bytes @ 0x2
  4357                           
  4358  0022                     ??_bitExtracted:	
  4359                           ; 1 bytes @ 0x2
  4360                           
  4361  0022                     writeInst@Inst:	
  4362                           ; 1 bytes @ 0x2
  4363                           
  4364  0022                     ___bmul@product:	
  4365                           ; 1 bytes @ 0x2
  4366                           
  4367                           
  4368                           ; 1 bytes @ 0x2
  4369  0022                     	ds	1
  4370  0023                     ??_initRW1063:	
  4371  0023                     ?_writeData:	
  4372                           ; 1 bytes @ 0x3
  4373                           
  4374  0023                     readSec@second:	
  4375                           ; 1 bytes @ 0x3
  4376                           
  4377  0023                     readMin@minute:	
  4378                           ; 1 bytes @ 0x3
  4379                           
  4380  0023                     readHr@heure:	
  4381                           ; 1 bytes @ 0x3
  4382                           
  4383  0023                     writeData@adress:	
  4384                           ; 1 bytes @ 0x3
  4385                           
  4386  0023                     ___bmul@multiplier:	
  4387                           ; 1 bytes @ 0x3
  4388                           
  4389                           
  4390                           ; 1 bytes @ 0x3
  4391  0023                     	ds	1
  4392  0024                     ??_convertFromBcd:	
  4393  0024                     writeData@ligne:	
  4394                           ; 1 bytes @ 0x4
  4395                           
  4396  0024                     bitExtracted@number:	
  4397                           ; 1 bytes @ 0x4
  4398                           
  4399                           
  4400                           ; 1 bytes @ 0x4
  4401  0024                     	ds	1
  4402  0025                     ??_writeData:	
  4403  0025                     ??_incrMin:	
  4404                           ; 1 bytes @ 0x5
  4405                           
  4406  0025                     ??_incrHeure:	
  4407                           ; 1 bytes @ 0x5
  4408                           
  4409                           
  4410                           ; 1 bytes @ 0x5
  4411  0025                     	ds	1
  4412  0026                     writeData@data:	
  4413  0026                     convertFromBcd@byteMSB:	
  4414                           ; 1 bytes @ 0x6
  4415                           
  4416                           
  4417                           ; 1 bytes @ 0x6
  4418  0026                     	ds	1
  4419  0027                     writeData@i:	
  4420  0027                     convertFromBcd@byteLSB:	
  4421                           ; 1 bytes @ 0x7
  4422                           
  4423                           
  4424                           ; 1 bytes @ 0x7
  4425  0027                     	ds	1
  4426  0028                     ??_printReglageH:	
  4427  0028                     incrMin@dizaineM:	
  4428                           ; 1 bytes @ 0x8
  4429                           
  4430  0028                     incrHeure@dizaineH:	
  4431                           ; 1 bytes @ 0x8
  4432                           
  4433  0028                     convertFromBcd@byteBCD:	
  4434                           ; 1 bytes @ 0x8
  4435                           
  4436                           
  4437                           ; 1 bytes @ 0x8
  4438  0028                     	ds	1
  4439  0029                     incrMin@uniteM:	
  4440  0029                     incrHeure@uniteH:	
  4441                           ; 1 bytes @ 0x9
  4442                           
  4443                           
  4444                           ; 1 bytes @ 0x9
  4445  0029                     	ds	1
  4446  002A                     incrMin@minute:	
  4447  002A                     incrHeure@heure:	
  4448                           ; 1 bytes @ 0xA
  4449                           
  4450                           
  4451                           ; 1 bytes @ 0xA
  4452  002A                     	ds	1
  4453  002B                     printReglageH@dizaineM:	
  4454                           
  4455                           ; 1 bytes @ 0xB
  4456  002B                     	ds	1
  4457  002C                     printReglageH@uniteM:	
  4458                           
  4459                           ; 1 bytes @ 0xC
  4460  002C                     	ds	1
  4461  002D                     printReglageH@dizaineH:	
  4462                           
  4463                           ; 1 bytes @ 0xD
  4464  002D                     	ds	1
  4465  002E                     printReglageH@uniteH:	
  4466                           
  4467                           ; 1 bytes @ 0xE
  4468  002E                     	ds	1
  4469  002F                     printReglageH@minute:	
  4470                           
  4471                           ; 1 bytes @ 0xF
  4472  002F                     	ds	1
  4473  0030                     printReglageH@heure:	
  4474                           
  4475                           ; 1 bytes @ 0x10
  4476  0030                     	ds	1
  4477  0031                     ??_main:	
  4478                           
  4479                           ; 1 bytes @ 0x11
  4480  0031                     	ds	3
  4481  0034                     main@buffer:	
  4482                           
  4483                           ; 1 bytes @ 0x14
  4484  0034                     	ds	1
  4485  0035                     main@uniteS:	
  4486                           
  4487                           ; 1 bytes @ 0x15
  4488  0035                     	ds	1
  4489  0036                     main@dizaineS:	
  4490                           
  4491                           ; 1 bytes @ 0x16
  4492  0036                     	ds	1
  4493  0037                     main@uniteM:	
  4494                           
  4495                           ; 1 bytes @ 0x17
  4496  0037                     	ds	1
  4497  0038                     main@dizaineM:	
  4498                           
  4499                           ; 1 bytes @ 0x18
  4500  0038                     	ds	1
  4501  0039                     main@uniteH:	
  4502                           
  4503                           ; 1 bytes @ 0x19
  4504  0039                     	ds	1
  4505  003A                     main@dizaineH:	
  4506                           
  4507                           ; 1 bytes @ 0x1A
  4508  003A                     	ds	1
  4509  003B                     main@menu:	
  4510                           
  4511                           ; 1 bytes @ 0x1B
  4512  003B                     	ds	1
  4513  003C                     main@select:	
  4514                           
  4515                           ; 1 bytes @ 0x1C
  4516  003C                     	ds	1
  4517  003D                     main@minute:	
  4518                           
  4519                           ; 1 bytes @ 0x1D
  4520  003D                     	ds	1
  4521  003E                     main@heure:	
  4522                           
  4523                           ; 1 bytes @ 0x1E
  4524  003E                     	ds	1
  4525  003F                     main@second:	
  4526                           
  4527                           ; 1 bytes @ 0x1F
  4528  003F                     	ds	1
  4529                           
  4530                           	psect	maintext
  4531  0035                     __pmaintext:	
  4532 ;;
  4533 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4534 ;;
  4535 ;; *************** function _main *****************
  4536 ;; Defined at:
  4537 ;;		line 5 in file "main.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  second          1   31[BANK0 ] unsigned char 
  4542 ;;  heure           1   30[BANK0 ] unsigned char 
  4543 ;;  minute          1   29[BANK0 ] unsigned char 
  4544 ;;  select          1   28[BANK0 ] unsigned char 
  4545 ;;  menu            1   27[BANK0 ] unsigned char 
  4546 ;;  dizaineH        1   26[BANK0 ] unsigned char 
  4547 ;;  uniteH          1   25[BANK0 ] unsigned char 
  4548 ;;  dizaineM        1   24[BANK0 ] unsigned char 
  4549 ;;  uniteM          1   23[BANK0 ] unsigned char 
  4550 ;;  dizaineS        1   22[BANK0 ] unsigned char 
  4551 ;;  uniteS          1   21[BANK0 ] unsigned char 
  4552 ;;  buffer          1   20[BANK0 ] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : B1F/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;Total ram usage:       15 bytes
  4567 ;; Hardware stack levels required when called:    8
  4568 ;; This function calls:
  4569 ;;		_FSM
  4570 ;;		_SYSTEM_Initialize
  4571 ;;		_bitExtracted
  4572 ;;		_convertFromBcd
  4573 ;;		_incrHeure
  4574 ;;		_incrMin
  4575 ;;		_initI2C
  4576 ;;		_initRW1063
  4577 ;;		_printReglageH
  4578 ;;		_readHr
  4579 ;;		_readMin
  4580 ;;		_readSec
  4581 ;;		_writeData
  4582 ;;		_writeInst
  4583 ;; This function is called by:
  4584 ;;		Startup code after reset
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function _main
  4590  0035                     _main:	
  4591                           
  4592                           ;main.c: 7: SYSTEM_Initialize();
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4596  0035  3187  2711  3180   	fcall	_SYSTEM_Initialize
  4597                           
  4598                           ;main.c: 8: initI2C();
  4599  0038  3184  24AB  3180   	fcall	_initI2C
  4600                           
  4601                           ;main.c: 9: initRW1063();
  4602  003B  3186  26AF  3180   	fcall	_initRW1063
  4603                           
  4604                           ;main.c: 12: (INTCONbits.GIE = 0);
  4605  003E  138B               	bcf	11,7	;volatile
  4606                           
  4607                           ;main.c: 13: (INTCONbits.PEIE = 0);
  4608  003F  130B               	bcf	11,6	;volatile
  4609                           
  4610                           ;main.c: 14: writeInst(0b00000001);
  4611  0040  3001               	movlw	1
  4612  0041  3184  24E7  3180   	fcall	_writeInst
  4613                           
  4614                           ;main.c: 15: _delay((unsigned long)((40)*(16000000/4000.0)));
  4615  0044  30D0               	movlw	208
  4616  0045  0020               	movlb	0	; select bank0
  4617  0046  00B1               	movwf	??_main
  4618  0047  30C9               	movlw	201
  4619  0048                     u2307:	
  4620  0048  0B89               	decfsz	9,f
  4621  0049  2848               	goto	u2307
  4622  004A  0BB1               	decfsz	??_main,f
  4623  004B  2848               	goto	u2307
  4624  004C  3200               	nop2
  4625                           
  4626                           ;main.c: 17: uint8_t second = 0;
  4627  004D  0020               	movlb	0	; select bank0
  4628  004E  01BF               	clrf	main@second
  4629                           
  4630                           ;main.c: 18: uint8_t minute = 0;
  4631  004F  01BD               	clrf	main@minute
  4632                           
  4633                           ;main.c: 19: uint8_t heure = 0;
  4634  0050  01BE               	clrf	main@heure
  4635                           
  4636                           ;main.c: 20: uint8_t uniteS = 0;
  4637  0051  01B5               	clrf	main@uniteS
  4638                           
  4639                           ;main.c: 21: uint8_t dizaineS = 0;
  4640  0052  01B6               	clrf	main@dizaineS
  4641                           
  4642                           ;main.c: 22: uint8_t uniteM = 0;
  4643  0053  01B7               	clrf	main@uniteM
  4644                           
  4645                           ;main.c: 23: uint8_t dizaineM = 0;
  4646  0054  01B8               	clrf	main@dizaineM
  4647                           
  4648                           ;main.c: 24: uint8_t uniteH = 0;
  4649  0055  01B9               	clrf	main@uniteH
  4650                           
  4651                           ;main.c: 25: uint8_t dizaineH = 0;
  4652  0056  01BA               	clrf	main@dizaineH
  4653                           
  4654                           ;main.c: 26: uint8_t buffer = 0;
  4655  0057  01B4               	clrf	main@buffer
  4656                           
  4657                           ;main.c: 27: uint8_t menu = 0;
  4658  0058  01BB               	clrf	main@menu
  4659                           
  4660                           ;main.c: 28: uint8_t select=0;
  4661  0059  01BC               	clrf	main@select
  4662  005A                     l2956:	
  4663                           ;main.c: 29: while (1) {
  4664                           
  4665                           
  4666                           ;main.c: 30: second = readSec();
  4667  005A  3185  2520  3180   	fcall	_readSec
  4668  005D  0020               	movlb	0	; select bank0
  4669  005E  00B1               	movwf	??_main
  4670  005F  0831               	movf	??_main,w
  4671  0060  00BF               	movwf	main@second
  4672                           
  4673                           ;main.c: 31: minute = readMin();
  4674  0061  3185  254C  3180   	fcall	_readMin
  4675  0064  0020               	movlb	0	; select bank0
  4676  0065  00B1               	movwf	??_main
  4677  0066  0831               	movf	??_main,w
  4678  0067  00BD               	movwf	main@minute
  4679                           
  4680                           ;main.c: 32: heure = readHr();
  4681  0068  3185  2578  3180   	fcall	_readHr
  4682  006B  0020               	movlb	0	; select bank0
  4683  006C  00B1               	movwf	??_main
  4684  006D  0831               	movf	??_main,w
  4685  006E  00BE               	movwf	main@heure
  4686                           
  4687                           ;main.c: 34: second = second - 0b10000000;
  4688  006F  083F               	movf	main@second,w
  4689  0070  3E80               	addlw	128
  4690  0071  00B1               	movwf	??_main
  4691  0072  0831               	movf	??_main,w
  4692  0073  00BF               	movwf	main@second
  4693                           
  4694                           ;main.c: 36: uniteS = bitExtracted(second, 4, 1);
  4695  0074  3004               	movlw	4
  4696  0075  00B1               	movwf	??_main
  4697  0076  0831               	movf	??_main,w
  4698  0077  00A0               	movwf	bitExtracted@k
  4699  0078  01A1               	clrf	bitExtracted@p
  4700  0079  0AA1               	incf	bitExtracted@p,f
  4701  007A  083F               	movf	main@second,w
  4702  007B  3186  2661  3180   	fcall	_bitExtracted
  4703  007E  0020               	movlb	0	; select bank0
  4704  007F  00B2               	movwf	??_main+1
  4705  0080  0832               	movf	??_main+1,w
  4706  0081  00B5               	movwf	main@uniteS
  4707                           
  4708                           ;main.c: 37: dizaineS = bitExtracted(second, 3, 5);
  4709  0082  3003               	movlw	3
  4710  0083  00B1               	movwf	??_main
  4711  0084  0831               	movf	??_main,w
  4712  0085  00A0               	movwf	bitExtracted@k
  4713  0086  3005               	movlw	5
  4714  0087  00B2               	movwf	??_main+1
  4715  0088  0832               	movf	??_main+1,w
  4716  0089  00A1               	movwf	bitExtracted@p
  4717  008A  083F               	movf	main@second,w
  4718  008B  3186  2661  3180   	fcall	_bitExtracted
  4719  008E  0020               	movlb	0	; select bank0
  4720  008F  00B3               	movwf	??_main+2
  4721  0090  0833               	movf	??_main+2,w
  4722  0091  00B6               	movwf	main@dizaineS
  4723                           
  4724                           ;main.c: 39: uniteM = bitExtracted(minute, 4, 1);
  4725  0092  3004               	movlw	4
  4726  0093  00B1               	movwf	??_main
  4727  0094  0831               	movf	??_main,w
  4728  0095  00A0               	movwf	bitExtracted@k
  4729  0096  01A1               	clrf	bitExtracted@p
  4730  0097  0AA1               	incf	bitExtracted@p,f
  4731  0098  083D               	movf	main@minute,w
  4732  0099  3186  2661  3180   	fcall	_bitExtracted
  4733  009C  0020               	movlb	0	; select bank0
  4734  009D  00B2               	movwf	??_main+1
  4735  009E  0832               	movf	??_main+1,w
  4736  009F  00B7               	movwf	main@uniteM
  4737                           
  4738                           ;main.c: 40: dizaineM = bitExtracted(minute, 3, 5);
  4739  00A0  3003               	movlw	3
  4740  00A1  00B1               	movwf	??_main
  4741  00A2  0831               	movf	??_main,w
  4742  00A3  00A0               	movwf	bitExtracted@k
  4743  00A4  3005               	movlw	5
  4744  00A5  00B2               	movwf	??_main+1
  4745  00A6  0832               	movf	??_main+1,w
  4746  00A7  00A1               	movwf	bitExtracted@p
  4747  00A8  083D               	movf	main@minute,w
  4748  00A9  3186  2661  3180   	fcall	_bitExtracted
  4749  00AC  0020               	movlb	0	; select bank0
  4750  00AD  00B3               	movwf	??_main+2
  4751  00AE  0833               	movf	??_main+2,w
  4752  00AF  00B8               	movwf	main@dizaineM
  4753                           
  4754                           ;main.c: 42: uniteH = bitExtracted(heure, 4, 1);
  4755  00B0  3004               	movlw	4
  4756  00B1  00B1               	movwf	??_main
  4757  00B2  0831               	movf	??_main,w
  4758  00B3  00A0               	movwf	bitExtracted@k
  4759  00B4  01A1               	clrf	bitExtracted@p
  4760  00B5  0AA1               	incf	bitExtracted@p,f
  4761  00B6  083E               	movf	main@heure,w
  4762  00B7  3186  2661  3180   	fcall	_bitExtracted
  4763  00BA  0020               	movlb	0	; select bank0
  4764  00BB  00B2               	movwf	??_main+1
  4765  00BC  0832               	movf	??_main+1,w
  4766  00BD  00B9               	movwf	main@uniteH
  4767                           
  4768                           ;main.c: 43: dizaineH = bitExtracted(heure, 2, 5);
  4769  00BE  3002               	movlw	2
  4770  00BF  00B1               	movwf	??_main
  4771  00C0  0831               	movf	??_main,w
  4772  00C1  00A0               	movwf	bitExtracted@k
  4773  00C2  3005               	movlw	5
  4774  00C3  00B2               	movwf	??_main+1
  4775  00C4  0832               	movf	??_main+1,w
  4776  00C5  00A1               	movwf	bitExtracted@p
  4777  00C6  083E               	movf	main@heure,w
  4778  00C7  3186  2661  3180   	fcall	_bitExtracted
  4779  00CA  0020               	movlb	0	; select bank0
  4780  00CB  00B3               	movwf	??_main+2
  4781  00CC  0833               	movf	??_main+2,w
  4782  00CD  00BA               	movwf	main@dizaineH
  4783                           
  4784                           ;main.c: 45: buffer = convertFromBcd(second);
  4785  00CE  083F               	movf	main@second,w
  4786  00CF  3186  262B  3180   	fcall	_convertFromBcd
  4787  00D2  0020               	movlb	0	; select bank0
  4788  00D3  00B1               	movwf	??_main
  4789  00D4  0831               	movf	??_main,w
  4790  00D5  00B4               	movwf	main@buffer
  4791                           
  4792                           ;main.c: 46: buffer = convertFromBcd(minute);
  4793  00D6  083D               	movf	main@minute,w
  4794  00D7  3186  262B  3180   	fcall	_convertFromBcd
  4795  00DA  0020               	movlb	0	; select bank0
  4796  00DB  00B1               	movwf	??_main
  4797  00DC  0831               	movf	??_main,w
  4798  00DD  00B4               	movwf	main@buffer
  4799                           
  4800                           ;main.c: 47: buffer = convertFromBcd(heure);
  4801  00DE  083E               	movf	main@heure,w
  4802  00DF  3186  262B  3180   	fcall	_convertFromBcd
  4803  00E2  0020               	movlb	0	; select bank0
  4804  00E3  00B1               	movwf	??_main
  4805  00E4  0831               	movf	??_main,w
  4806  00E5  00B4               	movwf	main@buffer
  4807                           
  4808                           ;main.c: 48: if (menu == 0)
  4809  00E6  083B               	movf	main@menu,w
  4810  00E7  1D03               	btfss	3,2
  4811  00E8  294D               	goto	l2990
  4812                           
  4813                           ;main.c: 49: {
  4814                           ;main.c: 50: writeData(FSM(dizaineS), 6, 1);
  4815  00E9  3006               	movlw	6
  4816  00EA  00B1               	movwf	??_main
  4817  00EB  0831               	movf	??_main,w
  4818  00EC  00A3               	movwf	writeData@adress
  4819  00ED  01A4               	clrf	writeData@ligne
  4820  00EE  0AA4               	incf	writeData@ligne,f
  4821  00EF  0836               	movf	main@dizaineS,w
  4822  00F0  3185  25CD  3180   	fcall	_FSM
  4823  00F3  3184  2457  3180   	fcall	_writeData
  4824                           
  4825                           ;main.c: 51: writeData(FSM(uniteS), 7, 1);
  4826  00F6  3007               	movlw	7
  4827  00F7  0020               	movlb	0	; select bank0
  4828  00F8  00B1               	movwf	??_main
  4829  00F9  0831               	movf	??_main,w
  4830  00FA  00A3               	movwf	writeData@adress
  4831  00FB  01A4               	clrf	writeData@ligne
  4832  00FC  0AA4               	incf	writeData@ligne,f
  4833  00FD  0835               	movf	main@uniteS,w
  4834  00FE  3185  25CD  3180   	fcall	_FSM
  4835  0101  3184  2457  3180   	fcall	_writeData
  4836                           
  4837                           ;main.c: 52: writeData(FSM(dizaineM), 3, 1);
  4838  0104  3003               	movlw	3
  4839  0105  0020               	movlb	0	; select bank0
  4840  0106  00B1               	movwf	??_main
  4841  0107  0831               	movf	??_main,w
  4842  0108  00A3               	movwf	writeData@adress
  4843  0109  01A4               	clrf	writeData@ligne
  4844  010A  0AA4               	incf	writeData@ligne,f
  4845  010B  0838               	movf	main@dizaineM,w
  4846  010C  3185  25CD  3180   	fcall	_FSM
  4847  010F  3184  2457  3180   	fcall	_writeData
  4848                           
  4849                           ;main.c: 53: writeData(FSM(uniteM), 4, 1);
  4850  0112  3004               	movlw	4
  4851  0113  0020               	movlb	0	; select bank0
  4852  0114  00B1               	movwf	??_main
  4853  0115  0831               	movf	??_main,w
  4854  0116  00A3               	movwf	writeData@adress
  4855  0117  01A4               	clrf	writeData@ligne
  4856  0118  0AA4               	incf	writeData@ligne,f
  4857  0119  0837               	movf	main@uniteM,w
  4858  011A  3185  25CD  3180   	fcall	_FSM
  4859  011D  3184  2457  3180   	fcall	_writeData
  4860                           
  4861                           ;main.c: 54: writeData(FSM(dizaineH), 0, 1);
  4862  0120  0020               	movlb	0	; select bank0
  4863  0121  01A3               	clrf	writeData@adress
  4864  0122  01A4               	clrf	writeData@ligne
  4865  0123  0AA4               	incf	writeData@ligne,f
  4866  0124  083A               	movf	main@dizaineH,w
  4867  0125  3185  25CD  3180   	fcall	_FSM
  4868  0128  3184  2457  3180   	fcall	_writeData
  4869                           
  4870                           ;main.c: 55: writeData(FSM(uniteH), 1, 1);
  4871  012B  0020               	movlb	0	; select bank0
  4872  012C  01A3               	clrf	writeData@adress
  4873  012D  0AA3               	incf	writeData@adress,f
  4874  012E  01A4               	clrf	writeData@ligne
  4875  012F  0AA4               	incf	writeData@ligne,f
  4876  0130  0839               	movf	main@uniteH,w
  4877  0131  3185  25CD  3180   	fcall	_FSM
  4878  0134  3184  2457  3180   	fcall	_writeData
  4879                           
  4880                           ;main.c: 56: writeData(':', 2, 1);
  4881  0137  3002               	movlw	2
  4882  0138  0020               	movlb	0	; select bank0
  4883  0139  00B1               	movwf	??_main
  4884  013A  0831               	movf	??_main,w
  4885  013B  00A3               	movwf	writeData@adress
  4886  013C  01A4               	clrf	writeData@ligne
  4887  013D  0AA4               	incf	writeData@ligne,f
  4888  013E  303A               	movlw	58
  4889  013F  3184  2457  3180   	fcall	_writeData
  4890                           
  4891                           ;main.c: 57: writeData(':', 5, 1);
  4892  0142  3005               	movlw	5
  4893  0143  0020               	movlb	0	; select bank0
  4894  0144  00B1               	movwf	??_main
  4895  0145  0831               	movf	??_main,w
  4896  0146  00A3               	movwf	writeData@adress
  4897  0147  01A4               	clrf	writeData@ligne
  4898  0148  0AA4               	incf	writeData@ligne,f
  4899  0149  303A               	movlw	58
  4900  014A  3184  2457  3180   	fcall	_writeData
  4901  014D                     l2990:	
  4902                           
  4903                           ;main.c: 58: }
  4904                           ;main.c: 59: if (PORTCbits.RC5 == 1)
  4905  014D  0020               	movlb	0	; select bank0
  4906  014E  1E8E               	btfss	14,5	;volatile
  4907  014F  2954               	goto	l2994
  4908                           
  4909                           ;main.c: 60: {
  4910                           ;main.c: 61: menu = 1;
  4911  0150  01BB               	clrf	main@menu
  4912  0151  0ABB               	incf	main@menu,f
  4913  0152                     l360:	
  4914                           ;main.c: 62: while(PORTCbits.RC5==1);
  4915                           
  4916  0152  1A8E               	btfsc	14,5	;volatile
  4917  0153  2952               	goto	l360
  4918  0154                     l2994:	
  4919                           
  4920                           ;main.c: 63: }
  4921                           ;main.c: 64: if (menu == 1)
  4922  0154  033B               	decf	main@menu,w
  4923  0155  1D03               	btfss	3,2
  4924  0156  285A               	goto	l2956
  4925                           
  4926                           ;main.c: 65: {
  4927                           ;main.c: 66: _delay((unsigned long)((100)*(16000000/4000.0)));
  4928  0157  3003               	movlw	3
  4929  0158  0020               	movlb	0	; select bank0
  4930  0159  00B2               	movwf	??_main+1
  4931  015A  3008               	movlw	8
  4932  015B  00B1               	movwf	??_main
  4933  015C  3077               	movlw	119
  4934  015D                     u2317:	
  4935  015D  0B89               	decfsz	9,f
  4936  015E  295D               	goto	u2317
  4937  015F  0BB1               	decfsz	??_main,f
  4938  0160  295D               	goto	u2317
  4939  0161  0BB2               	decfsz	??_main+1,f
  4940  0162  295D               	goto	u2317
  4941                           
  4942                           ;main.c: 67: if(PORTCbits.RC5==1)
  4943  0163  0020               	movlb	0	; select bank0
  4944  0164  1E8E               	btfss	14,5	;volatile
  4945  0165  297E               	goto	l364
  4946                           
  4947                           ;main.c: 68: {
  4948                           ;main.c: 69: ++select;
  4949  0166  3001               	movlw	1
  4950  0167  00B1               	movwf	??_main
  4951  0168  0831               	movf	??_main,w
  4952  0169  07BC               	addwf	main@select,f
  4953                           
  4954                           ;main.c: 70: if(select==1)
  4955  016A  033C               	decf	main@select,w
  4956  016B  1D03               	btfss	3,2
  4957  016C  2970               	goto	l3004
  4958                           
  4959                           ;main.c: 71: {
  4960                           ;main.c: 72: printReglageH();
  4961  016D  3182  22BE  3180   	fcall	_printReglageH
  4962  0170                     l3004:	
  4963                           
  4964                           ;main.c: 73: }
  4965                           ;main.c: 74: if(select==2)
  4966  0170  3002               	movlw	2
  4967  0171  0020               	movlb	0	; select bank0
  4968  0172  063C               	xorwf	main@select,w
  4969  0173  1D03               	btfss	3,2
  4970  0174  297C               	goto	l367
  4971                           
  4972                           ;main.c: 75: {
  4973                           ;main.c: 76: writeInst(0b00000001);
  4974  0175  3001               	movlw	1
  4975  0176  3184  24E7  3180   	fcall	_writeInst
  4976                           
  4977                           ;main.c: 77: menu=0;
  4978  0179  0020               	movlb	0	; select bank0
  4979  017A  01BB               	clrf	main@menu
  4980                           
  4981                           ;main.c: 78: select=0;
  4982  017B  01BC               	clrf	main@select
  4983  017C                     l367:	
  4984                           ;main.c: 79: }
  4985                           ;main.c: 80: while(PORTCbits.RC5==1);
  4986                           
  4987  017C  1A8E               	btfsc	14,5	;volatile
  4988  017D  297C               	goto	l367
  4989  017E                     l364:	
  4990                           
  4991                           ;main.c: 81: }
  4992                           ;main.c: 82: if (PORTCbits.RC4 == 1)
  4993  017E  1E0E               	btfss	14,4	;volatile
  4994  017F  2986               	goto	l3016
  4995                           
  4996                           ;main.c: 83: {
  4997                           ;main.c: 84: incrMin();
  4998  0180  3183  23FF  3180   	fcall	_incrMin
  4999                           
  5000                           ;main.c: 85: printReglageH();
  5001  0183  3182  22BE  3180   	fcall	_printReglageH
  5002  0186                     l3016:	
  5003                           
  5004                           ;main.c: 88: }
  5005                           ;main.c: 89: if (PORTCbits.RC3==1)
  5006  0186  0020               	movlb	0	; select bank0
  5007  0187  1D8E               	btfss	14,3	;volatile
  5008  0188  285A               	goto	l2956
  5009                           
  5010                           ;main.c: 90: {
  5011                           ;main.c: 91: incrHeure();
  5012  0189  3183  239F  3180   	fcall	_incrHeure
  5013                           
  5014                           ;main.c: 92: printReglageH();
  5015  018C  3182  22BE  3180   	fcall	_printReglageH
  5016  018F  285A               	goto	l2956
  5017  0190                     __end_of_main:	
  5018                           
  5019                           	psect	text1
  5020  0520                     __ptext1:	
  5021 ;; *************** function _readSec *****************
  5022 ;; Defined at:
  5023 ;;		line 58 in file "RTC.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  second          1    3[BANK0 ] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      unsigned char 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, pclath, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;Total ram usage:        2 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    5
  5044 ;; This function calls:
  5045 ;;		_re_startI2C
  5046 ;;		_readI2C
  5047 ;;		_sendI2C
  5048 ;;		_sendNoAckI2C
  5049 ;;		_startI2C
  5050 ;;		_stopI2C
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _readSec
  5058  0520                     _readSec:	
  5059                           
  5060                           ;RTC.c: 59: uint8_t second = 0;
  5061                           
  5062                           ;incstack = 0
  5063                           ; Regs used in _readSec: [wreg+status,2+status,0+pclath+cstack]
  5064  0520  0020               	movlb	0	; select bank0
  5065  0521  01A3               	clrf	readSec@second
  5066                           
  5067                           ;RTC.c: 60: startI2C();
  5068  0522  3186  26DD  3185   	fcall	_startI2C
  5069                           
  5070                           ;RTC.c: 61: sendI2C(0b11011110);
  5071  0525  30DE               	movlw	222
  5072  0526  3186  26CF  3185   	fcall	_sendI2C
  5073  0529                     l447:	
  5074                           ;RTC.c: 62: while (SSP1CON2bits.ACKSTAT == 1);
  5075                           
  5076  0529  0024               	movlb	4	; select bank4
  5077  052A  1B16               	btfsc	22,6	;volatile
  5078  052B  2D29               	goto	l447
  5079                           
  5080                           ;RTC.c: 63: sendI2C(0x00);
  5081  052C  3000               	movlw	0
  5082  052D  3186  26CF  3185   	fcall	_sendI2C
  5083  0530                     l450:	
  5084                           ;RTC.c: 64: while (SSP1CON2bits.ACKSTAT == 1);
  5085                           
  5086  0530  0024               	movlb	4	; select bank4
  5087  0531  1B16               	btfsc	22,6	;volatile
  5088  0532  2D30               	goto	l450
  5089                           
  5090                           ;RTC.c: 65: re_startI2C();
  5091  0533  3186  26E6  3185   	fcall	_re_startI2C
  5092                           
  5093                           ;RTC.c: 66: sendI2C(0b11011111);
  5094  0536  30DF               	movlw	223
  5095  0537  3186  26CF  3185   	fcall	_sendI2C
  5096  053A                     l453:	
  5097                           ;RTC.c: 67: while (SSP1CON2bits.ACKSTAT == 1);
  5098                           
  5099  053A  0024               	movlb	4	; select bank4
  5100  053B  1B16               	btfsc	22,6	;volatile
  5101  053C  2D3A               	goto	l453
  5102                           
  5103                           ;RTC.c: 68: second = readI2C();
  5104  053D  3186  268B  3185   	fcall	_readI2C
  5105  0540  0020               	movlb	0	; select bank0
  5106  0541  00A2               	movwf	??_readSec
  5107  0542  0822               	movf	??_readSec,w
  5108  0543  00A3               	movwf	readSec@second
  5109                           
  5110                           ;RTC.c: 69: sendNoAckI2C();
  5111  0544  3187  270B  3185   	fcall	_sendNoAckI2C
  5112                           
  5113                           ;RTC.c: 70: stopI2C();
  5114  0547  3186  26EE         	fcall	_stopI2C
  5115                           
  5116                           ;RTC.c: 71: return second;
  5117  0549  0020               	movlb	0	; select bank0
  5118  054A  0823               	movf	readSec@second,w
  5119  054B  0008               	return
  5120  054C                     __end_of_readSec:	
  5121                           
  5122                           	psect	text2
  5123  02BE                     __ptext2:	
  5124 ;; *************** function _printReglageH *****************
  5125 ;; Defined at:
  5126 ;;		line 50 in file "LCD.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  heure           1   16[BANK0 ] unsigned char 
  5131 ;;  minute          1   15[BANK0 ] unsigned char 
  5132 ;;  uniteH          1   14[BANK0 ] unsigned char 
  5133 ;;  dizaineH        1   13[BANK0 ] unsigned char 
  5134 ;;  uniteM          1   12[BANK0 ] unsigned char 
  5135 ;;  dizaineM        1   11[BANK0 ] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;Total ram usage:        9 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    7
  5152 ;; This function calls:
  5153 ;;		_FSM
  5154 ;;		_bitExtracted
  5155 ;;		_readHr
  5156 ;;		_readMin
  5157 ;;		_writeData
  5158 ;;		_writeInst
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _printReglageH
  5166  02BE                     _printReglageH:	
  5167                           
  5168                           ;LCD.c: 52: uint8_t minute=0;
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _printReglageH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5172  02BE  0020               	movlb	0	; select bank0
  5173  02BF  01AF               	clrf	printReglageH@minute
  5174                           
  5175                           ;LCD.c: 53: uint8_t heure=0;
  5176  02C0  01B0               	clrf	printReglageH@heure
  5177                           
  5178                           ;LCD.c: 54: uint8_t dizaineM=0;
  5179  02C1  01AB               	clrf	printReglageH@dizaineM
  5180                           
  5181                           ;LCD.c: 55: uint8_t uniteM=0;
  5182  02C2  01AC               	clrf	printReglageH@uniteM
  5183                           
  5184                           ;LCD.c: 56: uint8_t dizaineH=0;
  5185  02C3  01AD               	clrf	printReglageH@dizaineH
  5186                           
  5187                           ;LCD.c: 57: uint8_t uniteH=0;
  5188  02C4  01AE               	clrf	printReglageH@uniteH
  5189                           
  5190                           ;LCD.c: 58: writeInst(0b00000001);
  5191  02C5  3001               	movlw	1
  5192  02C6  3184  24E7  3182   	fcall	_writeInst
  5193                           
  5194                           ;LCD.c: 59: writeData('R', 1, 1);
  5195  02C9  0020               	movlb	0	; select bank0
  5196  02CA  01A3               	clrf	writeData@adress
  5197  02CB  0AA3               	incf	writeData@adress,f
  5198  02CC  01A4               	clrf	writeData@ligne
  5199  02CD  0AA4               	incf	writeData@ligne,f
  5200  02CE  3052               	movlw	82
  5201  02CF  3184  2457  3182   	fcall	_writeData
  5202                           
  5203                           ;LCD.c: 60: writeData('E', 2, 1);
  5204  02D2  3002               	movlw	2
  5205  02D3  0020               	movlb	0	; select bank0
  5206  02D4  00A8               	movwf	??_printReglageH
  5207  02D5  0828               	movf	??_printReglageH,w
  5208  02D6  00A3               	movwf	writeData@adress
  5209  02D7  01A4               	clrf	writeData@ligne
  5210  02D8  0AA4               	incf	writeData@ligne,f
  5211  02D9  3045               	movlw	69
  5212  02DA  3184  2457  3182   	fcall	_writeData
  5213                           
  5214                           ;LCD.c: 61: writeData('G', 3, 1);
  5215  02DD  3003               	movlw	3
  5216  02DE  0020               	movlb	0	; select bank0
  5217  02DF  00A8               	movwf	??_printReglageH
  5218  02E0  0828               	movf	??_printReglageH,w
  5219  02E1  00A3               	movwf	writeData@adress
  5220  02E2  01A4               	clrf	writeData@ligne
  5221  02E3  0AA4               	incf	writeData@ligne,f
  5222  02E4  3047               	movlw	71
  5223  02E5  3184  2457  3182   	fcall	_writeData
  5224                           
  5225                           ;LCD.c: 62: writeData(' ', 4, 1);
  5226  02E8  3004               	movlw	4
  5227  02E9  0020               	movlb	0	; select bank0
  5228  02EA  00A8               	movwf	??_printReglageH
  5229  02EB  0828               	movf	??_printReglageH,w
  5230  02EC  00A3               	movwf	writeData@adress
  5231  02ED  01A4               	clrf	writeData@ligne
  5232  02EE  0AA4               	incf	writeData@ligne,f
  5233  02EF  3020               	movlw	32
  5234  02F0  3184  2457  3182   	fcall	_writeData
  5235                           
  5236                           ;LCD.c: 63: writeData('H', 5, 1);
  5237  02F3  3005               	movlw	5
  5238  02F4  0020               	movlb	0	; select bank0
  5239  02F5  00A8               	movwf	??_printReglageH
  5240  02F6  0828               	movf	??_printReglageH,w
  5241  02F7  00A3               	movwf	writeData@adress
  5242  02F8  01A4               	clrf	writeData@ligne
  5243  02F9  0AA4               	incf	writeData@ligne,f
  5244  02FA  3048               	movlw	72
  5245  02FB  3184  2457  3182   	fcall	_writeData
  5246                           
  5247                           ;LCD.c: 64: writeData('R', 6, 1);
  5248  02FE  3006               	movlw	6
  5249  02FF  0020               	movlb	0	; select bank0
  5250  0300  00A8               	movwf	??_printReglageH
  5251  0301  0828               	movf	??_printReglageH,w
  5252  0302  00A3               	movwf	writeData@adress
  5253  0303  01A4               	clrf	writeData@ligne
  5254  0304  0AA4               	incf	writeData@ligne,f
  5255  0305  3052               	movlw	82
  5256  0306  3184  2457  3182   	fcall	_writeData
  5257                           
  5258                           ;LCD.c: 65: minute = readMin();
  5259  0309  3185  254C  3182   	fcall	_readMin
  5260  030C  0020               	movlb	0	; select bank0
  5261  030D  00A8               	movwf	??_printReglageH
  5262  030E  0828               	movf	??_printReglageH,w
  5263  030F  00AF               	movwf	printReglageH@minute
  5264                           
  5265                           ;LCD.c: 66: heure = readHr();
  5266  0310  3185  2578  3182   	fcall	_readHr
  5267  0313  0020               	movlb	0	; select bank0
  5268  0314  00A8               	movwf	??_printReglageH
  5269  0315  0828               	movf	??_printReglageH,w
  5270  0316  00B0               	movwf	printReglageH@heure
  5271                           
  5272                           ;LCD.c: 67: uniteM = bitExtracted(minute, 4, 1);
  5273  0317  3004               	movlw	4
  5274  0318  00A8               	movwf	??_printReglageH
  5275  0319  0828               	movf	??_printReglageH,w
  5276  031A  00A0               	movwf	bitExtracted@k
  5277  031B  01A1               	clrf	bitExtracted@p
  5278  031C  0AA1               	incf	bitExtracted@p,f
  5279  031D  082F               	movf	printReglageH@minute,w
  5280  031E  3186  2661  3182   	fcall	_bitExtracted
  5281  0321  0020               	movlb	0	; select bank0
  5282  0322  00A9               	movwf	??_printReglageH+1
  5283  0323  0829               	movf	??_printReglageH+1,w
  5284  0324  00AC               	movwf	printReglageH@uniteM
  5285                           
  5286                           ;LCD.c: 68: dizaineM = bitExtracted(minute, 3, 5);
  5287  0325  3003               	movlw	3
  5288  0326  00A8               	movwf	??_printReglageH
  5289  0327  0828               	movf	??_printReglageH,w
  5290  0328  00A0               	movwf	bitExtracted@k
  5291  0329  3005               	movlw	5
  5292  032A  00A9               	movwf	??_printReglageH+1
  5293  032B  0829               	movf	??_printReglageH+1,w
  5294  032C  00A1               	movwf	bitExtracted@p
  5295  032D  082F               	movf	printReglageH@minute,w
  5296  032E  3186  2661  3182   	fcall	_bitExtracted
  5297  0331  0020               	movlb	0	; select bank0
  5298  0332  00AA               	movwf	??_printReglageH+2
  5299  0333  082A               	movf	??_printReglageH+2,w
  5300  0334  00AB               	movwf	printReglageH@dizaineM
  5301                           
  5302                           ;LCD.c: 69: uniteH = bitExtracted(heure, 4, 1);
  5303  0335  3004               	movlw	4
  5304  0336  00A8               	movwf	??_printReglageH
  5305  0337  0828               	movf	??_printReglageH,w
  5306  0338  00A0               	movwf	bitExtracted@k
  5307  0339  01A1               	clrf	bitExtracted@p
  5308  033A  0AA1               	incf	bitExtracted@p,f
  5309  033B  0830               	movf	printReglageH@heure,w
  5310  033C  3186  2661  3182   	fcall	_bitExtracted
  5311  033F  0020               	movlb	0	; select bank0
  5312  0340  00A9               	movwf	??_printReglageH+1
  5313  0341  0829               	movf	??_printReglageH+1,w
  5314  0342  00AE               	movwf	printReglageH@uniteH
  5315                           
  5316                           ;LCD.c: 70: dizaineH = bitExtracted(heure, 2, 5);
  5317  0343  3002               	movlw	2
  5318  0344  00A8               	movwf	??_printReglageH
  5319  0345  0828               	movf	??_printReglageH,w
  5320  0346  00A0               	movwf	bitExtracted@k
  5321  0347  3005               	movlw	5
  5322  0348  00A9               	movwf	??_printReglageH+1
  5323  0349  0829               	movf	??_printReglageH+1,w
  5324  034A  00A1               	movwf	bitExtracted@p
  5325  034B  0830               	movf	printReglageH@heure,w
  5326  034C  3186  2661  3182   	fcall	_bitExtracted
  5327  034F  0020               	movlb	0	; select bank0
  5328  0350  00AA               	movwf	??_printReglageH+2
  5329  0351  082A               	movf	??_printReglageH+2,w
  5330  0352  00AD               	movwf	printReglageH@dizaineH
  5331                           
  5332                           ;LCD.c: 71: writeData(FSM(dizaineM), 5, 2);
  5333  0353  3005               	movlw	5
  5334  0354  00A8               	movwf	??_printReglageH
  5335  0355  0828               	movf	??_printReglageH,w
  5336  0356  00A3               	movwf	writeData@adress
  5337  0357  3002               	movlw	2
  5338  0358  00A9               	movwf	??_printReglageH+1
  5339  0359  0829               	movf	??_printReglageH+1,w
  5340  035A  00A4               	movwf	writeData@ligne
  5341  035B  082B               	movf	printReglageH@dizaineM,w
  5342  035C  3185  25CD  3182   	fcall	_FSM
  5343  035F  3184  2457  3182   	fcall	_writeData
  5344                           
  5345                           ;LCD.c: 72: writeData(FSM(uniteM), 6, 2);
  5346  0362  3006               	movlw	6
  5347  0363  0020               	movlb	0	; select bank0
  5348  0364  00A8               	movwf	??_printReglageH
  5349  0365  0828               	movf	??_printReglageH,w
  5350  0366  00A3               	movwf	writeData@adress
  5351  0367  3002               	movlw	2
  5352  0368  00A9               	movwf	??_printReglageH+1
  5353  0369  0829               	movf	??_printReglageH+1,w
  5354  036A  00A4               	movwf	writeData@ligne
  5355  036B  082C               	movf	printReglageH@uniteM,w
  5356  036C  3185  25CD  3182   	fcall	_FSM
  5357  036F  3184  2457  3182   	fcall	_writeData
  5358                           
  5359                           ;LCD.c: 73: writeData(FSM(dizaineH), 2, 2);
  5360  0372  3002               	movlw	2
  5361  0373  0020               	movlb	0	; select bank0
  5362  0374  00A8               	movwf	??_printReglageH
  5363  0375  0828               	movf	??_printReglageH,w
  5364  0376  00A3               	movwf	writeData@adress
  5365  0377  3002               	movlw	2
  5366  0378  00A9               	movwf	??_printReglageH+1
  5367  0379  0829               	movf	??_printReglageH+1,w
  5368  037A  00A4               	movwf	writeData@ligne
  5369  037B  082D               	movf	printReglageH@dizaineH,w
  5370  037C  3185  25CD  3182   	fcall	_FSM
  5371  037F  3184  2457  3182   	fcall	_writeData
  5372                           
  5373                           ;LCD.c: 74: writeData(FSM(uniteH), 3, 2);
  5374  0382  3003               	movlw	3
  5375  0383  0020               	movlb	0	; select bank0
  5376  0384  00A8               	movwf	??_printReglageH
  5377  0385  0828               	movf	??_printReglageH,w
  5378  0386  00A3               	movwf	writeData@adress
  5379  0387  3002               	movlw	2
  5380  0388  00A9               	movwf	??_printReglageH+1
  5381  0389  0829               	movf	??_printReglageH+1,w
  5382  038A  00A4               	movwf	writeData@ligne
  5383  038B  082E               	movf	printReglageH@uniteH,w
  5384  038C  3185  25CD  3182   	fcall	_FSM
  5385  038F  3184  2457  3182   	fcall	_writeData
  5386                           
  5387                           ;LCD.c: 75: writeData(':', 4, 2);
  5388  0392  3004               	movlw	4
  5389  0393  0020               	movlb	0	; select bank0
  5390  0394  00A8               	movwf	??_printReglageH
  5391  0395  0828               	movf	??_printReglageH,w
  5392  0396  00A3               	movwf	writeData@adress
  5393  0397  3002               	movlw	2
  5394  0398  00A9               	movwf	??_printReglageH+1
  5395  0399  0829               	movf	??_printReglageH+1,w
  5396  039A  00A4               	movwf	writeData@ligne
  5397  039B  303A               	movlw	58
  5398  039C  3184  2457         	fcall	_writeData
  5399  039E  0008               	return
  5400  039F                     __end_of_printReglageH:	
  5401                           
  5402                           	psect	text3
  5403  0457                     __ptext3:	
  5404 ;; *************** function _writeData *****************
  5405 ;; Defined at:
  5406 ;;		line 20 in file "LCD.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  data            1    wreg     unsigned char 
  5409 ;;  adress          1    3[BANK0 ] unsigned char 
  5410 ;;  ligne           1    4[BANK0 ] unsigned char 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  data            1    6[BANK0 ] unsigned char 
  5413 ;;  i               1    7[BANK0 ] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0, pclath, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5427 ;;Total ram usage:        5 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    6
  5430 ;; This function calls:
  5431 ;;		_sendI2C
  5432 ;;		_startI2C
  5433 ;;		_stopI2C
  5434 ;;		_writeInst
  5435 ;; This function is called by:
  5436 ;;		_main
  5437 ;;		_printReglageH
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _writeData
  5443  0457                     _writeData:	
  5444                           
  5445                           ;incstack = 0
  5446                           ; Regs used in _writeData: [wreg+status,2+status,0+pclath+cstack]
  5447                           ;writeData@data stored from wreg
  5448  0457  0020               	movlb	0	; select bank0
  5449  0458  00A6               	movwf	writeData@data
  5450                           
  5451                           ;LCD.c: 21: if (ligne == 2) {
  5452  0459  3002               	movlw	2
  5453  045A  0624               	xorwf	writeData@ligne,w
  5454  045B  1D03               	btfss	3,2
  5455  045C  2C61               	goto	l2708
  5456                           
  5457                           ;LCD.c: 22: adress += 40;
  5458  045D  3028               	movlw	40
  5459  045E  00A5               	movwf	??_writeData
  5460  045F  0825               	movf	??_writeData,w
  5461  0460  07A3               	addwf	writeData@adress,f
  5462  0461                     l2708:	
  5463                           
  5464                           ;LCD.c: 23: }
  5465                           ;LCD.c: 24: for (uint8_t i = 0; i < adress; i++) {
  5466  0461  01A7               	clrf	writeData@i
  5467  0462                     l2714:	
  5468  0462  0823               	movf	writeData@adress,w
  5469  0463  0227               	subwf	writeData@i,w
  5470  0464  1803               	btfsc	3,0
  5471  0465  2C70               	goto	l2716
  5472                           
  5473                           ;LCD.c: 25: writeInst(0b00010100);
  5474  0466  3014               	movlw	20
  5475  0467  3184  24E7  3184   	fcall	_writeInst
  5476  046A  3001               	movlw	1
  5477  046B  0020               	movlb	0	; select bank0
  5478  046C  00A5               	movwf	??_writeData
  5479  046D  0825               	movf	??_writeData,w
  5480  046E  07A7               	addwf	writeData@i,f
  5481  046F  2C62               	goto	l2714
  5482  0470                     l2716:	
  5483                           
  5484                           ;LCD.c: 26: }
  5485                           ;LCD.c: 28: startI2C();
  5486  0470  3186  26DD  3184   	fcall	_startI2C
  5487                           
  5488                           ;LCD.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  5489  0473  3006               	movlw	6
  5490  0474  0020               	movlb	0	; select bank0
  5491  0475  00A5               	movwf	??_writeData
  5492  0476  3030               	movlw	48
  5493  0477                     u2327:	
  5494  0477  0B89               	decfsz	9,f
  5495  0478  2C77               	goto	u2327
  5496  0479  0BA5               	decfsz	??_writeData,f
  5497  047A  2C77               	goto	u2327
  5498  047B  0000               	nop
  5499                           
  5500                           ;LCD.c: 30: sendI2C(0x78);
  5501  047C  3078               	movlw	120
  5502  047D  3186  26CF  3184   	fcall	_sendI2C
  5503                           
  5504                           ;LCD.c: 32: _delay((unsigned long)((1)*(16000000/4000.0)));
  5505  0480  3006               	movlw	6
  5506  0481  0020               	movlb	0	; select bank0
  5507  0482  00A5               	movwf	??_writeData
  5508  0483  3030               	movlw	48
  5509  0484                     u2337:	
  5510  0484  0B89               	decfsz	9,f
  5511  0485  2C84               	goto	u2337
  5512  0486  0BA5               	decfsz	??_writeData,f
  5513  0487  2C84               	goto	u2337
  5514  0488  0000               	nop
  5515                           
  5516                           ;LCD.c: 33: sendI2C(0x40);
  5517  0489  3040               	movlw	64
  5518  048A  3186  26CF  3184   	fcall	_sendI2C
  5519                           
  5520                           ;LCD.c: 35: _delay((unsigned long)((1)*(16000000/4000.0)));
  5521  048D  3006               	movlw	6
  5522  048E  0020               	movlb	0	; select bank0
  5523  048F  00A5               	movwf	??_writeData
  5524  0490  3030               	movlw	48
  5525  0491                     u2347:	
  5526  0491  0B89               	decfsz	9,f
  5527  0492  2C91               	goto	u2347
  5528  0493  0BA5               	decfsz	??_writeData,f
  5529  0494  2C91               	goto	u2347
  5530  0495  0000               	nop
  5531                           
  5532                           ;LCD.c: 36: sendI2C(data);
  5533  0496  0020               	movlb	0	; select bank0
  5534  0497  0826               	movf	writeData@data,w
  5535  0498  3186  26CF  3184   	fcall	_sendI2C
  5536                           
  5537                           ;LCD.c: 38: _delay((unsigned long)((1)*(16000000/4000.0)));
  5538  049B  3006               	movlw	6
  5539  049C  0020               	movlb	0	; select bank0
  5540  049D  00A5               	movwf	??_writeData
  5541  049E  3030               	movlw	48
  5542  049F                     u2357:	
  5543  049F  0B89               	decfsz	9,f
  5544  04A0  2C9F               	goto	u2357
  5545  04A1  0BA5               	decfsz	??_writeData,f
  5546  04A2  2C9F               	goto	u2357
  5547  04A3  0000               	nop
  5548                           
  5549                           ;LCD.c: 39: stopI2C();
  5550  04A4  3186  26EE  3184   	fcall	_stopI2C
  5551                           
  5552                           ;LCD.c: 40: writeInst(0b00000010);
  5553  04A7  3002               	movlw	2
  5554  04A8  3184  24E7         	fcall	_writeInst
  5555  04AA  0008               	return
  5556  04AB                     __end_of_writeData:	
  5557                           
  5558                           	psect	text4
  5559  05CD                     __ptext4:	
  5560 ;; *************** function _FSM *****************
  5561 ;; Defined at:
  5562 ;;		line 16 in file "conversion.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  IN              1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  IN              1    0[BANK0 ] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      unsigned char 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    3
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_main
  5587 ;;		_printReglageH
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _FSM
  5593  05CD                     _FSM:	
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _FSM: [wreg-fsr0h+status,2+status,0]
  5597                           ;FSM@IN stored from wreg
  5598  05CD  0020               	movlb	0	; select bank0
  5599  05CE  00A0               	movwf	FSM@IN
  5600                           
  5601                           ;conversion.c: 17: switch (IN) {
  5602  05CF  2DE4               	goto	l2696
  5603  05D0                     l2634:	
  5604                           ;conversion.c: 18: case 0:
  5605                           
  5606                           
  5607                           ;conversion.c: 19: return '0';
  5608  05D0  3030               	movlw	48
  5609                           
  5610                           ;conversion.c: 20: break;
  5611  05D1  0008               	return
  5612  05D2                     l2640:	
  5613                           ;conversion.c: 22: case 1:
  5614                           
  5615                           
  5616                           ;conversion.c: 23: return '1';
  5617  05D2  3031               	movlw	49
  5618                           
  5619                           ;conversion.c: 24: break;
  5620  05D3  0008               	return
  5621  05D4                     l2646:	
  5622                           ;conversion.c: 26: case 2:
  5623                           
  5624                           
  5625                           ;conversion.c: 27: return '2';
  5626  05D4  3032               	movlw	50
  5627                           
  5628                           ;conversion.c: 28: break;
  5629  05D5  0008               	return
  5630  05D6                     l2652:	
  5631                           ;conversion.c: 30: case 3:
  5632                           
  5633                           
  5634                           ;conversion.c: 31: return '3';
  5635  05D6  3033               	movlw	51
  5636                           
  5637                           ;conversion.c: 32: break;
  5638  05D7  0008               	return
  5639  05D8                     l2658:	
  5640                           ;conversion.c: 34: case 4:
  5641                           
  5642                           
  5643                           ;conversion.c: 35: return '4';
  5644  05D8  3034               	movlw	52
  5645                           
  5646                           ;conversion.c: 36: break;
  5647  05D9  0008               	return
  5648  05DA                     l2664:	
  5649                           ;conversion.c: 38: case 5:
  5650                           
  5651                           
  5652                           ;conversion.c: 39: return '5';
  5653  05DA  3035               	movlw	53
  5654                           
  5655                           ;conversion.c: 40: break;
  5656  05DB  0008               	return
  5657  05DC                     l2670:	
  5658                           ;conversion.c: 42: case 6:
  5659                           
  5660                           
  5661                           ;conversion.c: 43: return '6';
  5662  05DC  3036               	movlw	54
  5663                           
  5664                           ;conversion.c: 44: break;
  5665  05DD  0008               	return
  5666  05DE                     l2676:	
  5667                           ;conversion.c: 46: case 7:
  5668                           
  5669                           
  5670                           ;conversion.c: 47: return '7';
  5671  05DE  3037               	movlw	55
  5672                           
  5673                           ;conversion.c: 48: break;
  5674  05DF  0008               	return
  5675  05E0                     l2682:	
  5676                           ;conversion.c: 50: case 8:
  5677                           
  5678                           
  5679                           ;conversion.c: 51: return '8';
  5680  05E0  3038               	movlw	56
  5681                           
  5682                           ;conversion.c: 52: break;
  5683  05E1  0008               	return
  5684  05E2                     l2688:	
  5685                           ;conversion.c: 54: case 9:
  5686                           
  5687                           
  5688                           ;conversion.c: 55: return '9';
  5689  05E2  3039               	movlw	57
  5690                           
  5691                           ;conversion.c: 61: }
  5692                           
  5693                           ;conversion.c: 59: break;
  5694                           
  5695                           ;conversion.c: 58: default:
  5696                           
  5697                           ;conversion.c: 56: break;
  5698  05E3  0008               	return
  5699  05E4                     l2696:	
  5700  05E4  0820               	movf	FSM@IN,w
  5701                           
  5702                           ; Switch size 1, requested type "space"
  5703                           ; Number of cases is 10, Range of values is 0 to 9
  5704                           ; switch strategies available:
  5705                           ; Name         Instructions Cycles
  5706                           ; direct_byte           26     6 (fixed)
  5707                           ; simple_byte           31    16 (average)
  5708                           ; jumptable            260     6 (fixed)
  5709                           ;	Chosen strategy is direct_byte
  5710  05E5  0084               	movwf	4
  5711  05E6  300A               	movlw	10
  5712  05E7  0204               	subwf	4,w
  5713  05E8  1803               	skipnc
  5714  05E9  0008               	return
  5715  05EA  3186               	movlp	high S3092
  5716  05EB  3504               	lslf	4,w
  5717  05EC  3E77               	addlw	low S3092
  5718  05ED  0082               	movwf	2
  5719  05EE  0008               	return
  5720  05EF                     __end_of_FSM:	
  5721                           
  5722                           	psect	swtext1
  5723  0677                     __pswtext1:	
  5724  0677                     S3092:	
  5725  0677  3185  2DD0         	ljmp	l2634
  5726  0679  3185  2DD2         	ljmp	l2640
  5727  067B  3185  2DD4         	ljmp	l2646
  5728  067D  3185  2DD6         	ljmp	l2652
  5729  067F  3185  2DD8         	ljmp	l2658
  5730  0681  3185  2DDA         	ljmp	l2664
  5731  0683  3185  2DDC         	ljmp	l2670
  5732  0685  3185  2DDE         	ljmp	l2676
  5733  0687  3185  2DE0         	ljmp	l2682
  5734  0689  3185  2DE2         	ljmp	l2688
  5735                           
  5736                           	psect	text5
  5737  06AF                     __ptext5:	
  5738 ;; *************** function _initRW1063 *****************
  5739 ;; Defined at:
  5740 ;;		line 43 in file "LCD.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, pclath, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    6
  5761 ;; This function calls:
  5762 ;;		_writeInst
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function _initRW1063
  5770  06AF                     _initRW1063:	
  5771                           
  5772                           ;LCD.c: 44: writeInst(0x38);
  5773                           
  5774                           ;incstack = 0
  5775                           ; Regs used in _initRW1063: [wreg+status,2+status,0+pclath+cstack]
  5776  06AF  3038               	movlw	56
  5777  06B0  3184  24E7  3186   	fcall	_writeInst
  5778                           
  5779                           ;LCD.c: 45: writeInst(0x0c);
  5780  06B3  300C               	movlw	12
  5781  06B4  3184  24E7  3186   	fcall	_writeInst
  5782                           
  5783                           ;LCD.c: 46: writeInst(0x06);
  5784  06B7  3006               	movlw	6
  5785  06B8  3184  24E7  3186   	fcall	_writeInst
  5786                           
  5787                           ;LCD.c: 47: writeInst(0b00001100);
  5788  06BB  300C               	movlw	12
  5789  06BC  3184  24E7         	fcall	_writeInst
  5790  06BE  0008               	return
  5791  06BF                     __end_of_initRW1063:	
  5792                           
  5793                           	psect	text6
  5794  04E7                     __ptext6:	
  5795 ;; *************** function _writeInst *****************
  5796 ;; Defined at:
  5797 ;;		line 5 in file "LCD.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  Inst            1    wreg     unsigned char 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  Inst            1    2[BANK0 ] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;Total ram usage:        2 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    5
  5818 ;; This function calls:
  5819 ;;		_sendI2C
  5820 ;;		_startI2C
  5821 ;;		_stopI2C
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;;		_writeData
  5825 ;;		_initRW1063
  5826 ;;		_printReglageH
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           
  5831                           ;psect for function _writeInst
  5832  04E7                     _writeInst:	
  5833                           
  5834                           ;incstack = 0
  5835                           ; Regs used in _writeInst: [wreg+status,2+status,0+pclath+cstack]
  5836                           ;writeInst@Inst stored from wreg
  5837  04E7  0020               	movlb	0	; select bank0
  5838  04E8  00A2               	movwf	writeInst@Inst
  5839                           
  5840                           ;LCD.c: 6: startI2C();
  5841  04E9  3186  26DD  3184   	fcall	_startI2C
  5842                           
  5843                           ;LCD.c: 7: _delay((unsigned long)((1)*(16000000/4000.0)));
  5844  04EC  3006               	movlw	6
  5845  04ED  0020               	movlb	0	; select bank0
  5846  04EE  00A1               	movwf	??_writeInst
  5847  04EF  3030               	movlw	48
  5848  04F0                     u2367:	
  5849  04F0  0B89               	decfsz	9,f
  5850  04F1  2CF0               	goto	u2367
  5851  04F2  0BA1               	decfsz	??_writeInst,f
  5852  04F3  2CF0               	goto	u2367
  5853  04F4  0000               	nop
  5854                           
  5855                           ;LCD.c: 8: sendI2C(0x78);
  5856  04F5  3078               	movlw	120
  5857  04F6  3186  26CF  3184   	fcall	_sendI2C
  5858                           
  5859                           ;LCD.c: 10: _delay((unsigned long)((1)*(16000000/4000.0)));
  5860  04F9  3006               	movlw	6
  5861  04FA  0020               	movlb	0	; select bank0
  5862  04FB  00A1               	movwf	??_writeInst
  5863  04FC  3030               	movlw	48
  5864  04FD                     u2377:	
  5865  04FD  0B89               	decfsz	9,f
  5866  04FE  2CFD               	goto	u2377
  5867  04FF  0BA1               	decfsz	??_writeInst,f
  5868  0500  2CFD               	goto	u2377
  5869  0501  0000               	nop
  5870                           
  5871                           ;LCD.c: 11: sendI2C(0x00);
  5872  0502  3000               	movlw	0
  5873  0503  3186  26CF  3184   	fcall	_sendI2C
  5874                           
  5875                           ;LCD.c: 13: _delay((unsigned long)((1)*(16000000/4000.0)));
  5876  0506  3006               	movlw	6
  5877  0507  0020               	movlb	0	; select bank0
  5878  0508  00A1               	movwf	??_writeInst
  5879  0509  3030               	movlw	48
  5880  050A                     u2387:	
  5881  050A  0B89               	decfsz	9,f
  5882  050B  2D0A               	goto	u2387
  5883  050C  0BA1               	decfsz	??_writeInst,f
  5884  050D  2D0A               	goto	u2387
  5885  050E  0000               	nop
  5886                           
  5887                           ;LCD.c: 14: sendI2C(Inst);
  5888  050F  0020               	movlb	0	; select bank0
  5889  0510  0822               	movf	writeInst@Inst,w
  5890  0511  3186  26CF  3184   	fcall	_sendI2C
  5891                           
  5892                           ;LCD.c: 16: _delay((unsigned long)((1)*(16000000/4000.0)));
  5893  0514  3006               	movlw	6
  5894  0515  0020               	movlb	0	; select bank0
  5895  0516  00A1               	movwf	??_writeInst
  5896  0517  3030               	movlw	48
  5897  0518                     u2397:	
  5898  0518  0B89               	decfsz	9,f
  5899  0519  2D18               	goto	u2397
  5900  051A  0BA1               	decfsz	??_writeInst,f
  5901  051B  2D18               	goto	u2397
  5902  051C  0000               	nop
  5903                           
  5904                           ;LCD.c: 17: stopI2C();
  5905  051D  3186  26EE         	fcall	_stopI2C
  5906  051F  0008               	return
  5907  0520                     __end_of_writeInst:	
  5908                           
  5909                           	psect	text7
  5910  04AB                     __ptext7:	
  5911 ;; *************** function _initI2C *****************
  5912 ;; Defined at:
  5913 ;;		line 5 in file "i2c.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  i               2    1[BANK0 ] int 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;Total ram usage:        3 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    3
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _initI2C
  5943  04AB                     _initI2C:	
  5944                           
  5945                           ;i2c.c: 6: int i = 0;
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _initI2C: [wreg+status,2]
  5949  04AB  0020               	movlb	0	; select bank0
  5950  04AC  01A1               	clrf	initI2C@i
  5951  04AD  01A2               	clrf	initI2C@i+1
  5952                           
  5953                           ;i2c.c: 11: TRISB6 = 0;
  5954  04AE  0021               	movlb	1	; select bank1
  5955  04AF  130D               	bcf	13,6	;volatile
  5956                           
  5957                           ;i2c.c: 12: for (i = 0; i < 9; i++) {
  5958  04B0  0020               	movlb	0	; select bank0
  5959  04B1  01A1               	clrf	initI2C@i
  5960  04B2  01A2               	clrf	initI2C@i+1
  5961  04B3  0822               	movf	initI2C@i+1,w
  5962  04B4  3A80               	xorlw	128
  5963  04B5  00A0               	movwf	??_initI2C
  5964  04B6  3080               	movlw	128
  5965  04B7  0220               	subwf	??_initI2C,w
  5966  04B8  1D03               	skipz
  5967  04B9  2CBC               	goto	u1985
  5968  04BA  3009               	movlw	9
  5969  04BB  0221               	subwf	initI2C@i,w
  5970  04BC                     u1985:	
  5971  04BC  1803               	btfsc	3,0
  5972  04BD  2CD1               	goto	l275
  5973  04BE                     l274:	
  5974                           
  5975                           ;i2c.c: 13: LATB6 = 1;
  5976  04BE  0022               	movlb	2	; select bank2
  5977  04BF  170D               	bsf	13,6	;volatile
  5978                           
  5979                           ;i2c.c: 14: LATB6 = 0;
  5980  04C0  130D               	bcf	13,6	;volatile
  5981  04C1  3001               	movlw	1
  5982  04C2  0020               	movlb	0	; select bank0
  5983  04C3  07A1               	addwf	initI2C@i,f
  5984  04C4  3000               	movlw	0
  5985  04C5  3DA2               	addwfc	initI2C@i+1,f
  5986  04C6  0822               	movf	initI2C@i+1,w
  5987  04C7  3A80               	xorlw	128
  5988  04C8  00A0               	movwf	??_initI2C
  5989  04C9  3080               	movlw	128
  5990  04CA  0220               	subwf	??_initI2C,w
  5991  04CB  1D03               	skipz
  5992  04CC  2CCF               	goto	u1995
  5993  04CD  3009               	movlw	9
  5994  04CE  0221               	subwf	initI2C@i,w
  5995  04CF                     u1995:	
  5996  04CF  1C03               	skipc
  5997  04D0  2CBE               	goto	l274
  5998  04D1                     l275:	
  5999                           
  6000                           ;i2c.c: 15: }
  6001                           ;i2c.c: 18: TRISB6 = 1;
  6002  04D1  0021               	movlb	1	; select bank1
  6003  04D2  170D               	bsf	13,6	;volatile
  6004                           
  6005                           ;i2c.c: 19: TRISB4 = 1;
  6006  04D3  160D               	bsf	13,4	;volatile
  6007                           
  6008                           ;i2c.c: 22: ANSELB = 0x00;
  6009  04D4  0023               	movlb	3	; select bank3
  6010  04D5  018D               	clrf	13	;volatile
  6011                           
  6012                           ;i2c.c: 25: LATB4 = 1;
  6013  04D6  0022               	movlb	2	; select bank2
  6014  04D7  160D               	bsf	13,4	;volatile
  6015                           
  6016                           ;i2c.c: 26: LATB6 = 1;
  6017  04D8  170D               	bsf	13,6	;volatile
  6018                           
  6019                           ;i2c.c: 29: SSP1STAT = 0x80;
  6020  04D9  3080               	movlw	128
  6021  04DA  0024               	movlb	4	; select bank4
  6022  04DB  0094               	movwf	20	;volatile
  6023                           
  6024                           ;i2c.c: 30: SSP1CON1 = 0x28;
  6025  04DC  3028               	movlw	40
  6026  04DD  0095               	movwf	21	;volatile
  6027                           
  6028                           ;i2c.c: 31: SSP1CON2 = 0x00;
  6029  04DE  0196               	clrf	22	;volatile
  6030                           
  6031                           ;i2c.c: 32: SSP1ADD = 0x27;
  6032  04DF  3027               	movlw	39
  6033  04E0  0092               	movwf	18	;volatile
  6034                           
  6035                           ;i2c.c: 35: OPTION_REG = 0x0;
  6036  04E1  0021               	movlb	1	; select bank1
  6037  04E2  0195               	clrf	21	;volatile
  6038                           
  6039                           ;i2c.c: 36: WPUB = 0b00010000;
  6040  04E3  3010               	movlw	16
  6041  04E4  0024               	movlb	4	; select bank4
  6042  04E5  008D               	movwf	13	;volatile
  6043  04E6  0008               	return
  6044  04E7                     __end_of_initI2C:	
  6045                           
  6046                           	psect	text8
  6047  03FF                     __ptext8:	
  6048 ;; *************** function _incrMin *****************
  6049 ;; Defined at:
  6050 ;;		line 108 in file "RTC.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  minute          1   10[BANK0 ] unsigned char 
  6055 ;;  uniteM          1    9[BANK0 ] unsigned char 
  6056 ;;  dizaineM        1    8[BANK0 ] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, pclath, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;Total ram usage:        6 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    6
  6073 ;; This function calls:
  6074 ;;		_bitExtracted
  6075 ;;		_changeMin
  6076 ;;		_readMin
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _incrMin
  6084  03FF                     _incrMin:	
  6085                           
  6086                           ;RTC.c: 110: uint8_t minute=0;
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _incrMin: [wreg+status,2+status,0+pclath+cstack]
  6090  03FF  0020               	movlb	0	; select bank0
  6091  0400  01AA               	clrf	incrMin@minute
  6092                           
  6093                           ;RTC.c: 111: uint8_t dizaineM=0;
  6094  0401  01A8               	clrf	incrMin@dizaineM
  6095                           
  6096                           ;RTC.c: 112: uint8_t uniteM=0;
  6097  0402  01A9               	clrf	incrMin@uniteM
  6098                           
  6099                           ;RTC.c: 113: minute = readMin();
  6100  0403  3185  254C  3183   	fcall	_readMin
  6101  0406  0020               	movlb	0	; select bank0
  6102  0407  00A5               	movwf	??_incrMin
  6103  0408  0825               	movf	??_incrMin,w
  6104  0409  00AA               	movwf	incrMin@minute
  6105                           
  6106                           ;RTC.c: 114: uniteM = bitExtracted(minute, 4, 1);
  6107  040A  3004               	movlw	4
  6108  040B  00A5               	movwf	??_incrMin
  6109  040C  0825               	movf	??_incrMin,w
  6110  040D  00A0               	movwf	bitExtracted@k
  6111  040E  01A1               	clrf	bitExtracted@p
  6112  040F  0AA1               	incf	bitExtracted@p,f
  6113  0410  082A               	movf	incrMin@minute,w
  6114  0411  3186  2661  3183   	fcall	_bitExtracted
  6115  0414  0020               	movlb	0	; select bank0
  6116  0415  00A6               	movwf	??_incrMin+1
  6117  0416  0826               	movf	??_incrMin+1,w
  6118  0417  00A9               	movwf	incrMin@uniteM
  6119                           
  6120                           ;RTC.c: 115: dizaineM = bitExtracted(minute, 3, 5);
  6121  0418  3003               	movlw	3
  6122  0419  00A5               	movwf	??_incrMin
  6123  041A  0825               	movf	??_incrMin,w
  6124  041B  00A0               	movwf	bitExtracted@k
  6125  041C  3005               	movlw	5
  6126  041D  00A6               	movwf	??_incrMin+1
  6127  041E  0826               	movf	??_incrMin+1,w
  6128  041F  00A1               	movwf	bitExtracted@p
  6129  0420  082A               	movf	incrMin@minute,w
  6130  0421  3186  2661  3183   	fcall	_bitExtracted
  6131  0424  0020               	movlb	0	; select bank0
  6132  0425  00A7               	movwf	??_incrMin+2
  6133  0426  0827               	movf	??_incrMin+2,w
  6134  0427  00A8               	movwf	incrMin@dizaineM
  6135                           
  6136                           ;RTC.c: 116: minute=0;
  6137  0428  01AA               	clrf	incrMin@minute
  6138                           
  6139                           ;RTC.c: 117: uniteM=uniteM+1;
  6140  0429  0829               	movf	incrMin@uniteM,w
  6141  042A  3E01               	addlw	1
  6142  042B  00A5               	movwf	??_incrMin
  6143  042C  0825               	movf	??_incrMin,w
  6144  042D  00A9               	movwf	incrMin@uniteM
  6145                           
  6146                           ;RTC.c: 118: if(uniteM>9)
  6147  042E  300A               	movlw	10
  6148  042F  0229               	subwf	incrMin@uniteM,w
  6149  0430  1C03               	skipc
  6150  0431  2C38               	goto	l2872
  6151                           
  6152                           ;RTC.c: 119: {
  6153                           ;RTC.c: 120: uniteM=0;
  6154  0432  01A9               	clrf	incrMin@uniteM
  6155                           
  6156                           ;RTC.c: 121: dizaineM=dizaineM+1;
  6157  0433  0828               	movf	incrMin@dizaineM,w
  6158  0434  3E01               	addlw	1
  6159  0435  00A5               	movwf	??_incrMin
  6160  0436  0825               	movf	??_incrMin,w
  6161  0437  00A8               	movwf	incrMin@dizaineM
  6162  0438                     l2872:	
  6163                           
  6164                           ;RTC.c: 122: }
  6165                           ;RTC.c: 123: if(dizaineM>6)
  6166  0438  3007               	movlw	7
  6167  0439  0228               	subwf	incrMin@dizaineM,w
  6168  043A  1C03               	skipc
  6169  043B  2C3E               	goto	l2876
  6170                           
  6171                           ;RTC.c: 124: {
  6172                           ;RTC.c: 125: dizaineM=0;
  6173  043C  01A8               	clrf	incrMin@dizaineM
  6174                           
  6175                           ;RTC.c: 126: uniteM=0;
  6176  043D  01A9               	clrf	incrMin@uniteM
  6177  043E                     l2876:	
  6178                           
  6179                           ;RTC.c: 127: }
  6180                           ;RTC.c: 128: minute=minute+dizaineM;
  6181  043E  082A               	movf	incrMin@minute,w
  6182  043F  0728               	addwf	incrMin@dizaineM,w
  6183  0440  00A5               	movwf	??_incrMin
  6184  0441  0825               	movf	??_incrMin,w
  6185  0442  00AA               	movwf	incrMin@minute
  6186                           
  6187                           ;RTC.c: 129: minute=minute<<4;
  6188  0443  082A               	movf	incrMin@minute,w
  6189  0444  00A5               	movwf	??_incrMin
  6190  0445  3003               	movlw	3
  6191  0446                     u2065:	
  6192  0446  35A5               	lslf	??_incrMin,f
  6193  0447  3EFF               	addlw	-1
  6194  0448  1D03               	skipz
  6195  0449  2C46               	goto	u2065
  6196  044A  3525               	lslf	??_incrMin,w
  6197  044B  00A6               	movwf	??_incrMin+1
  6198  044C  0826               	movf	??_incrMin+1,w
  6199  044D  00AA               	movwf	incrMin@minute
  6200                           
  6201                           ;RTC.c: 130: minute=minute+uniteM;
  6202  044E  082A               	movf	incrMin@minute,w
  6203  044F  0729               	addwf	incrMin@uniteM,w
  6204  0450  00A5               	movwf	??_incrMin
  6205  0451  0825               	movf	??_incrMin,w
  6206  0452  00AA               	movwf	incrMin@minute
  6207                           
  6208                           ;RTC.c: 131: changeMin(minute);
  6209  0453  082A               	movf	incrMin@minute,w
  6210  0454  3185  25EF         	fcall	_changeMin
  6211  0456  0008               	return
  6212  0457                     __end_of_incrMin:	
  6213                           
  6214                           	psect	text9
  6215  054C                     __ptext9:	
  6216 ;; *************** function _readMin *****************
  6217 ;; Defined at:
  6218 ;;		line 74 in file "RTC.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  minute          1    3[BANK0 ] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      unsigned char 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0, pclath, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;Total ram usage:        2 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    5
  6239 ;; This function calls:
  6240 ;;		_re_startI2C
  6241 ;;		_readI2C
  6242 ;;		_sendI2C
  6243 ;;		_sendNoAckI2C
  6244 ;;		_startI2C
  6245 ;;		_stopI2C
  6246 ;; This function is called by:
  6247 ;;		_main
  6248 ;;		_incrMin
  6249 ;;		_printReglageH
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           
  6254                           ;psect for function _readMin
  6255  054C                     _readMin:	
  6256                           
  6257                           ;RTC.c: 75: uint8_t minute = 0;
  6258                           
  6259                           ;incstack = 0
  6260                           ; Regs used in _readMin: [wreg+status,2+status,0+pclath+cstack]
  6261  054C  0020               	movlb	0	; select bank0
  6262  054D  01A3               	clrf	readMin@minute
  6263                           
  6264                           ;RTC.c: 76: startI2C();
  6265  054E  3186  26DD  3185   	fcall	_startI2C
  6266                           
  6267                           ;RTC.c: 77: sendI2C(0b11011110);
  6268  0551  30DE               	movlw	222
  6269  0552  3186  26CF  3185   	fcall	_sendI2C
  6270  0555                     l459:	
  6271                           ;RTC.c: 78: while (SSP1CON2bits.ACKSTAT == 1);
  6272                           
  6273  0555  0024               	movlb	4	; select bank4
  6274  0556  1B16               	btfsc	22,6	;volatile
  6275  0557  2D55               	goto	l459
  6276                           
  6277                           ;RTC.c: 79: sendI2C(0x01);
  6278  0558  3001               	movlw	1
  6279  0559  3186  26CF  3185   	fcall	_sendI2C
  6280  055C                     l462:	
  6281                           ;RTC.c: 80: while (SSP1CON2bits.ACKSTAT == 1);
  6282                           
  6283  055C  0024               	movlb	4	; select bank4
  6284  055D  1B16               	btfsc	22,6	;volatile
  6285  055E  2D5C               	goto	l462
  6286                           
  6287                           ;RTC.c: 81: re_startI2C();
  6288  055F  3186  26E6  3185   	fcall	_re_startI2C
  6289                           
  6290                           ;RTC.c: 82: sendI2C(0b11011111);
  6291  0562  30DF               	movlw	223
  6292  0563  3186  26CF  3185   	fcall	_sendI2C
  6293  0566                     l465:	
  6294                           ;RTC.c: 83: while (SSP1CON2bits.ACKSTAT == 1);
  6295                           
  6296  0566  0024               	movlb	4	; select bank4
  6297  0567  1B16               	btfsc	22,6	;volatile
  6298  0568  2D66               	goto	l465
  6299                           
  6300                           ;RTC.c: 84: minute = readI2C();
  6301  0569  3186  268B  3185   	fcall	_readI2C
  6302  056C  0020               	movlb	0	; select bank0
  6303  056D  00A2               	movwf	??_readMin
  6304  056E  0822               	movf	??_readMin,w
  6305  056F  00A3               	movwf	readMin@minute
  6306                           
  6307                           ;RTC.c: 85: sendNoAckI2C();
  6308  0570  3187  270B  3185   	fcall	_sendNoAckI2C
  6309                           
  6310                           ;RTC.c: 86: stopI2C();
  6311  0573  3186  26EE         	fcall	_stopI2C
  6312                           
  6313                           ;RTC.c: 87: return minute;
  6314  0575  0020               	movlb	0	; select bank0
  6315  0576  0823               	movf	readMin@minute,w
  6316  0577  0008               	return
  6317  0578                     __end_of_readMin:	
  6318                           
  6319                           	psect	text10
  6320  05EF                     __ptext10:	
  6321 ;; *************** function _changeMin *****************
  6322 ;; Defined at:
  6323 ;;		line 34 in file "RTC.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  minute          1    wreg     unsigned char 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  minute          1    1[BANK0 ] unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0, pclath, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;Total ram usage:        1 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    5
  6344 ;; This function calls:
  6345 ;;		_sendI2C
  6346 ;;		_startI2C
  6347 ;;		_stopI2C
  6348 ;; This function is called by:
  6349 ;;		_incrMin
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _changeMin
  6355  05EF                     _changeMin:	
  6356                           
  6357                           ;incstack = 0
  6358                           ; Regs used in _changeMin: [wreg+status,2+status,0+pclath+cstack]
  6359                           ;changeMin@minute stored from wreg
  6360  05EF  0020               	movlb	0	; select bank0
  6361  05F0  00A1               	movwf	changeMin@minute
  6362                           
  6363                           ;RTC.c: 36: startI2C();
  6364  05F1  3186  26DD  3185   	fcall	_startI2C
  6365                           
  6366                           ;RTC.c: 37: sendI2C(0b11011110);
  6367  05F4  30DE               	movlw	222
  6368  05F5  3186  26CF  3185   	fcall	_sendI2C
  6369  05F8                     l423:	
  6370                           ;RTC.c: 38: while (SSP1CON2bits.ACKSTAT == 1);
  6371                           
  6372  05F8  0024               	movlb	4	; select bank4
  6373  05F9  1B16               	btfsc	22,6	;volatile
  6374  05FA  2DF8               	goto	l423
  6375                           
  6376                           ;RTC.c: 39: sendI2C(0x01);
  6377  05FB  3001               	movlw	1
  6378  05FC  3186  26CF  3185   	fcall	_sendI2C
  6379  05FF                     l426:	
  6380                           ;RTC.c: 40: while (SSP1CON2bits.ACKSTAT == 1);
  6381                           
  6382  05FF  0024               	movlb	4	; select bank4
  6383  0600  1B16               	btfsc	22,6	;volatile
  6384  0601  2DFF               	goto	l426
  6385                           
  6386                           ;RTC.c: 41: sendI2C(minute);
  6387  0602  0020               	movlb	0	; select bank0
  6388  0603  0821               	movf	changeMin@minute,w
  6389  0604  3186  26CF  3185   	fcall	_sendI2C
  6390  0607                     l429:	
  6391                           ;RTC.c: 42: while (SSP1CON2bits.ACKSTAT == 1);
  6392                           
  6393  0607  0024               	movlb	4	; select bank4
  6394  0608  1B16               	btfsc	22,6	;volatile
  6395  0609  2E07               	goto	l429
  6396                           
  6397                           ;RTC.c: 43: stopI2C();
  6398  060A  3186  26EE         	fcall	_stopI2C
  6399  060C  0008               	return
  6400  060D                     __end_of_changeMin:	
  6401                           
  6402                           	psect	text11
  6403  039F                     __ptext11:	
  6404 ;; *************** function _incrHeure *****************
  6405 ;; Defined at:
  6406 ;;		line 134 in file "RTC.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  heure           1   10[BANK0 ] unsigned char 
  6411 ;;  uniteH          1    9[BANK0 ] unsigned char 
  6412 ;;  dizaineH        1    8[BANK0 ] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, pclath, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;Total ram usage:        6 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    6
  6429 ;; This function calls:
  6430 ;;		_bitExtracted
  6431 ;;		_changeHeure
  6432 ;;		_readHr
  6433 ;; This function is called by:
  6434 ;;		_main
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _incrHeure
  6440  039F                     _incrHeure:	
  6441                           
  6442                           ;RTC.c: 136: uint8_t heure=0;
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _incrHeure: [wreg+status,2+status,0+pclath+cstack]
  6446  039F  0020               	movlb	0	; select bank0
  6447  03A0  01AA               	clrf	incrHeure@heure
  6448                           
  6449                           ;RTC.c: 137: uint8_t dizaineH=0;
  6450  03A1  01A8               	clrf	incrHeure@dizaineH
  6451                           
  6452                           ;RTC.c: 138: uint8_t uniteH=0;
  6453  03A2  01A9               	clrf	incrHeure@uniteH
  6454                           
  6455                           ;RTC.c: 139: heure = readHr();
  6456  03A3  3185  2578  3183   	fcall	_readHr
  6457  03A6  0020               	movlb	0	; select bank0
  6458  03A7  00A5               	movwf	??_incrHeure
  6459  03A8  0825               	movf	??_incrHeure,w
  6460  03A9  00AA               	movwf	incrHeure@heure
  6461                           
  6462                           ;RTC.c: 140: uniteH = bitExtracted(heure, 4, 1);
  6463  03AA  3004               	movlw	4
  6464  03AB  00A5               	movwf	??_incrHeure
  6465  03AC  0825               	movf	??_incrHeure,w
  6466  03AD  00A0               	movwf	bitExtracted@k
  6467  03AE  01A1               	clrf	bitExtracted@p
  6468  03AF  0AA1               	incf	bitExtracted@p,f
  6469  03B0  082A               	movf	incrHeure@heure,w
  6470  03B1  3186  2661  3183   	fcall	_bitExtracted
  6471  03B4  0020               	movlb	0	; select bank0
  6472  03B5  00A6               	movwf	??_incrHeure+1
  6473  03B6  0826               	movf	??_incrHeure+1,w
  6474  03B7  00A9               	movwf	incrHeure@uniteH
  6475                           
  6476                           ;RTC.c: 141: dizaineH = bitExtracted(heure, 2, 5);
  6477  03B8  3002               	movlw	2
  6478  03B9  00A5               	movwf	??_incrHeure
  6479  03BA  0825               	movf	??_incrHeure,w
  6480  03BB  00A0               	movwf	bitExtracted@k
  6481  03BC  3005               	movlw	5
  6482  03BD  00A6               	movwf	??_incrHeure+1
  6483  03BE  0826               	movf	??_incrHeure+1,w
  6484  03BF  00A1               	movwf	bitExtracted@p
  6485  03C0  082A               	movf	incrHeure@heure,w
  6486  03C1  3186  2661  3183   	fcall	_bitExtracted
  6487  03C4  0020               	movlb	0	; select bank0
  6488  03C5  00A7               	movwf	??_incrHeure+2
  6489  03C6  0827               	movf	??_incrHeure+2,w
  6490  03C7  00A8               	movwf	incrHeure@dizaineH
  6491                           
  6492                           ;RTC.c: 142: heure=0;
  6493  03C8  01AA               	clrf	incrHeure@heure
  6494                           
  6495                           ;RTC.c: 143: uniteH=uniteH+1;
  6496  03C9  0829               	movf	incrHeure@uniteH,w
  6497  03CA  3E01               	addlw	1
  6498  03CB  00A5               	movwf	??_incrHeure
  6499  03CC  0825               	movf	??_incrHeure,w
  6500  03CD  00A9               	movwf	incrHeure@uniteH
  6501                           
  6502                           ;RTC.c: 144: if(uniteH>9)
  6503  03CE  300A               	movlw	10
  6504  03CF  0229               	subwf	incrHeure@uniteH,w
  6505  03D0  1C03               	skipc
  6506  03D1  2BD8               	goto	l2902
  6507                           
  6508                           ;RTC.c: 145: {
  6509                           ;RTC.c: 146: uniteH=0;
  6510  03D2  01A9               	clrf	incrHeure@uniteH
  6511                           
  6512                           ;RTC.c: 147: dizaineH=dizaineH+1;
  6513  03D3  0828               	movf	incrHeure@dizaineH,w
  6514  03D4  3E01               	addlw	1
  6515  03D5  00A5               	movwf	??_incrHeure
  6516  03D6  0825               	movf	??_incrHeure,w
  6517  03D7  00A8               	movwf	incrHeure@dizaineH
  6518  03D8                     l2902:	
  6519                           
  6520                           ;RTC.c: 148: }
  6521                           ;RTC.c: 149: if(dizaineH>2 && uniteH==4)
  6522  03D8  3003               	movlw	3
  6523  03D9  0228               	subwf	incrHeure@dizaineH,w
  6524  03DA  1C03               	skipc
  6525  03DB  2BE6               	goto	l2910
  6526  03DC  3004               	movlw	4
  6527  03DD  0629               	xorwf	incrHeure@uniteH,w
  6528  03DE  1D03               	btfss	3,2
  6529  03DF  2BE6               	goto	l2910
  6530                           
  6531                           ;RTC.c: 150: {
  6532                           ;RTC.c: 151: dizaineH=0;
  6533  03E0  01A8               	clrf	incrHeure@dizaineH
  6534                           
  6535                           ;RTC.c: 152: uniteH=uniteH+1;
  6536  03E1  0829               	movf	incrHeure@uniteH,w
  6537  03E2  3E01               	addlw	1
  6538  03E3  00A5               	movwf	??_incrHeure
  6539  03E4  0825               	movf	??_incrHeure,w
  6540  03E5  00A9               	movwf	incrHeure@uniteH
  6541  03E6                     l2910:	
  6542                           
  6543                           ;RTC.c: 153: }
  6544                           ;RTC.c: 154: heure=heure+dizaineH;
  6545  03E6  082A               	movf	incrHeure@heure,w
  6546  03E7  0728               	addwf	incrHeure@dizaineH,w
  6547  03E8  00A5               	movwf	??_incrHeure
  6548  03E9  0825               	movf	??_incrHeure,w
  6549  03EA  00AA               	movwf	incrHeure@heure
  6550                           
  6551                           ;RTC.c: 155: heure=heure<<4;
  6552  03EB  082A               	movf	incrHeure@heure,w
  6553  03EC  00A5               	movwf	??_incrHeure
  6554  03ED  3003               	movlw	3
  6555  03EE                     u2105:	
  6556  03EE  35A5               	lslf	??_incrHeure,f
  6557  03EF  3EFF               	addlw	-1
  6558  03F0  1D03               	skipz
  6559  03F1  2BEE               	goto	u2105
  6560  03F2  3525               	lslf	??_incrHeure,w
  6561  03F3  00A6               	movwf	??_incrHeure+1
  6562  03F4  0826               	movf	??_incrHeure+1,w
  6563  03F5  00AA               	movwf	incrHeure@heure
  6564                           
  6565                           ;RTC.c: 156: heure=heure+uniteH;
  6566  03F6  082A               	movf	incrHeure@heure,w
  6567  03F7  0729               	addwf	incrHeure@uniteH,w
  6568  03F8  00A5               	movwf	??_incrHeure
  6569  03F9  0825               	movf	??_incrHeure,w
  6570  03FA  00AA               	movwf	incrHeure@heure
  6571                           
  6572                           ;RTC.c: 157: changeHeure(heure);
  6573  03FB  082A               	movf	incrHeure@heure,w
  6574  03FC  3186  260D         	fcall	_changeHeure
  6575  03FE  0008               	return
  6576  03FF                     __end_of_incrHeure:	
  6577                           
  6578                           	psect	text12
  6579  0578                     __ptext12:	
  6580 ;; *************** function _readHr *****************
  6581 ;; Defined at:
  6582 ;;		line 90 in file "RTC.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  heure           1    3[BANK0 ] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      unsigned char 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0, pclath, cstack
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;Total ram usage:        2 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    5
  6603 ;; This function calls:
  6604 ;;		_re_startI2C
  6605 ;;		_readI2C
  6606 ;;		_sendI2C
  6607 ;;		_sendNoAckI2C
  6608 ;;		_startI2C
  6609 ;;		_stopI2C
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;;		_incrHeure
  6613 ;;		_printReglageH
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           
  6618                           ;psect for function _readHr
  6619  0578                     _readHr:	
  6620                           
  6621                           ;RTC.c: 91: uint8_t heure = 0;
  6622                           
  6623                           ;incstack = 0
  6624                           ; Regs used in _readHr: [wreg+status,2+status,0+pclath+cstack]
  6625  0578  0020               	movlb	0	; select bank0
  6626  0579  01A3               	clrf	readHr@heure
  6627                           
  6628                           ;RTC.c: 92: startI2C();
  6629  057A  3186  26DD  3185   	fcall	_startI2C
  6630                           
  6631                           ;RTC.c: 93: sendI2C(0b11011110);
  6632  057D  30DE               	movlw	222
  6633  057E  3186  26CF  3185   	fcall	_sendI2C
  6634  0581                     l471:	
  6635                           ;RTC.c: 94: while (SSP1CON2bits.ACKSTAT == 1);
  6636                           
  6637  0581  0024               	movlb	4	; select bank4
  6638  0582  1B16               	btfsc	22,6	;volatile
  6639  0583  2D81               	goto	l471
  6640                           
  6641                           ;RTC.c: 95: sendI2C(0x02);
  6642  0584  3002               	movlw	2
  6643  0585  3186  26CF  3185   	fcall	_sendI2C
  6644  0588                     l474:	
  6645                           ;RTC.c: 96: while (SSP1CON2bits.ACKSTAT == 1);
  6646                           
  6647  0588  0024               	movlb	4	; select bank4
  6648  0589  1B16               	btfsc	22,6	;volatile
  6649  058A  2D88               	goto	l474
  6650                           
  6651                           ;RTC.c: 97: re_startI2C();
  6652  058B  3186  26E6  3185   	fcall	_re_startI2C
  6653                           
  6654                           ;RTC.c: 98: sendI2C(0b11011111);
  6655  058E  30DF               	movlw	223
  6656  058F  3186  26CF  3185   	fcall	_sendI2C
  6657  0592                     l477:	
  6658                           ;RTC.c: 99: while (SSP1CON2bits.ACKSTAT == 1);
  6659                           
  6660  0592  0024               	movlb	4	; select bank4
  6661  0593  1B16               	btfsc	22,6	;volatile
  6662  0594  2D92               	goto	l477
  6663                           
  6664                           ;RTC.c: 100: heure = readI2C();
  6665  0595  3186  268B  3185   	fcall	_readI2C
  6666  0598  0020               	movlb	0	; select bank0
  6667  0599  00A2               	movwf	??_readHr
  6668  059A  0822               	movf	??_readHr,w
  6669  059B  00A3               	movwf	readHr@heure
  6670                           
  6671                           ;RTC.c: 101: sendNoAckI2C();
  6672  059C  3187  270B  3185   	fcall	_sendNoAckI2C
  6673                           
  6674                           ;RTC.c: 102: stopI2C();
  6675  059F  3186  26EE         	fcall	_stopI2C
  6676                           
  6677                           ;RTC.c: 103: return heure;
  6678  05A1  0020               	movlb	0	; select bank0
  6679  05A2  0823               	movf	readHr@heure,w
  6680  05A3  0008               	return
  6681  05A4                     __end_of_readHr:	
  6682                           
  6683                           	psect	text13
  6684  070B                     __ptext13:	
  6685 ;; *************** function _sendNoAckI2C *****************
  6686 ;; Defined at:
  6687 ;;		line 88 in file "i2c.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0, pclath, cstack
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;Total ram usage:        0 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; Hardware stack levels required when called:    4
  6708 ;; This function calls:
  6709 ;;		_waitI2C
  6710 ;; This function is called by:
  6711 ;;		_readSec
  6712 ;;		_readMin
  6713 ;;		_readHr
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function _sendNoAckI2C
  6719  070B                     _sendNoAckI2C:	
  6720                           
  6721                           ;i2c.c: 90: waitI2C();
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _sendNoAckI2C: [wreg+status,2+status,0+pclath+cstack]
  6725  070B  3186  26F6         	fcall	_waitI2C
  6726                           
  6727                           ;i2c.c: 91: SSP1CON2bits.ACKDT = 1;
  6728  070D  0024               	movlb	4	; select bank4
  6729  070E  1696               	bsf	22,5	;volatile
  6730                           
  6731                           ;i2c.c: 92: SSP1CON2bits.ACKEN = 1;
  6732  070F  1616               	bsf	22,4	;volatile
  6733  0710  0008               	return
  6734  0711                     __end_of_sendNoAckI2C:	
  6735                           
  6736                           	psect	text14
  6737  068B                     __ptext14:	
  6738 ;; *************** function _readI2C *****************
  6739 ;; Defined at:
  6740 ;;		line 64 in file "i2c.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  temp            1    1[BANK0 ] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      unsigned char 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        2 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    4
  6761 ;; This function calls:
  6762 ;;		_waitI2C
  6763 ;; This function is called by:
  6764 ;;		_readSec
  6765 ;;		_readMin
  6766 ;;		_readHr
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           
  6771                           ;psect for function _readI2C
  6772  068B                     _readI2C:	
  6773                           
  6774                           ;i2c.c: 66: uint8_t temp;
  6775                           ;i2c.c: 67: waitI2C();
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in _readI2C: [wreg+status,2+status,0+pclath+cstack]
  6779  068B  3186  26F6  3186   	fcall	_waitI2C
  6780                           
  6781                           ;i2c.c: 68: SSP1CON2bits.RCEN = 1;
  6782  068E  0024               	movlb	4	; select bank4
  6783  068F  1596               	bsf	22,3	;volatile
  6784                           
  6785                           ;i2c.c: 69: waitI2C();
  6786  0690  3186  26F6  3186   	fcall	_waitI2C
  6787  0693                     l303:	
  6788                           ;i2c.c: 70: while(SSP1CON2bits.RCEN == 1);
  6789                           
  6790  0693  0024               	movlb	4	; select bank4
  6791  0694  1996               	btfsc	22,3	;volatile
  6792  0695  2E93               	goto	l303
  6793                           
  6794                           ;i2c.c: 71: temp = SSP1BUF;
  6795  0696  0811               	movf	17,w	;volatile
  6796  0697  0020               	movlb	0	; select bank0
  6797  0698  00A0               	movwf	??_readI2C
  6798  0699  0820               	movf	??_readI2C,w
  6799  069A  00A1               	movwf	readI2C@temp
  6800                           
  6801                           ;i2c.c: 73: return temp;
  6802  069B  0821               	movf	readI2C@temp,w
  6803  069C  0008               	return
  6804  069D                     __end_of_readI2C:	
  6805                           
  6806                           	psect	text15
  6807  06E6                     __ptext15:	
  6808 ;; *************** function _re_startI2C *****************
  6809 ;; Defined at:
  6810 ;;		line 75 in file "i2c.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, pclath, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    4
  6831 ;; This function calls:
  6832 ;;		_waitI2C
  6833 ;; This function is called by:
  6834 ;;		_readSec
  6835 ;;		_readMin
  6836 ;;		_readHr
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           
  6841                           ;psect for function _re_startI2C
  6842  06E6                     _re_startI2C:	
  6843                           
  6844                           ;i2c.c: 77: waitI2C();
  6845                           
  6846                           ;incstack = 0
  6847                           ; Regs used in _re_startI2C: [wreg+status,2+status,0+pclath+cstack]
  6848  06E6  3186  26F6  3186   	fcall	_waitI2C
  6849                           
  6850                           ;i2c.c: 78: SSP1CON2bits.RSEN = 1;
  6851  06E9  0024               	movlb	4	; select bank4
  6852  06EA  1496               	bsf	22,1	;volatile
  6853  06EB                     l309:	
  6854                           ;i2c.c: 79: while(SSP1CON2bits.RSEN == 1);
  6855                           
  6856  06EB  1C96               	btfss	22,1	;volatile
  6857  06EC  0008               	return
  6858  06ED  2EEB               	goto	l309
  6859  06EE                     __end_of_re_startI2C:	
  6860                           
  6861                           	psect	text16
  6862  060D                     __ptext16:	
  6863 ;; *************** function _changeHeure *****************
  6864 ;; Defined at:
  6865 ;;		line 46 in file "RTC.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  heure           1    wreg     unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  heure           1    1[BANK0 ] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      void 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;Total ram usage:        1 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    5
  6886 ;; This function calls:
  6887 ;;		_sendI2C
  6888 ;;		_startI2C
  6889 ;;		_stopI2C
  6890 ;; This function is called by:
  6891 ;;		_incrHeure
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _changeHeure
  6897  060D                     _changeHeure:	
  6898                           
  6899                           ;incstack = 0
  6900                           ; Regs used in _changeHeure: [wreg+status,2+status,0+pclath+cstack]
  6901                           ;changeHeure@heure stored from wreg
  6902  060D  0020               	movlb	0	; select bank0
  6903  060E  00A1               	movwf	changeHeure@heure
  6904                           
  6905                           ;RTC.c: 48: startI2C();
  6906  060F  3186  26DD  3186   	fcall	_startI2C
  6907                           
  6908                           ;RTC.c: 49: sendI2C(0b11011110);
  6909  0612  30DE               	movlw	222
  6910  0613  3186  26CF  3186   	fcall	_sendI2C
  6911  0616                     l435:	
  6912                           ;RTC.c: 50: while (SSP1CON2bits.ACKSTAT == 1);
  6913                           
  6914  0616  0024               	movlb	4	; select bank4
  6915  0617  1B16               	btfsc	22,6	;volatile
  6916  0618  2E16               	goto	l435
  6917                           
  6918                           ;RTC.c: 51: sendI2C(0x02);
  6919  0619  3002               	movlw	2
  6920  061A  3186  26CF  3186   	fcall	_sendI2C
  6921  061D                     l438:	
  6922                           ;RTC.c: 52: while (SSP1CON2bits.ACKSTAT == 1);
  6923                           
  6924  061D  0024               	movlb	4	; select bank4
  6925  061E  1B16               	btfsc	22,6	;volatile
  6926  061F  2E1D               	goto	l438
  6927                           
  6928                           ;RTC.c: 53: sendI2C(heure);
  6929  0620  0020               	movlb	0	; select bank0
  6930  0621  0821               	movf	changeHeure@heure,w
  6931  0622  3186  26CF  3186   	fcall	_sendI2C
  6932  0625                     l441:	
  6933                           ;RTC.c: 54: while (SSP1CON2bits.ACKSTAT == 1);
  6934                           
  6935  0625  0024               	movlb	4	; select bank4
  6936  0626  1B16               	btfsc	22,6	;volatile
  6937  0627  2E25               	goto	l441
  6938                           
  6939                           ;RTC.c: 55: stopI2C();
  6940  0628  3186  26EE         	fcall	_stopI2C
  6941  062A  0008               	return
  6942  062B                     __end_of_changeHeure:	
  6943                           
  6944                           	psect	text17
  6945  06EE                     __ptext17:	
  6946 ;; *************** function _stopI2C *****************
  6947 ;; Defined at:
  6948 ;;		line 50 in file "i2c.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, pclath, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;Total ram usage:        0 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    4
  6969 ;; This function calls:
  6970 ;;		_waitI2C
  6971 ;; This function is called by:
  6972 ;;		_changeMin
  6973 ;;		_changeHeure
  6974 ;;		_readSec
  6975 ;;		_readMin
  6976 ;;		_readHr
  6977 ;;		_writeInst
  6978 ;;		_writeData
  6979 ;;		_initRTC
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function _stopI2C
  6985  06EE                     _stopI2C:	
  6986                           
  6987                           ;i2c.c: 52: waitI2C();
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in _stopI2C: [wreg+status,2+status,0+pclath+cstack]
  6991  06EE  3186  26F6  3186   	fcall	_waitI2C
  6992                           
  6993                           ;i2c.c: 53: SSP1CON2bits.PEN = 1;
  6994  06F1  0024               	movlb	4	; select bank4
  6995  06F2  1516               	bsf	22,2	;volatile
  6996  06F3                     l291:	
  6997                           ;i2c.c: 54: while(SSP1CON2bits.PEN == 1);
  6998                           
  6999  06F3  1D16               	btfss	22,2	;volatile
  7000  06F4  0008               	return
  7001  06F5  2EF3               	goto	l291
  7002  06F6                     __end_of_stopI2C:	
  7003                           
  7004                           	psect	text18
  7005  06DD                     __ptext18:	
  7006 ;; *************** function _startI2C *****************
  7007 ;; Defined at:
  7008 ;;		line 40 in file "i2c.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;		None
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;		None
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      void 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0, pclath, cstack
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;Total ram usage:        0 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:    4
  7029 ;; This function calls:
  7030 ;;		_waitI2C
  7031 ;; This function is called by:
  7032 ;;		_changeMin
  7033 ;;		_changeHeure
  7034 ;;		_readSec
  7035 ;;		_readMin
  7036 ;;		_readHr
  7037 ;;		_writeInst
  7038 ;;		_writeData
  7039 ;;		_initRTC
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           
  7044                           ;psect for function _startI2C
  7045  06DD                     _startI2C:	
  7046                           
  7047                           ;i2c.c: 42: waitI2C();
  7048                           
  7049                           ;incstack = 0
  7050                           ; Regs used in _startI2C: [wreg+status,2+status,0+pclath+cstack]
  7051  06DD  3186  26F6  3186   	fcall	_waitI2C
  7052                           
  7053                           ;i2c.c: 43: SSP1CON2=0b00000001;
  7054  06E0  3001               	movlw	1
  7055  06E1  0024               	movlb	4	; select bank4
  7056  06E2  0096               	movwf	22	;volatile
  7057  06E3                     l279:	
  7058                           ;i2c.c: 44: while(SSP1CON2bits.SEN == 1);
  7059                           
  7060  06E3  1C16               	btfss	22,0	;volatile
  7061  06E4  0008               	return
  7062  06E5  2EE3               	goto	l279
  7063  06E6                     __end_of_startI2C:	
  7064                           
  7065                           	psect	text19
  7066  06CF                     __ptext19:	
  7067 ;; *************** function _sendI2C *****************
  7068 ;; Defined at:
  7069 ;;		line 56 in file "i2c.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  data            1    wreg     unsigned char 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  data            1    0[BANK0 ] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0, pclath, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;Total ram usage:        1 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    4
  7090 ;; This function calls:
  7091 ;;		_waitI2C
  7092 ;; This function is called by:
  7093 ;;		_changeMin
  7094 ;;		_changeHeure
  7095 ;;		_readSec
  7096 ;;		_readMin
  7097 ;;		_readHr
  7098 ;;		_writeInst
  7099 ;;		_writeData
  7100 ;;		_initRTC
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function _sendI2C
  7106  06CF                     _sendI2C:	
  7107                           
  7108                           ;incstack = 0
  7109                           ; Regs used in _sendI2C: [wreg+status,2+status,0+pclath+cstack]
  7110                           ;sendI2C@data stored from wreg
  7111  06CF  0020               	movlb	0	; select bank0
  7112  06D0  00A0               	movwf	sendI2C@data
  7113                           
  7114                           ;i2c.c: 58: waitI2C();
  7115  06D1  3186  26F6  3186   	fcall	_waitI2C
  7116                           
  7117                           ;i2c.c: 59: SSP1BUF = data;
  7118  06D4  0020               	movlb	0	; select bank0
  7119  06D5  0820               	movf	sendI2C@data,w
  7120  06D6  0024               	movlb	4	; select bank4
  7121  06D7  0091               	movwf	17	;volatile
  7122                           
  7123                           ;i2c.c: 60: PIR1bits.SSP1IF = 0;
  7124  06D8  0020               	movlb	0	; select bank0
  7125  06D9  1190               	bcf	16,3	;volatile
  7126  06DA                     l297:	
  7127                           ;i2c.c: 61: while(PIR1bits.SSP1IF == 0);
  7128                           
  7129  06DA  1990               	btfsc	16,3	;volatile
  7130  06DB  0008               	return
  7131  06DC  2EDA               	goto	l297
  7132  06DD                     __end_of_sendI2C:	
  7133                           
  7134                           	psect	text20
  7135  06F6                     __ptext20:	
  7136 ;; *************** function _waitI2C *****************
  7137 ;; Defined at:
  7138 ;;		line 46 in file "i2c.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;		None
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;Total ram usage:        0 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    3
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_startI2C
  7163 ;;		_stopI2C
  7164 ;;		_sendI2C
  7165 ;;		_readI2C
  7166 ;;		_re_startI2C
  7167 ;;		_sendNoAckI2C
  7168 ;;		_sendAckI2C
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           
  7173                           ;psect for function _waitI2C
  7174  06F6                     _waitI2C:	
  7175  06F6                     l285:	
  7176                           ;i2c.c: 48: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  7177                           
  7178                           ;incstack = 0
  7179                           ; Regs used in _waitI2C: [wreg+status,2]
  7180                           
  7181  06F6  0024               	movlb	4	; select bank4
  7182  06F7  1914               	btfsc	20,2	;volatile
  7183  06F8  2EF6               	goto	l285
  7184  06F9  0816               	movf	22,w	;volatile
  7185  06FA  391F               	andlw	31
  7186  06FB  1903               	btfsc	3,2
  7187  06FC  0008               	return
  7188  06FD  2EF6               	goto	l285
  7189  06FE                     __end_of_waitI2C:	
  7190                           
  7191                           	psect	text21
  7192  0661                     __ptext21:	
  7193 ;; *************** function _bitExtracted *****************
  7194 ;; Defined at:
  7195 ;;		line 4 in file "conversion.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  number          1    wreg     unsigned char 
  7198 ;;  k               1    0[BANK0 ] unsigned char 
  7199 ;;  p               1    1[BANK0 ] unsigned char 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  number          1    4[BANK0 ] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;Total ram usage:        5 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    3
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_main
  7222 ;;		_incrMin
  7223 ;;		_incrHeure
  7224 ;;		_printReglageH
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           
  7229                           ;psect for function _bitExtracted
  7230  0661                     _bitExtracted:	
  7231                           
  7232                           ;incstack = 0
  7233                           ; Regs used in _bitExtracted: [wreg+status,2+status,0]
  7234                           ;bitExtracted@number stored from wreg
  7235  0661  0020               	movlb	0	; select bank0
  7236  0662  00A4               	movwf	bitExtracted@number
  7237                           
  7238                           ;conversion.c: 5: return (((1 << k) - 1) & (number >> (p - 1)));
  7239  0663  0824               	movf	bitExtracted@number,w
  7240  0664  00A2               	movwf	??_bitExtracted
  7241  0665  0821               	movf	bitExtracted@p,w
  7242  0666  3EFF               	addlw	-1
  7243  0667  0A89               	incf	9,f
  7244  0668  2E6A               	goto	u1864
  7245  0669                     u1865:	
  7246  0669  36A2               	lsrf	??_bitExtracted,f
  7247  066A                     u1864:	
  7248  066A  0B89               	decfsz	9,f
  7249  066B  2E69               	goto	u1865
  7250  066C  3001               	movlw	1
  7251  066D  00A3               	movwf	??_bitExtracted+1
  7252  066E  0A20               	incf	bitExtracted@k,w
  7253  066F  2E71               	goto	u1874
  7254  0670                     u1875:	
  7255  0670  35A3               	lslf	??_bitExtracted+1,f
  7256  0671                     u1874:	
  7257  0671  0B89               	decfsz	9,f
  7258  0672  2E70               	goto	u1875
  7259  0673  0823               	movf	??_bitExtracted+1,w
  7260  0674  3EFF               	addlw	255
  7261  0675  0522               	andwf	??_bitExtracted,w
  7262  0676  0008               	return
  7263  0677                     __end_of_bitExtracted:	
  7264                           
  7265                           	psect	text22
  7266  062B                     __ptext22:	
  7267 ;; *************** function _convertFromBcd *****************
  7268 ;; Defined at:
  7269 ;;		line 8 in file "conversion.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  byteBCD         1    wreg     unsigned char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  byteBCD         1    8[BANK0 ] unsigned char 
  7274 ;;  byteLSB         1    7[BANK0 ] unsigned char 
  7275 ;;  byteMSB         1    6[BANK0 ] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      unsigned char 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, pclath, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;Total ram usage:        5 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    4
  7292 ;; This function calls:
  7293 ;;		___bmul
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _convertFromBcd
  7301  062B                     _convertFromBcd:	
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _convertFromBcd: [wreg+status,2+status,0+pclath+cstack]
  7305                           ;convertFromBcd@byteBCD stored from wreg
  7306  062B  0020               	movlb	0	; select bank0
  7307  062C  00A8               	movwf	convertFromBcd@byteBCD
  7308                           
  7309                           ;conversion.c: 9: uint8_t byteMSB = 0;
  7310  062D  01A6               	clrf	convertFromBcd@byteMSB
  7311                           
  7312                           ;conversion.c: 10: uint8_t byteLSB = 0;
  7313  062E  01A7               	clrf	convertFromBcd@byteLSB
  7314                           
  7315                           ;conversion.c: 11: byteMSB = (byteBCD & 0b11110000) >> 4;
  7316  062F  0828               	movf	convertFromBcd@byteBCD,w
  7317  0630  00A4               	movwf	??_convertFromBcd
  7318  0631  3004               	movlw	4
  7319  0632                     u2035:	
  7320  0632  36A4               	lsrf	??_convertFromBcd,f
  7321  0633  0B89               	decfsz	9,f
  7322  0634  2E32               	goto	u2035
  7323  0635  0824               	movf	??_convertFromBcd,w
  7324  0636  390F               	andlw	15
  7325  0637  00A5               	movwf	??_convertFromBcd+1
  7326  0638  0825               	movf	??_convertFromBcd+1,w
  7327  0639  00A6               	movwf	convertFromBcd@byteMSB
  7328                           
  7329                           ;conversion.c: 12: byteLSB = (byteBCD & 0b00001111);
  7330  063A  0828               	movf	convertFromBcd@byteBCD,w
  7331  063B  390F               	andlw	15
  7332  063C  00A4               	movwf	??_convertFromBcd
  7333  063D  0824               	movf	??_convertFromBcd,w
  7334  063E  00A7               	movwf	convertFromBcd@byteLSB
  7335                           
  7336                           ;conversion.c: 13: return ((byteMSB * 10) + byteLSB);
  7337  063F  300A               	movlw	10
  7338  0640  00A4               	movwf	??_convertFromBcd
  7339  0641  0824               	movf	??_convertFromBcd,w
  7340  0642  00A0               	movwf	___bmul@multiplicand
  7341  0643  0826               	movf	convertFromBcd@byteMSB,w
  7342  0644  3186  269D         	fcall	___bmul
  7343  0646  0020               	movlb	0	; select bank0
  7344  0647  0727               	addwf	convertFromBcd@byteLSB,w
  7345  0648  0008               	return
  7346  0649                     __end_of_convertFromBcd:	
  7347                           
  7348                           	psect	text23
  7349  069D                     __ptext23:	
  7350 ;; *************** function ___bmul *****************
  7351 ;; Defined at:
  7352 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/Umul8.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  multiplier      1    wreg     unsigned char 
  7355 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7358 ;;  product         1    2[BANK0 ] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      unsigned char 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7368 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;Total ram usage:        4 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    3
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_convertFromBcd
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           
  7383                           ;psect for function ___bmul
  7384  069D                     ___bmul:	
  7385                           
  7386                           ;incstack = 0
  7387                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7388                           ;___bmul@multiplier stored from wreg
  7389  069D  0020               	movlb	0	; select bank0
  7390  069E  00A3               	movwf	___bmul@multiplier
  7391  069F  01A2               	clrf	___bmul@product
  7392  06A0                     l2750:	
  7393  06A0  1C23               	btfss	___bmul@multiplier,0
  7394  06A1  2EA6               	goto	l2754
  7395  06A2  0820               	movf	___bmul@multiplicand,w
  7396  06A3  00A1               	movwf	??___bmul
  7397  06A4  0821               	movf	??___bmul,w
  7398  06A5  07A2               	addwf	___bmul@product,f
  7399  06A6                     l2754:	
  7400  06A6  1003               	clrc
  7401  06A7  0DA0               	rlf	___bmul@multiplicand,f
  7402  06A8  1003               	clrc
  7403  06A9  0CA3               	rrf	___bmul@multiplier,f
  7404  06AA  0823               	movf	___bmul@multiplier,w
  7405  06AB  1D03               	btfss	3,2
  7406  06AC  2EA0               	goto	l2750
  7407  06AD  0822               	movf	___bmul@product,w
  7408  06AE  0008               	return
  7409  06AF                     __end_of___bmul:	
  7410                           
  7411                           	psect	text24
  7412  0711                     __ptext24:	
  7413 ;; *************** function _SYSTEM_Initialize *****************
  7414 ;; Defined at:
  7415 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0, pclath, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;Total ram usage:        0 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    4
  7436 ;; This function calls:
  7437 ;;		_OSCILLATOR_Initialize
  7438 ;;		_PIN_MANAGER_Initialize
  7439 ;; This function is called by:
  7440 ;;		_main
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           
  7445                           ;psect for function _SYSTEM_Initialize
  7446  0711                     _SYSTEM_Initialize:	
  7447                           
  7448                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  7449                           
  7450                           ;incstack = 0
  7451                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7452  0711  3185  25A4  3187   	fcall	_PIN_MANAGER_Initialize
  7453                           
  7454                           ;mcc.c: 53: OSCILLATOR_Initialize();
  7455  0714  3186  26FE         	fcall	_OSCILLATOR_Initialize
  7456  0716  0008               	return
  7457  0717                     __end_of_SYSTEM_Initialize:	
  7458                           
  7459                           	psect	text25
  7460  05A4                     __ptext25:	
  7461 ;; *************** function _PIN_MANAGER_Initialize *****************
  7462 ;; Defined at:
  7463 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    3
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_SYSTEM_Initialize
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           
  7492                           ;psect for function _PIN_MANAGER_Initialize
  7493  05A4                     _PIN_MANAGER_Initialize:	
  7494                           
  7495                           ;pin_manager.c: 62: LATA = 0x00;
  7496                           
  7497                           ;incstack = 0
  7498                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7499  05A4  0022               	movlb	2	; select bank2
  7500  05A5  018C               	clrf	12	;volatile
  7501                           
  7502                           ;pin_manager.c: 63: LATB = 0x00;
  7503  05A6  018D               	clrf	13	;volatile
  7504                           
  7505                           ;pin_manager.c: 64: LATC = 0x00;
  7506  05A7  018E               	clrf	14	;volatile
  7507                           
  7508                           ;pin_manager.c: 69: TRISA = 0x37;
  7509  05A8  3037               	movlw	55
  7510  05A9  0021               	movlb	1	; select bank1
  7511  05AA  008C               	movwf	12	;volatile
  7512                           
  7513                           ;pin_manager.c: 70: TRISB = 0xF0;
  7514  05AB  30F0               	movlw	240
  7515  05AC  008D               	movwf	13	;volatile
  7516                           
  7517                           ;pin_manager.c: 71: TRISC = 0xFF;
  7518  05AD  30FF               	movlw	255
  7519  05AE  008E               	movwf	14	;volatile
  7520                           
  7521                           ;pin_manager.c: 76: ANSELC = 0xC7;
  7522  05AF  30C7               	movlw	199
  7523  05B0  0023               	movlb	3	; select bank3
  7524  05B1  008E               	movwf	14	;volatile
  7525                           
  7526                           ;pin_manager.c: 77: ANSELB = 0xA0;
  7527  05B2  30A0               	movlw	160
  7528  05B3  008D               	movwf	13	;volatile
  7529                           
  7530                           ;pin_manager.c: 78: ANSELA = 0x17;
  7531  05B4  3017               	movlw	23
  7532  05B5  008C               	movwf	12	;volatile
  7533                           
  7534                           ;pin_manager.c: 83: WPUB = 0x00;
  7535  05B6  0024               	movlb	4	; select bank4
  7536  05B7  018D               	clrf	13	;volatile
  7537                           
  7538                           ;pin_manager.c: 84: WPUA = 0x00;
  7539  05B8  018C               	clrf	12	;volatile
  7540                           
  7541                           ;pin_manager.c: 85: WPUC = 0x1C;
  7542  05B9  301C               	movlw	28
  7543  05BA  008E               	movwf	14	;volatile
  7544                           
  7545                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 0;
  7546  05BB  0021               	movlb	1	; select bank1
  7547  05BC  1395               	bcf	21,7	;volatile
  7548                           
  7549                           ;pin_manager.c: 91: ODCONA = 0x00;
  7550  05BD  0025               	movlb	5	; select bank5
  7551  05BE  018C               	clrf	12	;volatile
  7552                           
  7553                           ;pin_manager.c: 92: ODCONB = 0x00;
  7554  05BF  018D               	clrf	13	;volatile
  7555                           
  7556                           ;pin_manager.c: 93: ODCONC = 0x00;
  7557  05C0  018E               	clrf	14	;volatile
  7558                           
  7559                           ;pin_manager.c: 102: SSPDATPPS = 0x0C;
  7560  05C1  300C               	movlw	12
  7561  05C2  003C               	movlb	28	; select bank28
  7562  05C3  00A1               	movwf	33	;volatile
  7563                           
  7564                           ;pin_manager.c: 103: RB6PPS = 0x10;
  7565  05C4  3010               	movlw	16
  7566  05C5  003D               	movlb	29	; select bank29
  7567  05C6  009E               	movwf	30	;volatile
  7568                           
  7569                           ;pin_manager.c: 104: RB4PPS = 0x11;
  7570  05C7  3011               	movlw	17
  7571  05C8  009C               	movwf	28	;volatile
  7572                           
  7573                           ;pin_manager.c: 105: SSPCLKPPS = 0x0E;
  7574  05C9  300E               	movlw	14
  7575  05CA  003C               	movlb	28	; select bank28
  7576  05CB  00A0               	movwf	32	;volatile
  7577  05CC  0008               	return
  7578  05CD                     __end_of_PIN_MANAGER_Initialize:	
  7579                           
  7580                           	psect	text26
  7581  06FE                     __ptext26:	
  7582 ;; *************** function _OSCILLATOR_Initialize *****************
  7583 ;; Defined at:
  7584 ;;		line 57 in file "mcc_generated_files/mcc.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;Total ram usage:        0 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    3
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_SYSTEM_Initialize
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           
  7613                           ;psect for function _OSCILLATOR_Initialize
  7614  06FE                     _OSCILLATOR_Initialize:	
  7615                           
  7616                           ;mcc.c: 60: OSCCON = 0x7A;
  7617                           
  7618                           ;incstack = 0
  7619                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7620  06FE  307A               	movlw	122
  7621  06FF  0021               	movlb	1	; select bank1
  7622  0700  0099               	movwf	25	;volatile
  7623                           
  7624                           ;mcc.c: 62: OSCTUNE = 0x00;
  7625  0701  0198               	clrf	24	;volatile
  7626                           
  7627                           ;mcc.c: 64: BORCON = 0x00;
  7628  0702  0022               	movlb	2	; select bank2
  7629  0703  0196               	clrf	22	;volatile
  7630  0704  0008               	return
  7631  0705                     __end_of_OSCILLATOR_Initialize:	
  7632                           
  7633                           	psect	intentry
  7634  0004                     __pintentry:	
  7635 ;; *************** function _INTERRUPT_InterruptManager *****************
  7636 ;; Defined at:
  7637 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;Total ram usage:        1 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    2
  7658 ;; This function calls:
  7659 ;;		_I2C_BusCollisionISR
  7660 ;;		_I2C_ISR
  7661 ;; This function is called by:
  7662 ;;		Interrupt level 1
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666  0004                     _INTERRUPT_InterruptManager:	
  7667                           
  7668                           ;incstack = 0
  7669  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7670                           
  7671                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7672  0005  3180               	pagesel	$
  7673  0006  0020               	movlb	0	; select bank0
  7674  0007  087F               	movf	127,w
  7675  0008  00FB               	movwf	??_INTERRUPT_InterruptManager
  7676                           
  7677                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  7678  0009  1F0B               	btfss	11,6	;volatile
  7679  000A  281D               	goto	i1l179
  7680                           
  7681                           ;interrupt_manager.c: 56: {
  7682                           ;interrupt_manager.c: 57: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  7683  000B  0021               	movlb	1	; select bank1
  7684  000C  1D91               	btfss	17,3	;volatile
  7685  000D  2815               	goto	i1l174
  7686  000E  0020               	movlb	0	; select bank0
  7687  000F  1D91               	btfss	17,3	;volatile
  7688  0010  2815               	goto	i1l174
  7689                           
  7690                           ;interrupt_manager.c: 58: {
  7691                           ;interrupt_manager.c: 59: I2C_BusCollisionISR();
  7692  0011  3187  271B  3180   	fcall	_I2C_BusCollisionISR
  7693                           
  7694                           ;interrupt_manager.c: 60: }
  7695  0014  281D               	goto	i1l179
  7696  0015                     i1l174:	
  7697                           
  7698                           ;interrupt_manager.c: 61: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  7699  0015  0021               	movlb	1	; select bank1
  7700  0016  1D90               	btfss	16,3	;volatile
  7701  0017  281D               	goto	i1l179
  7702  0018  0020               	movlb	0	; select bank0
  7703  0019  1D90               	btfss	16,3	;volatile
  7704  001A  281D               	goto	i1l179
  7705                           
  7706                           ;interrupt_manager.c: 62: {
  7707                           ;interrupt_manager.c: 63: I2C_ISR();
  7708  001B  3181  2190         	fcall	_I2C_ISR
  7709  001D                     i1l179:	
  7710                           ;interrupt_manager.c: 70: else
  7711                           ;interrupt_manager.c: 71: {
  7712                           
  7713                           ;interrupt_manager.c: 68: }
  7714                           ;interrupt_manager.c: 69: }
  7715                           
  7716                           ;interrupt_manager.c: 65: else
  7717                           ;interrupt_manager.c: 66: {
  7718                           
  7719                           ;interrupt_manager.c: 64: }
  7720                           
  7721  001D  087B               	movf	??_INTERRUPT_InterruptManager,w
  7722  001E  0020               	movlb	0	; select bank0
  7723  001F  00FF               	movwf	127
  7724  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7725  0021  0009               	retfie
  7726  0022                     __end_of_INTERRUPT_InterruptManager:	
  7727                           
  7728                           	psect	text28
  7729  0190                     __ptext28:	
  7730 ;; *************** function _I2C_ISR *****************
  7731 ;; Defined at:
  7732 ;;		line 235 in file "mcc_generated_files/i2c.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;		None
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;		None
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      void 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;Total ram usage:        4 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    1
  7753 ;; This function calls:
  7754 ;;		_I2C_FunctionComplete
  7755 ;;		_I2C_Stop
  7756 ;; This function is called by:
  7757 ;;		_INTERRUPT_InterruptManager
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function _I2C_ISR
  7763  0190                     _I2C_ISR:	
  7764                           
  7765                           ;i2c.c: 238: static uint8_t *pi2c_buf_ptr;
  7766                           ;i2c.c: 239: static uint16_t i2c_address = 0;
  7767                           ;i2c.c: 240: static uint8_t i2c_bytes_left = 0;
  7768                           ;i2c.c: 241: static uint8_t i2c_10bit_address_restart = 0;
  7769                           ;i2c.c: 243: PIR1bits.SSP1IF = 0;
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7773  0190  0020               	movlb	0	; select bank0
  7774  0191  1190               	bcf	16,3	;volatile
  7775                           
  7776                           ;i2c.c: 247: if(SSP1CON1bits.WCOL)
  7777  0192  0024               	movlb	4	; select bank4
  7778  0193  1F95               	btfss	21,7	;volatile
  7779  0194  2AB3               	goto	i1l2116
  7780                           
  7781                           ;i2c.c: 248: {
  7782                           ;i2c.c: 250: SSP1CON1bits.WCOL = 0;
  7783  0195  1395               	bcf	21,7	;volatile
  7784                           
  7785                           ;i2c.c: 252: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  7786  0196  01F3               	clrf	_i2c_state
  7787                           
  7788                           ;i2c.c: 255: p_i2c_current = (0);
  7789  0197  0020               	movlb	0	; select bank0
  7790  0198  01C7               	clrf	_p_i2c_current
  7791                           
  7792                           ;i2c.c: 257: return;
  7793  0199  0008               	return
  7794  019A                     i1l64:	
  7795                           ;i2c.c: 262: {
  7796                           ;i2c.c: 263: case S_MASTER_IDLE:
  7797                           
  7798                           ;i2c.c: 258: }
  7799                           ;i2c.c: 261: switch(i2c_state)
  7800                           
  7801                           
  7802                           ;i2c.c: 265: if(i2c_object.trStatus.s.empty != 1)
  7803  019A  0020               	movlb	0	; select bank0
  7804  019B  18C2               	btfsc	_i2c_object+2,1
  7805  019C  0008               	return
  7806                           
  7807                           ;i2c.c: 266: {
  7808                           ;i2c.c: 268: p_i2c_current = i2c_object.pTrHead;
  7809  019D  0841               	movf	low ((_i2c_object| 0+1)),w
  7810  019E  00F7               	movwf	??_I2C_ISR
  7811  019F  0877               	movf	??_I2C_ISR,w
  7812  01A0  00C7               	movwf	_p_i2c_current
  7813                           
  7814                           ;i2c.c: 269: i2c_trb_count = i2c_object.pTrHead->count;
  7815  01A1  0841               	movf	low ((_i2c_object| 0+1)),w
  7816  01A2  0086               	movwf	6
  7817  01A3  0187               	clrf	7
  7818  01A4  0801               	movf	1,w
  7819  01A5  00F7               	movwf	??_I2C_ISR
  7820  01A6  0877               	movf	??_I2C_ISR,w
  7821  01A7  00F2               	movwf	_i2c_trb_count
  7822                           
  7823                           ;i2c.c: 270: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  7824  01A8  0841               	movf	low ((_i2c_object| 0+1)),w
  7825  01A9  0086               	movwf	6
  7826  01AA  0187               	clrf	7
  7827  01AB  3F41               	moviw [1]fsr1
  7828  01AC  00F1               	movwf	_p_i2c_trb_current
  7829                           
  7830                           ;i2c.c: 272: i2c_object.pTrHead++;
  7831  01AD  3003               	movlw	3
  7832  01AE  00F7               	movwf	??_I2C_ISR
  7833  01AF  0877               	movf	??_I2C_ISR,w
  7834  01B0  07C1               	addwf	low ((_i2c_object| 0+1)),f
  7835                           
  7836                           ;i2c.c: 275: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  7837  01B1  0841               	movf	low ((_i2c_object| 0+1)),w
  7838  01B2  3A53               	xorlw	(low ((_i2c_tr_queue| 0+3)))& (0+255)
  7839  01B3  1D03               	skipz
  7840  01B4  29B9               	goto	i1l2004
  7841                           
  7842                           ;i2c.c: 276: {
  7843                           ;i2c.c: 278: i2c_object.pTrHead = i2c_tr_queue;
  7844  01B5  3050               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  7845  01B6  00F7               	movwf	??_I2C_ISR
  7846  01B7  0877               	movf	??_I2C_ISR,w
  7847  01B8  00C1               	movwf	low ((_i2c_object| 0+1))
  7848  01B9                     i1l2004:	
  7849                           
  7850                           ;i2c.c: 279: }
  7851                           ;i2c.c: 283: i2c_object.trStatus.s.full = 0;
  7852  01B9  1042               	bcf	_i2c_object+2,0
  7853                           
  7854                           ;i2c.c: 286: if(i2c_object.pTrHead == i2c_object.pTrTail)
  7855  01BA  0841               	movf	low ((_i2c_object| 0+1)),w
  7856  01BB  0640               	xorwf	_i2c_object,w
  7857  01BC  1903               	btfsc	3,2
  7858                           
  7859                           ;i2c.c: 287: {
  7860                           ;i2c.c: 289: i2c_object.trStatus.s.empty = 1;
  7861  01BD  14C2               	bsf	_i2c_object+2,1
  7862                           
  7863                           ;i2c.c: 290: }
  7864                           ;i2c.c: 293: SSP1CON2bits.SEN = 1;
  7865  01BE  0024               	movlb	4	; select bank4
  7866  01BF  1416               	bsf	22,0	;volatile
  7867                           
  7868                           ;i2c.c: 296: i2c_state = S_MASTER_SEND_ADDR;
  7869  01C0  3002               	movlw	2
  7870  01C1  00F7               	movwf	??_I2C_ISR
  7871  01C2  0877               	movf	??_I2C_ISR,w
  7872  01C3  00F3               	movwf	_i2c_state
  7873                           
  7874                           ;i2c.c: 297: }
  7875                           ;i2c.c: 299: break;
  7876  01C4  0008               	return
  7877  01C5                     i1l69:	
  7878                           ;i2c.c: 301: case S_MASTER_RESTART:
  7879                           
  7880                           
  7881                           ;i2c.c: 306: SSP1CON2bits.RSEN = 1;
  7882  01C5  0024               	movlb	4	; select bank4
  7883  01C6  1496               	bsf	22,1	;volatile
  7884                           
  7885                           ;i2c.c: 309: i2c_state = S_MASTER_SEND_ADDR;
  7886  01C7  3002               	movlw	2
  7887  01C8  00F7               	movwf	??_I2C_ISR
  7888  01C9  0877               	movf	??_I2C_ISR,w
  7889  01CA  00F3               	movwf	_i2c_state
  7890                           
  7891                           ;i2c.c: 311: break;
  7892  01CB  0008               	return
  7893  01CC                     i1l70:	
  7894                           ;i2c.c: 313: case S_MASTER_SEND_ADDR_10BIT_LSB:
  7895                           
  7896                           
  7897                           ;i2c.c: 315: if(SSP1CON2bits.ACKSTAT)
  7898  01CC  0024               	movlb	4	; select bank4
  7899  01CD  1F16               	btfss	22,6	;volatile
  7900  01CE  29D8               	goto	i1l2016
  7901                           
  7902                           ;i2c.c: 316: {
  7903                           ;i2c.c: 317: i2c_object.i2cErrors++;
  7904  01CF  3001               	movlw	1
  7905  01D0  00F7               	movwf	??_I2C_ISR
  7906  01D1  0877               	movf	??_I2C_ISR,w
  7907  01D2  0020               	movlb	0	; select bank0
  7908  01D3  07C4               	addwf	_i2c_object+4,f
  7909                           
  7910                           ;i2c.c: 318: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  7911  01D4  3004               	movlw	4
  7912  01D5  3187  2717         	fcall	_I2C_Stop
  7913                           
  7914                           ;i2c.c: 319: }
  7915  01D7  0008               	return
  7916  01D8                     i1l2016:	
  7917                           
  7918                           ;i2c.c: 320: else
  7919                           ;i2c.c: 321: {
  7920                           ;i2c.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  7921  01D8  0875               	movf	I2C_ISR@i2c_address+1,w
  7922  01D9  00F8               	movwf	??_I2C_ISR+1
  7923  01DA  0874               	movf	I2C_ISR@i2c_address,w
  7924  01DB  00F7               	movwf	??_I2C_ISR
  7925  01DC  36F8               	lsrf	??_I2C_ISR+1,f
  7926  01DD  0CF7               	rrf	??_I2C_ISR,f
  7927  01DE  0877               	movf	??_I2C_ISR,w
  7928  01DF  0024               	movlb	4	; select bank4
  7929  01E0  0091               	movwf	17	;volatile
  7930                           
  7931                           ;i2c.c: 326: if(i2c_address & 0x01)
  7932  01E1  1C74               	btfss	I2C_ISR@i2c_address,0
  7933  01E2  29E8               	goto	i1l2022
  7934                           
  7935                           ;i2c.c: 327: {
  7936                           ;i2c.c: 330: i2c_state = S_MASTER_10BIT_RESTART;
  7937  01E3  300B               	movlw	11
  7938  01E4  00F7               	movwf	??_I2C_ISR
  7939  01E5  0877               	movf	??_I2C_ISR,w
  7940  01E6  00F3               	movwf	_i2c_state
  7941                           
  7942                           ;i2c.c: 331: }
  7943  01E7  0008               	return
  7944  01E8                     i1l2022:	
  7945                           
  7946                           ;i2c.c: 332: else
  7947                           ;i2c.c: 333: {
  7948                           ;i2c.c: 335: i2c_state = S_MASTER_SEND_DATA;
  7949  01E8  3003               	movlw	3
  7950  01E9  00F7               	movwf	??_I2C_ISR
  7951  01EA  0877               	movf	??_I2C_ISR,w
  7952  01EB  00F3               	movwf	_i2c_state
  7953                           
  7954                           ;i2c.c: 336: }
  7955                           ;i2c.c: 337: }
  7956                           ;i2c.c: 339: break;
  7957  01EC  0008               	return
  7958  01ED                     i1l75:	
  7959                           ;i2c.c: 341: case S_MASTER_10BIT_RESTART:
  7960                           
  7961                           
  7962                           ;i2c.c: 343: if(SSP1CON2bits.ACKSTAT)
  7963  01ED  0024               	movlb	4	; select bank4
  7964  01EE  1F16               	btfss	22,6	;volatile
  7965  01EF  29F9               	goto	i1l76
  7966                           
  7967                           ;i2c.c: 344: {
  7968                           ;i2c.c: 345: i2c_object.i2cErrors++;
  7969  01F0  3001               	movlw	1
  7970  01F1  00F7               	movwf	??_I2C_ISR
  7971  01F2  0877               	movf	??_I2C_ISR,w
  7972  01F3  0020               	movlb	0	; select bank0
  7973  01F4  07C4               	addwf	_i2c_object+4,f
  7974                           
  7975                           ;i2c.c: 346: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  7976  01F5  3004               	movlw	4
  7977  01F6  3187  2717         	fcall	_I2C_Stop
  7978                           
  7979                           ;i2c.c: 347: }
  7980  01F8  0008               	return
  7981  01F9                     i1l76:	
  7982                           
  7983                           ;i2c.c: 348: else
  7984                           ;i2c.c: 349: {
  7985                           ;i2c.c: 352: SSP1CON2bits.RSEN = 1;
  7986  01F9  1496               	bsf	22,1	;volatile
  7987                           
  7988                           ;i2c.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  7989  01FA  0875               	movf	I2C_ISR@i2c_address+1,w
  7990  01FB  00F8               	movwf	??_I2C_ISR+1
  7991  01FC  0874               	movf	I2C_ISR@i2c_address,w
  7992  01FD  00F7               	movwf	??_I2C_ISR
  7993  01FE  0878               	movf	??_I2C_ISR+1,w
  7994  01FF  00F7               	movwf	??_I2C_ISR
  7995  0200  01F8               	clrf	??_I2C_ISR+1
  7996  0201  3006               	movlw	6
  7997  0202  0577               	andwf	??_I2C_ISR,w
  7998  0203  00F9               	movwf	??_I2C_ISR+2
  7999  0204  3000               	movlw	0
  8000  0205  0578               	andwf	??_I2C_ISR+1,w
  8001  0206  00FA               	movwf	??_I2C_ISR+3
  8002  0207  30F0               	movlw	240
  8003  0208  0479               	iorwf	??_I2C_ISR+2,w
  8004  0209  00F4               	movwf	I2C_ISR@i2c_address
  8005  020A  3000               	movlw	0
  8006  020B  047A               	iorwf	??_I2C_ISR+3,w
  8007  020C  00F5               	movwf	I2C_ISR@i2c_address+1
  8008                           
  8009                           ;i2c.c: 359: i2c_address |= 0x0001;
  8010  020D  1474               	bsf	I2C_ISR@i2c_address,0
  8011                           
  8012                           ;i2c.c: 362: i2c_10bit_address_restart = 1;
  8013  020E  0020               	movlb	0	; select bank0
  8014  020F  01C5               	clrf	I2C_ISR@i2c_10bit_address_restart
  8015  0210  0AC5               	incf	I2C_ISR@i2c_10bit_address_restart,f
  8016                           
  8017                           ;i2c.c: 365: i2c_state = S_MASTER_SEND_ADDR;
  8018  0211  3002               	movlw	2
  8019  0212  00F7               	movwf	??_I2C_ISR
  8020  0213  0877               	movf	??_I2C_ISR,w
  8021  0214  00F3               	movwf	_i2c_state
  8022                           
  8023                           ;i2c.c: 366: }
  8024                           ;i2c.c: 368: break;
  8025  0215  0008               	return
  8026  0216                     i1l2036:	
  8027                           ;i2c.c: 370: case S_MASTER_SEND_ADDR:
  8028                           
  8029                           
  8030                           ;i2c.c: 383: if(i2c_10bit_address_restart != 1)
  8031  0216  0020               	movlb	0	; select bank0
  8032  0217  0345               	decf	I2C_ISR@i2c_10bit_address_restart,w
  8033  0218  1903               	btfsc	3,2
  8034  0219  2A2B               	goto	i1l2056
  8035                           
  8036                           ;i2c.c: 384: {
  8037                           ;i2c.c: 386: i2c_address = p_i2c_trb_current->address;
  8038  021A  0871               	movf	_p_i2c_trb_current,w
  8039  021B  0086               	movwf	6
  8040  021C  0187               	clrf	7
  8041  021D  3F40               	moviw [0]fsr1
  8042  021E  00F4               	movwf	I2C_ISR@i2c_address
  8043  021F  3F41               	moviw [1]fsr1
  8044  0220  00F5               	movwf	I2C_ISR@i2c_address+1
  8045                           
  8046                           ;i2c.c: 387: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  8047  0221  0871               	movf	_p_i2c_trb_current,w
  8048  0222  0086               	movwf	6
  8049  0223  0187               	clrf	7
  8050  0224  3F43               	moviw [3]fsr1
  8051  0225  00F0               	movwf	I2C_ISR@pi2c_buf_ptr
  8052                           
  8053                           ;i2c.c: 388: i2c_bytes_left = p_i2c_trb_current->length;
  8054  0226  0871               	movf	_p_i2c_trb_current,w
  8055  0227  0086               	movwf	6
  8056  0228  0187               	clrf	7
  8057  0229  3F42               	moviw [2]fsr1
  8058  022A  00C6               	movwf	I2C_ISR@i2c_bytes_left
  8059  022B                     i1l2056:	
  8060                           ;i2c.c: 409: }
  8061                           ;i2c.c: 410: }
  8062                           
  8063                           ;i2c.c: 408: i2c_10bit_address_restart = 0;
  8064                           
  8065                           ;i2c.c: 406: i2c_state = S_MASTER_ACK_ADDR;
  8066                           
  8067                           ;i2c.c: 402: else
  8068                           ;i2c.c: 403: {
  8069                           ;i2c.c: 405: SSP1BUF = i2c_address;
  8070                           
  8071                           ;i2c.c: 401: }
  8072                           
  8073                           ;i2c.c: 400: i2c_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  8074                           
  8075                           ;i2c.c: 395: {
  8076                           ;i2c.c: 399: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  8077                           
  8078                           ;i2c.c: 393: {
  8079                           ;i2c.c: 394: if (0 == i2c_10bit_address_restart)
  8080                           
  8081                           ;i2c.c: 389: }
  8082                           ;i2c.c: 392: if(!1 && (0x0 != i2c_address))
  8083                           
  8084                           
  8085                           ;i2c.c: 411: else
  8086                           ;i2c.c: 412: {
  8087                           ;i2c.c: 414: SSP1BUF = i2c_address;
  8088  022B  0874               	movf	I2C_ISR@i2c_address,w
  8089  022C  0024               	movlb	4	; select bank4
  8090  022D  0091               	movwf	17	;volatile
  8091                           
  8092                           ;i2c.c: 415: if(i2c_address & 0x01)
  8093  022E  1C74               	btfss	I2C_ISR@i2c_address,0
  8094  022F  2A35               	goto	i1l2062
  8095                           
  8096                           ;i2c.c: 416: {
  8097                           ;i2c.c: 418: i2c_state = S_MASTER_ACK_ADDR;
  8098  0230  3005               	movlw	5
  8099  0231  00F7               	movwf	??_I2C_ISR
  8100  0232  0877               	movf	??_I2C_ISR,w
  8101  0233  00F3               	movwf	_i2c_state
  8102                           
  8103                           ;i2c.c: 419: }
  8104  0234  0008               	return
  8105  0235                     i1l2062:	
  8106                           
  8107                           ;i2c.c: 420: else
  8108                           ;i2c.c: 421: {
  8109                           ;i2c.c: 423: i2c_state = S_MASTER_SEND_DATA;
  8110  0235  3003               	movlw	3
  8111  0236  00F7               	movwf	??_I2C_ISR
  8112  0237  0877               	movf	??_I2C_ISR,w
  8113  0238  00F3               	movwf	_i2c_state
  8114                           
  8115                           ;i2c.c: 424: }
  8116                           ;i2c.c: 425: }
  8117                           ;i2c.c: 426: break;
  8118  0239  0008               	return
  8119  023A                     i1l86:	
  8120                           ;i2c.c: 428: case S_MASTER_SEND_DATA:
  8121                           
  8122                           
  8123                           ;i2c.c: 431: if(SSP1CON2bits.ACKSTAT)
  8124  023A  0024               	movlb	4	; select bank4
  8125  023B  1F16               	btfss	22,6	;volatile
  8126  023C  2A48               	goto	i1l2070
  8127                           
  8128                           ;i2c.c: 432: {
  8129                           ;i2c.c: 434: i2c_object.i2cErrors++;
  8130  023D  3001               	movlw	1
  8131  023E  00F7               	movwf	??_I2C_ISR
  8132  023F  0877               	movf	??_I2C_ISR,w
  8133  0240  0020               	movlb	0	; select bank0
  8134  0241  07C4               	addwf	_i2c_object+4,f
  8135                           
  8136                           ;i2c.c: 437: SSP1CON2bits.ACKSTAT = 0;
  8137  0242  0024               	movlb	4	; select bank4
  8138  0243  1316               	bcf	22,6	;volatile
  8139                           
  8140                           ;i2c.c: 440: I2C_Stop(I2C_DATA_NO_ACK);
  8141  0244  3005               	movlw	5
  8142  0245  3187  2717         	fcall	_I2C_Stop
  8143                           
  8144                           ;i2c.c: 442: }
  8145  0247  0008               	return
  8146  0248                     i1l2070:	
  8147                           
  8148                           ;i2c.c: 443: else
  8149                           ;i2c.c: 444: {
  8150                           ;i2c.c: 446: if(i2c_bytes_left-- == 0U)
  8151  0248  3001               	movlw	1
  8152  0249  0020               	movlb	0	; select bank0
  8153  024A  02C6               	subwf	I2C_ISR@i2c_bytes_left,f
  8154  024B  0A46               	incf	I2C_ISR@i2c_bytes_left,w
  8155  024C  1D03               	btfss	3,2
  8156  024D  2A61               	goto	i1l2078
  8157                           
  8158                           ;i2c.c: 447: {
  8159                           ;i2c.c: 451: p_i2c_trb_current++;
  8160  024E  3004               	movlw	4
  8161  024F  00F7               	movwf	??_I2C_ISR
  8162  0250  0877               	movf	??_I2C_ISR,w
  8163  0251  07F1               	addwf	_p_i2c_trb_current,f
  8164                           
  8165                           ;i2c.c: 454: if(--i2c_trb_count == 0)
  8166  0252  3001               	movlw	1
  8167  0253  02F2               	subwf	_i2c_trb_count,f
  8168  0254  1D03               	btfss	3,2
  8169  0255  2A5A               	goto	i1l90
  8170                           
  8171                           ;i2c.c: 455: {
  8172                           ;i2c.c: 456: I2C_Stop(I2C_MESSAGE_COMPLETE);
  8173  0256  3000               	movlw	0
  8174  0257  3187  2717         	fcall	_I2C_Stop
  8175                           
  8176                           ;i2c.c: 457: }
  8177  0259  0008               	return
  8178  025A                     i1l90:	
  8179                           
  8180                           ;i2c.c: 458: else
  8181                           ;i2c.c: 459: {
  8182                           ;i2c.c: 466: SSP1CON2bits.RSEN = 1;
  8183  025A  0024               	movlb	4	; select bank4
  8184  025B  1496               	bsf	22,1	;volatile
  8185                           
  8186                           ;i2c.c: 469: i2c_state = S_MASTER_SEND_ADDR;
  8187  025C  3002               	movlw	2
  8188  025D  00F7               	movwf	??_I2C_ISR
  8189  025E  0877               	movf	??_I2C_ISR,w
  8190  025F  00F3               	movwf	_i2c_state
  8191                           
  8192                           ;i2c.c: 471: }
  8193                           ;i2c.c: 472: }
  8194  0260  0008               	return
  8195  0261                     i1l2078:	
  8196                           
  8197                           ;i2c.c: 473: else
  8198                           ;i2c.c: 474: {
  8199                           ;i2c.c: 476: SSP1BUF = *pi2c_buf_ptr++;
  8200  0261  0870               	movf	I2C_ISR@pi2c_buf_ptr,w
  8201  0262  0086               	movwf	6
  8202  0263  0187               	clrf	7
  8203  0264  0801               	movf	1,w
  8204  0265  0024               	movlb	4	; select bank4
  8205  0266  0091               	movwf	17	;volatile
  8206  0267  3001               	movlw	1
  8207  0268  00F7               	movwf	??_I2C_ISR
  8208  0269  0877               	movf	??_I2C_ISR,w
  8209  026A  07F0               	addwf	I2C_ISR@pi2c_buf_ptr,f
  8210                           
  8211                           ;i2c.c: 477: }
  8212                           ;i2c.c: 478: }
  8213                           ;i2c.c: 479: break;
  8214  026B  0008               	return
  8215  026C                     i1l93:	
  8216                           ;i2c.c: 481: case S_MASTER_ACK_ADDR:
  8217                           
  8218                           
  8219                           ;i2c.c: 484: if(SSP1CON2bits.ACKSTAT)
  8220  026C  0024               	movlb	4	; select bank4
  8221  026D  1F16               	btfss	22,6	;volatile
  8222  026E  2A7A               	goto	i1l94
  8223                           
  8224                           ;i2c.c: 485: {
  8225                           ;i2c.c: 488: i2c_object.i2cErrors++;
  8226  026F  3001               	movlw	1
  8227  0270  00F7               	movwf	??_I2C_ISR
  8228  0271  0877               	movf	??_I2C_ISR,w
  8229  0272  0020               	movlb	0	; select bank0
  8230  0273  07C4               	addwf	_i2c_object+4,f
  8231                           
  8232                           ;i2c.c: 491: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  8233  0274  3004               	movlw	4
  8234  0275  3187  2717         	fcall	_I2C_Stop
  8235                           
  8236                           ;i2c.c: 494: SSP1CON2bits.ACKSTAT = 0;
  8237  0277  0024               	movlb	4	; select bank4
  8238  0278  1316               	bcf	22,6	;volatile
  8239                           
  8240                           ;i2c.c: 495: }
  8241  0279  0008               	return
  8242  027A                     i1l94:	
  8243                           
  8244                           ;i2c.c: 496: else
  8245                           ;i2c.c: 497: {
  8246                           ;i2c.c: 498: SSP1CON2bits.RCEN = 1;
  8247  027A  1596               	bsf	22,3	;volatile
  8248                           
  8249                           ;i2c.c: 499: i2c_state = S_MASTER_ACK_RCV_DATA;
  8250  027B  3008               	movlw	8
  8251  027C  00F7               	movwf	??_I2C_ISR
  8252  027D  0877               	movf	??_I2C_ISR,w
  8253  027E  00F3               	movwf	_i2c_state
  8254                           
  8255                           ;i2c.c: 500: }
  8256                           ;i2c.c: 501: break;
  8257  027F  0008               	return
  8258  0280                     i1l2090:	
  8259                           ;i2c.c: 503: case S_MASTER_RCV_DATA:
  8260                           
  8261                           
  8262                           ;i2c.c: 508: i2c_state = S_MASTER_ACK_RCV_DATA;
  8263  0280  3008               	movlw	8
  8264  0281  00F7               	movwf	??_I2C_ISR
  8265  0282  0877               	movf	??_I2C_ISR,w
  8266  0283  00F3               	movwf	_i2c_state
  8267                           
  8268                           ;i2c.c: 511: SSP1CON2bits.RCEN = 1;
  8269  0284  0024               	movlb	4	; select bank4
  8270  0285  1596               	bsf	22,3	;volatile
  8271                           
  8272                           ;i2c.c: 513: break;
  8273  0286  0008               	return
  8274  0287                     i1l2094:	
  8275                           ;i2c.c: 515: case S_MASTER_ACK_RCV_DATA:
  8276                           
  8277                           
  8278                           ;i2c.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
  8279  0287  0024               	movlb	4	; select bank4
  8280  0288  0811               	movf	17,w	;volatile
  8281  0289  00F7               	movwf	??_I2C_ISR
  8282  028A  0870               	movf	I2C_ISR@pi2c_buf_ptr,w
  8283  028B  0086               	movwf	6
  8284  028C  0187               	clrf	7
  8285  028D  0877               	movf	??_I2C_ISR,w
  8286  028E  0081               	movwf	1
  8287  028F  3001               	movlw	1
  8288  0290  00F7               	movwf	??_I2C_ISR
  8289  0291  0877               	movf	??_I2C_ISR,w
  8290  0292  07F0               	addwf	I2C_ISR@pi2c_buf_ptr,f
  8291                           
  8292                           ;i2c.c: 521: if(--i2c_bytes_left)
  8293  0293  3001               	movlw	1
  8294  0294  0020               	movlb	0	; select bank0
  8295  0295  02C6               	subwf	I2C_ISR@i2c_bytes_left,f
  8296  0296  1903               	btfsc	3,2
  8297  0297  2A9F               	goto	i1l98
  8298                           
  8299                           ;i2c.c: 522: {
  8300                           ;i2c.c: 528: SSP1CON2bits.ACKDT = 0;
  8301  0298  0024               	movlb	4	; select bank4
  8302  0299  1296               	bcf	22,5	;volatile
  8303                           
  8304                           ;i2c.c: 531: i2c_state = S_MASTER_RCV_DATA;
  8305  029A  3006               	movlw	6
  8306  029B  00F7               	movwf	??_I2C_ISR
  8307  029C  0877               	movf	??_I2C_ISR,w
  8308  029D  00F3               	movwf	_i2c_state
  8309                           
  8310                           ;i2c.c: 532: }
  8311  029E  2AA3               	goto	i1l2106
  8312  029F                     i1l98:	
  8313                           
  8314                           ;i2c.c: 533: else
  8315                           ;i2c.c: 534: {
  8316                           ;i2c.c: 538: SSP1CON2bits.ACKDT = 1;
  8317  029F  0024               	movlb	4	; select bank4
  8318  02A0  1696               	bsf	22,5	;volatile
  8319                           
  8320                           ;i2c.c: 540: I2C_FunctionComplete();
  8321  02A1  3186  26BF         	fcall	_I2C_FunctionComplete
  8322  02A3                     i1l2106:	
  8323                           
  8324                           ;i2c.c: 541: }
  8325                           ;i2c.c: 544: SSP1CON2bits.ACKEN = 1;
  8326  02A3  0024               	movlb	4	; select bank4
  8327  02A4  1616               	bsf	22,4	;volatile
  8328                           
  8329                           ;i2c.c: 545: break;
  8330  02A5  0008               	return
  8331  02A6                     i1l2108:	
  8332                           ;i2c.c: 547: case S_MASTER_RCV_STOP:
  8333                           
  8334                           
  8335                           ;i2c.c: 548: case S_MASTER_SEND_STOP:
  8336                           ;i2c.c: 551: I2C_Stop(I2C_MESSAGE_COMPLETE);
  8337  02A6  3000               	movlw	0
  8338  02A7  3187  2717         	fcall	_I2C_Stop
  8339                           
  8340                           ;i2c.c: 552: break;
  8341  02A9  0008               	return
  8342  02AA                     i1l2110:	
  8343                           ;i2c.c: 554: default:
  8344                           
  8345                           
  8346                           ;i2c.c: 558: i2c_object.i2cErrors++;
  8347  02AA  3001               	movlw	1
  8348  02AB  00F7               	movwf	??_I2C_ISR
  8349  02AC  0877               	movf	??_I2C_ISR,w
  8350  02AD  0020               	movlb	0	; select bank0
  8351  02AE  07C4               	addwf	_i2c_object+4,f
  8352                           
  8353                           ;i2c.c: 559: I2C_Stop(I2C_LOST_STATE);
  8354  02AF  3006               	movlw	6
  8355  02B0  3187  2717         	fcall	_I2C_Stop
  8356                           
  8357                           ;i2c.c: 562: }
  8358                           
  8359                           ;i2c.c: 560: break;
  8360  02B2  0008               	return
  8361  02B3                     i1l2116:	
  8362  02B3  0873               	movf	_i2c_state,w
  8363                           
  8364                           ; Switch size 1, requested type "space"
  8365                           ; Number of cases is 11, Range of values is 0 to 11
  8366                           ; switch strategies available:
  8367                           ; Name         Instructions Cycles
  8368                           ; direct_byte           30     6 (fixed)
  8369                           ; simple_byte           34    18 (average)
  8370                           ; jumptable            260     6 (fixed)
  8371                           ;	Chosen strategy is direct_byte
  8372  02B4  0084               	movwf	4
  8373  02B5  300C               	movlw	12
  8374  02B6  0204               	subwf	4,w
  8375  02B7  1803               	skipnc
  8376  02B8  2AAA               	goto	i1l2110
  8377  02B9  3186               	movlp	high i1S3094
  8378  02BA  3504               	lslf	4,w
  8379  02BB  3E49               	addlw	low i1S3094
  8380  02BC  0082               	movwf	2
  8381  02BD  0008               	return
  8382  02BE                     __end_of_I2C_ISR:	
  8383                           
  8384                           	psect	swtext2
  8385  0649                     __pswtext2:	
  8386  0649                     i1S3094:	
  8387  0649  3181  299A         	ljmp	i1l64
  8388  064B  3181  29C5         	ljmp	i1l69
  8389  064D  3182  2A16         	ljmp	i1l2036
  8390  064F  3182  2A3A         	ljmp	i1l86
  8391  0651  3182  2AA6         	ljmp	i1l2108
  8392  0653  3182  2A6C         	ljmp	i1l93
  8393  0655  3182  2A80         	ljmp	i1l2090
  8394  0657  3182  2AA6         	ljmp	i1l2108
  8395  0659  3182  2A87         	ljmp	i1l2094
  8396  065B  3182  2AAA         	ljmp	i1l2110
  8397  065D  3181  29CC         	ljmp	i1l70
  8398  065F  3181  29ED         	ljmp	i1l75
  8399                           
  8400                           	psect	text29
  8401  0717                     __ptext29:	
  8402 ;; *************** function _I2C_Stop *****************
  8403 ;; Defined at:
  8404 ;;		line 583 in file "mcc_generated_files/i2c.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  completion_c    1    wreg     enum E11987
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  completion_c    1    0[COMMON] enum E11987
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_I2C_ISR
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function _I2C_Stop
  8433  0717                     _I2C_Stop:	
  8434                           
  8435                           ;i2c.c: 586: SSP1CON2bits.PEN = 1;
  8436                           
  8437                           ;incstack = 0
  8438                           ; Regs used in _I2C_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  8439  0717  0024               	movlb	4	; select bank4
  8440  0718  1516               	bsf	22,2	;volatile
  8441                           
  8442                           ;i2c.c: 593: }
  8443                           ;i2c.c: 596: i2c_state = S_MASTER_IDLE;
  8444  0719  01F3               	clrf	_i2c_state
  8445  071A  0008               	return
  8446  071B                     __end_of_I2C_Stop:	
  8447                           
  8448                           	psect	text30
  8449  06BF                     __ptext30:	
  8450 ;; *************** function _I2C_FunctionComplete *****************
  8451 ;; Defined at:
  8452 ;;		line 565 in file "mcc_generated_files/i2c.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2, status,0
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;Total ram usage:        1 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_I2C_ISR
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           
  8480                           ;psect for function _I2C_FunctionComplete
  8481  06BF                     _I2C_FunctionComplete:	
  8482                           
  8483                           ;i2c.c: 569: p_i2c_trb_current++;
  8484                           
  8485                           ;incstack = 0
  8486                           ; Regs used in _I2C_FunctionComplete: [wreg+status,2+status,0]
  8487  06BF  3004               	movlw	4
  8488  06C0  00F6               	movwf	??_I2C_FunctionComplete
  8489  06C1  0876               	movf	??_I2C_FunctionComplete,w
  8490  06C2  07F1               	addwf	_p_i2c_trb_current,f
  8491                           
  8492                           ;i2c.c: 572: if(--i2c_trb_count == 0)
  8493  06C3  3001               	movlw	1
  8494  06C4  02F2               	subwf	_i2c_trb_count,f
  8495  06C5  1D03               	btfss	3,2
  8496  06C6  2ECC               	goto	i1l105
  8497                           
  8498                           ;i2c.c: 573: {
  8499                           ;i2c.c: 574: i2c_state = S_MASTER_SEND_STOP;
  8500  06C7  3004               	movlw	4
  8501  06C8  00F6               	movwf	??_I2C_FunctionComplete
  8502  06C9  0876               	movf	??_I2C_FunctionComplete,w
  8503  06CA  00F3               	movwf	_i2c_state
  8504                           
  8505                           ;i2c.c: 575: }
  8506  06CB  0008               	return
  8507  06CC                     i1l105:	
  8508                           
  8509                           ;i2c.c: 576: else
  8510                           ;i2c.c: 577: {
  8511                           ;i2c.c: 578: i2c_state = S_MASTER_RESTART;
  8512  06CC  01F3               	clrf	_i2c_state
  8513  06CD  0AF3               	incf	_i2c_state,f
  8514  06CE  0008               	return
  8515  06CF                     __end_of_I2C_FunctionComplete:	
  8516                           
  8517                           	psect	text31
  8518  071B                     __ptext31:	
  8519 ;; *************** function _I2C_BusCollisionISR *****************
  8520 ;; Defined at:
  8521 ;;		line 742 in file "mcc_generated_files/i2c.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;		None
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;		None
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		None
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;Total ram usage:        0 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_INTERRUPT_InterruptManager
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _I2C_BusCollisionISR
  8550  071B                     _I2C_BusCollisionISR:	
  8551                           
  8552                           ;i2c.c: 745: PIR2bits.BCL1IF = 0;
  8553                           
  8554                           ;incstack = 0
  8555                           ; Regs used in _I2C_BusCollisionISR: []
  8556  071B  0020               	movlb	0	; select bank0
  8557  071C  1191               	bcf	17,3	;volatile
  8558  071D  0008               	return
  8559  071E                     __end_of_I2C_BusCollisionISR:	
  8560  007E                     btemp	set	126	;btemp
  8561  007E                     int$flags	set	126
  8562  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     32      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    F12099.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F12094.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    S19$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    S31$pTrFlag	PTR enum E11987 size(1) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E11987 size(1) Largest target is 0

    S31$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S42$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    S42$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_FunctionComplete

Critical Paths under _main in BANK0

    _main->_printReglageH
    _readSec->_readI2C
    _printReglageH->_writeData
    _writeData->_writeInst
    _initRW1063->_writeInst
    _writeInst->_sendI2C
    _incrMin->_bitExtracted
    _readMin->_readI2C
    _changeMin->_sendI2C
    _incrHeure->_bitExtracted
    _readHr->_readI2C
    _changeHeure->_sendI2C
    _convertFromBcd->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   16425
                                             17 BANK0     15    15      0
                                _FSM
                  _SYSTEM_Initialize
                       _bitExtracted
                     _convertFromBcd
                          _incrHeure
                            _incrMin
                            _initI2C
                         _initRW1063
                      _printReglageH
                             _readHr
                            _readMin
                            _readSec
                          _writeData
                          _writeInst
 ---------------------------------------------------------------------------------
 (1) _readSec                                              2     2      0     102
                                              2 BANK0      2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _printReglageH                                        9     9      0    5190
                                              8 BANK0      9     9      0
                                _FSM
                       _bitExtracted
                             _readHr
                            _readMin
                          _writeData
                          _writeInst
 ---------------------------------------------------------------------------------
 (1) _writeData                                            5     3      2    2696
                                              3 BANK0      5     3      2
                                _FSM (ARG)
                            _sendI2C
                           _startI2C
                            _stopI2C
                          _writeInst
 ---------------------------------------------------------------------------------
 (2) _FSM                                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initRW1063                                           0     0      0      62
                          _writeInst
 ---------------------------------------------------------------------------------
 (1) _writeInst                                            2     2      0      62
                                              1 BANK0      2     2      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _incrMin                                              6     6      0    2494
                                              5 BANK0      6     6      0
                       _bitExtracted
                          _changeMin
                            _readMin
 ---------------------------------------------------------------------------------
 (1) _readMin                                              2     2      0     102
                                              2 BANK0      2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _changeMin                                            1     1      0      62
                                              1 BANK0      1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _incrHeure                                            6     6      0    2556
                                              5 BANK0      6     6      0
                       _bitExtracted
                        _changeHeure
                             _readHr
 ---------------------------------------------------------------------------------
 (1) _readHr                                               2     2      0     102
                                              2 BANK0      2     2      0
                        _re_startI2C
                            _readI2C
                            _sendI2C
                       _sendNoAckI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _sendNoAckI2C                                         0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _readI2C                                              2     2      0      34
                                              0 BANK0      2     2      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _re_startI2C                                          0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _changeHeure                                          1     1      0      62
                                              1 BANK0      1     1      0
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (2) _stopI2C                                              0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _startI2C                                             0     0      0       0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (2) _sendI2C                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _waitI2C
 ---------------------------------------------------------------------------------
 (3) _waitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bitExtracted                                         5     3      2    1913
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _convertFromBcd                                       5     5      0     337
                                              4 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     201
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              5 COMMON     1     1      0
                _I2C_BusCollisionISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C_ISR                                              4     4      0       0
                                              1 COMMON     4     4      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C_Stop                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_FunctionComplete                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _bitExtracted
   _convertFromBcd
     ___bmul
   _incrHeure
     _bitExtracted
     _changeHeure
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readHr
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _incrMin
     _bitExtracted
     _changeMin
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readMin
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _initI2C
   _initRW1063
     _writeInst
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _printReglageH
     _FSM
     _bitExtracted
     _readHr
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _readMin
       _re_startI2C
         _waitI2C
       _readI2C
         _waitI2C
       _sendI2C
         _waitI2C
       _sendNoAckI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
     _writeData
       _FSM (ARG)
       _sendI2C (ARG)
         _waitI2C
       _startI2C (ARG)
         _waitI2C
       _stopI2C (ARG)
         _waitI2C
       _writeInst (ARG)
         _sendI2C
           _waitI2C
         _startI2C
           _waitI2C
         _stopI2C
           _waitI2C
     _writeInst
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _readHr
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _readMin
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _readSec
     _re_startI2C
       _waitI2C
     _readI2C
       _waitI2C
     _sendI2C
       _waitI2C
     _sendNoAckI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C
   _writeData
     _FSM (ARG)
     _sendI2C (ARG)
       _waitI2C
     _startI2C (ARG)
       _waitI2C
     _stopI2C (ARG)
       _waitI2C
     _writeInst (ARG)
       _sendI2C
         _waitI2C
       _startI2C
         _waitI2C
       _stopI2C
         _waitI2C
   _writeInst
     _sendI2C
       _waitI2C
     _startI2C
       _waitI2C
     _stopI2C
       _waitI2C

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      33       5       63.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 13 13:19:51 2018

                 printReglageH@heure 0030                                    pc 0002  
                     ___bmul@product 0022                I2C_ISR@i2c_bytes_left 0046  
                        __CFG_CP$OFF 0000                  printReglageH@minute 002F  
                printReglageH@uniteH 002E                  printReglageH@uniteM 002C  
                        __CFG_LVP$ON 0000                                  l303 0693  
                                l309 06EB                                  l423 05F8  
                                l360 0152                                  l441 0625  
                                l426 05FF                                  l274 04BE  
                                l450 0530                                  l291 06F3  
                                l435 0616                                  l275 04D1  
                                l364 017E                                  l285 06F6  
                                l429 0607                                  l453 053A  
                                l438 061D                                  l462 055C  
                                l279 06E3                                  l471 0581  
                                l447 0529                                  l367 017C  
                                l297 06DA                                  l465 0566  
                                l474 0588                                  l459 0555  
                                l477 0592                                  _FSM 05CD  
                    __end_of_I2C_ISR 02BE                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                               S3092 0677                printReglageH@dizaineH 002D  
              printReglageH@dizaineM 002B                                 ?_FSM 0076  
                       __CFG_ZCD$OFF 0000                                 l3004 0170  
                               l3016 0186                                 l2640 05D2  
                               l2634 05D0                                 l2714 0462  
                               l2652 05D6                                 l2716 0470  
                               l2708 0461                                 l2750 06A0  
                               l2910 03E6                                 l2902 03D8  
                               l2670 05DC                                 l2646 05D4  
                               l2664 05DA                                 l2754 06A6  
                               l2682 05E0                                 l2658 05D8  
                               l2676 05DE                                 l2872 0438  
                               l2688 05E2                                 l2696 05E4  
                               l2876 043E                                 l2956 005A  
                               l2990 014D                                 l2994 0154  
                               u2105 03EE                                 u2035 0632  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 u2065 0446  
                               u2307 0048                                 u2317 015D  
                               u2327 0477                                 u2337 0484  
             ??_I2C_FunctionComplete 0076                                 u2347 0491  
                               u2357 049F                                 u2367 04F0  
                               u2377 04FD                                 u2387 050A  
                               u2397 0518                                 u1864 066A  
                               u1865 0669                                 u1874 0671  
                               u1875 0670                                 u1985 04BC  
                               u1995 04CF                                 i1l70 01CC  
                               i1l64 019A                                 i1l90 025A  
                               i1l75 01ED                                 i1l76 01F9  
                               i1l93 026C                                 i1l69 01C5  
                               i1l94 027A                                 i1l86 023A  
                               i1l98 029F                                 _WPUA 020C  
                               _WPUB 020D                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0035                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                   __end_of_I2C_Stop 071B                 __end_of_bitExtracted 0677  
                      __CFG_BOREN$ON 0000                                 start 0022  
                  ___bmul@multiplier 0023                        __CFG_MCLRE$ON 0000  
                              ??_FSM 0020                                FSM@IN 0020  
     __size_of_OSCILLATOR_Initialize 0007        __end_of_OSCILLATOR_Initialize 0705  
                       main@dizaineH 003A                         main@dizaineM 0038  
                       main@dizaineS 0036                      ??_printReglageH 0028  
                    changeMin@minute 0021                                ?_main 0076  
                      __CFG_WDTE$OFF 0000                        _i2c_trb_count 0072  
                              _LATB4 086C                                _LATB6 086E  
                              i1l105 06CC                                i1l174 0015  
                              i1l179 001D                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
               __size_of_changeHeure 001E                          readI2C@temp 0021  
                    __end_of_initI2C 04E7                      __end_of_readI2C 069D  
                    __end_of_incrMin 0457                      __end_of_readMin 0578  
                    __end_of_readSec 054C                      __end_of_sendI2C 06DD  
                    __end_of_waitI2C 06FE                      __end_of_stopI2C 06F6  
                              status 0003                                wtemp0 007E  
                         _i2c_object 0040                      __initialization 0024  
                       __end_of_main 0190                         ?_re_startI2C 0076  
                          ??_I2C_ISR 0077                       _convertFromBcd 062B  
                     __CFG_LPBOR$OFF 0000          ?_INTERRUPT_InterruptManager 0076  
                             ??_main 0031                     changeHeure@heure 0021  
                     __CFG_PLLEN$OFF 0000                               i1S3094 0649  
                        readHr@heure 0023                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _BORCON 0116                               _RB4PPS 0E9C  
                             _RB6PPS 0E9E                               i1l2004 01B9  
                             i1l2110 02AA                               i1l2022 01E8  
                             i1l2016 01D8                               i1l2106 02A3  
                             i1l2108 02A6                               i1l2036 0216  
                             i1l2116 02B3                               i1l2070 0248  
                             i1l2062 0235                               i1l2056 022B  
                             _ODCONA 028C                               i1l2090 0280  
                             _ODCONB 028D                               _ODCONC 028E  
                             i1l2094 0287                               i1l2078 0261  
                             _OSCCON 0099                               _TRISB4 046C  
                             _TRISB6 046E                       __CFG_PWRTE$OFF 0000  
                             ___bmul 069D               __end_of_convertFromBcd 0649  
                     __CFG_STVREN$ON 0000                               _readHr 0578  
                          ??_initI2C 0020                            ??_readI2C 0020  
                          ??_incrMin 0025                    incrHeure@dizaineH 0028  
                          ??_readMin 0022                            ??_readSec 0022  
                          ??_sendI2C 0020                            ?_I2C_Stop 0076  
                          ??_waitI2C 0020                     __end_of_startI2C 06E6  
                          ??_stopI2C 0020                __size_of_bitExtracted 0016  
                        sendI2C@data 0020                    _SYSTEM_Initialize 0711  
            __end_of__initialization 0031                   ?_SYSTEM_Initialize 0076  
                ___bmul@multiplicand 0020                       __pcstackCOMMON 0076  
                    ?_convertFromBcd 0076                  ??_SYSTEM_Initialize 0020  
                 __size_of_changeMin 001E                        ?_sendNoAckI2C 0076  
                       _bitExtracted 0661                       _OPTION_REGbits 0095  
                         ??_I2C_Stop 0076            __end_of_SYSTEM_Initialize 0717  
                         __pbssBANK0 0040                   __size_of_incrHeure 0060  
       __size_of_I2C_BusCollisionISR 0003                           __pmaintext 0035  
                            ?___bmul 0020                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                              _I2C_ISR 0190  
                            ?_readHr 0076                 __size_of_re_startI2C 0008  
                     ??_sendNoAckI2C 0020                      __CFG_WDTCCS$SWC 0000  
                            _OSCTUNE 0098              I2C_Stop@completion_code 0076  
                            _SSP1ADD 0212                              _SSP1BUF 0211  
                  __end_of_changeMin 060D                convertFromBcd@byteBCD 0028  
              convertFromBcd@byteLSB 0027                convertFromBcd@byteMSB 0026  
      __size_of_I2C_FunctionComplete 0010                           _initRW1063 06AF  
                 __size_of_writeData 0054                   __size_of_writeInst 0039  
                    __size_of___bmul 0012                            ?_startI2C 0076  
                  __end_of_incrHeure 03FF                      __size_of_readHr 002C  
                            __ptext1 0520                              __ptext2 02BE  
                            __ptext3 0457                              __ptext4 05CD  
                            __ptext5 06AF                              __ptext6 04E7  
                            __ptext7 04AB                              __ptext8 03FF  
                            __ptext9 054C                        ??_changeHeure 0021  
                            _initI2C 04AB                         __size_of_FSM 0022  
                            _readI2C 068B                              _incrMin 03FF  
              _OSCILLATOR_Initialize 06FE                __end_of_printReglageH 039F  
                            _readMin 054C                              _readSec 0520  
                            _sendI2C 06CF                              _waitI2C 06F6  
           ??_PIN_MANAGER_Initialize 0020                        bitExtracted@k 0020  
                      bitExtracted@p 0021                              _stopI2C 06EE  
         __size_of_SYSTEM_Initialize 0006                              clrloop0 0706  
               end_of_initialization 0031                        incrMin@minute 002A  
                      incrMin@uniteM 0029                           ??_startI2C 0020  
                          _PORTCbits 000E                   I2C_ISR@i2c_address 0074  
                          _SSPDATPPS 0E21                    __end_of_writeData 04AB  
                          _SSPCLKPPS 0E20                    __end_of_writeInst 0520  
                   __CFG_FOSC$INTOSC 0000                    __size_of_I2C_Stop 0004  
                __end_of_changeHeure 062B     I2C_ISR@i2c_10bit_address_restart 0045  
                        ?_initRW1063 0076                 __end_of_sendNoAckI2C 0711  
                         main@buffer 0034                     ??_convertFromBcd 0024  
                         main@minute 003D                           main@second 003F  
                         main@select 003C                           main@uniteH 0039  
                         main@uniteM 0037                           main@uniteS 0035  
                  _p_i2c_trb_current 0071                       __end_of___bmul 06AF  
                       _i2c_tr_queue 0050                       __end_of_readHr 05A4  
             ?_OSCILLATOR_Initialize 0076                  _I2C_BusCollisionISR 071B  
                start_initialization 0024                          __end_of_FSM 05EF  
    __size_of_PIN_MANAGER_Initialize 0029                            _i2c_state 0073  
               ?_I2C_BusCollisionISR 0076                             ??___bmul 0021  
                           ?_I2C_ISR 0076                             ??_readHr 0022  
                        _changeHeure 060D                  __size_of_initRW1063 0010  
                        __pbssCOMMON 0070                            ___latbits 0002  
                      __pcstackBANK0 0020                ??_I2C_BusCollisionISR 0076  
                          _changeMin 05EF               _PIN_MANAGER_Initialize 05A4  
                    writeData@adress 0023                        ??_re_startI2C 0020  
       __end_of_I2C_FunctionComplete 06CF                    __size_of_startI2C 0009  
       ??_INTERRUPT_InterruptManager 007B                            __pswtext1 0677  
                          __pswtext2 0649                             ?_initI2C 0076  
                           ?_readI2C 0076                             ?_incrMin 0076  
                           ?_readMin 0076                             ?_readSec 0076  
                          _incrHeure 039F                             ?_sendI2C 0076  
                           _I2C_Stop 0717                             ?_waitI2C 0076  
                           ?_stopI2C 0076                __size_of_sendNoAckI2C 0006  
                      _p_i2c_current 0047                           ?_changeMin 0076  
                          clear_ram0 0705                             _PIE1bits 0090  
                           _PIE2bits 0091  __size_of_INTERRUPT_InterruptManager 001E  
                           _PIR1bits 0010                             _PIR2bits 0011  
               __CFG_WDTCPS$WDTCPS1F 0000                             _SSP1CON1 0215  
                           _SSP1CON2 0216                             _SSP1CON3 0217  
                I2C_ISR@pi2c_buf_ptr 0070                             _SSP1STAT 0214  
                   __size_of_I2C_ISR 012E                         _sendNoAckI2C 070B  
                __end_of_re_startI2C 06EE                           ?_incrHeure 0076  
                          main@heure 003E                        readMin@minute 0023  
                          _writeData 0457                            _writeInst 04E7  
                      readSec@second 0023                         ??_initRW1063 0023  
             __size_of_printReglageH 00E1              ??_OSCILLATOR_Initialize 0020  
                    incrHeure@uniteH 0029                      incrMin@dizaineM 0028  
                      ?_bitExtracted 0020                     __size_of_initI2C 003C  
                   __size_of_readI2C 0012                     __size_of_incrMin 0058  
                 __end_of_initRW1063 06BF                     __size_of_readMin 002C  
                   __size_of_readSec 002C                     __size_of_sendI2C 000E  
                   __size_of_waitI2C 0008                           ?_writeData 0023  
                           __ptext10 05EF                             __ptext11 039F  
                           __ptext20 06F6                             __ptext12 0578  
                           __ptext21 0661                             __ptext13 070B  
                           __ptext30 06BF                             __ptext22 062B  
                           __ptext14 068B                             __ptext31 071B  
                           __ptext23 069D                             __ptext15 06E6  
                           __ptext24 0711                             __ptext16 060D  
                           __ptext25 05A4                             __ptext17 06EE  
                           __ptext26 06FE                             __ptext18 06DD  
                           __ptext19 06CF                             __ptext28 0190  
                           __ptext29 0717                       writeData@ligne 0024  
                         ?_writeInst 0076                         _SSP1CON1bits 0215  
                       _SSP1CON2bits 0216                     __size_of_stopI2C 0008  
                      __size_of_main 015B                 _I2C_FunctionComplete 06BF  
                        ??_changeMin 0021                 __CFG_WDTCWS$WDTCWSSW 0000  
                         writeData@i 0027                             int$flags 007E  
                           _startI2C 06DD                          _re_startI2C 06E6  
 __end_of_INTERRUPT_InterruptManager 0022           _INTERRUPT_InterruptManager 0004  
                           main@menu 003B                             initI2C@i 0021  
                     ??_bitExtracted 0022                         ?_changeHeure 0076  
                        ??_incrHeure 0025                           _INTCONbits 000B  
                      _printReglageH 02BE                       incrHeure@heure 002A  
                           intlevel1 0000                ?_I2C_FunctionComplete 0076  
                      writeData@data 0026              ?_PIN_MANAGER_Initialize 0076  
              I2C_MasterRead@trBlock 0048                    __CFG_CLKOUTEN$OFF 0000  
                 bitExtracted@number 0024              __size_of_convertFromBcd 001E  
             I2C_MasterWrite@trBlock 004C                           _OPTION_REG 0095  
                     ?_printReglageH 0076                          ??_writeData 0025  
                        ??_writeInst 0021                        writeInst@Inst 0022  
        __end_of_I2C_BusCollisionISR 071E       __end_of_PIN_MANAGER_Initialize 05CD  
